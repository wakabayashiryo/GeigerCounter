

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 27 02:40:51 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	stringtext46,global,class=STRCODE,delta=2
    52                           	psect	stringtext47,global,class=STRCODE,delta=2
    53                           	psect	stringtext48,global,class=STRCODE,delta=2
    54                           	psect	stringtext49,global,class=STRCODE,delta=2
    55                           	psect	stringtext50,global,class=STRCODE,delta=2
    56                           	psect	stringtext51,global,class=STRCODE,delta=2
    57                           	psect	stringtext52,global,class=STRCODE,delta=2
    58                           	psect	stringtext53,global,class=STRCODE,delta=2
    59                           	psect	stringtext54,global,class=STRCODE,delta=2
    60                           	psect	cinit,global,class=CODE,merge=1,delta=2
    61                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    63                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    64                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    65                           	psect	inittext,global,class=CODE,delta=2
    66                           	psect	clrtext,global,class=CODE,delta=2
    67                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    68                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    69                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    70                           	psect	swtext1,local,class=CONST,delta=2
    71                           	psect	text1,local,class=CODE,merge=1,delta=2
    72                           	psect	text2,local,class=CODE,merge=1,delta=2
    73                           	psect	text3,local,class=CODE,merge=1,delta=2
    74                           	psect	text4,local,class=CODE,merge=1,delta=2
    75                           	psect	text5,local,class=CODE,merge=1,delta=2
    76                           	psect	text6,local,class=CODE,merge=1,delta=2
    77                           	psect	text7,local,class=CODE,merge=1,delta=2
    78                           	psect	text8,local,class=CODE,merge=1,delta=2
    79                           	psect	text9,local,class=CODE,merge=1,delta=2
    80                           	psect	text10,local,class=CODE,merge=1,delta=2
    81                           	psect	text11,local,class=CODE,merge=1,delta=2
    82                           	psect	text12,local,class=CODE,merge=1,delta=2
    83                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text14,local,class=CODE,merge=1,delta=2
    85                           	psect	text15,local,class=CODE,merge=1,delta=2
    86                           	psect	text16,local,class=CODE,merge=1,delta=2
    87                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text18,local,class=CODE,merge=1,delta=2
    89                           	psect	text19,local,class=CODE,merge=1,delta=2
    90                           	psect	text20,local,class=CODE,merge=1,delta=2
    91                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    92                           	psect	text22,local,class=CODE,merge=1,delta=2
    93                           	psect	text23,local,class=CODE,merge=1,delta=2
    94                           	psect	text24,local,class=CODE,merge=1,delta=2
    95                           	psect	text25,local,class=CODE,merge=1,delta=2
    96                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text30,local,class=CODE,merge=1,delta=2
   101                           	psect	text31,local,class=CODE,merge=1,delta=2
   102                           	psect	text32,local,class=CODE,merge=1,delta=2
   103                           	psect	text33,local,class=CODE,merge=1,delta=2
   104                           	psect	text34,local,class=CODE,merge=1,delta=2
   105                           	psect	text35,local,class=CODE,merge=1,delta=2
   106                           	psect	text36,local,class=CODE,merge=1,delta=2
   107                           	psect	text37,local,class=CODE,merge=1,delta=2
   108                           	psect	text38,local,class=CODE,merge=1,delta=2
   109                           	psect	text39,local,class=CODE,merge=1,delta=2
   110                           	psect	text40,local,class=CODE,merge=1,delta=2
   111                           	psect	text41,local,class=CODE,merge=1,delta=2
   112                           	psect	text42,local,class=CODE,merge=1,delta=2
   113                           	psect	text43,local,class=CODE,merge=1,delta=2
   114                           	psect	intentry,global,class=CODE,delta=2
   115                           	psect	text45,local,class=CODE,merge=1,delta=2
   116                           	psect	text46,local,class=CODE,merge=1,delta=2
   117                           	psect	text47,local,class=CODE,merge=1,delta=2
   118                           	psect	text48,local,class=CODE,merge=1,delta=2
   119                           	psect	text49,local,class=CODE,merge=1,delta=2
   120                           	psect	text50,local,class=CODE,merge=1,delta=2
   121                           	psect	text51,local,class=CODE,merge=1,delta=2
   122                           	psect	text52,local,class=CODE,merge=1,delta=2
   123                           	psect	text53,local,class=CODE,merge=1,delta=2
   124                           	psect	text54,local,class=CODE,merge=1,delta=2
   125                           	dabs	1,0x7E,2
   126  0000                     
   127                           ; Version 1.43
   128                           ; Generated 25/07/2017 GMT
   129                           ; 
   130                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC16F1827 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  0111                     	;# 
   210  0112                     	;# 
   211  0113                     	;# 
   212  0114                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0117                     	;# 
   216  0118                     	;# 
   217  0119                     	;# 
   218  011A                     	;# 
   219  011B                     	;# 
   220  011D                     	;# 
   221  011E                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0191                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0194                     	;# 
   231  0195                     	;# 
   232  0196                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019C                     	;# 
   241  019D                     	;# 
   242  019E                     	;# 
   243  019F                     	;# 
   244  020C                     	;# 
   245  020D                     	;# 
   246  0211                     	;# 
   247  0211                     	;# 
   248  0212                     	;# 
   249  0212                     	;# 
   250  0213                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0216                     	;# 
   258  0216                     	;# 
   259  0217                     	;# 
   260  0217                     	;# 
   261  0219                     	;# 
   262  021A                     	;# 
   263  021B                     	;# 
   264  021C                     	;# 
   265  021D                     	;# 
   266  021E                     	;# 
   267  021F                     	;# 
   268  0291                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0293                     	;# 
   272  0294                     	;# 
   273  0295                     	;# 
   274  0295                     	;# 
   275  0296                     	;# 
   276  0298                     	;# 
   277  0298                     	;# 
   278  0299                     	;# 
   279  029A                     	;# 
   280  029B                     	;# 
   281  029C                     	;# 
   282  029C                     	;# 
   283  029D                     	;# 
   284  029E                     	;# 
   285  029E                     	;# 
   286  0311                     	;# 
   287  0311                     	;# 
   288  0312                     	;# 
   289  0313                     	;# 
   290  0318                     	;# 
   291  0318                     	;# 
   292  0319                     	;# 
   293  031A                     	;# 
   294  0394                     	;# 
   295  0395                     	;# 
   296  0396                     	;# 
   297  039A                     	;# 
   298  039C                     	;# 
   299  039D                     	;# 
   300  039E                     	;# 
   301  039F                     	;# 
   302  0415                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  0FE4                     	;# 
   309  0FE5                     	;# 
   310  0FE6                     	;# 
   311  0FE7                     	;# 
   312  0FE8                     	;# 
   313  0FE9                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEF                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  0111                     	;# 
   368  0112                     	;# 
   369  0113                     	;# 
   370  0114                     	;# 
   371  0115                     	;# 
   372  0116                     	;# 
   373  0117                     	;# 
   374  0118                     	;# 
   375  0119                     	;# 
   376  011A                     	;# 
   377  011B                     	;# 
   378  011D                     	;# 
   379  011E                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0191                     	;# 
   383  0191                     	;# 
   384  0192                     	;# 
   385  0193                     	;# 
   386  0193                     	;# 
   387  0193                     	;# 
   388  0194                     	;# 
   389  0195                     	;# 
   390  0196                     	;# 
   391  0199                     	;# 
   392  019A                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019C                     	;# 
   399  019D                     	;# 
   400  019E                     	;# 
   401  019F                     	;# 
   402  020C                     	;# 
   403  020D                     	;# 
   404  0211                     	;# 
   405  0211                     	;# 
   406  0212                     	;# 
   407  0212                     	;# 
   408  0213                     	;# 
   409  0213                     	;# 
   410  0214                     	;# 
   411  0214                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0216                     	;# 
   416  0216                     	;# 
   417  0217                     	;# 
   418  0217                     	;# 
   419  0219                     	;# 
   420  021A                     	;# 
   421  021B                     	;# 
   422  021C                     	;# 
   423  021D                     	;# 
   424  021E                     	;# 
   425  021F                     	;# 
   426  0291                     	;# 
   427  0291                     	;# 
   428  0292                     	;# 
   429  0293                     	;# 
   430  0294                     	;# 
   431  0295                     	;# 
   432  0295                     	;# 
   433  0296                     	;# 
   434  0298                     	;# 
   435  0298                     	;# 
   436  0299                     	;# 
   437  029A                     	;# 
   438  029B                     	;# 
   439  029C                     	;# 
   440  029C                     	;# 
   441  029D                     	;# 
   442  029E                     	;# 
   443  029E                     	;# 
   444  0311                     	;# 
   445  0311                     	;# 
   446  0312                     	;# 
   447  0313                     	;# 
   448  0318                     	;# 
   449  0318                     	;# 
   450  0319                     	;# 
   451  031A                     	;# 
   452  0394                     	;# 
   453  0395                     	;# 
   454  0396                     	;# 
   455  039A                     	;# 
   456  039C                     	;# 
   457  039D                     	;# 
   458  039E                     	;# 
   459  039F                     	;# 
   460  0415                     	;# 
   461  0416                     	;# 
   462  0417                     	;# 
   463  041C                     	;# 
   464  041D                     	;# 
   465  041E                     	;# 
   466  0FE4                     	;# 
   467  0FE5                     	;# 
   468  0FE6                     	;# 
   469  0FE7                     	;# 
   470  0FE8                     	;# 
   471  0FE9                     	;# 
   472  0FEA                     	;# 
   473  0FEB                     	;# 
   474  0FED                     	;# 
   475  0FEE                     	;# 
   476  0FEF                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0008                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  0011                     	;# 
   492  0012                     	;# 
   493  0013                     	;# 
   494  0014                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0094                     	;# 
   512  0095                     	;# 
   513  0096                     	;# 
   514  0097                     	;# 
   515  0098                     	;# 
   516  0099                     	;# 
   517  009A                     	;# 
   518  009B                     	;# 
   519  009B                     	;# 
   520  009C                     	;# 
   521  009D                     	;# 
   522  009E                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  011A                     	;# 
   535  011B                     	;# 
   536  011D                     	;# 
   537  011E                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0191                     	;# 
   541  0191                     	;# 
   542  0192                     	;# 
   543  0193                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0194                     	;# 
   547  0195                     	;# 
   548  0196                     	;# 
   549  0199                     	;# 
   550  019A                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019C                     	;# 
   556  019C                     	;# 
   557  019D                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  020C                     	;# 
   561  020D                     	;# 
   562  0211                     	;# 
   563  0211                     	;# 
   564  0212                     	;# 
   565  0212                     	;# 
   566  0213                     	;# 
   567  0213                     	;# 
   568  0214                     	;# 
   569  0214                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0216                     	;# 
   574  0216                     	;# 
   575  0217                     	;# 
   576  0217                     	;# 
   577  0219                     	;# 
   578  021A                     	;# 
   579  021B                     	;# 
   580  021C                     	;# 
   581  021D                     	;# 
   582  021E                     	;# 
   583  021F                     	;# 
   584  0291                     	;# 
   585  0291                     	;# 
   586  0292                     	;# 
   587  0293                     	;# 
   588  0294                     	;# 
   589  0295                     	;# 
   590  0295                     	;# 
   591  0296                     	;# 
   592  0298                     	;# 
   593  0298                     	;# 
   594  0299                     	;# 
   595  029A                     	;# 
   596  029B                     	;# 
   597  029C                     	;# 
   598  029C                     	;# 
   599  029D                     	;# 
   600  029E                     	;# 
   601  029E                     	;# 
   602  0311                     	;# 
   603  0311                     	;# 
   604  0312                     	;# 
   605  0313                     	;# 
   606  0318                     	;# 
   607  0318                     	;# 
   608  0319                     	;# 
   609  031A                     	;# 
   610  0394                     	;# 
   611  0395                     	;# 
   612  0396                     	;# 
   613  039A                     	;# 
   614  039C                     	;# 
   615  039D                     	;# 
   616  039E                     	;# 
   617  039F                     	;# 
   618  0415                     	;# 
   619  0416                     	;# 
   620  0417                     	;# 
   621  041C                     	;# 
   622  041D                     	;# 
   623  041E                     	;# 
   624  0FE4                     	;# 
   625  0FE5                     	;# 
   626  0FE6                     	;# 
   627  0FE7                     	;# 
   628  0FE8                     	;# 
   629  0FE9                     	;# 
   630  0FEA                     	;# 
   631  0FEB                     	;# 
   632  0FED                     	;# 
   633  0FEE                     	;# 
   634  0FEF                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0008                     	;# 
   644  0009                     	;# 
   645  000A                     	;# 
   646  000B                     	;# 
   647  000C                     	;# 
   648  000D                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0016                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001C                     	;# 
   662  001E                     	;# 
   663  001F                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  0091                     	;# 
   667  0092                     	;# 
   668  0093                     	;# 
   669  0094                     	;# 
   670  0095                     	;# 
   671  0096                     	;# 
   672  0097                     	;# 
   673  0098                     	;# 
   674  0099                     	;# 
   675  009A                     	;# 
   676  009B                     	;# 
   677  009B                     	;# 
   678  009C                     	;# 
   679  009D                     	;# 
   680  009E                     	;# 
   681  010C                     	;# 
   682  010D                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011D                     	;# 
   695  011E                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  0191                     	;# 
   699  0191                     	;# 
   700  0192                     	;# 
   701  0193                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019C                     	;# 
   714  019C                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  020C                     	;# 
   719  020D                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0212                     	;# 
   724  0213                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0219                     	;# 
   736  021A                     	;# 
   737  021B                     	;# 
   738  021C                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029C                     	;# 
   757  029D                     	;# 
   758  029E                     	;# 
   759  029E                     	;# 
   760  0311                     	;# 
   761  0311                     	;# 
   762  0312                     	;# 
   763  0313                     	;# 
   764  0318                     	;# 
   765  0318                     	;# 
   766  0319                     	;# 
   767  031A                     	;# 
   768  0394                     	;# 
   769  0395                     	;# 
   770  0396                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	eeprom_data
   795  0000' 0001 0000 0000 0000 0000 0000 0000 0000 	db	1,0,0,0,0,0,0,0	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  001E                     	;# 
   824  001F                     	;# 
   825  008C                     	;# 
   826  008D                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0093                     	;# 
   830  0094                     	;# 
   831  0095                     	;# 
   832  0096                     	;# 
   833  0097                     	;# 
   834  0098                     	;# 
   835  0099                     	;# 
   836  009A                     	;# 
   837  009B                     	;# 
   838  009B                     	;# 
   839  009C                     	;# 
   840  009D                     	;# 
   841  009E                     	;# 
   842  010C                     	;# 
   843  010D                     	;# 
   844  0111                     	;# 
   845  0112                     	;# 
   846  0113                     	;# 
   847  0114                     	;# 
   848  0115                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  0118                     	;# 
   852  0119                     	;# 
   853  011A                     	;# 
   854  011B                     	;# 
   855  011D                     	;# 
   856  011E                     	;# 
   857  018C                     	;# 
   858  018D                     	;# 
   859  0191                     	;# 
   860  0191                     	;# 
   861  0192                     	;# 
   862  0193                     	;# 
   863  0193                     	;# 
   864  0193                     	;# 
   865  0194                     	;# 
   866  0195                     	;# 
   867  0196                     	;# 
   868  0199                     	;# 
   869  019A                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019E                     	;# 
   878  019F                     	;# 
   879  020C                     	;# 
   880  020D                     	;# 
   881  0211                     	;# 
   882  0211                     	;# 
   883  0212                     	;# 
   884  0212                     	;# 
   885  0213                     	;# 
   886  0213                     	;# 
   887  0214                     	;# 
   888  0214                     	;# 
   889  0215                     	;# 
   890  0215                     	;# 
   891  0215                     	;# 
   892  0216                     	;# 
   893  0216                     	;# 
   894  0217                     	;# 
   895  0217                     	;# 
   896  0219                     	;# 
   897  021A                     	;# 
   898  021B                     	;# 
   899  021C                     	;# 
   900  021D                     	;# 
   901  021E                     	;# 
   902  021F                     	;# 
   903  0291                     	;# 
   904  0291                     	;# 
   905  0292                     	;# 
   906  0293                     	;# 
   907  0294                     	;# 
   908  0295                     	;# 
   909  0295                     	;# 
   910  0296                     	;# 
   911  0298                     	;# 
   912  0298                     	;# 
   913  0299                     	;# 
   914  029A                     	;# 
   915  029B                     	;# 
   916  029C                     	;# 
   917  029C                     	;# 
   918  029D                     	;# 
   919  029E                     	;# 
   920  029E                     	;# 
   921  0311                     	;# 
   922  0311                     	;# 
   923  0312                     	;# 
   924  0313                     	;# 
   925  0318                     	;# 
   926  0318                     	;# 
   927  0319                     	;# 
   928  031A                     	;# 
   929  0394                     	;# 
   930  0395                     	;# 
   931  0396                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0415                     	;# 
   938  0416                     	;# 
   939  0417                     	;# 
   940  041C                     	;# 
   941  041D                     	;# 
   942  041E                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000D                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  0091                     	;# 
   986  0092                     	;# 
   987  0093                     	;# 
   988  0094                     	;# 
   989  0095                     	;# 
   990  0096                     	;# 
   991  0097                     	;# 
   992  0098                     	;# 
   993  0099                     	;# 
   994  009A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  010C                     	;# 
  1001  010D                     	;# 
  1002  0111                     	;# 
  1003  0112                     	;# 
  1004  0113                     	;# 
  1005  0114                     	;# 
  1006  0115                     	;# 
  1007  0116                     	;# 
  1008  0117                     	;# 
  1009  0118                     	;# 
  1010  0119                     	;# 
  1011  011A                     	;# 
  1012  011B                     	;# 
  1013  011D                     	;# 
  1014  011E                     	;# 
  1015  018C                     	;# 
  1016  018D                     	;# 
  1017  0191                     	;# 
  1018  0191                     	;# 
  1019  0192                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0194                     	;# 
  1024  0195                     	;# 
  1025  0196                     	;# 
  1026  0199                     	;# 
  1027  019A                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019C                     	;# 
  1033  019C                     	;# 
  1034  019D                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  020C                     	;# 
  1038  020D                     	;# 
  1039  0211                     	;# 
  1040  0211                     	;# 
  1041  0212                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0216                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0217                     	;# 
  1054  0219                     	;# 
  1055  021A                     	;# 
  1056  021B                     	;# 
  1057  021C                     	;# 
  1058  021D                     	;# 
  1059  021E                     	;# 
  1060  021F                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0294                     	;# 
  1066  0295                     	;# 
  1067  0295                     	;# 
  1068  0296                     	;# 
  1069  0298                     	;# 
  1070  0298                     	;# 
  1071  0299                     	;# 
  1072  029A                     	;# 
  1073  029B                     	;# 
  1074  029C                     	;# 
  1075  029C                     	;# 
  1076  029D                     	;# 
  1077  029E                     	;# 
  1078  029E                     	;# 
  1079  0311                     	;# 
  1080  0311                     	;# 
  1081  0312                     	;# 
  1082  0313                     	;# 
  1083  0318                     	;# 
  1084  0318                     	;# 
  1085  0319                     	;# 
  1086  031A                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  039A                     	;# 
  1091  039C                     	;# 
  1092  039D                     	;# 
  1093  039E                     	;# 
  1094  039F                     	;# 
  1095  0415                     	;# 
  1096  0416                     	;# 
  1097  0417                     	;# 
  1098  041C                     	;# 
  1099  041D                     	;# 
  1100  041E                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  0011                     	;# 
  1127  0012                     	;# 
  1128  0013                     	;# 
  1129  0014                     	;# 
  1130  0015                     	;# 
  1131  0016                     	;# 
  1132  0016                     	;# 
  1133  0017                     	;# 
  1134  0018                     	;# 
  1135  0019                     	;# 
  1136  001A                     	;# 
  1137  001B                     	;# 
  1138  001C                     	;# 
  1139  001E                     	;# 
  1140  001F                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0094                     	;# 
  1147  0095                     	;# 
  1148  0096                     	;# 
  1149  0097                     	;# 
  1150  0098                     	;# 
  1151  0099                     	;# 
  1152  009A                     	;# 
  1153  009B                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  010C                     	;# 
  1159  010D                     	;# 
  1160  0111                     	;# 
  1161  0112                     	;# 
  1162  0113                     	;# 
  1163  0114                     	;# 
  1164  0115                     	;# 
  1165  0116                     	;# 
  1166  0117                     	;# 
  1167  0118                     	;# 
  1168  0119                     	;# 
  1169  011A                     	;# 
  1170  011B                     	;# 
  1171  011D                     	;# 
  1172  011E                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175  0191                     	;# 
  1176  0191                     	;# 
  1177  0192                     	;# 
  1178  0193                     	;# 
  1179  0193                     	;# 
  1180  0193                     	;# 
  1181  0194                     	;# 
  1182  0195                     	;# 
  1183  0196                     	;# 
  1184  0199                     	;# 
  1185  019A                     	;# 
  1186  019B                     	;# 
  1187  019B                     	;# 
  1188  019B                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  019C                     	;# 
  1192  019D                     	;# 
  1193  019E                     	;# 
  1194  019F                     	;# 
  1195  020C                     	;# 
  1196  020D                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0216                     	;# 
  1209  0216                     	;# 
  1210  0217                     	;# 
  1211  0217                     	;# 
  1212  0219                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021E                     	;# 
  1218  021F                     	;# 
  1219  0291                     	;# 
  1220  0291                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0294                     	;# 
  1224  0295                     	;# 
  1225  0295                     	;# 
  1226  0296                     	;# 
  1227  0298                     	;# 
  1228  0298                     	;# 
  1229  0299                     	;# 
  1230  029A                     	;# 
  1231  029B                     	;# 
  1232  029C                     	;# 
  1233  029C                     	;# 
  1234  029D                     	;# 
  1235  029E                     	;# 
  1236  029E                     	;# 
  1237  0311                     	;# 
  1238  0311                     	;# 
  1239  0312                     	;# 
  1240  0313                     	;# 
  1241  0318                     	;# 
  1242  0318                     	;# 
  1243  0319                     	;# 
  1244  031A                     	;# 
  1245  0394                     	;# 
  1246  0395                     	;# 
  1247  0396                     	;# 
  1248  039A                     	;# 
  1249  039C                     	;# 
  1250  039D                     	;# 
  1251  039E                     	;# 
  1252  039F                     	;# 
  1253  0415                     	;# 
  1254  0416                     	;# 
  1255  0417                     	;# 
  1256  041C                     	;# 
  1257  041D                     	;# 
  1258  041E                     	;# 
  1259  0FE4                     	;# 
  1260  0FE5                     	;# 
  1261  0FE6                     	;# 
  1262  0FE7                     	;# 
  1263  0FE8                     	;# 
  1264  0FE9                     	;# 
  1265  0FEA                     	;# 
  1266  0FEB                     	;# 
  1267  0FED                     	;# 
  1268  0FEE                     	;# 
  1269  0FEF                     	;# 
  1270  0000                     	;# 
  1271  0001                     	;# 
  1272  0002                     	;# 
  1273  0003                     	;# 
  1274  0004                     	;# 
  1275  0005                     	;# 
  1276  0006                     	;# 
  1277  0007                     	;# 
  1278  0008                     	;# 
  1279  0009                     	;# 
  1280  000A                     	;# 
  1281  000B                     	;# 
  1282  000C                     	;# 
  1283  000D                     	;# 
  1284  0011                     	;# 
  1285  0012                     	;# 
  1286  0013                     	;# 
  1287  0014                     	;# 
  1288  0015                     	;# 
  1289  0016                     	;# 
  1290  0016                     	;# 
  1291  0017                     	;# 
  1292  0018                     	;# 
  1293  0019                     	;# 
  1294  001A                     	;# 
  1295  001B                     	;# 
  1296  001C                     	;# 
  1297  001E                     	;# 
  1298  001F                     	;# 
  1299  008C                     	;# 
  1300  008D                     	;# 
  1301  0091                     	;# 
  1302  0092                     	;# 
  1303  0093                     	;# 
  1304  0094                     	;# 
  1305  0095                     	;# 
  1306  0096                     	;# 
  1307  0097                     	;# 
  1308  0098                     	;# 
  1309  0099                     	;# 
  1310  009A                     	;# 
  1311  009B                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  010C                     	;# 
  1317  010D                     	;# 
  1318  0111                     	;# 
  1319  0112                     	;# 
  1320  0113                     	;# 
  1321  0114                     	;# 
  1322  0115                     	;# 
  1323  0116                     	;# 
  1324  0117                     	;# 
  1325  0118                     	;# 
  1326  0119                     	;# 
  1327  011A                     	;# 
  1328  011B                     	;# 
  1329  011D                     	;# 
  1330  011E                     	;# 
  1331  018C                     	;# 
  1332  018D                     	;# 
  1333  0191                     	;# 
  1334  0191                     	;# 
  1335  0192                     	;# 
  1336  0193                     	;# 
  1337  0193                     	;# 
  1338  0193                     	;# 
  1339  0194                     	;# 
  1340  0195                     	;# 
  1341  0196                     	;# 
  1342  0199                     	;# 
  1343  019A                     	;# 
  1344  019B                     	;# 
  1345  019B                     	;# 
  1346  019B                     	;# 
  1347  019B                     	;# 
  1348  019C                     	;# 
  1349  019C                     	;# 
  1350  019D                     	;# 
  1351  019E                     	;# 
  1352  019F                     	;# 
  1353  020C                     	;# 
  1354  020D                     	;# 
  1355  0211                     	;# 
  1356  0211                     	;# 
  1357  0212                     	;# 
  1358  0212                     	;# 
  1359  0213                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0216                     	;# 
  1367  0216                     	;# 
  1368  0217                     	;# 
  1369  0217                     	;# 
  1370  0219                     	;# 
  1371  021A                     	;# 
  1372  021B                     	;# 
  1373  021C                     	;# 
  1374  021D                     	;# 
  1375  021E                     	;# 
  1376  021F                     	;# 
  1377  0291                     	;# 
  1378  0291                     	;# 
  1379  0292                     	;# 
  1380  0293                     	;# 
  1381  0294                     	;# 
  1382  0295                     	;# 
  1383  0295                     	;# 
  1384  0296                     	;# 
  1385  0298                     	;# 
  1386  0298                     	;# 
  1387  0299                     	;# 
  1388  029A                     	;# 
  1389  029B                     	;# 
  1390  029C                     	;# 
  1391  029C                     	;# 
  1392  029D                     	;# 
  1393  029E                     	;# 
  1394  029E                     	;# 
  1395  0311                     	;# 
  1396  0311                     	;# 
  1397  0312                     	;# 
  1398  0313                     	;# 
  1399  0318                     	;# 
  1400  0318                     	;# 
  1401  0319                     	;# 
  1402  031A                     	;# 
  1403  0394                     	;# 
  1404  0395                     	;# 
  1405  0396                     	;# 
  1406  039A                     	;# 
  1407  039C                     	;# 
  1408  039D                     	;# 
  1409  039E                     	;# 
  1410  039F                     	;# 
  1411  0415                     	;# 
  1412  0416                     	;# 
  1413  0417                     	;# 
  1414  041C                     	;# 
  1415  041D                     	;# 
  1416  041E                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  0011                     	;# 
  1443  0012                     	;# 
  1444  0013                     	;# 
  1445  0014                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001B                     	;# 
  1454  001C                     	;# 
  1455  001E                     	;# 
  1456  001F                     	;# 
  1457  008C                     	;# 
  1458  008D                     	;# 
  1459  0091                     	;# 
  1460  0092                     	;# 
  1461  0093                     	;# 
  1462  0094                     	;# 
  1463  0095                     	;# 
  1464  0096                     	;# 
  1465  0097                     	;# 
  1466  0098                     	;# 
  1467  0099                     	;# 
  1468  009A                     	;# 
  1469  009B                     	;# 
  1470  009B                     	;# 
  1471  009C                     	;# 
  1472  009D                     	;# 
  1473  009E                     	;# 
  1474  010C                     	;# 
  1475  010D                     	;# 
  1476  0111                     	;# 
  1477  0112                     	;# 
  1478  0113                     	;# 
  1479  0114                     	;# 
  1480  0115                     	;# 
  1481  0116                     	;# 
  1482  0117                     	;# 
  1483  0118                     	;# 
  1484  0119                     	;# 
  1485  011A                     	;# 
  1486  011B                     	;# 
  1487  011D                     	;# 
  1488  011E                     	;# 
  1489  018C                     	;# 
  1490  018D                     	;# 
  1491  0191                     	;# 
  1492  0191                     	;# 
  1493  0192                     	;# 
  1494  0193                     	;# 
  1495  0193                     	;# 
  1496  0193                     	;# 
  1497  0194                     	;# 
  1498  0195                     	;# 
  1499  0196                     	;# 
  1500  0199                     	;# 
  1501  019A                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019B                     	;# 
  1505  019B                     	;# 
  1506  019C                     	;# 
  1507  019C                     	;# 
  1508  019D                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  020C                     	;# 
  1512  020D                     	;# 
  1513  0211                     	;# 
  1514  0211                     	;# 
  1515  0212                     	;# 
  1516  0212                     	;# 
  1517  0213                     	;# 
  1518  0213                     	;# 
  1519  0214                     	;# 
  1520  0214                     	;# 
  1521  0215                     	;# 
  1522  0215                     	;# 
  1523  0215                     	;# 
  1524  0216                     	;# 
  1525  0216                     	;# 
  1526  0217                     	;# 
  1527  0217                     	;# 
  1528  0219                     	;# 
  1529  021A                     	;# 
  1530  021B                     	;# 
  1531  021C                     	;# 
  1532  021D                     	;# 
  1533  021E                     	;# 
  1534  021F                     	;# 
  1535  0291                     	;# 
  1536  0291                     	;# 
  1537  0292                     	;# 
  1538  0293                     	;# 
  1539  0294                     	;# 
  1540  0295                     	;# 
  1541  0295                     	;# 
  1542  0296                     	;# 
  1543  0298                     	;# 
  1544  0298                     	;# 
  1545  0299                     	;# 
  1546  029A                     	;# 
  1547  029B                     	;# 
  1548  029C                     	;# 
  1549  029C                     	;# 
  1550  029D                     	;# 
  1551  029E                     	;# 
  1552  029E                     	;# 
  1553  0311                     	;# 
  1554  0311                     	;# 
  1555  0312                     	;# 
  1556  0313                     	;# 
  1557  0318                     	;# 
  1558  0318                     	;# 
  1559  0319                     	;# 
  1560  031A                     	;# 
  1561  0394                     	;# 
  1562  0395                     	;# 
  1563  0396                     	;# 
  1564  039A                     	;# 
  1565  039C                     	;# 
  1566  039D                     	;# 
  1567  039E                     	;# 
  1568  039F                     	;# 
  1569  0415                     	;# 
  1570  0416                     	;# 
  1571  0417                     	;# 
  1572  041C                     	;# 
  1573  041D                     	;# 
  1574  041E                     	;# 
  1575  0FE4                     	;# 
  1576  0FE5                     	;# 
  1577  0FE6                     	;# 
  1578  0FE7                     	;# 
  1579  0FE8                     	;# 
  1580  0FE9                     	;# 
  1581  0FEA                     	;# 
  1582  0FEB                     	;# 
  1583  0FED                     	;# 
  1584  0FEE                     	;# 
  1585  0FEF                     	;# 
  1586  0000                     	;# 
  1587  0001                     	;# 
  1588  0002                     	;# 
  1589  0003                     	;# 
  1590  0004                     	;# 
  1591  0005                     	;# 
  1592  0006                     	;# 
  1593  0007                     	;# 
  1594  0008                     	;# 
  1595  0009                     	;# 
  1596  000A                     	;# 
  1597  000B                     	;# 
  1598  000C                     	;# 
  1599  000D                     	;# 
  1600  0011                     	;# 
  1601  0012                     	;# 
  1602  0013                     	;# 
  1603  0014                     	;# 
  1604  0015                     	;# 
  1605  0016                     	;# 
  1606  0016                     	;# 
  1607  0017                     	;# 
  1608  0018                     	;# 
  1609  0019                     	;# 
  1610  001A                     	;# 
  1611  001B                     	;# 
  1612  001C                     	;# 
  1613  001E                     	;# 
  1614  001F                     	;# 
  1615  008C                     	;# 
  1616  008D                     	;# 
  1617  0091                     	;# 
  1618  0092                     	;# 
  1619  0093                     	;# 
  1620  0094                     	;# 
  1621  0095                     	;# 
  1622  0096                     	;# 
  1623  0097                     	;# 
  1624  0098                     	;# 
  1625  0099                     	;# 
  1626  009A                     	;# 
  1627  009B                     	;# 
  1628  009B                     	;# 
  1629  009C                     	;# 
  1630  009D                     	;# 
  1631  009E                     	;# 
  1632  010C                     	;# 
  1633  010D                     	;# 
  1634  0111                     	;# 
  1635  0112                     	;# 
  1636  0113                     	;# 
  1637  0114                     	;# 
  1638  0115                     	;# 
  1639  0116                     	;# 
  1640  0117                     	;# 
  1641  0118                     	;# 
  1642  0119                     	;# 
  1643  011A                     	;# 
  1644  011B                     	;# 
  1645  011D                     	;# 
  1646  011E                     	;# 
  1647  018C                     	;# 
  1648  018D                     	;# 
  1649  0191                     	;# 
  1650  0191                     	;# 
  1651  0192                     	;# 
  1652  0193                     	;# 
  1653  0193                     	;# 
  1654  0193                     	;# 
  1655  0194                     	;# 
  1656  0195                     	;# 
  1657  0196                     	;# 
  1658  0199                     	;# 
  1659  019A                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019C                     	;# 
  1665  019C                     	;# 
  1666  019D                     	;# 
  1667  019E                     	;# 
  1668  019F                     	;# 
  1669  020C                     	;# 
  1670  020D                     	;# 
  1671  0211                     	;# 
  1672  0211                     	;# 
  1673  0212                     	;# 
  1674  0212                     	;# 
  1675  0213                     	;# 
  1676  0213                     	;# 
  1677  0214                     	;# 
  1678  0214                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0215                     	;# 
  1682  0216                     	;# 
  1683  0216                     	;# 
  1684  0217                     	;# 
  1685  0217                     	;# 
  1686  0219                     	;# 
  1687  021A                     	;# 
  1688  021B                     	;# 
  1689  021C                     	;# 
  1690  021D                     	;# 
  1691  021E                     	;# 
  1692  021F                     	;# 
  1693  0291                     	;# 
  1694  0291                     	;# 
  1695  0292                     	;# 
  1696  0293                     	;# 
  1697  0294                     	;# 
  1698  0295                     	;# 
  1699  0295                     	;# 
  1700  0296                     	;# 
  1701  0298                     	;# 
  1702  0298                     	;# 
  1703  0299                     	;# 
  1704  029A                     	;# 
  1705  029B                     	;# 
  1706  029C                     	;# 
  1707  029C                     	;# 
  1708  029D                     	;# 
  1709  029E                     	;# 
  1710  029E                     	;# 
  1711  0311                     	;# 
  1712  0311                     	;# 
  1713  0312                     	;# 
  1714  0313                     	;# 
  1715  0318                     	;# 
  1716  0318                     	;# 
  1717  0319                     	;# 
  1718  031A                     	;# 
  1719  0394                     	;# 
  1720  0395                     	;# 
  1721  0396                     	;# 
  1722  039A                     	;# 
  1723  039C                     	;# 
  1724  039D                     	;# 
  1725  039E                     	;# 
  1726  039F                     	;# 
  1727  0415                     	;# 
  1728  0416                     	;# 
  1729  0417                     	;# 
  1730  041C                     	;# 
  1731  041D                     	;# 
  1732  041E                     	;# 
  1733  0FE4                     	;# 
  1734  0FE5                     	;# 
  1735  0FE6                     	;# 
  1736  0FE7                     	;# 
  1737  0FE8                     	;# 
  1738  0FE9                     	;# 
  1739  0FEA                     	;# 
  1740  0FEB                     	;# 
  1741  0FED                     	;# 
  1742  0FEE                     	;# 
  1743  0FEF                     	;# 
  1744  0000                     	;# 
  1745  0001                     	;# 
  1746  0002                     	;# 
  1747  0003                     	;# 
  1748  0004                     	;# 
  1749  0005                     	;# 
  1750  0006                     	;# 
  1751  0007                     	;# 
  1752  0008                     	;# 
  1753  0009                     	;# 
  1754  000A                     	;# 
  1755  000B                     	;# 
  1756  000C                     	;# 
  1757  000D                     	;# 
  1758  0011                     	;# 
  1759  0012                     	;# 
  1760  0013                     	;# 
  1761  0014                     	;# 
  1762  0015                     	;# 
  1763  0016                     	;# 
  1764  0016                     	;# 
  1765  0017                     	;# 
  1766  0018                     	;# 
  1767  0019                     	;# 
  1768  001A                     	;# 
  1769  001B                     	;# 
  1770  001C                     	;# 
  1771  001E                     	;# 
  1772  001F                     	;# 
  1773  008C                     	;# 
  1774  008D                     	;# 
  1775  0091                     	;# 
  1776  0092                     	;# 
  1777  0093                     	;# 
  1778  0094                     	;# 
  1779  0095                     	;# 
  1780  0096                     	;# 
  1781  0097                     	;# 
  1782  0098                     	;# 
  1783  0099                     	;# 
  1784  009A                     	;# 
  1785  009B                     	;# 
  1786  009B                     	;# 
  1787  009C                     	;# 
  1788  009D                     	;# 
  1789  009E                     	;# 
  1790  010C                     	;# 
  1791  010D                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0113                     	;# 
  1795  0114                     	;# 
  1796  0115                     	;# 
  1797  0116                     	;# 
  1798  0117                     	;# 
  1799  0118                     	;# 
  1800  0119                     	;# 
  1801  011A                     	;# 
  1802  011B                     	;# 
  1803  011D                     	;# 
  1804  011E                     	;# 
  1805  018C                     	;# 
  1806  018D                     	;# 
  1807  0191                     	;# 
  1808  0191                     	;# 
  1809  0192                     	;# 
  1810  0193                     	;# 
  1811  0193                     	;# 
  1812  0193                     	;# 
  1813  0194                     	;# 
  1814  0195                     	;# 
  1815  0196                     	;# 
  1816  0199                     	;# 
  1817  019A                     	;# 
  1818  019B                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019C                     	;# 
  1823  019C                     	;# 
  1824  019D                     	;# 
  1825  019E                     	;# 
  1826  019F                     	;# 
  1827  020C                     	;# 
  1828  020D                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0214                     	;# 
  1837  0215                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0216                     	;# 
  1841  0216                     	;# 
  1842  0217                     	;# 
  1843  0217                     	;# 
  1844  0219                     	;# 
  1845  021A                     	;# 
  1846  021B                     	;# 
  1847  021C                     	;# 
  1848  021D                     	;# 
  1849  021E                     	;# 
  1850  021F                     	;# 
  1851  0291                     	;# 
  1852  0291                     	;# 
  1853  0292                     	;# 
  1854  0293                     	;# 
  1855  0294                     	;# 
  1856  0295                     	;# 
  1857  0295                     	;# 
  1858  0296                     	;# 
  1859  0298                     	;# 
  1860  0298                     	;# 
  1861  0299                     	;# 
  1862  029A                     	;# 
  1863  029B                     	;# 
  1864  029C                     	;# 
  1865  029C                     	;# 
  1866  029D                     	;# 
  1867  029E                     	;# 
  1868  029E                     	;# 
  1869  0311                     	;# 
  1870  0311                     	;# 
  1871  0312                     	;# 
  1872  0313                     	;# 
  1873  0318                     	;# 
  1874  0318                     	;# 
  1875  0319                     	;# 
  1876  031A                     	;# 
  1877  0394                     	;# 
  1878  0395                     	;# 
  1879  0396                     	;# 
  1880  039A                     	;# 
  1881  039C                     	;# 
  1882  039D                     	;# 
  1883  039E                     	;# 
  1884  039F                     	;# 
  1885  0415                     	;# 
  1886  0416                     	;# 
  1887  0417                     	;# 
  1888  041C                     	;# 
  1889  041D                     	;# 
  1890  041E                     	;# 
  1891  0FE4                     	;# 
  1892  0FE5                     	;# 
  1893  0FE6                     	;# 
  1894  0FE7                     	;# 
  1895  0FE8                     	;# 
  1896  0FE9                     	;# 
  1897  0FEA                     	;# 
  1898  0FEB                     	;# 
  1899  0FED                     	;# 
  1900  0FEE                     	;# 
  1901  0FEF                     	;# 
  1902  0000                     	;# 
  1903  0001                     	;# 
  1904  0002                     	;# 
  1905  0003                     	;# 
  1906  0004                     	;# 
  1907  0005                     	;# 
  1908  0006                     	;# 
  1909  0007                     	;# 
  1910  0008                     	;# 
  1911  0009                     	;# 
  1912  000A                     	;# 
  1913  000B                     	;# 
  1914  000C                     	;# 
  1915  000D                     	;# 
  1916  0011                     	;# 
  1917  0012                     	;# 
  1918  0013                     	;# 
  1919  0014                     	;# 
  1920  0015                     	;# 
  1921  0016                     	;# 
  1922  0016                     	;# 
  1923  0017                     	;# 
  1924  0018                     	;# 
  1925  0019                     	;# 
  1926  001A                     	;# 
  1927  001B                     	;# 
  1928  001C                     	;# 
  1929  001E                     	;# 
  1930  001F                     	;# 
  1931  008C                     	;# 
  1932  008D                     	;# 
  1933  0091                     	;# 
  1934  0092                     	;# 
  1935  0093                     	;# 
  1936  0094                     	;# 
  1937  0095                     	;# 
  1938  0096                     	;# 
  1939  0097                     	;# 
  1940  0098                     	;# 
  1941  0099                     	;# 
  1942  009A                     	;# 
  1943  009B                     	;# 
  1944  009B                     	;# 
  1945  009C                     	;# 
  1946  009D                     	;# 
  1947  009E                     	;# 
  1948  010C                     	;# 
  1949  010D                     	;# 
  1950  0111                     	;# 
  1951  0112                     	;# 
  1952  0113                     	;# 
  1953  0114                     	;# 
  1954  0115                     	;# 
  1955  0116                     	;# 
  1956  0117                     	;# 
  1957  0118                     	;# 
  1958  0119                     	;# 
  1959  011A                     	;# 
  1960  011B                     	;# 
  1961  011D                     	;# 
  1962  011E                     	;# 
  1963  018C                     	;# 
  1964  018D                     	;# 
  1965  0191                     	;# 
  1966  0191                     	;# 
  1967  0192                     	;# 
  1968  0193                     	;# 
  1969  0193                     	;# 
  1970  0193                     	;# 
  1971  0194                     	;# 
  1972  0195                     	;# 
  1973  0196                     	;# 
  1974  0199                     	;# 
  1975  019A                     	;# 
  1976  019B                     	;# 
  1977  019B                     	;# 
  1978  019B                     	;# 
  1979  019B                     	;# 
  1980  019C                     	;# 
  1981  019C                     	;# 
  1982  019D                     	;# 
  1983  019E                     	;# 
  1984  019F                     	;# 
  1985  020C                     	;# 
  1986  020D                     	;# 
  1987  0211                     	;# 
  1988  0211                     	;# 
  1989  0212                     	;# 
  1990  0212                     	;# 
  1991  0213                     	;# 
  1992  0213                     	;# 
  1993  0214                     	;# 
  1994  0214                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0215                     	;# 
  1998  0216                     	;# 
  1999  0216                     	;# 
  2000  0217                     	;# 
  2001  0217                     	;# 
  2002  0219                     	;# 
  2003  021A                     	;# 
  2004  021B                     	;# 
  2005  021C                     	;# 
  2006  021D                     	;# 
  2007  021E                     	;# 
  2008  021F                     	;# 
  2009  0291                     	;# 
  2010  0291                     	;# 
  2011  0292                     	;# 
  2012  0293                     	;# 
  2013  0294                     	;# 
  2014  0295                     	;# 
  2015  0295                     	;# 
  2016  0296                     	;# 
  2017  0298                     	;# 
  2018  0298                     	;# 
  2019  0299                     	;# 
  2020  029A                     	;# 
  2021  029B                     	;# 
  2022  029C                     	;# 
  2023  029C                     	;# 
  2024  029D                     	;# 
  2025  029E                     	;# 
  2026  029E                     	;# 
  2027  0311                     	;# 
  2028  0311                     	;# 
  2029  0312                     	;# 
  2030  0313                     	;# 
  2031  0318                     	;# 
  2032  0318                     	;# 
  2033  0319                     	;# 
  2034  031A                     	;# 
  2035  0394                     	;# 
  2036  0395                     	;# 
  2037  0396                     	;# 
  2038  039A                     	;# 
  2039  039C                     	;# 
  2040  039D                     	;# 
  2041  039E                     	;# 
  2042  039F                     	;# 
  2043  0415                     	;# 
  2044  0416                     	;# 
  2045  0417                     	;# 
  2046  041C                     	;# 
  2047  041D                     	;# 
  2048  041E                     	;# 
  2049  0FE4                     	;# 
  2050  0FE5                     	;# 
  2051  0FE6                     	;# 
  2052  0FE7                     	;# 
  2053  0FE8                     	;# 
  2054  0FE9                     	;# 
  2055  0FEA                     	;# 
  2056  0FEB                     	;# 
  2057  0FED                     	;# 
  2058  0FEE                     	;# 
  2059  0FEF                     	;# 
  2060  0000                     	;# 
  2061  0001                     	;# 
  2062  0002                     	;# 
  2063  0003                     	;# 
  2064  0004                     	;# 
  2065  0005                     	;# 
  2066  0006                     	;# 
  2067  0007                     	;# 
  2068  0008                     	;# 
  2069  0009                     	;# 
  2070  000A                     	;# 
  2071  000B                     	;# 
  2072  000C                     	;# 
  2073  000D                     	;# 
  2074  0011                     	;# 
  2075  0012                     	;# 
  2076  0013                     	;# 
  2077  0014                     	;# 
  2078  0015                     	;# 
  2079  0016                     	;# 
  2080  0016                     	;# 
  2081  0017                     	;# 
  2082  0018                     	;# 
  2083  0019                     	;# 
  2084  001A                     	;# 
  2085  001B                     	;# 
  2086  001C                     	;# 
  2087  001E                     	;# 
  2088  001F                     	;# 
  2089  008C                     	;# 
  2090  008D                     	;# 
  2091  0091                     	;# 
  2092  0092                     	;# 
  2093  0093                     	;# 
  2094  0094                     	;# 
  2095  0095                     	;# 
  2096  0096                     	;# 
  2097  0097                     	;# 
  2098  0098                     	;# 
  2099  0099                     	;# 
  2100  009A                     	;# 
  2101  009B                     	;# 
  2102  009B                     	;# 
  2103  009C                     	;# 
  2104  009D                     	;# 
  2105  009E                     	;# 
  2106  010C                     	;# 
  2107  010D                     	;# 
  2108  0111                     	;# 
  2109  0112                     	;# 
  2110  0113                     	;# 
  2111  0114                     	;# 
  2112  0115                     	;# 
  2113  0116                     	;# 
  2114  0117                     	;# 
  2115  0118                     	;# 
  2116  0119                     	;# 
  2117  011A                     	;# 
  2118  011B                     	;# 
  2119  011D                     	;# 
  2120  011E                     	;# 
  2121  018C                     	;# 
  2122  018D                     	;# 
  2123  0191                     	;# 
  2124  0191                     	;# 
  2125  0192                     	;# 
  2126  0193                     	;# 
  2127  0193                     	;# 
  2128  0193                     	;# 
  2129  0194                     	;# 
  2130  0195                     	;# 
  2131  0196                     	;# 
  2132  0199                     	;# 
  2133  019A                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019C                     	;# 
  2139  019C                     	;# 
  2140  019D                     	;# 
  2141  019E                     	;# 
  2142  019F                     	;# 
  2143  020C                     	;# 
  2144  020D                     	;# 
  2145  0211                     	;# 
  2146  0211                     	;# 
  2147  0212                     	;# 
  2148  0212                     	;# 
  2149  0213                     	;# 
  2150  0213                     	;# 
  2151  0214                     	;# 
  2152  0214                     	;# 
  2153  0215                     	;# 
  2154  0215                     	;# 
  2155  0215                     	;# 
  2156  0216                     	;# 
  2157  0216                     	;# 
  2158  0217                     	;# 
  2159  0217                     	;# 
  2160  0219                     	;# 
  2161  021A                     	;# 
  2162  021B                     	;# 
  2163  021C                     	;# 
  2164  021D                     	;# 
  2165  021E                     	;# 
  2166  021F                     	;# 
  2167  0291                     	;# 
  2168  0291                     	;# 
  2169  0292                     	;# 
  2170  0293                     	;# 
  2171  0294                     	;# 
  2172  0295                     	;# 
  2173  0295                     	;# 
  2174  0296                     	;# 
  2175  0298                     	;# 
  2176  0298                     	;# 
  2177  0299                     	;# 
  2178  029A                     	;# 
  2179  029B                     	;# 
  2180  029C                     	;# 
  2181  029C                     	;# 
  2182  029D                     	;# 
  2183  029E                     	;# 
  2184  029E                     	;# 
  2185  0311                     	;# 
  2186  0311                     	;# 
  2187  0312                     	;# 
  2188  0313                     	;# 
  2189  0318                     	;# 
  2190  0318                     	;# 
  2191  0319                     	;# 
  2192  031A                     	;# 
  2193  0394                     	;# 
  2194  0395                     	;# 
  2195  0396                     	;# 
  2196  039A                     	;# 
  2197  039C                     	;# 
  2198  039D                     	;# 
  2199  039E                     	;# 
  2200  039F                     	;# 
  2201  0415                     	;# 
  2202  0416                     	;# 
  2203  0417                     	;# 
  2204  041C                     	;# 
  2205  041D                     	;# 
  2206  041E                     	;# 
  2207  0FE4                     	;# 
  2208  0FE5                     	;# 
  2209  0FE6                     	;# 
  2210  0FE7                     	;# 
  2211  0FE8                     	;# 
  2212  0FE9                     	;# 
  2213  0FEA                     	;# 
  2214  0FEB                     	;# 
  2215  0FED                     	;# 
  2216  0FEE                     	;# 
  2217  0FEF                     	;# 
  2218                           
  2219                           	psect	idataBANK2
  2220  0000'                    __pidataBANK2:	
  2221                           
  2222                           ;initializer for _H7826_01_Gain
  2223  0000' 3400'              	retlw	low (STR_22| (0+32768))
  2224  0001' 3400'              	retlw	high (STR_22| (0+32768))
  2225  0002' 3400'              	retlw	low (STR_23| (0+32768))
  2226  0003' 3400'              	retlw	high (STR_23| (0+32768))
  2227  0004' 3400'              	retlw	low (STR_24| (0+32768))
  2228  0005' 3400'              	retlw	high (STR_24| (0+32768))
  2229  0006' 3400'              	retlw	low (STR_25| (0+32768))
  2230  0007' 3400'              	retlw	high (STR_25| (0+32768))
  2231  0008' 3400'              	retlw	low (STR_26| (0+32768))
  2232  0009' 3400'              	retlw	high (STR_26| (0+32768))
  2233  000A' 3400'              	retlw	low (STR_27| (0+32768))
  2234  000B' 3400'              	retlw	high (STR_27| (0+32768))
  2235  000C' 3400'              	retlw	low (STR_28| (0+32768))
  2236  000D' 3400'              	retlw	high (STR_28| (0+32768))
  2237  000E' 3400'              	retlw	low (STR_29| (0+32768))
  2238  000F' 3400'              	retlw	high (STR_29| (0+32768))
  2239  0010' 3400'              	retlw	low (STR_30| (0+32768))
  2240  0011' 3400'              	retlw	high (STR_30| (0+32768))
  2241  0012' 3400'              	retlw	low (STR_31| (0+32768))
  2242  0013' 3400'              	retlw	high (STR_31| (0+32768))
  2243  0014' 3400'              	retlw	low (STR_32| (0+32768))
  2244  0015' 3400'              	retlw	high (STR_32| (0+32768))
  2245  0016' 3400'              	retlw	low (STR_33| (0+32768))
  2246  0017' 3400'              	retlw	high (STR_33| (0+32768))
  2247  0018' 3400'              	retlw	low (STR_34| (0+32768))
  2248  0019' 3400'              	retlw	high (STR_34| (0+32768))
  2249  001A' 3400'              	retlw	low (STR_35| (0+32768))
  2250  001B' 3400'              	retlw	high (STR_35| (0+32768))
  2251  001C' 3400'              	retlw	low (STR_36| (0+32768))
  2252  001D' 3400'              	retlw	high (STR_36| (0+32768))
  2253                           
  2254                           ;initializer for _H7826_Gain
  2255  001E' 3400'              	retlw	low (STR_7| (0+32768))
  2256  001F' 3400'              	retlw	high (STR_7| (0+32768))
  2257  0020' 3400'              	retlw	low (STR_8| (0+32768))
  2258  0021' 3400'              	retlw	high (STR_8| (0+32768))
  2259  0022' 3400'              	retlw	low (STR_9| (0+32768))
  2260  0023' 3400'              	retlw	high (STR_9| (0+32768))
  2261  0024' 3400'              	retlw	low (STR_10| (0+32768))
  2262  0025' 3400'              	retlw	high (STR_10| (0+32768))
  2263  0026' 3400'              	retlw	low (STR_11| (0+32768))
  2264  0027' 3400'              	retlw	high (STR_11| (0+32768))
  2265  0028' 3400'              	retlw	low (STR_12| (0+32768))
  2266  0029' 3400'              	retlw	high (STR_12| (0+32768))
  2267  002A' 3400'              	retlw	low (STR_13| (0+32768))
  2268  002B' 3400'              	retlw	high (STR_13| (0+32768))
  2269  002C' 3400'              	retlw	low (STR_14| (0+32768))
  2270  002D' 3400'              	retlw	high (STR_14| (0+32768))
  2271  002E' 3400'              	retlw	low (STR_15| (0+32768))
  2272  002F' 3400'              	retlw	high (STR_15| (0+32768))
  2273  0030' 3400'              	retlw	low (STR_16| (0+32768))
  2274  0031' 3400'              	retlw	high (STR_16| (0+32768))
  2275  0032' 3400'              	retlw	low (STR_17| (0+32768))
  2276  0033' 3400'              	retlw	high (STR_17| (0+32768))
  2277  0034' 3400'              	retlw	low (STR_18| (0+32768))
  2278  0035' 3400'              	retlw	high (STR_18| (0+32768))
  2279  0036' 3400'              	retlw	low (STR_19| (0+32768))
  2280  0037' 3400'              	retlw	high (STR_19| (0+32768))
  2281  0038' 3400'              	retlw	low (STR_20| (0+32768))
  2282  0039' 3400'              	retlw	high (STR_20| (0+32768))
  2283  003A' 3400'              	retlw	low (STR_21| (0+32768))
  2284  003B' 3400'              	retlw	high (STR_21| (0+32768))
  2285                           
  2286                           	psect	stringtext1
  2287  0000'                    __pstringtext1:	
  2288  0000'                    _dpowers:	
  2289  0000' 3401               	retlw	1
  2290  0001' 3400               	retlw	0
  2291  0002' 3400               	retlw	0
  2292  0003' 3400               	retlw	0
  2293  0004' 340A               	retlw	10
  2294  0005' 3400               	retlw	0
  2295  0006' 3400               	retlw	0
  2296  0007' 3400               	retlw	0
  2297  0008' 3464               	retlw	100
  2298  0009' 3400               	retlw	0
  2299  000A' 3400               	retlw	0
  2300  000B' 3400               	retlw	0
  2301  000C' 34E8               	retlw	232
  2302  000D' 3403               	retlw	3
  2303  000E' 3400               	retlw	0
  2304  000F' 3400               	retlw	0
  2305  0010' 3410               	retlw	16
  2306  0011' 3427               	retlw	39
  2307  0012' 3400               	retlw	0
  2308  0013' 3400               	retlw	0
  2309  0014' 34A0               	retlw	160
  2310  0015' 3486               	retlw	134
  2311  0016' 3401               	retlw	1
  2312  0017' 3400               	retlw	0
  2313  0018' 3440               	retlw	64
  2314  0019' 3442               	retlw	66
  2315  001A' 340F               	retlw	15
  2316  001B' 3400               	retlw	0
  2317  001C' 3480               	retlw	128
  2318  001D' 3496               	retlw	150
  2319  001E' 3498               	retlw	152
  2320  001F' 3400               	retlw	0
  2321  0020' 3400               	retlw	0
  2322  0021' 34E1               	retlw	225
  2323  0022' 34F5               	retlw	245
  2324  0023' 3405               	retlw	5
  2325  0024' 3400               	retlw	0
  2326  0025' 34CA               	retlw	202
  2327  0026' 349A               	retlw	154
  2328  0027' 343B               	retlw	59
  2329  0028'                    __end_of_dpowers:	
  2330  0016                     _TMR1	set	22
  2331  001F                     _CPSCON1	set	31
  2332  001E                     _CPSCON0	set	30
  2333  0019                     _T1GCON	set	25
  2334  0018                     _T1CON	set	24
  2335  000D                     _PORTB	set	13
  2336  000C                     _PORTA	set	12
  2337  001B                     _PR2	set	27
  2338  001A                     _TMR2	set	26
  2339  001C                     _T2CON	set	28
  2340  0018                     _CARRY	set	24
  2341  0088                     _TMR1IF	set	136
  2342  00C0                     _TMR1ON	set	192
  2343  00A1                     _BCL2IF	set	161
  2344  00A0                     _SSP2IF	set	160
  2345  005F                     _GIE	set	95
  2346  005E                     _PEIE	set	94
  2347  009B                     _TMR6IF	set	155
  2348  008D                     _TRISB	set	141
  2349  008C                     _TRISA	set	140
  2350  0099                     _OSCCON	set	153
  2351  0488                     _TMR1IE	set	1160
  2352  04A1                     _BCL2IE	set	1185
  2353  04A0                     _SSP2IE	set	1184
  2354  049B                     _TMR6IE	set	1179
  2355  011E                     _APFCON1	set	286
  2356  011D                     _APFCON0	set	285
  2357  0863                     _LATA3	set	2147
  2358  0864                     _LATA4	set	2148
  2359  0866                     _LATA6	set	2150
  2360  0191                     _EEADR	set	401
  2361  0196                     _EECON2	set	406
  2362  0193                     _EEDATA	set	403
  2363  0195                     _EECON1	set	405
  2364  018D                     _ANSELB	set	397
  2365  018C                     _ANSELA	set	396
  2366  0CAA                     _WREN	set	3242
  2367  0CA8                     _RD	set	3240
  2368  0CA9                     _WR	set	3241
  2369  020D                     _WPUB	set	525
  2370  021C                     _SSP2STATbits	set	540
  2371  0219                     _SSP2BUF	set	537
  2372  021E                     _SSP2CON2	set	542
  2373  021B                     _SSP2MSK	set	539
  2374  021E                     _SSP2CON2bits	set	542
  2375  021D                     _SSP2CON1bits	set	541
  2376  021A                     _SSP2ADD	set	538
  2377  021C                     _SSP2STAT	set	540
  2378  021D                     _SSP2CON1	set	541
  2379  0298                     _CCPR2L	set	664
  2380  029E                     _CCPTMRS	set	670
  2381  029A                     _CCP2CON	set	666
  2382  041E                     _T6CON	set	1054
  2383  041C                     _TMR6	set	1052
  2384  041D                     _PR6	set	1053
  2385  0028'                    STR_41:	
  2386  0028' 3420               	retlw	32	;' '
  2387  0029' 3420               	retlw	32	;' '
  2388  002A' 3420               	retlw	32	;' '
  2389  002B' 3453               	retlw	83	;'S'
  2390  002C' 3465               	retlw	101	;'e'
  2391  002D' 3472               	retlw	114	;'r'
  2392  002E' 342E               	retlw	46	;'.'
  2393  002F' 344E               	retlw	78	;'N'
  2394  0030' 346F               	retlw	111	;'o'
  2395  0031' 342E               	retlw	46	;'.'
  2396  0032' 3425               	retlw	37	;'%'
  2397  0033' 3430               	retlw	48	;'0'
  2398  0034' 3430               	retlw	48	;'0'
  2399  0035' 3430               	retlw	48	;'0'
  2400  0036' 3433               	retlw	51	;'3'
  2401  0037' 3464               	retlw	100	;'d'
  2402  0038' 3420               	retlw	32	;' '
  2403  0039' 3420               	retlw	32	;' '
  2404  003A' 3420               	retlw	32	;' '
  2405  003B' 3400               	retlw	0
  2406                           
  2407                           	psect	stringtext2
  2408  0000'                    __pstringtext2:	
  2409  0000'                    STR_38:	
  2410  0000' 3420               	retlw	32	;' '
  2411  0001' 3420               	retlw	32	;' '
  2412  0002' 3420               	retlw	32	;' '
  2413  0003' 3420               	retlw	32	;' '
  2414  0004' 3477               	retlw	119	;'w'
  2415  0005' 3469               	retlw	105	;'i'
  2416  0006' 3474               	retlw	116	;'t'
  2417  0007' 3468               	retlw	104	;'h'
  2418  0008' 3420               	retlw	32	;' '
  2419  0009' 3450               	retlw	80	;'P'
  2420  000A' 3449               	retlw	73	;'I'
  2421  000B' 3443               	retlw	67	;'C'
  2422  000C' 3420               	retlw	32	;' '
  2423  000D' 3420               	retlw	32	;' '
  2424  000E' 3420               	retlw	32	;' '
  2425  000F' 3420               	retlw	32	;' '
  2426  0010' 3400               	retlw	0
  2427                           
  2428                           	psect	stringtext3
  2429  0000'                    __pstringtext3:	
  2430  0000'                    STR_53:	
  2431  0000' 3444               	retlw	68	;'D'
  2432  0001' 3465               	retlw	101	;'e'
  2433  0002' 3476               	retlw	118	;'v'
  2434  0003' 3465               	retlw	101	;'e'
  2435  0004' 3469               	retlw	105	;'i'
  2436  0005' 3463               	retlw	99	;'c'
  2437  0006' 3465               	retlw	101	;'e'
  2438  0007' 343A               	retlw	58	;':'
  2439  0008' 3448               	retlw	72	;'H'
  2440  0009' 3437               	retlw	55	;'7'
  2441  000A' 3438               	retlw	56	;'8'
  2442  000B' 3432               	retlw	50	;'2'
  2443  000C' 3436               	retlw	54	;'6'
  2444  000D' 3420               	retlw	32	;' '
  2445  000E' 3420               	retlw	32	;' '
  2446  000F' 3420               	retlw	32	;' '
  2447  0010' 3400               	retlw	0
  2448                           
  2449                           	psect	stringtext4
  2450  0000'                    __pstringtext4:	
  2451  0000'                    STR_44:	
  2452  0000' 3420               	retlw	32	;' '
  2453  0001' 3420               	retlw	32	;' '
  2454  0002' 3420               	retlw	32	;' '
  2455  0003' 3450               	retlw	80	;'P'
  2456  0004' 344D               	retlw	77	;'M'
  2457  0005' 3454               	retlw	84	;'T'
  2458  0006' 3420               	retlw	32	;' '
  2459  0007' 3444               	retlw	68	;'D'
  2460  0008' 3465               	retlw	101	;'e'
  2461  0009' 3476               	retlw	118	;'v'
  2462  000A' 3469               	retlw	105	;'i'
  2463  000B' 3463               	retlw	99	;'c'
  2464  000C' 3465               	retlw	101	;'e'
  2465  000D' 3420               	retlw	32	;' '
  2466  000E' 3420               	retlw	32	;' '
  2467  000F' 3420               	retlw	32	;' '
  2468  0010' 3400               	retlw	0
  2469                           
  2470                           	psect	stringtext5
  2471  0000'                    __pstringtext5:	
  2472  0000'                    STR_47:	
  2473  0000' 3420               	retlw	32	;' '
  2474  0001' 3420               	retlw	32	;' '
  2475  0002' 3453               	retlw	83	;'S'
  2476  0003' 3465               	retlw	101	;'e'
  2477  0004' 3474               	retlw	116	;'t'
  2478  0005' 3420               	retlw	32	;' '
  2479  0006' 3450               	retlw	80	;'P'
  2480  0007' 344D               	retlw	77	;'M'
  2481  0008' 3454               	retlw	84	;'T'
  2482  0009' 3420               	retlw	32	;' '
  2483  000A' 3447               	retlw	71	;'G'
  2484  000B' 3461               	retlw	97	;'a'
  2485  000C' 3469               	retlw	105	;'i'
  2486  000D' 346E               	retlw	110	;'n'
  2487  000E' 3420               	retlw	32	;' '
  2488  000F' 3420               	retlw	32	;' '
  2489  0010' 3400               	retlw	0
  2490                           
  2491                           	psect	stringtext6
  2492  0000'                    __pstringtext6:	
  2493  0000'                    STR_37:	
  2494  0000' 3420               	retlw	32	;' '
  2495  0001' 3447               	retlw	71	;'G'
  2496  0002' 3465               	retlw	101	;'e'
  2497  0003' 3469               	retlw	105	;'i'
  2498  0004' 3467               	retlw	103	;'g'
  2499  0005' 3465               	retlw	101	;'e'
  2500  0006' 3472               	retlw	114	;'r'
  2501  0007' 3420               	retlw	32	;' '
  2502  0008' 3443               	retlw	67	;'C'
  2503  0009' 346F               	retlw	111	;'o'
  2504  000A' 3475               	retlw	117	;'u'
  2505  000B' 346E               	retlw	110	;'n'
  2506  000C' 3474               	retlw	116	;'t'
  2507  000D' 3465               	retlw	101	;'e'
  2508  000E' 3472               	retlw	114	;'r'
  2509  000F' 3420               	retlw	32	;' '
  2510  0010' 3400               	retlw	0
  2511                           
  2512                           	psect	stringtext7
  2513  0000'                    __pstringtext7:	
  2514  0000'                    STR_54:	
  2515  0000' 3444               	retlw	68	;'D'
  2516  0001' 3465               	retlw	101	;'e'
  2517  0002' 3476               	retlw	118	;'v'
  2518  0003' 3465               	retlw	101	;'e'
  2519  0004' 3469               	retlw	105	;'i'
  2520  0005' 3463               	retlw	99	;'c'
  2521  0006' 3465               	retlw	101	;'e'
  2522  0007' 343A               	retlw	58	;':'
  2523  0008' 3448               	retlw	72	;'H'
  2524  0009' 3437               	retlw	55	;'7'
  2525  000A' 3438               	retlw	56	;'8'
  2526  000B' 3432               	retlw	50	;'2'
  2527  000C' 3436               	retlw	54	;'6'
  2528  000D' 345F               	retlw	95	;'_'
  2529  000E' 3430               	retlw	48	;'0'
  2530  000F' 3431               	retlw	49	;'1'
  2531  0010' 3400               	retlw	0
  2532                           
  2533                           	psect	stringtext8
  2534  0000'                    __pstringtext8:	
  2535  0000'                    STR_45:	
  2536  0000' 343C               	retlw	60	;'<'
  2537  0001' 342D               	retlw	45	;'-'
  2538  0002' 342D               	retlw	45	;'-'
  2539  0003' 3420               	retlw	32	;' '
  2540  0004' 3420               	retlw	32	;' '
  2541  0005' 3448               	retlw	72	;'H'
  2542  0006' 3437               	retlw	55	;'7'
  2543  0007' 3438               	retlw	56	;'8'
  2544  0008' 3432               	retlw	50	;'2'
  2545  0009' 3436               	retlw	54	;'6'
  2546  000A' 3420               	retlw	32	;' '
  2547  000B' 3420               	retlw	32	;' '
  2548  000C' 3420               	retlw	32	;' '
  2549  000D' 342D               	retlw	45	;'-'
  2550  000E' 342D               	retlw	45	;'-'
  2551  000F' 343E               	retlw	62	;'>'
  2552  0010' 3400               	retlw	0
  2553                           
  2554                           	psect	stringtext9
  2555  0000'                    __pstringtext9:	
  2556  0000'                    STR_46:	
  2557  0000' 343C               	retlw	60	;'<'
  2558  0001' 342D               	retlw	45	;'-'
  2559  0002' 342D               	retlw	45	;'-'
  2560  0003' 3420               	retlw	32	;' '
  2561  0004' 3448               	retlw	72	;'H'
  2562  0005' 3437               	retlw	55	;'7'
  2563  0006' 3438               	retlw	56	;'8'
  2564  0007' 3432               	retlw	50	;'2'
  2565  0008' 3436               	retlw	54	;'6'
  2566  0009' 345F               	retlw	95	;'_'
  2567  000A' 3430               	retlw	48	;'0'
  2568  000B' 3431               	retlw	49	;'1'
  2569  000C' 3420               	retlw	32	;' '
  2570  000D' 342D               	retlw	45	;'-'
  2571  000E' 342D               	retlw	45	;'-'
  2572  000F' 343E               	retlw	62	;'>'
  2573  0010' 3400               	retlw	0
  2574                           
  2575                           	psect	stringtext10
  2576  0000'                    __pstringtext10:	
  2577  0000'                    STR_43:	
  2578  0000' 3420               	retlw	32	;' '
  2579  0001' 3420               	retlw	32	;' '
  2580  0002' 3452               	retlw	82	;'R'
  2581  0003' 3479               	retlw	121	;'y'
  2582  0004' 346F               	retlw	111	;'o'
  2583  0005' 3420               	retlw	32	;' '
  2584  0006' 3457               	retlw	87	;'W'
  2585  0007' 3461               	retlw	97	;'a'
  2586  0008' 346B               	retlw	107	;'k'
  2587  0009' 3461               	retlw	97	;'a'
  2588  000A' 3462               	retlw	98	;'b'
  2589  000B' 3461               	retlw	97	;'a'
  2590  000C' 3479               	retlw	121	;'y'
  2591  000D' 3473               	retlw	115	;'s'
  2592  000E' 3468               	retlw	104	;'h'
  2593  000F' 3469               	retlw	105	;'i'
  2594  0010' 3400               	retlw	0
  2595                           
  2596                           	psect	stringtext11
  2597  0000'                    __pstringtext11:	
  2598  0000'                    STR_1:	
  2599  0000' 3420               	retlw	32	;' '
  2600  0001' 3420               	retlw	32	;' '
  2601  0002' 3443               	retlw	67	;'C'
  2602  0003' 346F               	retlw	111	;'o'
  2603  0004' 3475               	retlw	117	;'u'
  2604  0005' 346E               	retlw	110	;'n'
  2605  0006' 3474               	retlw	116	;'t'
  2606  0007' 3474               	retlw	116	;'t'
  2607  0008' 3469               	retlw	105	;'i'
  2608  0009' 346E               	retlw	110	;'n'
  2609  000A' 3467               	retlw	103	;'g'
  2610  000B' 342E               	retlw	46	;'.'
  2611  000C' 342E               	retlw	46	;'.'
  2612  000D' 342E               	retlw	46	;'.'
  2613  000E' 3420               	retlw	32	;' '
  2614  000F' 3420               	retlw	32	;' '
  2615  0010' 3400               	retlw	0
  2616                           
  2617                           	psect	stringtext12
  2618  0000'                    __pstringtext12:	
  2619  0000'                    STR_2:	
  2620  0000' 3420               	retlw	32	;' '
  2621  0001' 3425               	retlw	37	;'%'
  2622  0002' 3437               	retlw	55	;'7'
  2623  0003' 346C               	retlw	108	;'l'
  2624  0004' 3475               	retlw	117	;'u'
  2625  0005' 3420               	retlw	32	;' '
  2626  0006' 3420               	retlw	32	;' '
  2627  0007' 3425               	retlw	37	;'%'
  2628  0008' 3430               	retlw	48	;'0'
  2629  0009' 3432               	retlw	50	;'2'
  2630  000A' 3464               	retlw	100	;'d'
  2631  000B' 343A               	retlw	58	;':'
  2632  000C' 3425               	retlw	37	;'%'
  2633  000D' 3430               	retlw	48	;'0'
  2634  000E' 3432               	retlw	50	;'2'
  2635  000F' 3464               	retlw	100	;'d'
  2636  0010' 3400               	retlw	0
  2637                           
  2638                           	psect	stringtext13
  2639  0000'                    __pstringtext13:	
  2640  0000'                    STR_3:	
  2641  0000' 3420               	retlw	32	;' '
  2642  0001' 3443               	retlw	67	;'C'
  2643  0002' 346F               	retlw	111	;'o'
  2644  0003' 3475               	retlw	117	;'u'
  2645  0004' 346E               	retlw	110	;'n'
  2646  0005' 3474               	retlw	116	;'t'
  2647  0006' 3420               	retlw	32	;' '
  2648  0007' 3453               	retlw	83	;'S'
  2649  0008' 3474               	retlw	116	;'t'
  2650  0009' 346F               	retlw	111	;'o'
  2651  000A' 3470               	retlw	112	;'p'
  2652  000B' 3470               	retlw	112	;'p'
  2653  000C' 3465               	retlw	101	;'e'
  2654  000D' 3464               	retlw	100	;'d'
  2655  000E' 3420               	retlw	32	;' '
  2656  000F' 3400               	retlw	0
  2657                           
  2658                           	psect	stringtext14
  2659  0000'                    __pstringtext14:	
  2660  0000'                    STR_58:	
  2661  0000' 3444               	retlw	68	;'D'
  2662  0001' 3469               	retlw	105	;'i'
  2663  0002' 3466               	retlw	102	;'f'
  2664  0003' 3466               	retlw	102	;'f'
  2665  0004' 343D               	retlw	61	;'='
  2666  0005' 3425               	retlw	37	;'%'
  2667  0006' 3430               	retlw	48	;'0'
  2668  0007' 3430               	retlw	48	;'0'
  2669  0008' 3430               	retlw	48	;'0'
  2670  0009' 3430               	retlw	48	;'0'
  2671  000A' 3430               	retlw	48	;'0'
  2672  000B' 3435               	retlw	53	;'5'
  2673  000C' 3464               	retlw	100	;'d'
  2674  000D' 3400               	retlw	0
  2675                           
  2676                           	psect	stringtext15
  2677  0000'                    __pstringtext15:	
  2678  0000'                    STR_39:	
  2679  0000' 3453               	retlw	83	;'S'
  2680  0001' 346F               	retlw	111	;'o'
  2681  0002' 3474               	retlw	116	;'t'
  2682  0003' 3457               	retlw	87	;'W'
  2683  0004' 3461               	retlw	97	;'a'
  2684  0005' 3472               	retlw	114	;'r'
  2685  0006' 3465               	retlw	101	;'e'
  2686  0007' 3420               	retlw	32	;' '
  2687  0008' 3476               	retlw	118	;'v'
  2688  0009' 3465               	retlw	101	;'e'
  2689  000A' 3472               	retlw	114	;'r'
  2690  000B' 3425               	retlw	37	;'%'
  2691  000C' 3473               	retlw	115	;'s'
  2692  000D' 3400               	retlw	0
  2693                           
  2694                           	psect	stringtext16
  2695  0000'                    __pstringtext16:	
  2696  0000'                    STR_57:	
  2697  0000' 3443               	retlw	67	;'C'
  2698  0001' 3468               	retlw	104	;'h'
  2699  0002' 3461               	retlw	97	;'a'
  2700  0003' 346E               	retlw	110	;'n'
  2701  0004' 346E               	retlw	110	;'n'
  2702  0005' 3465               	retlw	101	;'e'
  2703  0006' 346C               	retlw	108	;'l'
  2704  0007' 343A               	retlw	58	;':'
  2705  0008' 3425               	retlw	37	;'%'
  2706  0009' 3464               	retlw	100	;'d'
  2707  000A' 3420               	retlw	32	;' '
  2708  000B' 3400               	retlw	0
  2709                           
  2710                           	psect	stringtext17
  2711  0000'                    __pstringtext17:	
  2712  0000'                    STR_55:	
  2713  0000' 3420               	retlw	32	;' '
  2714  0001' 3447               	retlw	71	;'G'
  2715  0002' 3461               	retlw	97	;'a'
  2716  0003' 3469               	retlw	105	;'i'
  2717  0004' 346E               	retlw	110	;'n'
  2718  0005' 343A               	retlw	58	;':'
  2719  0006' 3420               	retlw	32	;' '
  2720  0007' 3425               	retlw	37	;'%'
  2721  0008' 3438               	retlw	56	;'8'
  2722  0009' 3473               	retlw	115	;'s'
  2723  000A' 3420               	retlw	32	;' '
  2724  000B' 3400               	retlw	0
  2725                           
  2726                           	psect	stringtext18
  2727  0000'                    __pstringtext18:	
  2728  0000'                    STR_48:	
  2729  0000' 343C               	retlw	60	;'<'
  2730  0001' 342D               	retlw	45	;'-'
  2731  0002' 342D               	retlw	45	;'-'
  2732  0003' 3420               	retlw	32	;' '
  2733  0004' 3425               	retlw	37	;'%'
  2734  0005' 3438               	retlw	56	;'8'
  2735  0006' 3473               	retlw	115	;'s'
  2736  0007' 3420               	retlw	32	;' '
  2737  0008' 342D               	retlw	45	;'-'
  2738  0009' 342D               	retlw	45	;'-'
  2739  000A' 343E               	retlw	62	;'>'
  2740  000B' 3400               	retlw	0
  2741                           
  2742                           	psect	stringtext19
  2743  0000'                    __pstringtext19:	
  2744  0000'                    STR_42:	
  2745  0000' 3443               	retlw	67	;'C'
  2746  0001' 3472               	retlw	114	;'r'
  2747  0002' 3465               	retlw	101	;'e'
  2748  0003' 3461               	retlw	97	;'a'
  2749  0004' 3474               	retlw	116	;'t'
  2750  0005' 3465               	retlw	101	;'e'
  2751  0006' 3464               	retlw	100	;'d'
  2752  0007' 3420               	retlw	32	;' '
  2753  0008' 3442               	retlw	66	;'B'
  2754  0009' 3479               	retlw	121	;'y'
  2755  000A' 3400               	retlw	0
  2756                           
  2757                           	psect	stringtext20
  2758  0000'                    __pstringtext20:	
  2759  0000'                    STR_5:	
  2760  0000' 3425               	retlw	37	;'%'
  2761  0001' 3437               	retlw	55	;'7'
  2762  0002' 346C               	retlw	108	;'l'
  2763  0003' 3475               	retlw	117	;'u'
  2764  0004' 3420               	retlw	32	;' '
  2765  0005' 3425               	retlw	37	;'%'
  2766  0006' 3437               	retlw	55	;'7'
  2767  0007' 346C               	retlw	108	;'l'
  2768  0008' 3475               	retlw	117	;'u'
  2769  0009' 3400               	retlw	0
  2770                           
  2771                           	psect	stringtext21
  2772  0000'                    __pstringtext21:	
  2773  0000'                    STR_21:	
  2774  0000' 3432               	retlw	50	;'2'
  2775  0001' 3437               	retlw	55	;'7'
  2776  0002' 3437               	retlw	55	;'7'
  2777  0003' 3434               	retlw	52	;'4'
  2778  0004' 3435               	retlw	53	;'5'
  2779  0005' 3436               	retlw	54	;'6'
  2780  0006' 3432               	retlw	50	;'2'
  2781  0007' 3400               	retlw	0
  2782                           
  2783                           	psect	stringtext22
  2784  0000'                    __pstringtext22:	
  2785  0000'                    STR_20:	
  2786  0000' 3431               	retlw	49	;'1'
  2787  0001' 3439               	retlw	57	;'9'
  2788  0002' 3434               	retlw	52	;'4'
  2789  0003' 3430               	retlw	48	;'0'
  2790  0004' 3436               	retlw	54	;'6'
  2791  0005' 3437               	retlw	55	;'7'
  2792  0006' 3433               	retlw	51	;'3'
  2793  0007' 3400               	retlw	0
  2794                           
  2795                           	psect	stringtext23
  2796  0000'                    __pstringtext23:	
  2797  0000'                    STR_19:	
  2798  0000' 3431               	retlw	49	;'1'
  2799  0001' 3433               	retlw	51	;'3'
  2800  0002' 3433               	retlw	51	;'3'
  2801  0003' 3436               	retlw	54	;'6'
  2802  0004' 3430               	retlw	48	;'0'
  2803  0005' 3430               	retlw	48	;'0'
  2804  0006' 3436               	retlw	54	;'6'
  2805  0007' 3400               	retlw	0
  2806                           
  2807                           	psect	stringtext24
  2808  0000'                    __pstringtext24:	
  2809  0000'                    STR_60:	
  2810  0000' 3428               	retlw	40	;'('
  2811  0001' 346E               	retlw	110	;'n'
  2812  0002' 3475               	retlw	117	;'u'
  2813  0003' 346C               	retlw	108	;'l'
  2814  0004' 346C               	retlw	108	;'l'
  2815  0005' 3429               	retlw	41	;')'
  2816  0006' 3400               	retlw	0
  2817                           
  2818                           	psect	stringtext25
  2819  0000'                    __pstringtext25:	
  2820  0000'                    STR_17:	
  2821  0000' 3436               	retlw	54	;'6'
  2822  0001' 3430               	retlw	48	;'0'
  2823  0002' 3430               	retlw	48	;'0'
  2824  0003' 3430               	retlw	48	;'0'
  2825  0004' 3430               	retlw	48	;'0'
  2826  0005' 3430               	retlw	48	;'0'
  2827  0006' 3400               	retlw	0
  2828                           
  2829                           	psect	stringtext26
  2830  0000'                    __pstringtext26:	
  2831  0000'                    STR_35:	
  2832  0000' 3437               	retlw	55	;'7'
  2833  0001' 3430               	retlw	48	;'0'
  2834  0002' 3430               	retlw	48	;'0'
  2835  0003' 3438               	retlw	56	;'8'
  2836  0004' 3439               	retlw	57	;'9'
  2837  0005' 3430               	retlw	48	;'0'
  2838  0006' 3400               	retlw	0
  2839                           
  2840                           	psect	stringtext27
  2841  0000'                    __pstringtext27:	
  2842  0000'                    STR_36:	
  2843  0000' 3439               	retlw	57	;'9'
  2844  0001' 3436               	retlw	54	;'6'
  2845  0002' 3438               	retlw	56	;'8'
  2846  0003' 3434               	retlw	52	;'4'
  2847  0004' 3437               	retlw	55	;'7'
  2848  0005' 3432               	retlw	50	;'2'
  2849  0006' 3400               	retlw	0
  2850                           
  2851                           	psect	stringtext28
  2852  0000'                    __pstringtext28:	
  2853  0000'                    STR_30:	
  2854  0000' 3431               	retlw	49	;'1'
  2855  0001' 3430               	retlw	48	;'0'
  2856  0002' 3438               	retlw	56	;'8'
  2857  0003' 3438               	retlw	56	;'8'
  2858  0004' 3434               	retlw	52	;'4'
  2859  0005' 3433               	retlw	51	;'3'
  2860  0006' 3400               	retlw	0
  2861                           
  2862                           	psect	stringtext29
  2863  0000'                    __pstringtext29:	
  2864  0000'                    STR_32:	
  2865  0000' 3432               	retlw	50	;'2'
  2866  0001' 3434               	retlw	52	;'4'
  2867  0002' 3432               	retlw	50	;'2'
  2868  0003' 3433               	retlw	51	;'3'
  2869  0004' 3436               	retlw	54	;'6'
  2870  0005' 3434               	retlw	52	;'4'
  2871  0006' 3400               	retlw	0
  2872                           
  2873                           	psect	stringtext30
  2874  0000'                    __pstringtext30:	
  2875  0000'                    STR_33:	
  2876  0000' 3433               	retlw	51	;'3'
  2877  0001' 3435               	retlw	53	;'5'
  2878  0002' 3431               	retlw	49	;'1'
  2879  0003' 3431               	retlw	49	;'1'
  2880  0004' 3432               	retlw	50	;'2'
  2881  0005' 3437               	retlw	55	;'7'
  2882  0006' 3400               	retlw	0
  2883                           
  2884                           	psect	stringtext31
  2885  0000'                    __pstringtext31:	
  2886  0000'                    STR_15:	
  2887  0000' 3432               	retlw	50	;'2'
  2888  0001' 3434               	retlw	52	;'4'
  2889  0002' 3437               	retlw	55	;'7'
  2890  0003' 3436               	retlw	54	;'6'
  2891  0004' 3434               	retlw	52	;'4'
  2892  0005' 3437               	retlw	55	;'7'
  2893  0006' 3400               	retlw	0
  2894                           
  2895                           	psect	stringtext32
  2896  0000'                    __pstringtext32:	
  2897  0000'                    STR_14:	
  2898  0000' 3431               	retlw	49	;'1'
  2899  0001' 3435               	retlw	53	;'5'
  2900  0002' 3433               	retlw	51	;'3'
  2901  0003' 3432               	retlw	50	;'2'
  2902  0004' 3432               	retlw	50	;'2'
  2903  0005' 3438               	retlw	56	;'8'
  2904  0006' 3400               	retlw	0
  2905                           
  2906                           	psect	stringtext33
  2907  0000'                    __pstringtext33:	
  2908  0000'                    STR_16:	
  2909  0000' 3433               	retlw	51	;'3'
  2910  0001' 3438               	retlw	56	;'8'
  2911  0002' 3439               	retlw	57	;'9'
  2912  0003' 3439               	retlw	57	;'9'
  2913  0004' 3438               	retlw	56	;'8'
  2914  0005' 3438               	retlw	56	;'8'
  2915  0006' 3400               	retlw	0
  2916                           
  2917                           	psect	stringtext34
  2918  0000'                    __pstringtext34:	
  2919  0000'                    STR_31:	
  2920  0000' 3431               	retlw	49	;'1'
  2921  0001' 3436               	retlw	54	;'6'
  2922  0002' 3434               	retlw	52	;'4'
  2923  0003' 3431               	retlw	49	;'1'
  2924  0004' 3433               	retlw	51	;'3'
  2925  0005' 3439               	retlw	57	;'9'
  2926  0006' 3400               	retlw	0
  2927                           
  2928                           	psect	stringtext35
  2929  0000'                    __pstringtext35:	
  2930  0000'                    STR_18:	
  2931  0000' 3439               	retlw	57	;'9'
  2932  0001' 3430               	retlw	48	;'0'
  2933  0002' 3433               	retlw	51	;'3'
  2934  0003' 3438               	retlw	56	;'8'
  2935  0004' 3439               	retlw	57	;'9'
  2936  0005' 3439               	retlw	57	;'9'
  2937  0006' 3400               	retlw	0
  2938                           
  2939                           	psect	stringtext36
  2940  0000'                    __pstringtext36:	
  2941  0000'                    STR_34:	
  2942  0000' 3434               	retlw	52	;'4'
  2943  0001' 3439               	retlw	57	;'9'
  2944  0002' 3439               	retlw	57	;'9'
  2945  0003' 3439               	retlw	57	;'9'
  2946  0004' 3439               	retlw	57	;'9'
  2947  0005' 3439               	retlw	57	;'9'
  2948  0006' 3400               	retlw	0
  2949                           
  2950                           	psect	stringtext37
  2951  0000'                    __pstringtext37:	
  2952  0000'                    STR_11:	
  2953  0000' 3433               	retlw	51	;'3'
  2954  0001' 3430               	retlw	48	;'0'
  2955  0002' 3430               	retlw	48	;'0'
  2956  0003' 3430               	retlw	48	;'0'
  2957  0004' 3430               	retlw	48	;'0'
  2958  0005' 3400               	retlw	0
  2959                           
  2960                           	psect	stringtext38
  2961  0000'                    __pstringtext38:	
  2962  0000'                    STR_29:	
  2963  0000' 3437               	retlw	55	;'7'
  2964  0001' 3430               	retlw	48	;'0'
  2965  0002' 3435               	retlw	53	;'5'
  2966  0003' 3430               	retlw	48	;'0'
  2967  0004' 3430               	retlw	48	;'0'
  2968  0005' 3400               	retlw	0
  2969                           
  2970                           	psect	stringtext39
  2971  0000'                    __pstringtext39:	
  2972  0000'                    STR_12:	
  2973  0000' 3435               	retlw	53	;'5'
  2974  0001' 3433               	retlw	51	;'3'
  2975  0002' 3435               	retlw	53	;'5'
  2976  0003' 3435               	retlw	53	;'5'
  2977  0004' 3433               	retlw	51	;'3'
  2978  0005' 3400               	retlw	0
  2979                           
  2980                           	psect	stringtext40
  2981  0000'                    __pstringtext40:	
  2982  0000'                    STR_26:	
  2983  0000' 3431               	retlw	49	;'1'
  2984  0001' 3436               	retlw	54	;'6'
  2985  0002' 3431               	retlw	49	;'1'
  2986  0003' 3432               	retlw	50	;'2'
  2987  0004' 3435               	retlw	53	;'5'
  2988  0005' 3400               	retlw	0
  2989                           
  2990                           	psect	stringtext41
  2991  0000'                    __pstringtext41:	
  2992  0000'                    STR_27:	
  2993  0000' 3432               	retlw	50	;'2'
  2994  0001' 3437               	retlw	55	;'7'
  2995  0002' 3432               	retlw	50	;'2'
  2996  0003' 3433               	retlw	51	;'3'
  2997  0004' 3438               	retlw	56	;'8'
  2998  0005' 3400               	retlw	0
  2999                           
  3000                           	psect	stringtext42
  3001  0000'                    __pstringtext42:	
  3002  0000'                    STR_28:	
  3003  0000' 3434               	retlw	52	;'4'
  3004  0001' 3434               	retlw	52	;'4'
  3005  0002' 3434               	retlw	52	;'4'
  3006  0003' 3437               	retlw	55	;'7'
  3007  0004' 3438               	retlw	56	;'8'
  3008  0005' 3400               	retlw	0
  3009                           
  3010                           	psect	stringtext43
  3011  0000'                    __pstringtext43:	
  3012  0000'                    STR_13:	
  3013  0000' 3439               	retlw	57	;'9'
  3014  0001' 3432               	retlw	50	;'2'
  3015  0002' 3430               	retlw	48	;'0'
  3016  0003' 3438               	retlw	56	;'8'
  3017  0004' 3438               	retlw	56	;'8'
  3018  0005' 3400               	retlw	0
  3019                           
  3020                           	psect	stringtext44
  3021  0000'                    __pstringtext44:	
  3022  0000'                    STR_10:	
  3023  0000' 3431               	retlw	49	;'1'
  3024  0001' 3436               	retlw	54	;'6'
  3025  0002' 3430               	retlw	48	;'0'
  3026  0003' 3439               	retlw	57	;'9'
  3027  0004' 3439               	retlw	57	;'9'
  3028  0005' 3400               	retlw	0
  3029                           
  3030                           	psect	stringtext45
  3031  0000'                    __pstringtext45:	
  3032  0000'                    STR_40:	
  3033  0000' 3431               	retlw	49	;'1'
  3034  0001' 342E               	retlw	46	;'.'
  3035  0002' 3430               	retlw	48	;'0'
  3036  0003' 3431               	retlw	49	;'1'
  3037  0004' 3400               	retlw	0
  3038                           
  3039                           	psect	stringtext46
  3040  0000'                    __pstringtext46:	
  3041  0000'                    STR_22:	
  3042  0000' 3431               	retlw	49	;'1'
  3043  0001' 3432               	retlw	50	;'2'
  3044  0002' 3435               	retlw	53	;'5'
  3045  0003' 3430               	retlw	48	;'0'
  3046  0004' 3400               	retlw	0
  3047                           
  3048                           	psect	stringtext47
  3049  0000'                    __pstringtext47:	
  3050  0000'                    STR_23:	
  3051  0000' 3432               	retlw	50	;'2'
  3052  0001' 3435               	retlw	53	;'5'
  3053  0002' 3438               	retlw	56	;'8'
  3054  0003' 3430               	retlw	48	;'0'
  3055  0004' 3400               	retlw	0
  3056                           
  3057                           	psect	stringtext48
  3058  0000'                    __pstringtext48:	
  3059  0000'                    STR_25:	
  3060  0000' 3439               	retlw	57	;'9'
  3061  0001' 3431               	retlw	49	;'1'
  3062  0002' 3438               	retlw	56	;'8'
  3063  0003' 3432               	retlw	50	;'2'
  3064  0004' 3400               	retlw	0
  3065                           
  3066                           	psect	stringtext49
  3067  0000'                    __pstringtext49:	
  3068  0000'                    STR_8:	
  3069  0000' 3433               	retlw	51	;'3'
  3070  0001' 3439               	retlw	57	;'9'
  3071  0002' 3435               	retlw	53	;'5'
  3072  0003' 3437               	retlw	55	;'7'
  3073  0004' 3400               	retlw	0
  3074                           
  3075                           	psect	stringtext50
  3076  0000'                    __pstringtext50:	
  3077  0000'                    STR_7:	
  3078  0000' 3431               	retlw	49	;'1'
  3079  0001' 3437               	retlw	55	;'7'
  3080  0002' 3437               	retlw	55	;'7'
  3081  0003' 3437               	retlw	55	;'7'
  3082  0004' 3400               	retlw	0
  3083                           
  3084                           	psect	stringtext51
  3085  0000'                    __pstringtext51:	
  3086  0000'                    STR_24:	
  3087  0000' 3434               	retlw	52	;'4'
  3088  0001' 3439               	retlw	57	;'9'
  3089  0002' 3439               	retlw	57	;'9'
  3090  0003' 3438               	retlw	56	;'8'
  3091  0004' 3400               	retlw	0
  3092                           
  3093                           	psect	stringtext52
  3094  0000'                    __pstringtext52:	
  3095  0000'                    STR_9:	
  3096  0000' 3438               	retlw	56	;'8'
  3097  0001' 3432               	retlw	50	;'2'
  3098  0002' 3431               	retlw	49	;'1'
  3099  0003' 3439               	retlw	57	;'9'
  3100  0004' 3400               	retlw	0
  3101                           
  3102                           	psect	stringtext53
  3103  0000'                    __pstringtext53:	
  3104  0000'                    STR_59:	
  3105  0000' 340A               	retlw	10
  3106  0001' 3400               	retlw	0
  3107                           
  3108                           	psect	stringtext54
  3109  0000'                    __pstringtext54:	
  3110  0028'                    
  3111                           ; #config settings
  3112  0000                     
  3113                           	psect	cinit
  3114  0000'                    start_initialization:	
  3115  0000'                    __initialization:	
  3116                           
  3117                           ; Initialize objects allocated to BANK2
  3118  0000' 3000'              	movlw	low __pidataBANK2
  3119  0001' 0084               	movwf	4
  3120  0002' 3000'              	movlw	(high __pidataBANK2)| (0+128)
  3121  0003' 0085               	movwf	5
  3122  0004' 3000'              	movlw	low __pdataBANK2
  3123  0005' 0086               	movwf	6
  3124  0006' 3000'              	movlw	high __pdataBANK2
  3125  0007' 0087               	movwf	7
  3126  0008' 303C               	movlw	60
  3127  0009' 3180' 2000' 3180'  	fcall	init_ram
  3128                           
  3129                           ; Clear objects allocated to COMMON
  3130  000C' 0180'              	clrf	__pbssCOMMON& (0+127)
  3131  000D' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  3132  000E' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
  3133  000F' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
  3134  0010' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
  3135                           
  3136                           ; Clear objects allocated to BANK0
  3137  0011' 0180'              	clrf	__pbssBANK0& (0+127)
  3138  0012' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
  3139                           
  3140                           ; Clear objects allocated to BANK1
  3141  0013' 3000'              	movlw	low __pbssBANK1
  3142  0014' 0084               	movwf	4
  3143  0015' 3000'              	movlw	high __pbssBANK1
  3144  0016' 0085               	movwf	5
  3145  0017' 303C               	movlw	60
  3146  0018' 3180' 2000'        	fcall	clear_ram0
  3147  001A'                    end_of_initialization:	
  3148                           ;End of C runtime variable initialization code
  3149                           
  3150  001A'                    __end_of__initialization:	
  3151  001A' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3152  001B' 0020               	movlb	0
  3153  001C' 3180' 2800'        	ljmp	_main	;jump to C main() function
  3154                           
  3155                           	psect	bssCOMMON
  3156  0000'                    __pbssCOMMON:	
  3157  0000'                    _count:	
  3158  0000'                    	ds	2
  3159  0002'                    mTouch_Scan@elements:	
  3160  0002'                    	ds	1
  3161  0003'                    _using_channel:	
  3162  0003'                    	ds	1
  3163  0004'                    _config_ptr:	
  3164  0004'                    	ds	1
  3165                           
  3166                           	psect	bssBANK0
  3167  0000'                    __pbssBANK0:	
  3168  0000'                    main@state_mode:	
  3169  0000'                    	ds	1
  3170  0001'                    _ConfigReg:	
  3171  0001'                    	ds	1
  3172                           
  3173                           	psect	bssBANK1
  3174  0000'                    __pbssBANK1:	
  3175  0000'                    _tcnt:	
  3176  0000'                    	ds	8
  3177  0008'                    _cnts:	
  3178  0008'                    	ds	4
  3179  000C'                    main@cps_config:	
  3180  000C'                    	ds	24
  3181  0024'                    _I2C2_Config:	
  3182  0024'                    	ds	19
  3183  0037'                    main@pmt_config:	
  3184  0037'                    	ds	3
  3185  003A'                    _VoltageReg:	
  3186  003A'                    	ds	2
  3187                           
  3188                           	psect	dataBANK2
  3189  0000'                    __pdataBANK2:	
  3190  0000'                    _H7826_01_Gain:	
  3191  0000'                    	ds	30
  3192  001E'                    _H7826_Gain:	
  3193  001E'                    	ds	30
  3194                           
  3195                           	psect	inittext
  3196  0000'                    init_ram:	
  3197  0000' 00FE               	movwf	126
  3198  0001'                    initloop:	
  3199  0001' 0012               	moviw fsr0++
  3200  0002' 001E               	movwi fsr1++
  3201  0003' 0BFE               	decfsz	126,f
  3202  0004' 2800'              	goto	initloop
  3203  0005' 3400               	retlw	0
  3204                           
  3205                           	psect	clrtext
  3206  0000'                    clear_ram0:	
  3207                           ;	Called with FSR0 containing the base address, and
  3208                           ;	WREG with the size to clear
  3209                           
  3210  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  3211  0001'                    clrloop0:	
  3212  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  3213  0002' 3101               	addfsr 0,1
  3214  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3215  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  3216  0005' 3400               	retlw	0	;all done for this memory range, return
  3217                           
  3218                           	psect	cstackCOMMON
  3219  0000'                    __pcstackCOMMON:	
  3220  0000'                    ?_isdigit:	
  3221  0000'                    ?_I2C2_Init_Port:	
  3222                           ; 1 bit 
  3223                           
  3224  0000'                    ?_eeprom_read:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0000'                    ?_Basic_Init:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230  0000'                    ?_Buzzer_Init_Port:	
  3231                           ; 1 bytes @ 0x0
  3232                           
  3233  0000'                    ?_Timer1_Init:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236  0000'                    ?_Timer1_StopCount:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0000'                    ?_mTouch_Init_Port:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242  0000'                    ?_StartUp_Menu:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245  0000'                    ?_mTouch_Check:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0000'                    ?_LCD1602_DisplayClear:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0000'                    ?_Timer1_StartCount:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0000'                    ?_Timer1_ClearRecord:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0000'                    ?_Timer1_GetMinute:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0000'                    ?_Timer1_GetSecond:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0000'                    ?_Ssetting_PMT_Config:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0000'                    ?_Show_PMT_Config:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0000'                    ?_Timer1_DetectAssignCount:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0000'                    ??_Timer1_DetectAssignCount:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0000'                    ?_Timer6_CheckFlag:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0000'                    ??_Timer6_CheckFlag:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0000'                    ?_mTouch_Count1ms:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0000'                    ??_mTouch_Count1ms:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0000'                    ?_Timer1_Count1ms:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0000'                    ?_mTouch_Scan:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0000'                    ??_mTouch_Scan:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0000'                    ?_I2C_Interrupt:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0000'                    ?_LCD1602_CursorHome:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0000'                    ?_I2C2_Interrupt:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0000'                    ??_I2C2_Interrupt:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0000'                    ?_Buzzer_SetDuty:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0000'                    ?_Buzzer_Sound_ms:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0000'                    ?_Buzzer_Count1ms:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0000'                    ?_DAC_Initialize:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0000'                    ?_main:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0000'                    ?_Handler:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0000'                    ?_Save_PMTConfig:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0000'                    ?_Load_PMTConfing:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0000'                    ?_LCD1602_WriteData:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0000'                    ?_putch:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0000'                    Buzzer_SetDuty@duty:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0000'                    Buzzer_Sound_ms@time:	
  3342                           ; 2 bytes @ 0x0
  3343                           
  3344                           
  3345                           ; 2 bytes @ 0x0
  3346  0000'                    	ds	1
  3347  0001'                    ??_I2C_Interrupt:	
  3348                           
  3349                           ; 1 bytes @ 0x1
  3350  0001'                    	ds	1
  3351  0002'                    ??_Timer1_Count1ms:	
  3352  0002'                    ??_Buzzer_SetDuty:	
  3353                           ; 1 bytes @ 0x2
  3354                           
  3355  0002'                    ??_Buzzer_Sound_ms:	
  3356                           ; 1 bytes @ 0x2
  3357                           
  3358  0002'                    mTouch_Count1ms@elements:	
  3359                           ; 1 bytes @ 0x2
  3360                           
  3361                           
  3362                           ; 1 bytes @ 0x2
  3363  0002'                    	ds	2
  3364  0004'                    Buzzer_SetDuty@CCP2CON_Pre:	
  3365                           
  3366                           ; 1 bytes @ 0x4
  3367  0004'                    	ds	1
  3368  0005'                    ??_Buzzer_Count1ms:	
  3369  0005'                    ??_Handler:	
  3370                           ; 1 bytes @ 0x5
  3371                           
  3372                           
  3373                           ; 1 bytes @ 0x5
  3374  0005'                    	ds	1
  3375                           
  3376                           	psect	cstackBANK0
  3377  0000'                    __pcstackBANK0:	
  3378  0000'                    ??_I2C2_Init_Port:	
  3379  0000'                    ?_eeprom_write:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0000'                    ??_eeprom_read:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0000'                    ??_Basic_Init:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0000'                    ??_Buzzer_Init_Port:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0000'                    ??_Timer1_Init:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0000'                    ??_Timer1_StopCount:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0000'                    ??_mTouch_Init_Port:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0000'                    ?_Timer6_Init:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0000'                    ??_mTouch_Check:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0000'                    ??_Timer1_StartCount:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0000'                    ??_Timer1_ClearRecord:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0000'                    ??_Timer1_GetMinute:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0000'                    ??_Timer1_GetSecond:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0000'                    ?_I2C2_Transmit:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0000'                    ??_isdigit:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0000'                    ??_LCD1602_WriteData:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0000'                    ?___wmul:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0000'                    ?_Timer1_GetCountSum:	
  3431                           ; 2 bytes @ 0x0
  3432                           
  3433  0000'                    ?___lmul:	
  3434                           ; 4 bytes @ 0x0
  3435                           
  3436  0000'                    Timer6_Init@period:	
  3437                           ; 4 bytes @ 0x0
  3438                           
  3439  0000'                    I2C2_Transmit@pData:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0000'                    eeprom_write@value:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0000'                    _isdigit$1034:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0000'                    ___wmul@multiplier:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0000'                    ___lmul@multiplier:	
  3452                           ; 2 bytes @ 0x0
  3453                           
  3454                           
  3455                           ; 4 bytes @ 0x0
  3456  0000'                    	ds	1
  3457  0001'                    ?_I2C2_Init:	
  3458  0001'                    ??_eeprom_write:	
  3459                           ; 1 bytes @ 0x1
  3460                           
  3461  0001'                    ?_mTouch_Init:	
  3462                           ; 1 bytes @ 0x1
  3463                           
  3464  0001'                    ??_Timer6_Init:	
  3465                           ; 1 bytes @ 0x1
  3466                           
  3467  0001'                    ?_Buzzer_Init:	
  3468                           ; 1 bytes @ 0x1
  3469                           
  3470  0001'                    I2C2_Transmit@size:	
  3471                           ; 1 bytes @ 0x1
  3472                           
  3473  0001'                    isdigit@c:	
  3474                           ; 1 bytes @ 0x1
  3475                           
  3476  0001'                    Buzzer_Init@Buzzer_Init_PORT:	
  3477                           ; 1 bytes @ 0x1
  3478                           
  3479  0001'                    I2C2_Init@I2C2_Init_PORT:	
  3480                           ; 2 bytes @ 0x1
  3481                           
  3482  0001'                    mTouch_Init@mTouch_PortInit:	
  3483                           ; 2 bytes @ 0x1
  3484                           
  3485                           
  3486                           ; 2 bytes @ 0x1
  3487  0001'                    	ds	1
  3488  0002'                    ??_I2C2_Transmit:	
  3489  0002'                    Timer6_Init@pre_val:	
  3490                           ; 1 bytes @ 0x2
  3491                           
  3492  0002'                    LCD1602_WriteData@point:	
  3493                           ; 1 bytes @ 0x2
  3494                           
  3495  0002'                    ___wmul@multiplicand:	
  3496                           ; 1 bytes @ 0x2
  3497                           
  3498                           
  3499                           ; 2 bytes @ 0x2
  3500  0002'                    	ds	1
  3501  0003'                    ??_LCD1602_DisplayClear:	
  3502  0003'                    ?_LCD1602_CursorPosition:	
  3503                           ; 1 bytes @ 0x3
  3504                           
  3505  0003'                    ??_LCD1602_CursorHome:	
  3506                           ; 1 bytes @ 0x3
  3507                           
  3508  0003'                    ??_putch:	
  3509                           ; 1 bytes @ 0x3
  3510                           
  3511  0003'                    Buzzer_Init@pre_val:	
  3512                           ; 1 bytes @ 0x3
  3513                           
  3514  0003'                    I2C2_Init@address:	
  3515                           ; 1 bytes @ 0x3
  3516                           
  3517  0003'                    putch@c:	
  3518                           ; 1 bytes @ 0x3
  3519                           
  3520  0003'                    LCD1602_CursorPosition@ty:	
  3521                           ; 1 bytes @ 0x3
  3522                           
  3523  0003'                    mTouch_Init@cps_config:	
  3524                           ; 1 bytes @ 0x3
  3525                           
  3526  0003'                    eeprom_read@addr:	
  3527                           ; 1 bytes @ 0x3
  3528                           
  3529  0003'                    eeprom_write@addr:	
  3530                           ; 1 bytes @ 0x3
  3531                           
  3532                           
  3533                           ; 1 bytes @ 0x3
  3534  0003'                    	ds	1
  3535  0004'                    ?_LCD1602_Init:	
  3536  0004'                    ??_LCD1602_CursorPosition:	
  3537                           ; 1 bytes @ 0x4
  3538                           
  3539  0004'                    ??_Timer1_GetCountSum:	
  3540                           ; 1 bytes @ 0x4
  3541                           
  3542  0004'                    ?_EEPROM_MultiWrite:	
  3543                           ; 1 bytes @ 0x4
  3544                           
  3545  0004'                    ?_EEPROM_MultiRead:	
  3546                           ; 1 bytes @ 0x4
  3547                           
  3548  0004'                    ??___wmul:	
  3549                           ; 1 bytes @ 0x4
  3550                           
  3551  0004'                    Buzzer_Init@period:	
  3552                           ; 1 bytes @ 0x4
  3553                           
  3554  0004'                    EEPROM_MultiWrite@size:	
  3555                           ; 1 bytes @ 0x4
  3556                           
  3557  0004'                    EEPROM_MultiRead@size:	
  3558                           ; 1 bytes @ 0x4
  3559                           
  3560  0004'                    I2C2_Init@mode:	
  3561                           ; 1 bytes @ 0x4
  3562                           
  3563  0004'                    I2C2_Transmit@address:	
  3564                           ; 1 bytes @ 0x4
  3565                           
  3566  0004'                    mTouch_Init@num_of_channel:	
  3567                           ; 1 bytes @ 0x4
  3568                           
  3569  0004'                    LCD1602_Init@LCD1602_Init_PORT:	
  3570                           ; 1 bytes @ 0x4
  3571                           
  3572  0004'                    ___wmul@product:	
  3573                           ; 2 bytes @ 0x4
  3574                           
  3575  0004'                    ___lmul@multiplicand:	
  3576                           ; 2 bytes @ 0x4
  3577                           
  3578                           
  3579                           ; 4 bytes @ 0x4
  3580  0004'                    	ds	1
  3581  0005'                    ??_mTouch_Init:	
  3582  0005'                    ??_Buzzer_Init:	
  3583                           ; 1 bytes @ 0x5
  3584                           
  3585  0005'                    EEPROM_MultiWrite@addr:	
  3586                           ; 1 bytes @ 0x5
  3587                           
  3588  0005'                    EEPROM_MultiRead@addr:	
  3589                           ; 1 bytes @ 0x5
  3590                           
  3591  0005'                    I2C2_Init@Speed:	
  3592                           ; 1 bytes @ 0x5
  3593                           
  3594  0005'                    I2C2_Transmit@i:	
  3595                           ; 1 bytes @ 0x5
  3596                           
  3597  0005'                    LCD1602_CursorPosition@tx:	
  3598                           ; 1 bytes @ 0x5
  3599                           
  3600                           
  3601                           ; 1 bytes @ 0x5
  3602  0005'                    	ds	1
  3603  0006'                    ??_I2C2_Init:	
  3604  0006'                    ??_LCD1602_Init:	
  3605                           ; 1 bytes @ 0x6
  3606                           
  3607  0006'                    ??_EEPROM_MultiWrite:	
  3608                           ; 1 bytes @ 0x6
  3609                           
  3610  0006'                    ??_EEPROM_MultiRead:	
  3611                           ; 1 bytes @ 0x6
  3612                           
  3613  0006'                    I2C2_Transmit@i_681:	
  3614                           ; 1 bytes @ 0x6
  3615                           
  3616  0006'                    mTouch_Check@DifferValue:	
  3617                           ; 1 bytes @ 0x6
  3618                           
  3619                           
  3620                           ; 2 bytes @ 0x6
  3621  0006'                    	ds	1
  3622  0007'                    I2C2_Transmit@result:	
  3623                           
  3624                           ; 1 bytes @ 0x7
  3625  0007'                    	ds	1
  3626  0008'                    ?_I2C_Transmit:	
  3627  0008'                    ??___lmul:	
  3628                           ; 1 bytes @ 0x8
  3629                           
  3630  0008'                    I2C_Transmit@address:	
  3631                           ; 1 bytes @ 0x8
  3632                           
  3633  0008'                    mTouch_Check@elements:	
  3634                           ; 1 bytes @ 0x8
  3635                           
  3636  0008'                    ___lmul@product:	
  3637                           ; 1 bytes @ 0x8
  3638                           
  3639                           
  3640                           ; 4 bytes @ 0x8
  3641  0008'                    	ds	1
  3642  0009'                    EEPROM_MultiWrite@pData:	
  3643  0009'                    EEPROM_MultiRead@pData:	
  3644                           ; 1 bytes @ 0x9
  3645                           
  3646  0009'                    I2C_Transmit@pData:	
  3647                           ; 1 bytes @ 0x9
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x9
  3651  0009'                    	ds	1
  3652  000A'                    EEPROM_MultiWrite@i:	
  3653  000A'                    EEPROM_MultiRead@i:	
  3654                           ; 1 bytes @ 0xA
  3655                           
  3656  000A'                    I2C_Transmit@size:	
  3657                           ; 1 bytes @ 0xA
  3658                           
  3659                           
  3660                           ; 1 bytes @ 0xA
  3661  000A'                    	ds	1
  3662  000B'                    ??_I2C_Transmit:	
  3663  000B'                    ??_Save_PMTConfig:	
  3664                           ; 1 bytes @ 0xB
  3665                           
  3666  000B'                    ??_Load_PMTConfing:	
  3667                           ; 1 bytes @ 0xB
  3668                           
  3669                           
  3670                           ; 1 bytes @ 0xB
  3671  000B'                    	ds	1
  3672  000C'                    ?___lldiv:	
  3673  000C'                    Save_PMTConfig@data:	
  3674                           ; 4 bytes @ 0xC
  3675                           
  3676  000C'                    Load_PMTConfing@data:	
  3677                           ; 1 bytes @ 0xC
  3678                           
  3679  000C'                    ___lldiv@divisor:	
  3680                           ; 1 bytes @ 0xC
  3681                           
  3682                           
  3683                           ; 4 bytes @ 0xC
  3684  000C'                    	ds	2
  3685  000E'                    I2C_Transmit@I2Cx:	
  3686                           
  3687                           ; 1 bytes @ 0xE
  3688  000E'                    	ds	1
  3689  000F'                    I2C_Transmit@result:	
  3690                           
  3691                           ; 1 bytes @ 0xF
  3692  000F'                    	ds	1
  3693  0010'                    ??_DAC_Initialize:	
  3694  0010'                    ?_DAC_WriteVoltage:	
  3695                           ; 1 bytes @ 0x10
  3696                           
  3697  0010'                    DAC_WriteVoltage@volue:	
  3698                           ; 1 bytes @ 0x10
  3699                           
  3700  0010'                    ___lldiv@dividend:	
  3701                           ; 2 bytes @ 0x10
  3702                           
  3703                           
  3704                           ; 4 bytes @ 0x10
  3705  0010'                    	ds	2
  3706  0012'                    ??_DAC_WriteVoltage:	
  3707                           
  3708                           ; 1 bytes @ 0x12
  3709  0012'                    	ds	2
  3710  0014'                    ??___lldiv:	
  3711                           
  3712                           ; 1 bytes @ 0x14
  3713  0014'                    	ds	1
  3714  0015'                    ___lldiv@quotient:	
  3715                           
  3716                           ; 4 bytes @ 0x15
  3717  0015'                    	ds	4
  3718  0019'                    ___lldiv@counter:	
  3719                           
  3720                           ; 1 bytes @ 0x19
  3721  0019'                    	ds	1
  3722  001A'                    ?_Timer1_GetCPS:	
  3723  001A'                    ?___llmod:	
  3724                           ; 4 bytes @ 0x1A
  3725                           
  3726  001A'                    ___llmod@divisor:	
  3727                           ; 4 bytes @ 0x1A
  3728                           
  3729                           
  3730                           ; 4 bytes @ 0x1A
  3731  001A'                    	ds	4
  3732  001E'                    ??_Timer1_GetCPS:	
  3733  001E'                    ?_Timer1_GetCPM:	
  3734                           ; 1 bytes @ 0x1E
  3735                           
  3736  001E'                    ___llmod@dividend:	
  3737                           ; 4 bytes @ 0x1E
  3738                           
  3739                           
  3740                           ; 4 bytes @ 0x1E
  3741  001E'                    	ds	4
  3742  0022'                    ??_Timer1_GetCPM:	
  3743  0022'                    ??___llmod:	
  3744                           ; 1 bytes @ 0x22
  3745                           
  3746  0022'                    _Timer1_GetCPM$1277:	
  3747                           ; 1 bytes @ 0x22
  3748                           
  3749                           
  3750                           ; 4 bytes @ 0x22
  3751  0022'                    	ds	1
  3752  0023'                    ___llmod@counter:	
  3753                           
  3754                           ; 1 bytes @ 0x23
  3755  0023'                    	ds	3
  3756  0026'                    ?_printf:	
  3757  0026'                    printf@f:	
  3758                           ; 2 bytes @ 0x26
  3759                           
  3760                           
  3761                           ; 2 bytes @ 0x26
  3762  0026'                    	ds	10
  3763  0030'                    ??_printf:	
  3764                           
  3765                           ; 1 bytes @ 0x30
  3766  0030'                    	ds	6
  3767  0036'                    printf@prec:	
  3768                           
  3769                           ; 2 bytes @ 0x36
  3770  0036'                    	ds	2
  3771  0038'                    printf@cp:	
  3772                           
  3773                           ; 2 bytes @ 0x38
  3774  0038'                    	ds	2
  3775  003A'                    printf@len:	
  3776                           
  3777                           ; 2 bytes @ 0x3A
  3778  003A'                    	ds	2
  3779  003C'                    printf@val:	
  3780                           
  3781                           ; 4 bytes @ 0x3C
  3782  003C'                    	ds	4
  3783  0040'                    printf@ap:	
  3784                           
  3785                           ; 1 bytes @ 0x40
  3786  0040'                    	ds	1
  3787  0041'                    printf@flag:	
  3788                           
  3789                           ; 1 bytes @ 0x41
  3790  0041'                    	ds	1
  3791  0042'                    printf@c:	
  3792                           
  3793                           ; 1 bytes @ 0x42
  3794  0042'                    	ds	1
  3795  0043'                    printf@width:	
  3796                           
  3797                           ; 2 bytes @ 0x43
  3798  0043'                    	ds	2
  3799  0045'                    ??_StartUp_Menu:	
  3800  0045'                    ??_Ssetting_PMT_Config:	
  3801                           ; 1 bytes @ 0x45
  3802                           
  3803  0045'                    ??_Show_PMT_Config:	
  3804                           ; 1 bytes @ 0x45
  3805                           
  3806                           
  3807                           ; 1 bytes @ 0x45
  3808  0045'                    	ds	2
  3809  0047'                    StartUp_Menu@data:	
  3810  0047'                    Ssetting_PMT_Config@data:	
  3811                           ; 1 bytes @ 0x47
  3812                           
  3813  0047'                    Show_PMT_Config@data:	
  3814                           ; 1 bytes @ 0x47
  3815                           
  3816                           
  3817                           ; 1 bytes @ 0x47
  3818  0047'                    	ds	1
  3819  0048'                    ??_main:	
  3820                           
  3821                           ; 1 bytes @ 0x48
  3822  0048'                    	ds	4
  3823                           
  3824                           	psect	maintext
  3825  0000'                    __pmaintext:	
  3826 ;;
  3827 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3828 ;;
  3829 ;; *************** function _main *****************
  3830 ;; Defined at:
  3831 ;;		line 26 in file "main.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      char 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : B1F/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3845 ;;      Params:         0       0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0
  3847 ;;      Temps:          0       4       0       0       0       0
  3848 ;;      Totals:         0       4       0       0       0       0
  3849 ;;Total ram usage:        4 bytes
  3850 ;; Hardware stack levels required when called:    7
  3851 ;; This function calls:
  3852 ;;		_Basic_Init
  3853 ;;		_Buzzer_Init
  3854 ;;		_DAC_Initialize
  3855 ;;		_LCD1602_CursorPosition
  3856 ;;		_LCD1602_DisplayClear
  3857 ;;		_LCD1602_Init
  3858 ;;		_Show_PMT_Config
  3859 ;;		_Ssetting_PMT_Config
  3860 ;;		_StartUp_Menu
  3861 ;;		_Timer1_ClearRecord
  3862 ;;		_Timer1_GetCPM
  3863 ;;		_Timer1_GetCPS
  3864 ;;		_Timer1_GetCountSum
  3865 ;;		_Timer1_GetMinute
  3866 ;;		_Timer1_GetSecond
  3867 ;;		_Timer1_Init
  3868 ;;		_Timer1_StartCount
  3869 ;;		_Timer1_StopCount
  3870 ;;		_Timer6_Init
  3871 ;;		_mTouch_Check
  3872 ;;		_mTouch_Init
  3873 ;;		_printf
  3874 ;; This function is called by:
  3875 ;;		Startup code after reset
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _main
  3881  0000'                    _main:	
  3882                           
  3883                           ;main.c: 28: static STATE_OF_MODE state_mode = STOPPING;
  3884                           ;main.c: 29: static PMT_CONFIGURATION pmt_config;
  3885                           ;main.c: 31: Basic_Init();
  3886                           
  3887                           ;incstack = 0
  3888                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3889  0000' 3180' 2000' 3180'  	fcall	_Basic_Init
  3890                           
  3891                           ;main.c: 33: LATA6 = 1;
  3892  0003' 0022               	movlb	2	; select bank2
  3893  0004' 170C               	bsf	12,6	;volatile
  3894                           
  3895                           ;main.c: 35: Buzzer_Init(Buzzer_Init_Port,TMR2_PRESCALER16,0xFF);
  3896  0005' 3000'              	movlw	low _Buzzer_Init_Port
  3897  0006' 0020               	movlb	0	; select bank0
  3898  0007' 0081'              	movwf	Buzzer_Init@Buzzer_Init_PORT
  3899  0008' 3000'              	movlw	high _Buzzer_Init_Port
  3900  0009' 0082'              	movwf	Buzzer_Init@Buzzer_Init_PORT+1
  3901  000A' 3002               	movlw	2
  3902  000B' 00C8'              	movwf	??_main
  3903  000C' 0848'              	movf	??_main,w
  3904  000D' 0083'              	movwf	Buzzer_Init@pre_val
  3905  000E' 30FF               	movlw	255
  3906  000F' 00C9'              	movwf	??_main+1
  3907  0010' 0849'              	movf	??_main+1,w
  3908  0011' 0084'              	movwf	Buzzer_Init@period
  3909  0012' 3180' 2000' 3180'  	fcall	_Buzzer_Init
  3910                           
  3911                           ;main.c: 37: LCD1602_Init((0));
  3912  0015' 3000               	movlw	0
  3913  0016' 0020               	movlb	0	; select bank0
  3914  0017' 0084'              	movwf	LCD1602_Init@LCD1602_Init_PORT
  3915  0018' 0085'              	movwf	LCD1602_Init@LCD1602_Init_PORT+1
  3916  0019' 3180' 2000' 3180'  	fcall	_LCD1602_Init
  3917                           
  3918                           ;main.c: 39: Timer1_Init();
  3919  001C' 3180' 2000' 3180'  	fcall	_Timer1_Init
  3920                           
  3921                           ;main.c: 40: Timer1_StopCount();
  3922  001F' 3180' 2000' 3180'  	fcall	_Timer1_StopCount
  3923                           
  3924                           ;main.c: 42: static CPS_CHANNELCONFIG cps_config[3];
  3925                           ;main.c: 43: cps_config[0].CPS_Channel = 0x00;
  3926  0022' 0021               	movlb	1	; select bank1
  3927  0023' 0180'              	clrf	main@cps_config^(0+128)
  3928                           
  3929                           ;main.c: 44: cps_config[0].Threshould_Diff = 100;
  3930  0024' 3064               	movlw	100
  3931  0025' 0081'              	movwf	(main@cps_config^(0+128)+1)
  3932  0026' 3000               	movlw	0
  3933  0027' 0082'              	movwf	(main@cps_config^(0+128)+2)
  3934                           
  3935                           ;main.c: 45: cps_config[1].CPS_Channel = 0x01;
  3936  0028' 0188'              	clrf	(main@cps_config^(0+128)+8)
  3937  0029' 0A88'              	incf	(main@cps_config^(0+128)+8),f
  3938                           
  3939                           ;main.c: 46: cps_config[1].Threshould_Diff = 100;
  3940  002A' 3064               	movlw	100
  3941  002B' 0089'              	movwf	(main@cps_config^(0+128)+9)
  3942  002C' 3000               	movlw	0
  3943  002D' 008A'              	movwf	(main@cps_config^(0+128)+10)
  3944                           
  3945                           ;main.c: 47: cps_config[2].CPS_Channel = 0x02;
  3946  002E' 3002               	movlw	2
  3947  002F' 0020               	movlb	0	; select bank0
  3948  0030' 00C8'              	movwf	??_main
  3949  0031' 0848'              	movf	??_main,w
  3950  0032' 0021               	movlb	1	; select bank1
  3951  0033' 0090'              	movwf	(main@cps_config^(0+128)+16)
  3952                           
  3953                           ;main.c: 48: cps_config[2].Threshould_Diff = 100;
  3954  0034' 3064               	movlw	100
  3955  0035' 0091'              	movwf	(main@cps_config^(0+128)+17)
  3956  0036' 3000               	movlw	0
  3957  0037' 0092'              	movwf	(main@cps_config^(0+128)+18)
  3958                           
  3959                           ;main.c: 49: mTouch_Init(mTouch_Init_Port,cps_config,3);
  3960  0038' 3000'              	movlw	low _mTouch_Init_Port
  3961  0039' 0020               	movlb	0	; select bank0
  3962  003A' 0081'              	movwf	mTouch_Init@mTouch_PortInit
  3963  003B' 3000'              	movlw	high _mTouch_Init_Port
  3964  003C' 0082'              	movwf	mTouch_Init@mTouch_PortInit+1
  3965  003D' 3000'              	movlw	(low (main@cps_config| 0))& (0+255)
  3966  003E' 00C8'              	movwf	??_main
  3967  003F' 0848'              	movf	??_main,w
  3968  0040' 0083'              	movwf	mTouch_Init@cps_config
  3969  0041' 3003               	movlw	3
  3970  0042' 00C9'              	movwf	??_main+1
  3971  0043' 0849'              	movf	??_main+1,w
  3972  0044' 0084'              	movwf	mTouch_Init@num_of_channel
  3973  0045' 3180' 2000' 3180'  	fcall	_mTouch_Init
  3974                           
  3975                           ;main.c: 51: Timer6_Init(TMR6_PRESCALER64,0x7D);
  3976  0048' 307D               	movlw	125
  3977  0049' 0020               	movlb	0	; select bank0
  3978  004A' 00C8'              	movwf	??_main
  3979  004B' 0848'              	movf	??_main,w
  3980  004C' 0080'              	movwf	Timer6_Init@period
  3981  004D' 3003               	movlw	3
  3982  004E' 3180' 2000' 3180'  	fcall	_Timer6_Init
  3983                           
  3984                           ;main.c: 53: DAC_Initialize();
  3985  0051' 3180' 2000' 3180'  	fcall	_DAC_Initialize
  3986                           
  3987                           ;main.c: 55: StartUp_Menu(&pmt_config);
  3988  0054' 3000'              	movlw	(low (main@pmt_config| 0))& (0+255)
  3989  0055' 3180' 2000' 3180'  	fcall	_StartUp_Menu
  3990                           
  3991                           ;main.c: 58: {
  3992                           ;main.c: 59: switch(state_mode)
  3993                           
  3994                           ;main.c: 57: while(1)
  3995  0058' 2800'              	goto	l4412
  3996  0059'                    l4368:	
  3997                           ;main.c: 60: {
  3998                           ;main.c: 61: case COUNTING:
  3999                           
  4000                           
  4001                           ;main.c: 62: if(mTouch_Check(0x02))
  4002  0059' 3002               	movlw	2
  4003  005A' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4004  005D' 3A00               	xorlw	0
  4005  005E' 1903               	skipnz
  4006  005F' 2800'              	goto	l4442
  4007                           
  4008                           ;main.c: 63: {
  4009                           ;main.c: 64: Timer1_StopCount();
  4010  0060' 3180' 2000' 3180'  	fcall	_Timer1_StopCount
  4011  0063' 2800'              	goto	l4400
  4012  0064'                    l4376:	
  4013                           ;main.c: 70: case STOPPING:
  4014                           
  4015                           ;main.c: 67: }
  4016                           ;main.c: 68: break;
  4017                           
  4018                           ;main.c: 66: state_mode = STOPPING;
  4019                           
  4020                           ;main.c: 65: LCD1602_DisplayClear();
  4021                           
  4022                           
  4023                           ;main.c: 71: if(mTouch_Check(0x00))
  4024  0064' 3000               	movlw	0
  4025  0065' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4026  0068' 3A00               	xorlw	0
  4027  0069' 1903               	skipnz
  4028  006A' 2800'              	goto	l4382
  4029                           
  4030                           ;main.c: 72: {
  4031                           ;main.c: 73: Timer1_StartCount();
  4032  006B' 3180' 2000' 3180'  	fcall	_Timer1_StartCount
  4033                           
  4034                           ;main.c: 74: LCD1602_DisplayClear();
  4035  006E' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  4036                           
  4037                           ;main.c: 75: state_mode = COUNTING;
  4038  0071' 0020               	movlb	0	; select bank0
  4039  0072' 0180'              	clrf	main@state_mode
  4040  0073' 0A80'              	incf	main@state_mode,f
  4041                           
  4042                           ;main.c: 76: }
  4043  0074' 2800'              	goto	l4442
  4044  0075'                    l4382:	
  4045                           
  4046                           ;main.c: 77: else if(mTouch_Check(0x01))
  4047  0075' 3001               	movlw	1
  4048  0076' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4049  0079' 3A00               	xorlw	0
  4050  007A' 1903               	skipnz
  4051  007B' 2800'              	goto	l4386
  4052                           
  4053                           ;main.c: 78: {
  4054                           ;main.c: 79: Timer1_ClearRecord();
  4055  007C' 3180' 2000' 3180'  	fcall	_Timer1_ClearRecord
  4056                           
  4057                           ;main.c: 80: }
  4058  007F' 2800'              	goto	l4442
  4059  0080'                    l4386:	
  4060                           
  4061                           ;main.c: 81: else if(mTouch_Check(0x02))
  4062  0080' 3002               	movlw	2
  4063  0081' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4064  0084' 3A00               	xorlw	0
  4065  0085' 1903               	skipnz
  4066  0086' 2800'              	goto	l4442
  4067                           
  4068                           ;main.c: 82: {
  4069                           ;main.c: 83: Timer1_StopCount();
  4070  0087' 3180' 2000' 3180'  	fcall	_Timer1_StopCount
  4071                           
  4072                           ;main.c: 84: LCD1602_DisplayClear();
  4073  008A' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  4074                           
  4075                           ;main.c: 85: state_mode = RESULT;
  4076  008D' 3002               	movlw	2
  4077  008E' 2800'              	goto	L2
  4078  008F'                    l4392:	
  4079                           ;main.c: 89: case RESULT:
  4080                           
  4081                           ;main.c: 86: }
  4082                           ;main.c: 87: break;
  4083                           
  4084                           
  4085                           ;main.c: 90: if(mTouch_Check(0x00))
  4086  008F' 3000               	movlw	0
  4087  0090' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4088  0093' 3A00               	xorlw	0
  4089  0094' 1903               	skipnz
  4090  0095' 2800'              	goto	l4398
  4091                           
  4092                           ;main.c: 91: {
  4093                           ;main.c: 92: LCD1602_DisplayClear();
  4094  0096' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  4095                           
  4096                           ;main.c: 93: state_mode = SETTING;
  4097  0099' 3003               	movlw	3
  4098  009A' 2800'              	goto	L2
  4099  009B'                    l4398:	
  4100                           ;main.c: 94: }
  4101                           
  4102                           
  4103                           ;main.c: 95: else if(mTouch_Check(0x02))
  4104  009B' 3002               	movlw	2
  4105  009C' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4106  009F' 3A00               	xorlw	0
  4107  00A0' 1903               	skipnz
  4108  00A1' 2800'              	goto	l4404
  4109  00A2'                    l4400:	
  4110                           
  4111                           ;main.c: 96: {
  4112                           ;main.c: 97: LCD1602_DisplayClear();
  4113  00A2' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  4114                           
  4115                           ;main.c: 98: state_mode = STOPPING;
  4116  00A5' 0020               	movlb	0	; select bank0
  4117  00A6' 0180'              	clrf	main@state_mode
  4118                           
  4119                           ;main.c: 99: }
  4120  00A7' 2800'              	goto	l4442
  4121  00A8'                    l4404:	
  4122                           
  4123                           ;main.c: 100: else if(mTouch_Check(0x01))
  4124  00A8' 3001               	movlw	1
  4125  00A9' 3180' 2000' 3180'  	fcall	_mTouch_Check
  4126  00AC' 3A00               	xorlw	0
  4127  00AD' 1903               	skipnz
  4128  00AE' 2800'              	goto	l4442
  4129                           
  4130                           ;main.c: 101: {
  4131                           ;main.c: 102: LCD1602_DisplayClear();
  4132  00AF' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  4133                           
  4134                           ;main.c: 103: state_mode = SHOW_CONFIG;
  4135  00B2' 3004               	movlw	4
  4136  00B3'                    L2:	
  4137  00B3' 0020               	movlb	0	; select bank0
  4138  00B4' 00C8'              	movwf	??_main
  4139  00B5' 0848'              	movf	??_main,w
  4140  00B6' 0080'              	movwf	main@state_mode
  4141  00B7'                    l4442:	
  4142                           ;main.c: 109: }
  4143                           
  4144                           ;main.c: 108: break;
  4145                           
  4146                           ;main.c: 107: default:
  4147                           
  4148                           ;main.c: 104: }
  4149                           ;main.c: 105: break;
  4150                           
  4151  00B7' 0020               	movlb	0	; select bank0
  4152  00B8' 0800'              	movf	main@state_mode,w
  4153                           
  4154                           ; Switch size 1, requested type "space"
  4155                           ; Number of cases is 5, Range of values is 0 to 4
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; direct_byte           16     6 (fixed)
  4159                           ; simple_byte           16     9 (average)
  4160                           ; jumptable            260     6 (fixed)
  4161                           ;	Chosen strategy is direct_byte
  4162  00B9' 0084               	movwf	4
  4163  00BA' 3005               	movlw	5
  4164  00BB' 0204               	subwf	4,w
  4165  00BC' 1803               	skipnc
  4166  00BD' 2800'              	goto	l4412
  4167  00BE' 3180'              	movlp	high S4504
  4168  00BF' 3504               	lslf	4,w
  4169  00C0' 3E00'              	addlw	low S4504
  4170  00C1' 0082               	movwf	2
  4171  00C2'                    l4412:	
  4172  00C2' 0020               	movlb	0	; select bank0
  4173  00C3' 0800'              	movf	main@state_mode,w
  4174                           
  4175                           ; Switch size 1, requested type "space"
  4176                           ; Number of cases is 3, Range of values is 0 to 2
  4177                           ; switch strategies available:
  4178                           ; Name         Instructions Cycles
  4179                           ; simple_byte           10     6 (average)
  4180                           ; direct_byte           12     6 (fixed)
  4181                           ; jumptable            260     6 (fixed)
  4182                           ;	Chosen strategy is simple_byte
  4183  00C4' 3A00               	xorlw	0	; case 0
  4184  00C5' 1903               	skipnz
  4185  00C6' 2800'              	goto	l4376
  4186  00C7' 3A01               	xorlw	1	; case 1
  4187  00C8' 1903               	skipnz
  4188  00C9' 2800'              	goto	l4368
  4189  00CA' 3A03               	xorlw	3	; case 2
  4190  00CB' 1903               	skipnz
  4191  00CC' 2800'              	goto	l4392
  4192  00CD' 2800'              	goto	l4442
  4193                           
  4194                           ;main.c: 111: switch(state_mode)
  4195  00CE' 2800'              	goto	l4442
  4196  00CF'                    l4414:	
  4197                           ;main.c: 112: {
  4198                           ;main.c: 113: case COUNTING:
  4199                           
  4200                           
  4201                           ;main.c: 114: LCD1602_CursorPosition(0,0);
  4202  00CF' 0183'              	clrf	LCD1602_CursorPosition@ty
  4203  00D0' 3000               	movlw	0
  4204  00D1' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4205                           
  4206                           ;main.c: 115: printf("  Countting...  ");
  4207  00D4' 3000'              	movlw	low (STR_1| (0+32768))
  4208  00D5' 0020               	movlb	0	; select bank0
  4209  00D6' 00A6'              	movwf	printf@f
  4210  00D7' 3000'              	movlw	high (STR_1| (0+32768))
  4211  00D8' 00A7'              	movwf	printf@f+1
  4212  00D9' 3180' 2000' 3180'  	fcall	_printf
  4213                           
  4214                           ;main.c: 116: LCD1602_CursorPosition(0,1);
  4215  00DC' 0020               	movlb	0	; select bank0
  4216  00DD' 0183'              	clrf	LCD1602_CursorPosition@ty
  4217  00DE' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  4218  00DF' 3000               	movlw	0
  4219  00E0' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4220                           
  4221                           ;main.c: 117: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  4222  00E3' 3000'              	movlw	low (STR_2| (0+32768))
  4223  00E4' 0020               	movlb	0	; select bank0
  4224  00E5' 00A6'              	movwf	printf@f
  4225  00E6' 3000'              	movlw	high (STR_2| (0+32768))
  4226  00E7' 00A7'              	movwf	printf@f+1
  4227  00E8' 3180' 2000' 3180'  	fcall	_Timer1_GetCountSum
  4228  00EB' 0020               	movlb	0	; select bank0
  4229  00EC' 0803'              	movf	?_Timer1_GetCountSum+3,w
  4230  00ED' 00AB'              	movwf	?_printf+5
  4231  00EE' 0802'              	movf	?_Timer1_GetCountSum+2,w
  4232  00EF' 00AA'              	movwf	?_printf+4
  4233  00F0' 0801'              	movf	?_Timer1_GetCountSum+1,w
  4234  00F1' 00A9'              	movwf	?_printf+3
  4235  00F2' 0800'              	movf	?_Timer1_GetCountSum,w
  4236  00F3' 00A8'              	movwf	?_printf+2
  4237  00F4' 3180' 2000' 3180'  	fcall	_Timer1_GetMinute
  4238  00F7' 0020               	movlb	0	; select bank0
  4239  00F8' 00C8'              	movwf	??_main
  4240  00F9' 01C9'              	clrf	??_main+1
  4241  00FA' 0848'              	movf	??_main,w
  4242  00FB' 00AC'              	movwf	?_printf+6
  4243  00FC' 0849'              	movf	??_main+1,w
  4244  00FD' 00AD'              	movwf	?_printf+7
  4245  00FE' 3180' 2000' 3180'  	fcall	_Timer1_GetSecond
  4246  0101' 0020               	movlb	0	; select bank0
  4247  0102' 00CA'              	movwf	??_main+2
  4248  0103' 01CB'              	clrf	??_main+3
  4249  0104' 084A'              	movf	??_main+2,w
  4250  0105' 00AE'              	movwf	?_printf+8
  4251  0106' 084B'              	movf	??_main+3,w
  4252  0107' 00AF'              	movwf	?_printf+9
  4253  0108' 3180' 2000' 3180'  	fcall	_printf
  4254                           
  4255                           ;main.c: 118: break;
  4256  010B' 2800'              	goto	l4412
  4257  010C'                    l4420:	
  4258                           ;main.c: 120: case STOPPING:
  4259                           
  4260                           
  4261                           ;main.c: 121: LCD1602_CursorPosition(0,0);
  4262  010C' 0020               	movlb	0	; select bank0
  4263  010D' 0183'              	clrf	LCD1602_CursorPosition@ty
  4264  010E' 3000               	movlw	0
  4265  010F' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4266                           
  4267                           ;main.c: 122: printf(" Count Stopped ");
  4268  0112' 3000'              	movlw	low (STR_3| (0+32768))
  4269  0113' 0020               	movlb	0	; select bank0
  4270  0114' 00A6'              	movwf	printf@f
  4271  0115' 3000'              	movlw	high (STR_3| (0+32768))
  4272  0116' 00A7'              	movwf	printf@f+1
  4273  0117' 3180' 2000' 3180'  	fcall	_printf
  4274                           
  4275                           ;main.c: 123: LCD1602_CursorPosition(0,1);
  4276  011A' 0020               	movlb	0	; select bank0
  4277  011B' 0183'              	clrf	LCD1602_CursorPosition@ty
  4278  011C' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  4279  011D' 3000               	movlw	0
  4280  011E' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4281                           
  4282                           ;main.c: 124: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  4283  0121' 3000'              	movlw	low (STR_2| (0+32768))
  4284  0122' 0020               	movlb	0	; select bank0
  4285  0123' 00A6'              	movwf	printf@f
  4286  0124' 3000'              	movlw	high (STR_2| (0+32768))
  4287  0125' 00A7'              	movwf	printf@f+1
  4288  0126' 3180' 2000' 3180'  	fcall	_Timer1_GetCountSum
  4289  0129' 0020               	movlb	0	; select bank0
  4290  012A' 0803'              	movf	?_Timer1_GetCountSum+3,w
  4291  012B' 00AB'              	movwf	?_printf+5
  4292  012C' 0802'              	movf	?_Timer1_GetCountSum+2,w
  4293  012D' 00AA'              	movwf	?_printf+4
  4294  012E' 0801'              	movf	?_Timer1_GetCountSum+1,w
  4295  012F' 00A9'              	movwf	?_printf+3
  4296  0130' 0800'              	movf	?_Timer1_GetCountSum,w
  4297  0131' 00A8'              	movwf	?_printf+2
  4298  0132' 3180' 2000' 3180'  	fcall	_Timer1_GetMinute
  4299  0135' 0020               	movlb	0	; select bank0
  4300  0136' 00C8'              	movwf	??_main
  4301  0137' 01C9'              	clrf	??_main+1
  4302  0138' 0848'              	movf	??_main,w
  4303  0139' 00AC'              	movwf	?_printf+6
  4304  013A' 0849'              	movf	??_main+1,w
  4305  013B' 00AD'              	movwf	?_printf+7
  4306  013C' 3180' 2000' 3180'  	fcall	_Timer1_GetSecond
  4307  013F' 0020               	movlb	0	; select bank0
  4308  0140' 00CA'              	movwf	??_main+2
  4309  0141' 01CB'              	clrf	??_main+3
  4310  0142' 084A'              	movf	??_main+2,w
  4311  0143' 00AE'              	movwf	?_printf+8
  4312  0144' 084B'              	movf	??_main+3,w
  4313  0145' 00AF'              	movwf	?_printf+9
  4314  0146' 3180' 2000' 3180'  	fcall	_printf
  4315                           
  4316                           ;main.c: 125: break;
  4317  0149' 2800'              	goto	l4412
  4318  014A'                    l4426:	
  4319                           ;main.c: 127: case RESULT:
  4320                           
  4321                           
  4322                           ;main.c: 128: LCD1602_CursorPosition(0,0);
  4323  014A' 0020               	movlb	0	; select bank0
  4324  014B' 0183'              	clrf	LCD1602_CursorPosition@ty
  4325  014C' 3000               	movlw	0
  4326  014D' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4327                           
  4328                           ;main.c: 129: printf("%7lu %7lu",Timer1_GetCPS(),Timer1_GetCPM());
  4329  0150' 3000'              	movlw	low (STR_5| (0+32768))
  4330  0151' 0020               	movlb	0	; select bank0
  4331  0152' 00A6'              	movwf	printf@f
  4332  0153' 3000'              	movlw	high (STR_5| (0+32768))
  4333  0154' 00A7'              	movwf	printf@f+1
  4334  0155' 3180' 2000' 3180'  	fcall	_Timer1_GetCPS
  4335  0158' 0020               	movlb	0	; select bank0
  4336  0159' 081D'              	movf	?_Timer1_GetCPS+3,w
  4337  015A' 00AB'              	movwf	?_printf+5
  4338  015B' 081C'              	movf	?_Timer1_GetCPS+2,w
  4339  015C' 00AA'              	movwf	?_printf+4
  4340  015D' 081B'              	movf	?_Timer1_GetCPS+1,w
  4341  015E' 00A9'              	movwf	?_printf+3
  4342  015F' 081A'              	movf	?_Timer1_GetCPS,w
  4343  0160' 00A8'              	movwf	?_printf+2
  4344  0161' 3180' 2000' 3180'  	fcall	_Timer1_GetCPM
  4345  0164' 0020               	movlb	0	; select bank0
  4346  0165' 0821'              	movf	?_Timer1_GetCPM+3,w
  4347  0166' 00AF'              	movwf	?_printf+9
  4348  0167' 0820'              	movf	?_Timer1_GetCPM+2,w
  4349  0168' 00AE'              	movwf	?_printf+8
  4350  0169' 081F'              	movf	?_Timer1_GetCPM+1,w
  4351  016A' 00AD'              	movwf	?_printf+7
  4352  016B' 081E'              	movf	?_Timer1_GetCPM,w
  4353  016C' 00AC'              	movwf	?_printf+6
  4354  016D' 3180' 2000' 3180'  	fcall	_printf
  4355                           
  4356                           ;main.c: 130: LCD1602_CursorPosition(0,1);
  4357  0170' 0020               	movlb	0	; select bank0
  4358  0171' 0183'              	clrf	LCD1602_CursorPosition@ty
  4359  0172' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  4360  0173' 3000               	movlw	0
  4361  0174' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  4362                           
  4363                           ;main.c: 131: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  4364  0177' 3000'              	movlw	low (STR_2| (0+32768))
  4365  0178' 0020               	movlb	0	; select bank0
  4366  0179' 00A6'              	movwf	printf@f
  4367  017A' 3000'              	movlw	high (STR_2| (0+32768))
  4368  017B' 00A7'              	movwf	printf@f+1
  4369  017C' 3180' 2000' 3180'  	fcall	_Timer1_GetCountSum
  4370  017F' 0020               	movlb	0	; select bank0
  4371  0180' 0803'              	movf	?_Timer1_GetCountSum+3,w
  4372  0181' 00AB'              	movwf	?_printf+5
  4373  0182' 0802'              	movf	?_Timer1_GetCountSum+2,w
  4374  0183' 00AA'              	movwf	?_printf+4
  4375  0184' 0801'              	movf	?_Timer1_GetCountSum+1,w
  4376  0185' 00A9'              	movwf	?_printf+3
  4377  0186' 0800'              	movf	?_Timer1_GetCountSum,w
  4378  0187' 00A8'              	movwf	?_printf+2
  4379  0188' 3180' 2000' 3180'  	fcall	_Timer1_GetMinute
  4380  018B' 0020               	movlb	0	; select bank0
  4381  018C' 00C8'              	movwf	??_main
  4382  018D' 01C9'              	clrf	??_main+1
  4383  018E' 0848'              	movf	??_main,w
  4384  018F' 00AC'              	movwf	?_printf+6
  4385  0190' 0849'              	movf	??_main+1,w
  4386  0191' 00AD'              	movwf	?_printf+7
  4387  0192' 3180' 2000' 3180'  	fcall	_Timer1_GetSecond
  4388  0195' 0020               	movlb	0	; select bank0
  4389  0196' 00CA'              	movwf	??_main+2
  4390  0197' 01CB'              	clrf	??_main+3
  4391  0198' 084A'              	movf	??_main+2,w
  4392  0199' 00AE'              	movwf	?_printf+8
  4393  019A' 084B'              	movf	??_main+3,w
  4394  019B' 00AF'              	movwf	?_printf+9
  4395  019C' 3180' 2000' 3180'  	fcall	_printf
  4396                           
  4397                           ;main.c: 132: break;
  4398  019F' 2800'              	goto	l4412
  4399  01A0'                    l4432:	
  4400                           ;main.c: 134: case SETTING:
  4401                           
  4402                           
  4403                           ;main.c: 135: Ssetting_PMT_Config(&pmt_config);
  4404  01A0' 3000'              	movlw	(low (main@pmt_config| 0))& (0+255)
  4405  01A1' 3180' 2000' 3180'  	fcall	_Ssetting_PMT_Config
  4406  01A4' 2800'              	goto	l4438
  4407  01A5'                    l4436:	
  4408                           ;main.c: 139: case SHOW_CONFIG:
  4409                           
  4410                           ;main.c: 137: break;
  4411                           
  4412                           ;main.c: 136: state_mode = RESULT;
  4413                           
  4414                           
  4415                           ;main.c: 140: Show_PMT_Config(&pmt_config);
  4416  01A5' 3000'              	movlw	(low (main@pmt_config| 0))& (0+255)
  4417  01A6' 3180' 2000' 3180'  	fcall	_Show_PMT_Config
  4418  01A9'                    l4438:	
  4419                           
  4420                           ;main.c: 141: state_mode = RESULT;
  4421  01A9' 3002               	movlw	2
  4422  01AA' 0020               	movlb	0	; select bank0
  4423  01AB' 00C8'              	movwf	??_main
  4424  01AC' 0848'              	movf	??_main,w
  4425  01AD' 0080'              	movwf	main@state_mode
  4426                           
  4427                           ;main.c: 145: }
  4428                           
  4429                           ;main.c: 144: break;
  4430                           
  4431                           ;main.c: 143: default:
  4432                           
  4433                           ;main.c: 142: break;
  4434  01AE' 2800'              	goto	l4412
  4435  01AF'                    __end_of_main:	
  4436                           ;main.c: 146: }
  4437                           ;main.c: 147: return 0;
  4438                           ;	Return value of _main is never used
  4439                           
  4440                           
  4441                           	psect	swtext1
  4442  0000'                    __pswtext1:	
  4443  0000'                    S4504:	
  4444  0000' 3180' 2800'        	ljmp	l4420
  4445  0002' 3180' 2800'        	ljmp	l4414
  4446  0004' 3180' 2800'        	ljmp	l4426
  4447  0006' 3180' 2800'        	ljmp	l4432
  4448  0008' 3180' 2800'        	ljmp	l4436
  4449                           
  4450                           	psect	text1
  4451  0000'                    __ptext1:	
  4452 ;; *************** function _mTouch_Init *****************
  4453 ;; Defined at:
  4454 ;;		line 6 in file "PIC_mTouch.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  mTouch_PortI    2    1[BANK0 ] PTR FTN()void 
  4457 ;;		 -> mTouch_Init_Port(1), 
  4458 ;;  cps_config      1    3[BANK0 ] PTR struct .
  4459 ;;		 -> main@cps_config(24), 
  4460 ;;  num_of_chann    1    4[BANK0 ] unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4472 ;;      Params:         0       4       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0
  4474 ;;      Temps:          0       1       0       0       0       0
  4475 ;;      Totals:         0       5       0       0       0       0
  4476 ;;Total ram usage:        5 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    4
  4479 ;; This function calls:
  4480 ;;		_mTouch_Init_Port
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _mTouch_Init
  4488  0000'                    _mTouch_Init:	
  4489                           
  4490                           ;PIC_mTouch.c: 8: mTouch_PortInit();
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4494  0000' 0020               	movlb	0	; select bank0
  4495  0001' 0802'              	movf	mTouch_Init@mTouch_PortInit+1,w
  4496  0002' 008A               	movwf	10
  4497  0003' 0801'              	movf	mTouch_Init@mTouch_PortInit,w
  4498  0004' 000A               	callw
  4499  0005' 3180'              	pagesel	$
  4500                           
  4501                           ;PIC_mTouch.c: 10: config_ptr = cps_config;
  4502  0006' 0020               	movlb	0	; select bank0
  4503  0007' 0803'              	movf	mTouch_Init@cps_config,w
  4504  0008' 0085'              	movwf	??_mTouch_Init
  4505  0009' 0805'              	movf	??_mTouch_Init,w
  4506  000A' 0084'              	movwf	_config_ptr
  4507                           
  4508                           ;PIC_mTouch.c: 11: using_channel = num_of_channel;
  4509  000B' 0804'              	movf	mTouch_Init@num_of_channel,w
  4510  000C' 0085'              	movwf	??_mTouch_Init
  4511  000D' 0805'              	movf	??_mTouch_Init,w
  4512  000E' 0083'              	movwf	_using_channel
  4513                           
  4514                           ;PIC_mTouch.c: 14: T1CON |= (0x01<<2);
  4515  000F' 1518               	bsf	24,2	;volatile
  4516                           
  4517                           ;PIC_mTouch.c: 15: T1CON &= ~(0x01<<3);
  4518  0010' 30F7               	movlw	247
  4519  0011' 0085'              	movwf	??_mTouch_Init
  4520  0012' 0805'              	movf	??_mTouch_Init,w
  4521  0013' 0598               	andwf	24,f	;volatile
  4522                           
  4523                           ;PIC_mTouch.c: 16: T1CON |= (0x00<<4);
  4524  0014' 0818               	movf	24,w	;volatile
  4525                           
  4526                           ;PIC_mTouch.c: 17: T1CON |= (0x03<<6);
  4527  0015' 30C0               	movlw	192
  4528  0016' 0085'              	movwf	??_mTouch_Init
  4529  0017' 0805'              	movf	??_mTouch_Init,w
  4530  0018' 0498               	iorwf	24,f	;volatile
  4531                           
  4532                           ;PIC_mTouch.c: 19: T1GCON = 0x00;
  4533  0019' 0199               	clrf	25	;volatile
  4534                           
  4535                           ;PIC_mTouch.c: 21: TMR1 = 0x0000;
  4536  001A' 0196               	clrf	22	;volatile
  4537  001B' 0197               	clrf	23	;volatile
  4538                           
  4539                           ;PIC_mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4540  001C' 300C               	movlw	12
  4541  001D' 0085'              	movwf	??_mTouch_Init
  4542  001E' 0805'              	movf	??_mTouch_Init,w
  4543  001F' 049E               	iorwf	30,f	;volatile
  4544                           
  4545                           ;PIC_mTouch.c: 25: CPSCON0 |= (0x00<<6);
  4546  0020' 081E               	movf	30,w	;volatile
  4547                           
  4548                           ;PIC_mTouch.c: 26: CPSCON0 &= ~(0x01<<7);;
  4549  0021' 307F               	movlw	127
  4550  0022' 0085'              	movwf	??_mTouch_Init
  4551  0023' 0805'              	movf	??_mTouch_Init,w
  4552  0024' 059E               	andwf	30,f	;volatile
  4553                           
  4554                           ;PIC_mTouch.c: 27: CPSCON1 = (uint8_t)0x00;
  4555  0025' 019F               	clrf	31	;volatile
  4556                           
  4557                           ;PIC_mTouch.c: 29: T1CON |= (0x01<<0);
  4558  0026' 1418               	bsf	24,0	;volatile
  4559  0027' 0008               	return
  4560  0028'                    __end_of_mTouch_Init:	
  4561                           
  4562                           	psect	text2
  4563  0000'                    __ptext2:	
  4564 ;; *************** function _mTouch_Init_Port *****************
  4565 ;; Defined at:
  4566 ;;		line 199 in file "main.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4580 ;;      Params:         0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0
  4582 ;;      Temps:          0       1       0       0       0       0
  4583 ;;      Totals:         0       1       0       0       0       0
  4584 ;;Total ram usage:        1 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    3
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_main
  4591 ;;		_mTouch_Init
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _mTouch_Init_Port
  4597  0000'                    _mTouch_Init_Port:	
  4598                           
  4599                           ;main.c: 201: TRISA |= (0x07);
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _mTouch_Init_Port: [wreg+status,2+status,0]
  4603  0000' 3007               	movlw	7
  4604  0001' 0020               	movlb	0	; select bank0
  4605  0002' 0080'              	movwf	??_mTouch_Init_Port
  4606  0003' 0800'              	movf	??_mTouch_Init_Port,w
  4607  0004' 0021               	movlb	1	; select bank1
  4608  0005' 048C               	iorwf	12,f	;volatile
  4609                           
  4610                           ;main.c: 202: ANSELA |= (0x07);
  4611  0006' 3007               	movlw	7
  4612  0007' 0020               	movlb	0	; select bank0
  4613  0008' 0080'              	movwf	??_mTouch_Init_Port
  4614  0009' 0800'              	movf	??_mTouch_Init_Port,w
  4615  000A' 0023               	movlb	3	; select bank3
  4616  000B' 048C               	iorwf	12,f	;volatile
  4617  000C' 0008               	return
  4618  000D'                    __end_of_mTouch_Init_Port:	
  4619                           
  4620                           	psect	text3
  4621  0000'                    __ptext3:	
  4622 ;; *************** function _Timer6_Init *****************
  4623 ;; Defined at:
  4624 ;;		line 3 in file "PIC_Timer6.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  pre_val         1    wreg     enum E3368
  4627 ;;  period          1    0[BANK0 ] unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  pre_val         1    2[BANK0 ] enum E3368
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4639 ;;      Params:         0       1       0       0       0       0
  4640 ;;      Locals:         0       1       0       0       0       0
  4641 ;;      Temps:          0       1       0       0       0       0
  4642 ;;      Totals:         0       3       0       0       0       0
  4643 ;;Total ram usage:        3 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    3
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_main
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _Timer6_Init
  4655  0000'                    _Timer6_Init:	
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4659                           ;Timer6_Init@pre_val stored from wreg
  4660  0000' 0020               	movlb	0	; select bank0
  4661  0001' 0082'              	movwf	Timer6_Init@pre_val
  4662                           
  4663                           ;PIC_Timer6.c: 5: PR6 = period;
  4664  0002' 0800'              	movf	Timer6_Init@period,w
  4665  0003' 0028               	movlb	8	; select bank8
  4666  0004' 009D               	movwf	29	;volatile
  4667                           
  4668                           ;PIC_Timer6.c: 6: TMR6 = 0x00;
  4669  0005' 019C               	clrf	28	;volatile
  4670                           
  4671                           ;PIC_Timer6.c: 7: T6CON |= ((uint8_t)pre_val<<0);
  4672  0006' 0020               	movlb	0	; select bank0
  4673  0007' 0802'              	movf	Timer6_Init@pre_val,w
  4674  0008' 0081'              	movwf	??_Timer6_Init
  4675  0009' 0801'              	movf	??_Timer6_Init,w
  4676  000A' 0028               	movlb	8	; select bank8
  4677  000B' 049E               	iorwf	30,f	;volatile
  4678                           
  4679                           ;PIC_Timer6.c: 8: T6CON |= (0x00<<3);
  4680  000C' 081E               	movf	30,w	;volatile
  4681                           
  4682                           ;PIC_Timer6.c: 9: T6CON |= (0x01<<2);
  4683  000D' 151E               	bsf	30,2	;volatile
  4684                           
  4685                           ;PIC_Timer6.c: 11: TMR6IF = 0;
  4686  000E' 0020               	movlb	0	; select bank0
  4687  000F' 1193               	bcf	19,3	;volatile
  4688                           
  4689                           ;PIC_Timer6.c: 12: TMR6IE = 1;
  4690  0010' 0021               	movlb	1	; select bank1
  4691  0011' 1593               	bsf	19,3	;volatile
  4692                           
  4693                           ;PIC_Timer6.c: 13: PEIE = 1;
  4694  0012' 170B               	bsf	11,6	;volatile
  4695                           
  4696                           ;PIC_Timer6.c: 14: GIE = 1;
  4697  0013' 178B               	bsf	11,7	;volatile
  4698  0014' 0008               	return
  4699  0015'                    __end_of_Timer6_Init:	
  4700                           
  4701                           	psect	text4
  4702  0000'                    __ptext4:	
  4703 ;; *************** function _Timer1_StopCount *****************
  4704 ;; Defined at:
  4705 ;;		line 37 in file "Timer1_Count.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		None
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4719 ;;      Params:         0       0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    3
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _Timer1_StopCount
  4735  0000'                    _Timer1_StopCount:	
  4736                           
  4737                           ;Timer1_Count.c: 39: TMR1ON = 0;
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _Timer1_StopCount: []
  4741  0000' 0020               	movlb	0	; select bank0
  4742  0001' 1018               	bcf	24,0	;volatile
  4743  0002' 0008               	return
  4744  0003'                    __end_of_Timer1_StopCount:	
  4745                           
  4746                           	psect	text5
  4747  0000'                    __ptext5:	
  4748 ;; *************** function _Timer1_StartCount *****************
  4749 ;; Defined at:
  4750 ;;		line 31 in file "Timer1_Count.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0, pclath, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4764 ;;      Params:         0       0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0
  4767 ;;      Totals:         0       0       0       0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    4
  4771 ;; This function calls:
  4772 ;;		_Timer1_ClearRecord
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _Timer1_StartCount
  4780  0000'                    _Timer1_StartCount:	
  4781                           
  4782                           ;Timer1_Count.c: 33: Timer1_ClearRecord();
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4786  0000' 3180' 2000'        	fcall	_Timer1_ClearRecord
  4787                           
  4788                           ;Timer1_Count.c: 34: TMR1ON = 1;
  4789  0002' 0020               	movlb	0	; select bank0
  4790  0003' 1418               	bsf	24,0	;volatile
  4791  0004' 0008               	return
  4792  0005'                    __end_of_Timer1_StartCount:	
  4793                           
  4794                           	psect	text6
  4795  0000'                    __ptext6:	
  4796 ;; *************** function _Timer1_ClearRecord *****************
  4797 ;; Defined at:
  4798 ;;		line 42 in file "Timer1_Count.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4812 ;;      Params:         0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    3
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;;		_Timer1_StartCount
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function _Timer1_ClearRecord
  4829  0000'                    _Timer1_ClearRecord:	
  4830                           
  4831                           ;Timer1_Count.c: 44: cnts.SigmaDeltaCount= 0;
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  4835  0000' 3000               	movlw	0
  4836  0001' 0021               	movlb	1	; select bank1
  4837  0002' 0080'              	movwf	(_cnts+3)^(0+128)
  4838  0003' 3000               	movlw	0
  4839  0004' 0080'              	movwf	(_cnts+2)^(0+128)
  4840  0005' 3000               	movlw	0
  4841  0006' 0080'              	movwf	(_cnts+1)^(0+128)
  4842  0007' 3000               	movlw	0
  4843  0008' 0080'              	movwf	_cnts^(0+128)
  4844                           
  4845                           ;Timer1_Count.c: 45: tcnt.Delta_t = 0;
  4846  0009' 3000               	movlw	0
  4847  000A' 0082'              	movwf	((_tcnt+3)^(0+128)+2)
  4848  000B' 3000               	movlw	0
  4849  000C' 0082'              	movwf	((_tcnt+2)^(0+128)+2)
  4850  000D' 3000               	movlw	0
  4851  000E' 0082'              	movwf	((_tcnt+1)^(0+128)+2)
  4852  000F' 3000               	movlw	0
  4853  0010' 0082'              	movwf	(_tcnt^(0+128)+2)
  4854                           
  4855                           ;Timer1_Count.c: 46: tcnt.Second_t = 0;
  4856  0011' 0180'              	clrf	_tcnt^(0+128)
  4857                           
  4858                           ;Timer1_Count.c: 47: tcnt.Minute_t = 0;
  4859  0012' 0181'              	clrf	(_tcnt^(0+128)+1)
  4860  0013' 0008               	return
  4861  0014'                    __end_of_Timer1_ClearRecord:	
  4862                           
  4863                           	psect	text7
  4864  0000'                    __ptext7:	
  4865 ;; *************** function _Timer1_Init *****************
  4866 ;; Defined at:
  4867 ;;		line 6 in file "Timer1_Count.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4881 ;;      Params:         0       0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0
  4883 ;;      Temps:          0       1       0       0       0       0
  4884 ;;      Totals:         0       1       0       0       0       0
  4885 ;;Total ram usage:        1 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    3
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function _Timer1_Init
  4897  0000'                    _Timer1_Init:	
  4898                           
  4899                           ;Timer1_Count.c: 8: TRISB |= (1<<6);
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4903  0000' 0021               	movlb	1	; select bank1
  4904  0001' 170D               	bsf	13,6	;volatile
  4905                           
  4906                           ;Timer1_Count.c: 9: ANSELB &= ~(1<<6);
  4907  0002' 30BF               	movlw	191
  4908  0003' 0020               	movlb	0	; select bank0
  4909  0004' 0080'              	movwf	??_Timer1_Init
  4910  0005' 0800'              	movf	??_Timer1_Init,w
  4911  0006' 0023               	movlb	3	; select bank3
  4912  0007' 058D               	andwf	13,f	;volatile
  4913                           
  4914                           ;Timer1_Count.c: 10: WPUB |= (1<<6);
  4915  0008' 0024               	movlb	4	; select bank4
  4916  0009' 170D               	bsf	13,6	;volatile
  4917                           
  4918                           ;Timer1_Count.c: 12: T1CON |= (0x01<<2);
  4919  000A' 0020               	movlb	0	; select bank0
  4920  000B' 1518               	bsf	24,2	;volatile
  4921                           
  4922                           ;Timer1_Count.c: 13: T1CON &= ~(0x01<<3);
  4923  000C' 30F7               	movlw	247
  4924  000D' 0080'              	movwf	??_Timer1_Init
  4925  000E' 0800'              	movf	??_Timer1_Init,w
  4926  000F' 0598               	andwf	24,f	;volatile
  4927                           
  4928                           ;Timer1_Count.c: 14: T1CON |= (0x00<<4);
  4929  0010' 0818               	movf	24,w	;volatile
  4930                           
  4931                           ;Timer1_Count.c: 15: T1CON |= (0x02<<6);
  4932  0011' 1798               	bsf	24,7	;volatile
  4933                           
  4934                           ;Timer1_Count.c: 17: T1GCON = 0x00;
  4935  0012' 0199               	clrf	25	;volatile
  4936                           
  4937                           ;Timer1_Count.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-2UL+1; TMR1ON = 1; };
  4938  0013' 1018               	bcf	24,0	;volatile
  4939  0014' 30FF               	movlw	255
  4940  0015' 0097               	movwf	23	;volatile
  4941  0016' 30FE               	movlw	254
  4942  0017' 0096               	movwf	22	;volatile
  4943  0018' 1418               	bsf	24,0	;volatile
  4944                           
  4945                           ;Timer1_Count.c: 21: TMR1IF = 0;
  4946  0019' 1011               	bcf	17,0	;volatile
  4947                           
  4948                           ;Timer1_Count.c: 22: TMR1IE = 1;
  4949  001A' 0021               	movlb	1	; select bank1
  4950  001B' 1411               	bsf	17,0	;volatile
  4951                           
  4952                           ;Timer1_Count.c: 23: PEIE = 1;
  4953  001C' 170B               	bsf	11,6	;volatile
  4954                           
  4955                           ;Timer1_Count.c: 24: GIE = 1;
  4956  001D' 178B               	bsf	11,7	;volatile
  4957                           
  4958                           ;Timer1_Count.c: 26: TMR1ON = 0;
  4959  001E' 0020               	movlb	0	; select bank0
  4960  001F' 1018               	bcf	24,0	;volatile
  4961  0020' 0008               	return
  4962  0021'                    __end_of_Timer1_Init:	
  4963                           
  4964                           	psect	text8
  4965  0000'                    __ptext8:	
  4966 ;; *************** function _Timer1_GetSecond *****************
  4967 ;; Defined at:
  4968 ;;		line 65 in file "Timer1_Count.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4982 ;;      Params:         0       0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0
  4985 ;;      Totals:         0       0       0       0       0       0
  4986 ;;Total ram usage:        0 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    3
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_main
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _Timer1_GetSecond
  4998  0000'                    _Timer1_GetSecond:	
  4999                           
  5000                           ;Timer1_Count.c: 67: return tcnt.Second_t;
  5001                           
  5002                           ;incstack = 0
  5003                           ; Regs used in _Timer1_GetSecond: [wreg]
  5004  0000' 0021               	movlb	1	; select bank1
  5005  0001' 0800'              	movf	_tcnt^(0+128),w
  5006  0002' 0008               	return
  5007  0003'                    __end_of_Timer1_GetSecond:	
  5008                           
  5009                           	psect	text9
  5010  0000'                    __ptext9:	
  5011 ;; *************** function _Timer1_GetMinute *****************
  5012 ;; Defined at:
  5013 ;;		line 70 in file "Timer1_Count.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5027 ;;      Params:         0       0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0
  5030 ;;      Totals:         0       0       0       0       0       0
  5031 ;;Total ram usage:        0 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    3
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _Timer1_GetMinute
  5043  0000'                    _Timer1_GetMinute:	
  5044                           
  5045                           ;Timer1_Count.c: 72: return tcnt.Minute_t;
  5046                           
  5047                           ;incstack = 0
  5048                           ; Regs used in _Timer1_GetMinute: [wreg]
  5049  0000' 0021               	movlb	1	; select bank1
  5050  0001' 0801'              	movf	(_tcnt^(0+128)+1),w
  5051  0002' 0008               	return
  5052  0003'                    __end_of_Timer1_GetMinute:	
  5053                           
  5054                           	psect	text10
  5055  0000'                    __ptext10:	
  5056 ;; *************** function _Timer1_GetCountSum *****************
  5057 ;; Defined at:
  5058 ;;		line 50 in file "Timer1_Count.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  4    0[BANK0 ] unsigned long 
  5065 ;; Registers used:
  5066 ;;		wreg
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5072 ;;      Params:         0       4       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0
  5075 ;;      Totals:         0       4       0       0       0       0
  5076 ;;Total ram usage:        4 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    3
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           
  5087                           ;psect for function _Timer1_GetCountSum
  5088  0000'                    _Timer1_GetCountSum:	
  5089                           
  5090                           ;Timer1_Count.c: 52: return cnts.SigmaDeltaCount;
  5091                           
  5092                           ;incstack = 0
  5093                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5094  0000' 0021               	movlb	1	; select bank1
  5095  0001' 0800'              	movf	(_cnts+3)^(0+128),w
  5096  0002' 0020               	movlb	0	; select bank0
  5097  0003' 0083'              	movwf	?_Timer1_GetCountSum+3
  5098  0004' 0021               	movlb	1	; select bank1
  5099  0005' 0800'              	movf	(_cnts+2)^(0+128),w
  5100  0006' 0020               	movlb	0	; select bank0
  5101  0007' 0082'              	movwf	?_Timer1_GetCountSum+2
  5102  0008' 0021               	movlb	1	; select bank1
  5103  0009' 0800'              	movf	(_cnts+1)^(0+128),w
  5104  000A' 0020               	movlb	0	; select bank0
  5105  000B' 0081'              	movwf	?_Timer1_GetCountSum+1
  5106  000C' 0021               	movlb	1	; select bank1
  5107  000D' 0800'              	movf	_cnts^(0+128),w
  5108  000E' 0020               	movlb	0	; select bank0
  5109  000F' 0080'              	movwf	?_Timer1_GetCountSum
  5110  0010' 0008               	return
  5111  0011'                    __end_of_Timer1_GetCountSum:	
  5112                           
  5113                           	psect	text11
  5114  0000'                    __ptext11:	
  5115 ;; *************** function _Timer1_GetCPM *****************
  5116 ;; Defined at:
  5117 ;;		line 60 in file "Timer1_Count.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  4   30[BANK0 ] unsigned long 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5131 ;;      Params:         0       4       0       0       0       0
  5132 ;;      Locals:         0       4       0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0
  5134 ;;      Totals:         0       8       0       0       0       0
  5135 ;;Total ram usage:        8 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    5
  5138 ;; This function calls:
  5139 ;;		_Timer1_GetCPS
  5140 ;;		___lmul
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _Timer1_GetCPM
  5148  0000'                    _Timer1_GetCPM:	
  5149                           
  5150                           ;Timer1_Count.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5154  0000' 3180' 2000' 3180'  	fcall	_Timer1_GetCPS
  5155  0003' 0020               	movlb	0	; select bank0
  5156  0004' 081D'              	movf	?_Timer1_GetCPS+3,w
  5157  0005' 00A5'              	movwf	_Timer1_GetCPM$1277+3
  5158  0006' 081C'              	movf	?_Timer1_GetCPS+2,w
  5159  0007' 00A4'              	movwf	_Timer1_GetCPM$1277+2
  5160  0008' 081B'              	movf	?_Timer1_GetCPS+1,w
  5161  0009' 00A3'              	movwf	_Timer1_GetCPM$1277+1
  5162  000A' 081A'              	movf	?_Timer1_GetCPS,w
  5163  000B' 00A2'              	movwf	_Timer1_GetCPM$1277
  5164                           
  5165                           ;Timer1_Count.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  5166  000C' 0825'              	movf	_Timer1_GetCPM$1277+3,w
  5167  000D' 0083'              	movwf	___lmul@multiplier+3
  5168  000E' 0824'              	movf	_Timer1_GetCPM$1277+2,w
  5169  000F' 0082'              	movwf	___lmul@multiplier+2
  5170  0010' 0823'              	movf	_Timer1_GetCPM$1277+1,w
  5171  0011' 0081'              	movwf	___lmul@multiplier+1
  5172  0012' 0822'              	movf	_Timer1_GetCPM$1277,w
  5173  0013' 0080'              	movwf	___lmul@multiplier
  5174  0014' 3000               	movlw	0
  5175  0015' 0087'              	movwf	___lmul@multiplicand+3
  5176  0016' 3000               	movlw	0
  5177  0017' 0086'              	movwf	___lmul@multiplicand+2
  5178  0018' 3000               	movlw	0
  5179  0019' 0085'              	movwf	___lmul@multiplicand+1
  5180  001A' 303C               	movlw	60
  5181  001B' 0084'              	movwf	___lmul@multiplicand
  5182  001C' 3180' 2000'        	fcall	___lmul
  5183  001E' 0020               	movlb	0	; select bank0
  5184  001F' 0803'              	movf	?___lmul+3,w
  5185  0020' 00A1'              	movwf	?_Timer1_GetCPM+3
  5186  0021' 0802'              	movf	?___lmul+2,w
  5187  0022' 00A0'              	movwf	?_Timer1_GetCPM+2
  5188  0023' 0801'              	movf	?___lmul+1,w
  5189  0024' 009F'              	movwf	?_Timer1_GetCPM+1
  5190  0025' 0800'              	movf	?___lmul,w
  5191  0026' 009E'              	movwf	?_Timer1_GetCPM
  5192  0027' 0008               	return
  5193  0028'                    __end_of_Timer1_GetCPM:	
  5194                           
  5195                           	psect	text12
  5196  0000'                    __ptext12:	
  5197 ;; *************** function _Timer1_GetCPS *****************
  5198 ;; Defined at:
  5199 ;;		line 55 in file "Timer1_Count.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  4   26[BANK0 ] unsigned long 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5213 ;;      Params:         0       4       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0
  5216 ;;      Totals:         0       4       0       0       0       0
  5217 ;;Total ram usage:        4 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    4
  5220 ;; This function calls:
  5221 ;;		___lldiv
  5222 ;;		___lmul
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;;		_Timer1_GetCPM
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function _Timer1_GetCPS
  5231  0000'                    _Timer1_GetCPS:	
  5232                           
  5233                           ;Timer1_Count.c: 57: return (uint32_t)((cnts.SigmaDeltaCount * 1000UL)/tcnt.Delta_t);
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5237  0000' 3002               	movlw	2
  5238  0001' 3E00'              	addlw	(low (_tcnt| 0))& (0+255)
  5239  0002' 0086               	movwf	6
  5240  0003' 0187               	clrf	7
  5241  0004' 3F40               	moviw [0]fsr1
  5242  0005' 0020               	movlb	0	; select bank0
  5243  0006' 008C'              	movwf	___lldiv@divisor
  5244  0007' 3F41               	moviw [1]fsr1
  5245  0008' 008D'              	movwf	___lldiv@divisor+1
  5246  0009' 3F42               	moviw [2]fsr1
  5247  000A' 008E'              	movwf	___lldiv@divisor+2
  5248  000B' 3F43               	moviw [3]fsr1
  5249  000C' 008F'              	movwf	___lldiv@divisor+3
  5250  000D' 0021               	movlb	1	; select bank1
  5251  000E' 0800'              	movf	(_cnts+3)^(0+128),w
  5252  000F' 0020               	movlb	0	; select bank0
  5253  0010' 0083'              	movwf	___lmul@multiplier+3
  5254  0011' 0021               	movlb	1	; select bank1
  5255  0012' 0800'              	movf	(_cnts+2)^(0+128),w
  5256  0013' 0020               	movlb	0	; select bank0
  5257  0014' 0082'              	movwf	___lmul@multiplier+2
  5258  0015' 0021               	movlb	1	; select bank1
  5259  0016' 0800'              	movf	(_cnts+1)^(0+128),w
  5260  0017' 0020               	movlb	0	; select bank0
  5261  0018' 0081'              	movwf	___lmul@multiplier+1
  5262  0019' 0021               	movlb	1	; select bank1
  5263  001A' 0800'              	movf	_cnts^(0+128),w
  5264  001B' 0020               	movlb	0	; select bank0
  5265  001C' 0080'              	movwf	___lmul@multiplier
  5266  001D' 3000               	movlw	0
  5267  001E' 0087'              	movwf	___lmul@multiplicand+3
  5268  001F' 3000               	movlw	0
  5269  0020' 0086'              	movwf	___lmul@multiplicand+2
  5270  0021' 3003               	movlw	3
  5271  0022' 0085'              	movwf	___lmul@multiplicand+1
  5272  0023' 30E8               	movlw	232
  5273  0024' 0084'              	movwf	___lmul@multiplicand
  5274  0025' 3180' 2000' 3180'  	fcall	___lmul
  5275  0028' 0020               	movlb	0	; select bank0
  5276  0029' 0803'              	movf	?___lmul+3,w
  5277  002A' 0093'              	movwf	___lldiv@dividend+3
  5278  002B' 0802'              	movf	?___lmul+2,w
  5279  002C' 0092'              	movwf	___lldiv@dividend+2
  5280  002D' 0801'              	movf	?___lmul+1,w
  5281  002E' 0091'              	movwf	___lldiv@dividend+1
  5282  002F' 0800'              	movf	?___lmul,w
  5283  0030' 0090'              	movwf	___lldiv@dividend
  5284  0031' 3180' 2000'        	fcall	___lldiv
  5285  0033' 0020               	movlb	0	; select bank0
  5286  0034' 080F'              	movf	?___lldiv+3,w
  5287  0035' 009D'              	movwf	?_Timer1_GetCPS+3
  5288  0036' 080E'              	movf	?___lldiv+2,w
  5289  0037' 009C'              	movwf	?_Timer1_GetCPS+2
  5290  0038' 080D'              	movf	?___lldiv+1,w
  5291  0039' 009B'              	movwf	?_Timer1_GetCPS+1
  5292  003A' 080C'              	movf	?___lldiv,w
  5293  003B' 009A'              	movwf	?_Timer1_GetCPS
  5294  003C' 0008               	return
  5295  003D'                    __end_of_Timer1_GetCPS:	
  5296                           
  5297                           	psect	text13
  5298  0000'                    __ptext13:	
  5299 ;; *************** function ___lmul *****************
  5300 ;; Defined at:
  5301 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul32.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5304 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  product         4    8[BANK0 ] unsigned long 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  4    0[BANK0 ] unsigned long 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5316 ;;      Params:         0       8       0       0       0       0
  5317 ;;      Locals:         0       4       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0
  5319 ;;      Totals:         0      12       0       0       0       0
  5320 ;;Total ram usage:       12 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    3
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_Timer1_GetCPS
  5327 ;;		_Timer1_GetCPM
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function ___lmul
  5333  0000'                    ___lmul:	
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5337  0000' 3000               	movlw	0
  5338  0001' 0020               	movlb	0	; select bank0
  5339  0002' 008B'              	movwf	___lmul@product+3
  5340  0003' 3000               	movlw	0
  5341  0004' 008A'              	movwf	___lmul@product+2
  5342  0005' 3000               	movlw	0
  5343  0006' 0089'              	movwf	___lmul@product+1
  5344  0007' 3000               	movlw	0
  5345  0008' 0088'              	movwf	___lmul@product
  5346  0009'                    l3742:	
  5347  0009' 1C00'              	btfss	___lmul@multiplier,0
  5348  000A' 2800'              	goto	l3746
  5349  000B' 0804'              	movf	___lmul@multiplicand,w
  5350  000C' 0788'              	addwf	___lmul@product,f
  5351  000D' 0805'              	movf	___lmul@multiplicand+1,w
  5352  000E' 3D89'              	addwfc	___lmul@product+1,f
  5353  000F' 0806'              	movf	___lmul@multiplicand+2,w
  5354  0010' 3D8A'              	addwfc	___lmul@product+2,f
  5355  0011' 0807'              	movf	___lmul@multiplicand+3,w
  5356  0012' 3D8B'              	addwfc	___lmul@product+3,f
  5357  0013'                    l3746:	
  5358  0013' 3001               	movlw	1
  5359  0014'                    u3555:	
  5360  0014' 3584'              	lslf	___lmul@multiplicand,f
  5361  0015' 0D85'              	rlf	___lmul@multiplicand+1,f
  5362  0016' 0D86'              	rlf	___lmul@multiplicand+2,f
  5363  0017' 0D87'              	rlf	___lmul@multiplicand+3,f
  5364  0018' 0B89               	decfsz	9,f
  5365  0019' 2800'              	goto	u3555
  5366  001A' 3001               	movlw	1
  5367  001B'                    u3565:	
  5368  001B' 3683'              	lsrf	___lmul@multiplier+3,f
  5369  001C' 0C82'              	rrf	___lmul@multiplier+2,f
  5370  001D' 0C81'              	rrf	___lmul@multiplier+1,f
  5371  001E' 0C80'              	rrf	___lmul@multiplier,f
  5372  001F' 0B89               	decfsz	9,f
  5373  0020' 2800'              	goto	u3565
  5374  0021' 0803'              	movf	___lmul@multiplier+3,w
  5375  0022' 0402'              	iorwf	___lmul@multiplier+2,w
  5376  0023' 0401'              	iorwf	___lmul@multiplier+1,w
  5377  0024' 0400'              	iorwf	___lmul@multiplier,w
  5378  0025' 1D03               	skipz
  5379  0026' 2800'              	goto	l3742
  5380  0027' 080B'              	movf	___lmul@product+3,w
  5381  0028' 0083'              	movwf	?___lmul+3
  5382  0029' 080A'              	movf	___lmul@product+2,w
  5383  002A' 0082'              	movwf	?___lmul+2
  5384  002B' 0809'              	movf	___lmul@product+1,w
  5385  002C' 0081'              	movwf	?___lmul+1
  5386  002D' 0808'              	movf	___lmul@product,w
  5387  002E' 0080'              	movwf	?___lmul
  5388  002F' 0008               	return
  5389  0030'                    __end_of___lmul:	
  5390                           
  5391                           	psect	text14
  5392  0000'                    __ptext14:	
  5393 ;; *************** function _StartUp_Menu *****************
  5394 ;; Defined at:
  5395 ;;		line 17 in file "User_Interface.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  data            1    wreg     PTR struct .
  5398 ;;		 -> main@pmt_config(3), 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  data            1   71[BANK0 ] PTR struct .
  5401 ;;		 -> main@pmt_config(3), 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5411 ;;      Params:         0       0       0       0       0       0
  5412 ;;      Locals:         0       1       0       0       0       0
  5413 ;;      Temps:          0       2       0       0       0       0
  5414 ;;      Totals:         0       3       0       0       0       0
  5415 ;;Total ram usage:        3 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    6
  5418 ;; This function calls:
  5419 ;;		_DAC_WriteVoltage
  5420 ;;		_LCD1602_CursorHome
  5421 ;;		_LCD1602_CursorPosition
  5422 ;;		_LCD1602_DisplayClear
  5423 ;;		_Load_PMTConfing
  5424 ;;		___wmul
  5425 ;;		_printf
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           
  5432                           ;psect for function _StartUp_Menu
  5433  0000'                    _StartUp_Menu:	
  5434                           
  5435                           ;incstack = 0
  5436                           ; Regs used in _StartUp_Menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5437                           ;StartUp_Menu@data stored from wreg
  5438  0000' 0020               	movlb	0	; select bank0
  5439  0001' 00C7'              	movwf	StartUp_Menu@data
  5440                           
  5441                           ;User_Interface.c: 19: Load_PMTConfing(data);
  5442  0002' 0847'              	movf	StartUp_Menu@data,w
  5443  0003' 3180' 2000' 3180'  	fcall	_Load_PMTConfing
  5444                           
  5445                           ;User_Interface.c: 20: DAC_WriteVoltage(409+41*data->GainElements);
  5446  0006' 0020               	movlb	0	; select bank0
  5447  0007' 0A47'              	incf	StartUp_Menu@data,w
  5448  0008' 0086               	movwf	6
  5449  0009' 0187               	clrf	7
  5450  000A' 0801               	movf	1,w
  5451  000B' 00C5'              	movwf	??_StartUp_Menu
  5452  000C' 01C6'              	clrf	??_StartUp_Menu+1
  5453  000D' 0845'              	movf	??_StartUp_Menu,w
  5454  000E' 0080'              	movwf	___wmul@multiplier
  5455  000F' 0846'              	movf	??_StartUp_Menu+1,w
  5456  0010' 0081'              	movwf	___wmul@multiplier+1
  5457  0011' 3029               	movlw	41
  5458  0012' 0082'              	movwf	___wmul@multiplicand
  5459  0013' 3000               	movlw	0
  5460  0014' 0083'              	movwf	___wmul@multiplicand+1
  5461  0015' 3180' 2000' 3180'  	fcall	___wmul
  5462  0018' 0020               	movlb	0	; select bank0
  5463  0019' 0800'              	movf	?___wmul,w
  5464  001A' 3E99               	addlw	153
  5465  001B' 0090'              	movwf	DAC_WriteVoltage@volue
  5466  001C' 3001               	movlw	1
  5467  001D' 3D01'              	addwfc	?___wmul+1,w
  5468  001E' 0091'              	movwf	DAC_WriteVoltage@volue+1
  5469  001F' 3180' 2000' 3180'  	fcall	_DAC_WriteVoltage
  5470                           
  5471                           ;User_Interface.c: 22: LCD1602_CursorHome();
  5472  0022' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  5473                           
  5474                           ;User_Interface.c: 23: printf(" Geiger Counter ");
  5475  0025' 3000'              	movlw	low (STR_37| (0+32768))
  5476  0026' 0020               	movlb	0	; select bank0
  5477  0027' 00A6'              	movwf	printf@f
  5478  0028' 3000'              	movlw	high (STR_37| (0+32768))
  5479  0029' 00A7'              	movwf	printf@f+1
  5480  002A' 3180' 2000' 3180'  	fcall	_printf
  5481                           
  5482                           ;User_Interface.c: 24: LCD1602_CursorPosition(0,1);
  5483  002D' 0020               	movlb	0	; select bank0
  5484  002E' 0183'              	clrf	LCD1602_CursorPosition@ty
  5485  002F' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  5486  0030' 3000               	movlw	0
  5487  0031' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  5488                           
  5489                           ;User_Interface.c: 25: printf("    with PIC    ");
  5490  0034' 3000'              	movlw	low (STR_38| (0+32768))
  5491  0035' 0020               	movlb	0	; select bank0
  5492  0036' 00A6'              	movwf	printf@f
  5493  0037' 3000'              	movlw	high (STR_38| (0+32768))
  5494  0038' 00A7'              	movwf	printf@f+1
  5495  0039' 3180' 2000' 3180'  	fcall	_printf
  5496                           
  5497                           ;User_Interface.c: 26: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5498  003C' 3052               	movlw	82
  5499  003D' 0020               	movlb	0	; select bank0
  5500  003E' 00C6'              	movwf	??_StartUp_Menu+1
  5501  003F' 302B               	movlw	43
  5502  0040' 00C5'              	movwf	??_StartUp_Menu
  5503  0041' 3000               	movlw	0
  5504  0042'                    u4367:	
  5505  0042' 0B89               	decfsz	9,f
  5506  0043' 2800'              	goto	u4367
  5507  0044' 0BC5'              	decfsz	??_StartUp_Menu,f
  5508  0045' 2800'              	goto	u4367
  5509  0046' 0BC6'              	decfsz	??_StartUp_Menu+1,f
  5510  0047' 2800'              	goto	u4367
  5511  0048' 0000               	nop
  5512                           
  5513                           ;User_Interface.c: 28: LCD1602_DisplayClear();
  5514  0049' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  5515                           
  5516                           ;User_Interface.c: 30: LCD1602_CursorHome();
  5517  004C' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  5518                           
  5519                           ;User_Interface.c: 31: printf("SotWare ver%s","1.01");
  5520  004F' 3000'              	movlw	low (STR_39| (0+32768))
  5521  0050' 0020               	movlb	0	; select bank0
  5522  0051' 00A6'              	movwf	printf@f
  5523  0052' 3000'              	movlw	high (STR_39| (0+32768))
  5524  0053' 00A7'              	movwf	printf@f+1
  5525  0054' 3000'              	movlw	low (STR_40| (0+32768))
  5526  0055' 0080'              	movwf	low ((?_printf| 0+2))
  5527  0056' 3000'              	movlw	high (STR_40| (0+32768))
  5528  0057' 0081'              	movwf	(low ((?_printf| 0+2))+1)
  5529  0058' 3180' 2000' 3180'  	fcall	_printf
  5530                           
  5531                           ;User_Interface.c: 32: LCD1602_CursorPosition(0,1);
  5532  005B' 0020               	movlb	0	; select bank0
  5533  005C' 0183'              	clrf	LCD1602_CursorPosition@ty
  5534  005D' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  5535  005E' 3000               	movlw	0
  5536  005F' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  5537                           
  5538                           ;User_Interface.c: 33: printf("   Ser.No.%0003d   ",data->SerialNum);
  5539  0062' 3000'              	movlw	low (STR_41| (0+32768))
  5540  0063' 0020               	movlb	0	; select bank0
  5541  0064' 00A6'              	movwf	printf@f
  5542  0065' 3000'              	movlw	high (STR_41| (0+32768))
  5543  0066' 00A7'              	movwf	printf@f+1
  5544  0067' 0847'              	movf	StartUp_Menu@data,w
  5545  0068' 0086               	movwf	6
  5546  0069' 0187               	clrf	7
  5547  006A' 0801               	movf	1,w
  5548  006B' 00C5'              	movwf	??_StartUp_Menu
  5549  006C' 01C6'              	clrf	??_StartUp_Menu+1
  5550  006D' 0845'              	movf	??_StartUp_Menu,w
  5551  006E' 00A8'              	movwf	?_printf+2
  5552  006F' 0846'              	movf	??_StartUp_Menu+1,w
  5553  0070' 00A9'              	movwf	?_printf+3
  5554  0071' 3180' 2000' 3180'  	fcall	_printf
  5555                           
  5556                           ;User_Interface.c: 34: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5557  0074' 3052               	movlw	82
  5558  0075' 0020               	movlb	0	; select bank0
  5559  0076' 00C6'              	movwf	??_StartUp_Menu+1
  5560  0077' 302B               	movlw	43
  5561  0078' 00C5'              	movwf	??_StartUp_Menu
  5562  0079' 3000               	movlw	0
  5563  007A'                    u4377:	
  5564  007A' 0B89               	decfsz	9,f
  5565  007B' 2800'              	goto	u4377
  5566  007C' 0BC5'              	decfsz	??_StartUp_Menu,f
  5567  007D' 2800'              	goto	u4377
  5568  007E' 0BC6'              	decfsz	??_StartUp_Menu+1,f
  5569  007F' 2800'              	goto	u4377
  5570  0080' 0000               	nop
  5571                           
  5572                           ;User_Interface.c: 36: LCD1602_DisplayClear();
  5573  0081' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  5574                           
  5575                           ;User_Interface.c: 38: LCD1602_CursorHome();
  5576  0084' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  5577                           
  5578                           ;User_Interface.c: 39: printf("Created By");
  5579  0087' 3000'              	movlw	low (STR_42| (0+32768))
  5580  0088' 0020               	movlb	0	; select bank0
  5581  0089' 00A6'              	movwf	printf@f
  5582  008A' 3000'              	movlw	high (STR_42| (0+32768))
  5583  008B' 00A7'              	movwf	printf@f+1
  5584  008C' 3180' 2000' 3180'  	fcall	_printf
  5585                           
  5586                           ;User_Interface.c: 40: LCD1602_CursorPosition(0,1);
  5587  008F' 0020               	movlb	0	; select bank0
  5588  0090' 0183'              	clrf	LCD1602_CursorPosition@ty
  5589  0091' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  5590  0092' 3000               	movlw	0
  5591  0093' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  5592                           
  5593                           ;User_Interface.c: 41: printf("  Ryo Wakabayshi");
  5594  0096' 3000'              	movlw	low (STR_43| (0+32768))
  5595  0097' 0020               	movlb	0	; select bank0
  5596  0098' 00A6'              	movwf	printf@f
  5597  0099' 3000'              	movlw	high (STR_43| (0+32768))
  5598  009A' 00A7'              	movwf	printf@f+1
  5599  009B' 3180' 2000' 3180'  	fcall	_printf
  5600                           
  5601                           ;User_Interface.c: 42: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5602  009E' 3052               	movlw	82
  5603  009F' 0020               	movlb	0	; select bank0
  5604  00A0' 00C6'              	movwf	??_StartUp_Menu+1
  5605  00A1' 302B               	movlw	43
  5606  00A2' 00C5'              	movwf	??_StartUp_Menu
  5607  00A3' 3000               	movlw	0
  5608  00A4'                    u4387:	
  5609  00A4' 0B89               	decfsz	9,f
  5610  00A5' 2800'              	goto	u4387
  5611  00A6' 0BC5'              	decfsz	??_StartUp_Menu,f
  5612  00A7' 2800'              	goto	u4387
  5613  00A8' 0BC6'              	decfsz	??_StartUp_Menu+1,f
  5614  00A9' 2800'              	goto	u4387
  5615  00AA' 0000               	nop
  5616                           
  5617                           ;User_Interface.c: 44: LCD1602_DisplayClear();
  5618  00AB' 3180' 2000'        	fcall	_LCD1602_DisplayClear
  5619  00AD' 0008               	return
  5620  00AE'                    __end_of_StartUp_Menu:	
  5621                           
  5622                           	psect	text15
  5623  0000'                    __ptext15:	
  5624 ;; *************** function _Load_PMTConfing *****************
  5625 ;; Defined at:
  5626 ;;		line 12 in file "User_Interface.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  data            1    wreg     PTR struct .
  5629 ;;		 -> main@pmt_config(3), 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  data            1   12[BANK0 ] PTR struct .
  5632 ;;		 -> main@pmt_config(3), 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      unsigned char 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5642 ;;      Params:         0       0       0       0       0       0
  5643 ;;      Locals:         0       1       0       0       0       0
  5644 ;;      Temps:          0       1       0       0       0       0
  5645 ;;      Totals:         0       2       0       0       0       0
  5646 ;;Total ram usage:        2 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    5
  5649 ;; This function calls:
  5650 ;;		_EEPROM_MultiRead
  5651 ;; This function is called by:
  5652 ;;		_StartUp_Menu
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _Load_PMTConfing
  5658  0000'                    _Load_PMTConfing:	
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _Load_PMTConfing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5662                           ;Load_PMTConfing@data stored from wreg
  5663  0000' 0020               	movlb	0	; select bank0
  5664  0001' 008C'              	movwf	Load_PMTConfing@data
  5665                           
  5666                           ;User_Interface.c: 14: return EEPROM_MultiRead(data->Eeprom_table,3,0);
  5667                           ;	Return value of _Load_PMTConfing is never used
  5668  0002' 3003               	movlw	3
  5669  0003' 008B'              	movwf	??_Load_PMTConfing
  5670  0004' 080B'              	movf	??_Load_PMTConfing,w
  5671  0005' 0084'              	movwf	EEPROM_MultiRead@size
  5672  0006' 0185'              	clrf	EEPROM_MultiRead@addr
  5673  0007' 080C'              	movf	Load_PMTConfing@data,w
  5674  0008' 3180' 2000'        	fcall	_EEPROM_MultiRead
  5675  000A' 0008               	return
  5676  000B'                    __end_of_Load_PMTConfing:	
  5677                           
  5678                           	psect	text16
  5679  0000'                    __ptext16:	
  5680 ;; *************** function _EEPROM_MultiRead *****************
  5681 ;; Defined at:
  5682 ;;		line 30 in file "eeprom.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  pData           1    wreg     PTR unsigned char 
  5685 ;;		 -> F3388..(3), main@pmt_config(3), 
  5686 ;;  size            1    4[BANK0 ] unsigned char 
  5687 ;;  addr            1    5[BANK0 ] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5690 ;;		 -> F3388..(3), main@pmt_config(3), 
  5691 ;;  i               1   10[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      char 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5701 ;;      Params:         0       2       0       0       0       0
  5702 ;;      Locals:         0       2       0       0       0       0
  5703 ;;      Temps:          0       3       0       0       0       0
  5704 ;;      Totals:         0       7       0       0       0       0
  5705 ;;Total ram usage:        7 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    4
  5708 ;; This function calls:
  5709 ;;		_eeprom_read
  5710 ;; This function is called by:
  5711 ;;		_Load_PMTConfing
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _EEPROM_MultiRead
  5717  0000'                    _EEPROM_MultiRead:	
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _EEPROM_MultiRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5721                           ;EEPROM_MultiRead@pData stored from wreg
  5722  0000' 0020               	movlb	0	; select bank0
  5723  0001' 0089'              	movwf	EEPROM_MultiRead@pData
  5724                           
  5725                           ;eeprom.c: 32: uint8_t i = 0;
  5726  0002' 018A'              	clrf	EEPROM_MultiRead@i
  5727  0003'                    l3702:	
  5728                           ;eeprom.c: 34: for(;i<size;i++)
  5729                           
  5730  0003' 0804'              	movf	EEPROM_MultiRead@size,w
  5731  0004' 020A'              	subwf	EEPROM_MultiRead@i,w
  5732  0005' 1803               	btfsc	3,0
  5733  0006' 2800'              	goto	l3704
  5734                           
  5735                           ;eeprom.c: 35: {
  5736                           ;eeprom.c: 36: if((addr+i)>256-1)
  5737  0007' 0805'              	movf	EEPROM_MultiRead@addr,w
  5738  0008' 070A'              	addwf	EEPROM_MultiRead@i,w
  5739  0009' 0086'              	movwf	??_EEPROM_MultiRead
  5740  000A' 0187'              	clrf	??_EEPROM_MultiRead+1
  5741  000B' 0D87'              	rlf	??_EEPROM_MultiRead+1,f
  5742  000C' 0807'              	movf	??_EEPROM_MultiRead+1,w
  5743  000D' 3A80               	xorlw	128
  5744  000E' 0088'              	movwf	??_EEPROM_MultiRead+2
  5745  000F' 3081               	movlw	129
  5746  0010' 0208'              	subwf	??_EEPROM_MultiRead+2,w
  5747  0011' 1D03               	skipz
  5748  0012' 2800'              	goto	u3465
  5749  0013' 3000               	movlw	0
  5750  0014' 0206'              	subwf	??_EEPROM_MultiRead,w
  5751  0015'                    u3465:	
  5752  0015' 1C03               	skipc
  5753  0016' 2800'              	goto	l3698
  5754                           
  5755                           ;eeprom.c: 37: return 1;
  5756  0017' 3001               	movlw	1
  5757  0018' 0008               	return
  5758  0019'                    l3698:	
  5759                           
  5760                           ;eeprom.c: 38: pData[i] = eeprom_read(addr+i);
  5761  0019' 0020               	movlb	0	; select bank0
  5762  001A' 0805'              	movf	EEPROM_MultiRead@addr,w
  5763  001B' 070A'              	addwf	EEPROM_MultiRead@i,w
  5764  001C' 3180' 2000' 3180'  	fcall	_eeprom_read
  5765  001F' 0020               	movlb	0	; select bank0
  5766  0020' 0086'              	movwf	??_EEPROM_MultiRead
  5767  0021' 080A'              	movf	EEPROM_MultiRead@i,w
  5768  0022' 0709'              	addwf	EEPROM_MultiRead@pData,w
  5769  0023' 0087'              	movwf	??_EEPROM_MultiRead+1
  5770  0024' 0807'              	movf	??_EEPROM_MultiRead+1,w
  5771  0025' 0086               	movwf	6
  5772  0026' 0187               	clrf	7
  5773  0027' 0806'              	movf	??_EEPROM_MultiRead,w
  5774  0028' 0081               	movwf	1
  5775  0029' 3001               	movlw	1
  5776  002A' 0086'              	movwf	??_EEPROM_MultiRead
  5777  002B' 0806'              	movf	??_EEPROM_MultiRead,w
  5778  002C' 078A'              	addwf	EEPROM_MultiRead@i,f
  5779  002D' 2800'              	goto	l3702
  5780  002E'                    l3704:	
  5781                           
  5782                           ;eeprom.c: 39: }
  5783                           ;eeprom.c: 41: return 0;
  5784  002E' 3000               	movlw	0
  5785  002F' 0008               	return
  5786  0030'                    __end_of_EEPROM_MultiRead:	
  5787                           
  5788                           	psect	text17
  5789  0000'                    __ptext17:	
  5790 ;; *************** function _eeprom_read *****************
  5791 ;; Defined at:
  5792 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/pic/eeread.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  addr            1    wreg     unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  addr            1    3[BANK0 ] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      unsigned char 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5806 ;;      Params:         0       0       0       0       0       0
  5807 ;;      Locals:         0       1       0       0       0       0
  5808 ;;      Temps:          0       3       0       0       0       0
  5809 ;;      Totals:         0       4       0       0       0       0
  5810 ;;Total ram usage:        4 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    3
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_EEPROM_MultiRead
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _eeprom_read
  5822  0000'                    _eeprom_read:	
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5826                           ;eeprom_read@addr stored from wreg
  5827  0000' 0020               	movlb	0	; select bank0
  5828  0001' 0083'              	movwf	eeprom_read@addr
  5829  0002' 2800'              	goto	l695
  5830  0003'                    u3301:	
  5831  0003' 0020               	movlb	0	; select bank0
  5832  0004'                    l695:	
  5833  0004' 0064               	clrwdt	;# 
  5834  0005' 0023               	movlb	3	; select bank3
  5835  0006' 1895               	btfsc	21,1	;volsfr
  5836  0007' 2800'              	goto	u3301
  5837  0008' 0020               	movlb	0	; select bank0
  5838  0009' 0803'              	movf	eeprom_read@addr,w
  5839  000A' 0080'              	movwf	??_eeprom_read
  5840  000B' 0181'              	clrf	??_eeprom_read+1
  5841  000C' 0800'              	movf	??_eeprom_read,w
  5842  000D' 0023               	movlb	3	; select bank3
  5843  000E' 0091               	movwf	17	;volatile
  5844  000F' 0020               	movlb	0	; select bank0
  5845  0010' 0801'              	movf	??_eeprom_read+1,w
  5846  0011' 0023               	movlb	3	; select bank3
  5847  0012' 0092               	movwf	18	;volatile
  5848  0013' 303F               	movlw	63
  5849  0014' 0020               	movlb	0	; select bank0
  5850  0015' 0082'              	movwf	??_eeprom_read+2
  5851  0016' 0802'              	movf	??_eeprom_read+2,w
  5852  0017' 0023               	movlb	3	; select bank3
  5853  0018' 0595               	andwf	21,f	;volsfr
  5854  0019' 1415               	bsf	21,0	;volsfr
  5855  001A' 1003               	clrc
  5856  001B' 1815               	btfsc	21,0	;volsfr
  5857  001C' 1403               	setc
  5858  001D' 3000               	movlw	0
  5859  001E' 3D09               	addwfc	9,w
  5860  001F' 0813               	movf	19,w	;volatile
  5861  0020' 0008               	return
  5862  0021'                    __end_of_eeprom_read:	
  5863                           
  5864                           	psect	text18
  5865  0000'                    __ptext18:	
  5866 ;; *************** function _Ssetting_PMT_Config *****************
  5867 ;; Defined at:
  5868 ;;		line 47 in file "User_Interface.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  data            1    wreg     PTR struct .
  5871 ;;		 -> main@pmt_config(3), 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  data            1   71[BANK0 ] PTR struct .
  5874 ;;		 -> main@pmt_config(3), 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5884 ;;      Params:         0       0       0       0       0       0
  5885 ;;      Locals:         0       1       0       0       0       0
  5886 ;;      Temps:          0       2       0       0       0       0
  5887 ;;      Totals:         0       3       0       0       0       0
  5888 ;;Total ram usage:        3 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    6
  5891 ;; This function calls:
  5892 ;;		_DAC_WriteVoltage
  5893 ;;		_LCD1602_CursorHome
  5894 ;;		_LCD1602_CursorPosition
  5895 ;;		_LCD1602_DisplayClear
  5896 ;;		_Save_PMTConfig
  5897 ;;		___wmul
  5898 ;;		_mTouch_Check
  5899 ;;		_printf
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _Ssetting_PMT_Config
  5907  0000'                    _Ssetting_PMT_Config:	
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _Ssetting_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5911                           ;Ssetting_PMT_Config@data stored from wreg
  5912  0000' 0020               	movlb	0	; select bank0
  5913  0001' 00C7'              	movwf	Ssetting_PMT_Config@data
  5914                           
  5915                           ;User_Interface.c: 49: LCD1602_CursorHome();
  5916  0002' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  5917                           
  5918                           ;User_Interface.c: 50: printf("   PMT Device   ");
  5919  0005' 3000'              	movlw	low (STR_44| (0+32768))
  5920  0006' 0020               	movlb	0	; select bank0
  5921  0007' 00A6'              	movwf	printf@f
  5922  0008' 3000'              	movlw	high (STR_44| (0+32768))
  5923  0009'                    L3:	
  5924  0009' 00A7'              	movwf	printf@f+1
  5925  000A' 3180' 2000' 3180'  	fcall	_printf
  5926  000D'                    l241:	
  5927                           ;User_Interface.c: 52: while(!mTouch_Check(0x00))
  5928                           
  5929  000D' 3000               	movlw	0
  5930  000E' 3180' 2000' 3180'  	fcall	_mTouch_Check
  5931  0011' 3A00               	xorlw	0
  5932  0012' 1D03               	btfss	3,2
  5933  0013' 2800'              	goto	l4280
  5934                           
  5935                           ;User_Interface.c: 53: {
  5936                           ;User_Interface.c: 54: if(mTouch_Check(0x01)&&(data->DeviceNum==0))
  5937  0014' 3001               	movlw	1
  5938  0015' 3180' 2000' 3180'  	fcall	_mTouch_Check
  5939  0018' 3A00               	xorlw	0
  5940  0019' 1903               	skipnz
  5941  001A' 2800'              	goto	l4264
  5942  001B' 0020               	movlb	0	; select bank0
  5943  001C' 0847'              	movf	Ssetting_PMT_Config@data,w
  5944  001D' 3E02               	addlw	2
  5945  001E' 0086               	movwf	6
  5946  001F' 0187               	clrf	7
  5947  0020' 0801               	movf	1,w
  5948  0021' 1D03               	btfss	3,2
  5949  0022' 2800'              	goto	l4264
  5950                           
  5951                           ;User_Interface.c: 55: data->DeviceNum = 1;
  5952  0023' 0847'              	movf	Ssetting_PMT_Config@data,w
  5953  0024' 3E02               	addlw	2
  5954  0025' 0086               	movwf	6
  5955  0026' 0187               	clrf	7
  5956  0027' 0181               	clrf	1
  5957  0028' 0A81               	incf	1,f
  5958  0029' 2800'              	goto	l4270
  5959  002A'                    l4264:	
  5960                           
  5961                           ;User_Interface.c: 56: else if(mTouch_Check(0x02)&&(data->DeviceNum==1))
  5962  002A' 3002               	movlw	2
  5963  002B' 3180' 2000' 3180'  	fcall	_mTouch_Check
  5964  002E' 3A00               	xorlw	0
  5965  002F' 1903               	skipnz
  5966  0030' 2800'              	goto	l4270
  5967  0031' 0020               	movlb	0	; select bank0
  5968  0032' 0847'              	movf	Ssetting_PMT_Config@data,w
  5969  0033' 3E02               	addlw	2
  5970  0034' 0086               	movwf	6
  5971  0035' 0187               	clrf	7
  5972  0036' 0301               	decf	1,w
  5973  0037' 1D03               	btfss	3,2
  5974  0038' 2800'              	goto	l4270
  5975                           
  5976                           ;User_Interface.c: 57: data->DeviceNum = 0;
  5977  0039' 0847'              	movf	Ssetting_PMT_Config@data,w
  5978  003A' 3E02               	addlw	2
  5979  003B' 0086               	movwf	6
  5980  003C' 0187               	clrf	7
  5981  003D' 0181               	clrf	1
  5982  003E'                    l4270:	
  5983                           
  5984                           ;User_Interface.c: 59: LCD1602_CursorPosition(0,1);
  5985  003E' 0020               	movlb	0	; select bank0
  5986  003F' 0183'              	clrf	LCD1602_CursorPosition@ty
  5987  0040' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  5988  0041' 3000               	movlw	0
  5989  0042' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  5990                           
  5991                           ;User_Interface.c: 60: if(data->DeviceNum==0)
  5992  0045' 0020               	movlb	0	; select bank0
  5993  0046' 0847'              	movf	Ssetting_PMT_Config@data,w
  5994  0047' 3E02               	addlw	2
  5995  0048' 0086               	movwf	6
  5996  0049' 0187               	clrf	7
  5997  004A' 0801               	movf	1,w
  5998  004B' 1D03               	btfss	3,2
  5999  004C' 2800'              	goto	l4276
  6000                           
  6001                           ;User_Interface.c: 61: printf("<--  H7826   -->");
  6002  004D' 3000'              	movlw	low (STR_45| (0+32768))
  6003  004E' 00A6'              	movwf	printf@f
  6004  004F' 3000'              	movlw	high (STR_45| (0+32768))
  6005  0050' 2800'              	goto	L3
  6006  0051'                    l4276:	
  6007                           
  6008                           ;User_Interface.c: 62: else if(data->DeviceNum==1)
  6009  0051' 0020               	movlb	0	; select bank0
  6010  0052' 0847'              	movf	Ssetting_PMT_Config@data,w
  6011  0053' 3E02               	addlw	2
  6012  0054' 0086               	movwf	6
  6013  0055' 0187               	clrf	7
  6014  0056' 0301               	decf	1,w
  6015  0057' 1D03               	btfss	3,2
  6016  0058' 2800'              	goto	l241
  6017                           
  6018                           ;User_Interface.c: 63: printf("<-- H7826_01 -->");
  6019  0059' 3000'              	movlw	low (STR_46| (0+32768))
  6020  005A' 00A6'              	movwf	printf@f
  6021  005B' 3000'              	movlw	high (STR_46| (0+32768))
  6022  005C' 2800'              	goto	L3
  6023  005D'                    l4280:	
  6024                           
  6025                           ;User_Interface.c: 64: }
  6026                           ;User_Interface.c: 66: LCD1602_CursorHome();
  6027  005D' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  6028                           
  6029                           ;User_Interface.c: 67: printf("  Set PMT Gain  ");
  6030  0060' 3000'              	movlw	low (STR_47| (0+32768))
  6031  0061' 0020               	movlb	0	; select bank0
  6032  0062' 00A6'              	movwf	printf@f
  6033  0063' 3000'              	movlw	high (STR_47| (0+32768))
  6034  0064' 00A7'              	movwf	printf@f+1
  6035  0065'                    L4:	
  6036  0065' 3180' 2000' 3180'  	fcall	_printf
  6037  0068'                    l250:	
  6038                           ;User_Interface.c: 69: while(!mTouch_Check(0x00))
  6039                           
  6040  0068' 3000               	movlw	0
  6041  0069' 3180' 2000' 3180'  	fcall	_mTouch_Check
  6042  006C' 3A00               	xorlw	0
  6043  006D' 1D03               	btfss	3,2
  6044  006E' 2800'              	goto	l4306
  6045                           
  6046                           ;User_Interface.c: 70: {
  6047                           ;User_Interface.c: 71: if(mTouch_Check(0x01)&&(data->GainElements<11))
  6048  006F' 3001               	movlw	1
  6049  0070' 3180' 2000' 3180'  	fcall	_mTouch_Check
  6050  0073' 3A00               	xorlw	0
  6051  0074' 1903               	skipnz
  6052  0075' 2800'              	goto	l4290
  6053  0076' 0020               	movlb	0	; select bank0
  6054  0077' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6055  0078' 0086               	movwf	6
  6056  0079' 0187               	clrf	7
  6057  007A' 300B               	movlw	11
  6058  007B' 0201               	subwf	1,w
  6059  007C' 1803               	skipnc
  6060  007D' 2800'              	goto	l4290
  6061                           
  6062                           ;User_Interface.c: 72: data->GainElements++;
  6063  007E' 3001               	movlw	1
  6064  007F' 00C5'              	movwf	??_Ssetting_PMT_Config
  6065  0080' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6066  0081' 0086               	movwf	6
  6067  0082' 0187               	clrf	7
  6068  0083' 0845'              	movf	??_Ssetting_PMT_Config,w
  6069  0084' 0781               	addwf	1,f
  6070  0085' 2800'              	goto	l4296
  6071  0086'                    l4290:	
  6072                           
  6073                           ;User_Interface.c: 73: else if(mTouch_Check(0x02)&&(0<data->GainElements))
  6074  0086' 3002               	movlw	2
  6075  0087' 3180' 2000' 3180'  	fcall	_mTouch_Check
  6076  008A' 3A00               	xorlw	0
  6077  008B' 1903               	skipnz
  6078  008C' 2800'              	goto	l4296
  6079  008D' 0020               	movlb	0	; select bank0
  6080  008E' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6081  008F' 0086               	movwf	6
  6082  0090' 0187               	clrf	7
  6083  0091' 0801               	movf	1,w
  6084  0092' 1903               	btfsc	3,2
  6085  0093' 2800'              	goto	l4296
  6086                           
  6087                           ;User_Interface.c: 74: data->GainElements--;
  6088  0094' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6089  0095' 0086               	movwf	6
  6090  0096' 0187               	clrf	7
  6091  0097' 3001               	movlw	1
  6092  0098' 0281               	subwf	1,f
  6093  0099'                    l4296:	
  6094                           
  6095                           ;User_Interface.c: 76: LCD1602_CursorPosition(0,1);
  6096  0099' 0020               	movlb	0	; select bank0
  6097  009A' 0183'              	clrf	LCD1602_CursorPosition@ty
  6098  009B' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  6099  009C' 3000               	movlw	0
  6100  009D' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  6101                           
  6102                           ;User_Interface.c: 77: if(data->DeviceNum==0)
  6103  00A0' 0020               	movlb	0	; select bank0
  6104  00A1' 0847'              	movf	Ssetting_PMT_Config@data,w
  6105  00A2' 3E02               	addlw	2
  6106  00A3' 0086               	movwf	6
  6107  00A4' 0187               	clrf	7
  6108  00A5' 0801               	movf	1,w
  6109  00A6' 1D03               	btfss	3,2
  6110  00A7' 2800'              	goto	l4302
  6111                           
  6112                           ;User_Interface.c: 78: printf("<-- %8s -->",H7826_Gain[data->GainElements]);
  6113  00A8' 3000'              	movlw	low (STR_48| (0+32768))
  6114  00A9' 00A6'              	movwf	printf@f
  6115  00AA' 3000'              	movlw	high (STR_48| (0+32768))
  6116  00AB' 00A7'              	movwf	printf@f+1
  6117  00AC' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6118  00AD' 0086               	movwf	6
  6119  00AE' 0187               	clrf	7
  6120  00AF' 3501               	lslf	1,w
  6121  00B0' 3E00'              	addlw	(low (_H7826_Gain| (0+256)))& (0+255)
  6122  00B1' 0086               	movwf	6
  6123  00B2' 3001               	movlw	1	; select bank2/3
  6124  00B3' 0087               	movwf	7
  6125  00B4' 3F40               	moviw [0]fsr1
  6126  00B5' 0080'              	movwf	low ((?_printf| 0+2))
  6127  00B6' 3F41               	moviw [1]fsr1
  6128  00B7' 2800'              	goto	L5
  6129  00B8'                    l4302:	
  6130                           
  6131                           ;User_Interface.c: 79: else if(data->DeviceNum==1)
  6132  00B8' 0020               	movlb	0	; select bank0
  6133  00B9' 0847'              	movf	Ssetting_PMT_Config@data,w
  6134  00BA' 3E02               	addlw	2
  6135  00BB' 0086               	movwf	6
  6136  00BC' 0187               	clrf	7
  6137  00BD' 0301               	decf	1,w
  6138  00BE' 1D03               	btfss	3,2
  6139  00BF' 2800'              	goto	l250
  6140                           
  6141                           ;User_Interface.c: 80: printf("<-- %8s -->",H7826_01_Gain[data->GainElements]);
  6142  00C0' 3000'              	movlw	low (STR_48| (0+32768))
  6143  00C1' 00A6'              	movwf	printf@f
  6144  00C2' 3000'              	movlw	high (STR_48| (0+32768))
  6145  00C3' 00A7'              	movwf	printf@f+1
  6146  00C4' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6147  00C5' 0086               	movwf	6
  6148  00C6' 0187               	clrf	7
  6149  00C7' 3501               	lslf	1,w
  6150  00C8' 3E00'              	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  6151  00C9' 0086               	movwf	6
  6152  00CA' 3001               	movlw	1	; select bank2/3
  6153  00CB' 0087               	movwf	7
  6154  00CC' 3F40               	moviw [0]fsr1
  6155  00CD' 0080'              	movwf	low ((?_printf| 0+2))
  6156  00CE' 3F41               	moviw [1]fsr1
  6157  00CF'                    L5:	
  6158  00CF' 0081'              	movwf	(low ((?_printf| 0+2))+1)
  6159  00D0' 2800'              	goto	L4
  6160  00D1'                    l4306:	
  6161                           
  6162                           ;User_Interface.c: 81: }
  6163                           ;User_Interface.c: 83: DAC_WriteVoltage(409+41*data->GainElements);
  6164  00D1' 0020               	movlb	0	; select bank0
  6165  00D2' 0A47'              	incf	Ssetting_PMT_Config@data,w
  6166  00D3' 0086               	movwf	6
  6167  00D4' 0187               	clrf	7
  6168  00D5' 0801               	movf	1,w
  6169  00D6' 00C5'              	movwf	??_Ssetting_PMT_Config
  6170  00D7' 01C6'              	clrf	??_Ssetting_PMT_Config+1
  6171  00D8' 0845'              	movf	??_Ssetting_PMT_Config,w
  6172  00D9' 0080'              	movwf	___wmul@multiplier
  6173  00DA' 0846'              	movf	??_Ssetting_PMT_Config+1,w
  6174  00DB' 0081'              	movwf	___wmul@multiplier+1
  6175  00DC' 3029               	movlw	41
  6176  00DD' 0082'              	movwf	___wmul@multiplicand
  6177  00DE' 3000               	movlw	0
  6178  00DF' 0083'              	movwf	___wmul@multiplicand+1
  6179  00E0' 3180' 2000' 3180'  	fcall	___wmul
  6180  00E3' 0020               	movlb	0	; select bank0
  6181  00E4' 0800'              	movf	?___wmul,w
  6182  00E5' 3E99               	addlw	153
  6183  00E6' 0090'              	movwf	DAC_WriteVoltage@volue
  6184  00E7' 3001               	movlw	1
  6185  00E8' 3D01'              	addwfc	?___wmul+1,w
  6186  00E9' 0091'              	movwf	DAC_WriteVoltage@volue+1
  6187  00EA' 3180' 2000' 3180'  	fcall	_DAC_WriteVoltage
  6188                           
  6189                           ;User_Interface.c: 85: LCD1602_DisplayClear();
  6190  00ED' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  6191                           
  6192                           ;User_Interface.c: 87: Save_PMTConfig(data);
  6193  00F0' 0020               	movlb	0	; select bank0
  6194  00F1' 0847'              	movf	Ssetting_PMT_Config@data,w
  6195  00F2' 3180' 2000'        	fcall	_Save_PMTConfig
  6196  00F4' 0008               	return
  6197  00F5'                    __end_of_Ssetting_PMT_Config:	
  6198                           
  6199                           	psect	text19
  6200  0000'                    __ptext19:	
  6201 ;; *************** function _Save_PMTConfig *****************
  6202 ;; Defined at:
  6203 ;;		line 7 in file "User_Interface.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  data            1    wreg     PTR struct .
  6206 ;;		 -> main@pmt_config(3), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  data            1   12[BANK0 ] PTR struct .
  6209 ;;		 -> main@pmt_config(3), 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      unsigned char 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6219 ;;      Params:         0       0       0       0       0       0
  6220 ;;      Locals:         0       1       0       0       0       0
  6221 ;;      Temps:          0       1       0       0       0       0
  6222 ;;      Totals:         0       2       0       0       0       0
  6223 ;;Total ram usage:        2 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    5
  6226 ;; This function calls:
  6227 ;;		_EEPROM_MultiWrite
  6228 ;; This function is called by:
  6229 ;;		_Ssetting_PMT_Config
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           
  6234                           ;psect for function _Save_PMTConfig
  6235  0000'                    _Save_PMTConfig:	
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _Save_PMTConfig: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6239                           ;Save_PMTConfig@data stored from wreg
  6240  0000' 0020               	movlb	0	; select bank0
  6241  0001' 008C'              	movwf	Save_PMTConfig@data
  6242                           
  6243                           ;User_Interface.c: 9: return EEPROM_MultiWrite(data->Eeprom_table,3,0);
  6244                           ;	Return value of _Save_PMTConfig is never used
  6245  0002' 3003               	movlw	3
  6246  0003' 008B'              	movwf	??_Save_PMTConfig
  6247  0004' 080B'              	movf	??_Save_PMTConfig,w
  6248  0005' 0084'              	movwf	EEPROM_MultiWrite@size
  6249  0006' 0185'              	clrf	EEPROM_MultiWrite@addr
  6250  0007' 080C'              	movf	Save_PMTConfig@data,w
  6251  0008' 3180' 2000'        	fcall	_EEPROM_MultiWrite
  6252  000A' 0008               	return
  6253  000B'                    __end_of_Save_PMTConfig:	
  6254                           
  6255                           	psect	text20
  6256  0000'                    __ptext20:	
  6257 ;; *************** function _EEPROM_MultiWrite *****************
  6258 ;; Defined at:
  6259 ;;		line 12 in file "eeprom.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  pData           1    wreg     PTR unsigned char 
  6262 ;;		 -> F3388..(3), main@pmt_config(3), 
  6263 ;;  size            1    4[BANK0 ] unsigned char 
  6264 ;;  addr            1    5[BANK0 ] unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  6267 ;;		 -> F3388..(3), main@pmt_config(3), 
  6268 ;;  i               1   10[BANK0 ] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      char 
  6271 ;; Registers used:
  6272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6278 ;;      Params:         0       2       0       0       0       0
  6279 ;;      Locals:         0       2       0       0       0       0
  6280 ;;      Temps:          0       3       0       0       0       0
  6281 ;;      Totals:         0       7       0       0       0       0
  6282 ;;Total ram usage:        7 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    4
  6285 ;; This function calls:
  6286 ;;		_eeprom_write
  6287 ;; This function is called by:
  6288 ;;		_Save_PMTConfig
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _EEPROM_MultiWrite
  6294  0000'                    _EEPROM_MultiWrite:	
  6295                           
  6296                           ;incstack = 0
  6297                           ; Regs used in _EEPROM_MultiWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6298                           ;EEPROM_MultiWrite@pData stored from wreg
  6299  0000' 0020               	movlb	0	; select bank0
  6300  0001' 0089'              	movwf	EEPROM_MultiWrite@pData
  6301                           
  6302                           ;eeprom.c: 14: uint8_t i = 0;
  6303  0002' 018A'              	clrf	EEPROM_MultiWrite@i
  6304  0003'                    l3684:	
  6305                           ;eeprom.c: 16: for(;i<size;i++)
  6306                           
  6307  0003' 0804'              	movf	EEPROM_MultiWrite@size,w
  6308  0004' 020A'              	subwf	EEPROM_MultiWrite@i,w
  6309  0005' 1803               	btfsc	3,0
  6310  0006' 2800'              	goto	l3686
  6311                           
  6312                           ;eeprom.c: 17: {
  6313                           ;eeprom.c: 18: if((addr+i)>256-1)
  6314  0007' 0805'              	movf	EEPROM_MultiWrite@addr,w
  6315  0008' 070A'              	addwf	EEPROM_MultiWrite@i,w
  6316  0009' 0086'              	movwf	??_EEPROM_MultiWrite
  6317  000A' 0187'              	clrf	??_EEPROM_MultiWrite+1
  6318  000B' 0D87'              	rlf	??_EEPROM_MultiWrite+1,f
  6319  000C' 0807'              	movf	??_EEPROM_MultiWrite+1,w
  6320  000D' 3A80               	xorlw	128
  6321  000E' 0088'              	movwf	??_EEPROM_MultiWrite+2
  6322  000F' 3081               	movlw	129
  6323  0010' 0208'              	subwf	??_EEPROM_MultiWrite+2,w
  6324  0011' 1D03               	skipz
  6325  0012' 2800'              	goto	u3445
  6326  0013' 3000               	movlw	0
  6327  0014' 0206'              	subwf	??_EEPROM_MultiWrite,w
  6328  0015'                    u3445:	
  6329  0015' 1C03               	skipc
  6330  0016' 2800'              	goto	l3680
  6331                           
  6332                           ;eeprom.c: 19: return 1;
  6333  0017' 3001               	movlw	1
  6334  0018' 0008               	return
  6335  0019'                    l3680:	
  6336                           
  6337                           ;eeprom.c: 20: eeprom_write(addr+i,pData[i]);
  6338  0019' 0020               	movlb	0	; select bank0
  6339  001A' 080A'              	movf	EEPROM_MultiWrite@i,w
  6340  001B' 0709'              	addwf	EEPROM_MultiWrite@pData,w
  6341  001C' 0086'              	movwf	??_EEPROM_MultiWrite
  6342  001D' 0806'              	movf	??_EEPROM_MultiWrite,w
  6343  001E' 0086               	movwf	6
  6344  001F' 0187               	clrf	7
  6345  0020' 0801               	movf	1,w
  6346  0021' 0087'              	movwf	??_EEPROM_MultiWrite+1
  6347  0022' 0807'              	movf	??_EEPROM_MultiWrite+1,w
  6348  0023' 0080'              	movwf	eeprom_write@value
  6349  0024' 0805'              	movf	EEPROM_MultiWrite@addr,w
  6350  0025' 070A'              	addwf	EEPROM_MultiWrite@i,w
  6351  0026' 3180' 2000' 3180'  	fcall	_eeprom_write
  6352  0029' 3001               	movlw	1
  6353  002A' 0020               	movlb	0	; select bank0
  6354  002B' 0086'              	movwf	??_EEPROM_MultiWrite
  6355  002C' 0806'              	movf	??_EEPROM_MultiWrite,w
  6356  002D' 078A'              	addwf	EEPROM_MultiWrite@i,f
  6357  002E' 2800'              	goto	l3684
  6358  002F'                    l3686:	
  6359                           
  6360                           ;eeprom.c: 21: }
  6361                           ;eeprom.c: 23: return 0;
  6362  002F' 3000               	movlw	0
  6363  0030' 0008               	return
  6364  0031'                    __end_of_EEPROM_MultiWrite:	
  6365                           
  6366                           	psect	text21
  6367  0000'                    __ptext21:	
  6368 ;; *************** function _eeprom_write *****************
  6369 ;; Defined at:
  6370 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/pic/eewrite.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  addr            1    wreg     unsigned char 
  6373 ;;  value           1    0[BANK0 ] unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  addr            1    3[BANK0 ] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, status,0
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6385 ;;      Params:         0       1       0       0       0       0
  6386 ;;      Locals:         0       1       0       0       0       0
  6387 ;;      Temps:          0       2       0       0       0       0
  6388 ;;      Totals:         0       4       0       0       0       0
  6389 ;;Total ram usage:        4 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    3
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_EEPROM_MultiWrite
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _eeprom_write
  6401  0000'                    _eeprom_write:	
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6405                           ;eeprom_write@addr stored from wreg
  6406  0000' 0020               	movlb	0	; select bank0
  6407  0001' 0083'              	movwf	eeprom_write@addr
  6408  0002'                    l717:	
  6409  0002' 0023               	movlb	3	; select bank3
  6410  0003' 1895               	btfsc	21,1	;volsfr
  6411  0004' 2800'              	goto	l717
  6412  0005' 0020               	movlb	0	; select bank0
  6413  0006' 0803'              	movf	eeprom_write@addr,w
  6414  0007' 0081'              	movwf	??_eeprom_write
  6415  0008' 0182'              	clrf	??_eeprom_write+1
  6416  0009' 0801'              	movf	??_eeprom_write,w
  6417  000A' 0023               	movlb	3	; select bank3
  6418  000B' 0091               	movwf	17	;volatile
  6419  000C' 0020               	movlb	0	; select bank0
  6420  000D' 0802'              	movf	??_eeprom_write+1,w
  6421  000E' 0023               	movlb	3	; select bank3
  6422  000F' 0092               	movwf	18	;volatile
  6423  0010' 0020               	movlb	0	; select bank0
  6424  0011' 0800'              	movf	eeprom_write@value,w
  6425  0012' 0023               	movlb	3	; select bank3
  6426  0013' 0093               	movwf	19	;volatile
  6427  0014' 303F               	movlw	63
  6428  0015' 0020               	movlb	0	; select bank0
  6429  0016' 0081'              	movwf	??_eeprom_write
  6430  0017' 0801'              	movf	??_eeprom_write,w
  6431  0018' 0023               	movlb	3	; select bank3
  6432  0019' 0595               	andwf	21,f	;volsfr
  6433  001A' 0020               	movlb	0	; select bank0
  6434  001B' 1003               	bcf	3,0	;volatile
  6435  001C' 1B8B               	btfsc	11,7	;volatile
  6436  001D' 1403               	bsf	3,0	;volatile
  6437  001E' 138B               	bcf	11,7	;volatile
  6438  001F' 0023               	movlb	3	; select bank3
  6439  0020' 1515               	bsf	21,2	;volsfr
  6440  0021' 3055               	movlw	85
  6441  0022' 0096               	movwf	22	;volsfr
  6442  0023' 30AA               	movlw	170
  6443  0024' 0096               	movwf	22	;volsfr
  6444  0025' 1495               	bsf	21,1	;volsfr
  6445  0026' 1115               	bcf	21,2	;volsfr
  6446  0027' 0020               	movlb	0	; select bank0
  6447  0028' 1C03               	btfss	3,0	;volatile
  6448  0029' 0008               	return
  6449  002A' 178B               	bsf	11,7	;volatile
  6450  002B' 0008               	return
  6451  002C'                    __end_of_eeprom_write:	
  6452                           
  6453                           	psect	text22
  6454  0000'                    __ptext22:	
  6455 ;; *************** function _DAC_WriteVoltage *****************
  6456 ;; Defined at:
  6457 ;;		line 27 in file "MCP4726.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  volue           2   16[BANK0 ] unsigned int 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      char 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6471 ;;      Params:         0       2       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0
  6473 ;;      Temps:          0       3       0       0       0       0
  6474 ;;      Totals:         0       5       0       0       0       0
  6475 ;;Total ram usage:        5 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    5
  6478 ;; This function calls:
  6479 ;;		_I2C_Transmit
  6480 ;; This function is called by:
  6481 ;;		_StartUp_Menu
  6482 ;;		_Ssetting_PMT_Config
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _DAC_WriteVoltage
  6488  0000'                    _DAC_WriteVoltage:	
  6489                           
  6490                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6494  0000' 303F               	movlw	-193
  6495  0001' 0021               	movlb	1	; select bank1
  6496  0002' 0580'              	andwf	_VoltageReg^(0+128),f
  6497                           
  6498                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  6499  0003' 0020               	movlb	0	; select bank0
  6500  0004' 0C01'              	rrf	_ConfigReg,w
  6501  0005' 3903               	andlw	3
  6502  0006' 0092'              	movwf	??_DAC_WriteVoltage
  6503  0007' 0E92'              	swapf	??_DAC_WriteVoltage,f
  6504  0008' 0021               	movlb	1	; select bank1
  6505  0009' 0800'              	movf	_VoltageReg^(0+128),w
  6506  000A' 0020               	movlb	0	; select bank0
  6507  000B' 0612'              	xorwf	??_DAC_WriteVoltage,w
  6508  000C' 39CF               	andlw	-49
  6509  000D' 0612'              	xorwf	??_DAC_WriteVoltage,w
  6510  000E' 0021               	movlb	1	; select bank1
  6511  000F' 0080'              	movwf	_VoltageReg^(0+128)
  6512                           
  6513                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  6514  0010' 0020               	movlb	0	; select bank0
  6515  0011' 0811'              	movf	DAC_WriteVoltage@volue+1,w
  6516  0012' 0093'              	movwf	??_DAC_WriteVoltage+1
  6517  0013' 0810'              	movf	DAC_WriteVoltage@volue,w
  6518  0014' 0092'              	movwf	??_DAC_WriteVoltage
  6519  0015' 0813'              	movf	??_DAC_WriteVoltage+1,w
  6520  0016' 0092'              	movwf	??_DAC_WriteVoltage
  6521  0017' 0193'              	clrf	??_DAC_WriteVoltage+1
  6522  0018' 300F               	movlw	15
  6523  0019' 0512'              	andwf	??_DAC_WriteVoltage,w
  6524  001A' 0094'              	movwf	??_DAC_WriteVoltage+2
  6525  001B' 0021               	movlb	1	; select bank1
  6526  001C' 0800'              	movf	_VoltageReg^(0+128),w
  6527  001D' 0020               	movlb	0	; select bank0
  6528  001E' 0614'              	xorwf	??_DAC_WriteVoltage+2,w
  6529  001F' 39F0               	andlw	-16
  6530  0020' 0614'              	xorwf	??_DAC_WriteVoltage+2,w
  6531  0021' 0021               	movlb	1	; select bank1
  6532  0022' 0080'              	movwf	_VoltageReg^(0+128)
  6533                           
  6534                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  6535  0023' 0020               	movlb	0	; select bank0
  6536  0024' 0810'              	movf	DAC_WriteVoltage@volue,w
  6537  0025' 0092'              	movwf	??_DAC_WriteVoltage
  6538  0026' 0812'              	movf	??_DAC_WriteVoltage,w
  6539  0027' 0021               	movlb	1	; select bank1
  6540  0028' 0081'              	movwf	(_VoltageReg^(0+128)+1)
  6541                           
  6542                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  6543                           ;	Return value of _DAC_WriteVoltage is never used
  6544  0029' 3060               	movlw	96
  6545  002A' 0020               	movlb	0	; select bank0
  6546  002B' 0092'              	movwf	??_DAC_WriteVoltage
  6547  002C' 0812'              	movf	??_DAC_WriteVoltage,w
  6548  002D' 0088'              	movwf	I2C_Transmit@address
  6549  002E' 3000'              	movlw	(low (_VoltageReg| 0))& (0+255)
  6550  002F' 0093'              	movwf	??_DAC_WriteVoltage+1
  6551  0030' 0813'              	movf	??_DAC_WriteVoltage+1,w
  6552  0031' 0089'              	movwf	I2C_Transmit@pData
  6553  0032' 3002               	movlw	2
  6554  0033' 0094'              	movwf	??_DAC_WriteVoltage+2
  6555  0034' 0814'              	movf	??_DAC_WriteVoltage+2,w
  6556  0035' 008A'              	movwf	I2C_Transmit@size
  6557  0036' 3001               	movlw	1
  6558  0037' 3180' 2000'        	fcall	_I2C_Transmit
  6559  0039' 0008               	return
  6560  003A'                    __end_of_DAC_WriteVoltage:	
  6561                           
  6562                           	psect	text23
  6563  0000'                    __ptext23:	
  6564 ;; *************** function _Show_PMT_Config *****************
  6565 ;; Defined at:
  6566 ;;		line 90 in file "User_Interface.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  data            1    wreg     PTR struct .
  6569 ;;		 -> main@pmt_config(3), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  data            1   71[BANK0 ] PTR struct .
  6572 ;;		 -> main@pmt_config(3), 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6582 ;;      Params:         0       0       0       0       0       0
  6583 ;;      Locals:         0       1       0       0       0       0
  6584 ;;      Temps:          0       2       0       0       0       0
  6585 ;;      Totals:         0       3       0       0       0       0
  6586 ;;Total ram usage:        3 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    6
  6589 ;; This function calls:
  6590 ;;		_LCD1602_CursorHome
  6591 ;;		_LCD1602_CursorPosition
  6592 ;;		_LCD1602_DisplayClear
  6593 ;;		_mTouch_Check
  6594 ;;		_printf
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _Show_PMT_Config
  6602  0000'                    _Show_PMT_Config:	
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in _Show_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6606                           ;Show_PMT_Config@data stored from wreg
  6607  0000' 0020               	movlb	0	; select bank0
  6608  0001' 00C7'              	movwf	Show_PMT_Config@data
  6609  0002'                    l262:	
  6610                           ;User_Interface.c: 92: while(!mTouch_Check(0x00))
  6611                           
  6612  0002' 3000               	movlw	0
  6613  0003' 3180' 2000' 3180'  	fcall	_mTouch_Check
  6614  0006' 3A00               	xorlw	0
  6615  0007' 1D03               	btfss	3,2
  6616  0008' 2800'              	goto	l265
  6617                           
  6618                           ;User_Interface.c: 93: {
  6619                           ;User_Interface.c: 94: LCD1602_CursorHome();
  6620  0009' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  6621                           
  6622                           ;User_Interface.c: 95: printf("SotWare ver%s","1.01");
  6623  000C' 3000'              	movlw	low (STR_39| (0+32768))
  6624  000D' 0020               	movlb	0	; select bank0
  6625  000E' 00A6'              	movwf	printf@f
  6626  000F' 3000'              	movlw	high (STR_39| (0+32768))
  6627  0010' 00A7'              	movwf	printf@f+1
  6628  0011' 3000'              	movlw	low (STR_40| (0+32768))
  6629  0012' 0080'              	movwf	low ((?_printf| 0+2))
  6630  0013' 3000'              	movlw	high (STR_40| (0+32768))
  6631  0014' 0081'              	movwf	(low ((?_printf| 0+2))+1)
  6632  0015' 3180' 2000' 3180'  	fcall	_printf
  6633                           
  6634                           ;User_Interface.c: 96: LCD1602_CursorPosition(0,1);
  6635  0018' 0020               	movlb	0	; select bank0
  6636  0019' 0183'              	clrf	LCD1602_CursorPosition@ty
  6637  001A' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  6638  001B' 3000               	movlw	0
  6639  001C' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  6640                           
  6641                           ;User_Interface.c: 97: printf("   Ser.No.%0003d   ",data->SerialNum);
  6642  001F' 3000'              	movlw	low (STR_41| (0+32768))
  6643  0020' 0020               	movlb	0	; select bank0
  6644  0021' 00A6'              	movwf	printf@f
  6645  0022' 3000'              	movlw	high (STR_41| (0+32768))
  6646  0023' 00A7'              	movwf	printf@f+1
  6647  0024' 0847'              	movf	Show_PMT_Config@data,w
  6648  0025' 0086               	movwf	6
  6649  0026' 0187               	clrf	7
  6650  0027' 0801               	movf	1,w
  6651  0028' 00C5'              	movwf	??_Show_PMT_Config
  6652  0029' 01C6'              	clrf	??_Show_PMT_Config+1
  6653  002A' 0845'              	movf	??_Show_PMT_Config,w
  6654  002B' 00A8'              	movwf	?_printf+2
  6655  002C' 0846'              	movf	??_Show_PMT_Config+1,w
  6656  002D' 00A9'              	movwf	?_printf+3
  6657  002E' 3180' 2000' 3180'  	fcall	_printf
  6658  0031' 2800'              	goto	l262
  6659  0032'                    l4320:	
  6660                           ;User_Interface.c: 98: }
  6661                           ;User_Interface.c: 99: while(!mTouch_Check(0x00))
  6662                           
  6663                           
  6664                           ;User_Interface.c: 100: {
  6665                           ;User_Interface.c: 101: LCD1602_CursorHome();
  6666  0032' 3180' 2000' 3180'  	fcall	_LCD1602_CursorHome
  6667                           
  6668                           ;User_Interface.c: 102: if(data->DeviceNum==0)
  6669  0035' 0020               	movlb	0	; select bank0
  6670  0036' 0847'              	movf	Show_PMT_Config@data,w
  6671  0037' 3E02               	addlw	2
  6672  0038' 0086               	movwf	6
  6673  0039' 0187               	clrf	7
  6674  003A' 0801               	movf	1,w
  6675  003B' 1D03               	btfss	3,2
  6676  003C' 2800'              	goto	l4326
  6677                           
  6678                           ;User_Interface.c: 103: printf("Deveice:H7826   ");
  6679  003D' 3000'              	movlw	low (STR_53| (0+32768))
  6680  003E' 00A6'              	movwf	printf@f
  6681  003F' 3000'              	movlw	high (STR_53| (0+32768))
  6682  0040' 2800'              	goto	L6
  6683  0041'                    l4326:	
  6684                           
  6685                           ;User_Interface.c: 104: else if(data->DeviceNum==1)
  6686  0041' 0020               	movlb	0	; select bank0
  6687  0042' 0847'              	movf	Show_PMT_Config@data,w
  6688  0043' 3E02               	addlw	2
  6689  0044' 0086               	movwf	6
  6690  0045' 0187               	clrf	7
  6691  0046' 0301               	decf	1,w
  6692  0047' 1D03               	btfss	3,2
  6693  0048' 2800'              	goto	l4330
  6694                           
  6695                           ;User_Interface.c: 105: printf("Deveice:H7826_01");
  6696  0049' 3000'              	movlw	low (STR_54| (0+32768))
  6697  004A' 00A6'              	movwf	printf@f
  6698  004B' 3000'              	movlw	high (STR_54| (0+32768))
  6699  004C'                    L6:	
  6700  004C' 00A7'              	movwf	printf@f+1
  6701  004D' 3180' 2000' 3180'  	fcall	_printf
  6702  0050'                    l4330:	
  6703                           
  6704                           ;User_Interface.c: 106: LCD1602_CursorPosition(0,1);
  6705  0050' 0020               	movlb	0	; select bank0
  6706  0051' 0183'              	clrf	LCD1602_CursorPosition@ty
  6707  0052' 0A83'              	incf	LCD1602_CursorPosition@ty,f
  6708  0053' 3000               	movlw	0
  6709  0054' 3180' 2000' 3180'  	fcall	_LCD1602_CursorPosition
  6710                           
  6711                           ;User_Interface.c: 107: if(data->DeviceNum==0)
  6712  0057' 0020               	movlb	0	; select bank0
  6713  0058' 0847'              	movf	Show_PMT_Config@data,w
  6714  0059' 3E02               	addlw	2
  6715  005A' 0086               	movwf	6
  6716  005B' 0187               	clrf	7
  6717  005C' 0801               	movf	1,w
  6718  005D' 1D03               	btfss	3,2
  6719  005E' 2800'              	goto	l4336
  6720                           
  6721                           ;User_Interface.c: 108: printf(" Gain: %8s ",H7826_Gain[data->GainElements]);
  6722  005F' 3000'              	movlw	low (STR_55| (0+32768))
  6723  0060' 00A6'              	movwf	printf@f
  6724  0061' 3000'              	movlw	high (STR_55| (0+32768))
  6725  0062' 00A7'              	movwf	printf@f+1
  6726  0063' 0A47'              	incf	Show_PMT_Config@data,w
  6727  0064' 0086               	movwf	6
  6728  0065' 0187               	clrf	7
  6729  0066' 3501               	lslf	1,w
  6730  0067' 3E00'              	addlw	(low (_H7826_Gain| (0+256)))& (0+255)
  6731  0068' 0086               	movwf	6
  6732  0069' 3001               	movlw	1	; select bank2/3
  6733  006A' 0087               	movwf	7
  6734  006B' 3F40               	moviw [0]fsr1
  6735  006C' 0080'              	movwf	low ((?_printf| 0+2))
  6736  006D' 3F41               	moviw [1]fsr1
  6737  006E' 2800'              	goto	L7
  6738  006F'                    l4336:	
  6739                           
  6740                           ;User_Interface.c: 109: else if(data->DeviceNum==1)
  6741  006F' 0020               	movlb	0	; select bank0
  6742  0070' 0847'              	movf	Show_PMT_Config@data,w
  6743  0071' 3E02               	addlw	2
  6744  0072' 0086               	movwf	6
  6745  0073' 0187               	clrf	7
  6746  0074' 0301               	decf	1,w
  6747  0075' 1D03               	btfss	3,2
  6748  0076' 2800'              	goto	l265
  6749                           
  6750                           ;User_Interface.c: 110: printf(" Gain: %8s ",H7826_01_Gain[data->GainElements]);
  6751  0077' 3000'              	movlw	low (STR_55| (0+32768))
  6752  0078' 00A6'              	movwf	printf@f
  6753  0079' 3000'              	movlw	high (STR_55| (0+32768))
  6754  007A' 00A7'              	movwf	printf@f+1
  6755  007B' 0A47'              	incf	Show_PMT_Config@data,w
  6756  007C' 0086               	movwf	6
  6757  007D' 0187               	clrf	7
  6758  007E' 3501               	lslf	1,w
  6759  007F' 3E00'              	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  6760  0080' 0086               	movwf	6
  6761  0081' 3001               	movlw	1	; select bank2/3
  6762  0082' 0087               	movwf	7
  6763  0083' 3F40               	moviw [0]fsr1
  6764  0084' 0080'              	movwf	low ((?_printf| 0+2))
  6765  0085' 3F41               	moviw [1]fsr1
  6766  0086'                    L7:	
  6767  0086' 0081'              	movwf	(low ((?_printf| 0+2))+1)
  6768  0087' 3180' 2000' 3180'  	fcall	_printf
  6769  008A'                    l265:	
  6770  008A' 3000               	movlw	0
  6771  008B' 3180' 2000' 3180'  	fcall	_mTouch_Check
  6772  008E' 3A00               	xorlw	0
  6773  008F' 1903               	skipnz
  6774  0090' 2800'              	goto	l4320
  6775                           
  6776                           ;User_Interface.c: 111: }
  6777                           ;User_Interface.c: 112: LCD1602_DisplayClear();
  6778  0091' 3180' 2000'        	fcall	_LCD1602_DisplayClear
  6779  0093' 0008               	return
  6780  0094'                    __end_of_Show_PMT_Config:	
  6781                           
  6782                           	psect	text24
  6783  0000'                    __ptext24:	
  6784 ;; *************** function _printf *****************
  6785 ;; Defined at:
  6786 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  6789 ;;		 -> STR_59(2), STR_58(14), STR_57(12), STR_56(12), 
  6790 ;;		 -> STR_55(12), STR_54(17), STR_53(17), STR_52(20), 
  6791 ;;		 -> STR_50(14), STR_49(12), STR_48(12), STR_47(17), 
  6792 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
  6793 ;;		 -> STR_42(11), STR_41(20), STR_39(14), STR_38(17), 
  6794 ;;		 -> STR_37(17), STR_6(17), STR_5(10), STR_4(17), 
  6795 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  val             4   60[BANK0 ] unsigned long 
  6798 ;;  tmpval          4    0        struct .
  6799 ;;  width           2   67[BANK0 ] int 
  6800 ;;  len             2   58[BANK0 ] unsigned int 
  6801 ;;  cp              2   56[BANK0 ] PTR const unsigned char 
  6802 ;;		 -> STR_60(7), STR_51(5), STR_40(5), STR_36(7), 
  6803 ;;		 -> STR_35(7), STR_34(7), STR_33(7), STR_32(7), 
  6804 ;;		 -> STR_31(7), STR_30(7), STR_29(6), STR_28(6), 
  6805 ;;		 -> STR_27(6), STR_26(6), STR_25(5), STR_24(5), 
  6806 ;;		 -> STR_23(5), STR_22(5), STR_21(8), STR_20(8), 
  6807 ;;		 -> STR_19(8), STR_18(7), STR_17(7), STR_16(7), 
  6808 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(6), 
  6809 ;;		 -> STR_11(6), STR_10(6), STR_9(5), STR_8(5), 
  6810 ;;		 -> STR_7(5), 
  6811 ;;  prec            2   54[BANK0 ] int 
  6812 ;;  c               1   66[BANK0 ] char 
  6813 ;;  flag            1   65[BANK0 ] unsigned char 
  6814 ;;  ap              1   64[BANK0 ] PTR void [1]
  6815 ;;		 -> ?_printf(2), 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2   38[BANK0 ] int 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6825 ;;      Params:         0      10       0       0       0       0
  6826 ;;      Locals:         0      15       0       0       0       0
  6827 ;;      Temps:          0       6       0       0       0       0
  6828 ;;      Totals:         0      31       0       0       0       0
  6829 ;;Total ram usage:       31 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    5
  6832 ;; This function calls:
  6833 ;;		___lldiv
  6834 ;;		___llmod
  6835 ;;		___wmul
  6836 ;;		_isdigit
  6837 ;;		_putch
  6838 ;; This function is called by:
  6839 ;;		_main
  6840 ;;		_StartUp_Menu
  6841 ;;		_Ssetting_PMT_Config
  6842 ;;		_Show_PMT_Config
  6843 ;;		_mTouch_Display_Config
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           
  6848                           ;psect for function _printf
  6849  0000'                    _printf:	
  6850                           
  6851                           ;doprnt.c: 466: va_list ap;
  6852                           ;doprnt.c: 499: signed char c;
  6853                           ;doprnt.c: 501: int width;
  6854                           ;doprnt.c: 504: int prec;
  6855                           ;doprnt.c: 508: unsigned char flag;
  6856                           ;doprnt.c: 523: union {
  6857                           ;doprnt.c: 524: unsigned long vd;
  6858                           ;doprnt.c: 525: double integ;
  6859                           ;doprnt.c: 526: } tmpval;
  6860                           ;doprnt.c: 528: unsigned long val;
  6861                           ;doprnt.c: 529: unsigned len;
  6862                           ;doprnt.c: 530: const char * cp;
  6863                           ;doprnt.c: 533: *ap = __va_start();
  6864                           
  6865                           ;incstack = 0
  6866                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6867  0000' 3000'              	movlw	(low ((?_printf| 0+2)))& (0+255)
  6868  0001' 0020               	movlb	0	; select bank0
  6869  0002' 00B0'              	movwf	??_printf
  6870  0003' 0830'              	movf	??_printf,w
  6871  0004' 00C0'              	movwf	printf@ap
  6872  0005'                    l3994:	
  6873                           ;doprnt.c: 536: while(c = *f++) {
  6874                           
  6875  0005' 0020               	movlb	0	; select bank0
  6876  0006' 0827'              	movf	printf@f+1,w
  6877  0007' 00B1'              	movwf	??_printf+1
  6878  0008' 0826'              	movf	printf@f,w
  6879  0009' 00B0'              	movwf	??_printf
  6880  000A' 0AA6'              	incf	printf@f,f
  6881  000B' 1903               	skipnz
  6882  000C' 0AA7'              	incf	printf@f+1,f
  6883  000D' 0830'              	movf	??_printf,w
  6884  000E' 0084               	movwf	4
  6885  000F' 0831'              	movf	??_printf+1,w
  6886  0010' 0085               	movwf	5
  6887  0011' 0800               	movf	0,w	;code access
  6888  0012' 00B2'              	movwf	??_printf+2
  6889  0013' 0832'              	movf	??_printf+2,w
  6890  0014' 00C2'              	movwf	printf@c
  6891  0015' 0842'              	movf	printf@c,w
  6892  0016' 1903               	btfsc	3,2
  6893  0017' 0008               	return
  6894                           
  6895                           ;doprnt.c: 538: if(c != '%')
  6896  0018' 3025               	movlw	37
  6897  0019' 0642'              	xorwf	printf@c,w
  6898  001A' 1903               	btfsc	3,2
  6899  001B' 2800'              	goto	l3864
  6900                           
  6901                           ;doprnt.c: 540: {
  6902                           ;doprnt.c: 541: (putch(c) );
  6903  001C' 0842'              	movf	printf@c,w
  6904  001D' 3180' 2000' 3180'  	fcall	_putch
  6905                           
  6906                           ;doprnt.c: 542: continue;
  6907  0020' 2800'              	goto	l3994
  6908  0021'                    l3864:	
  6909                           
  6910                           ;doprnt.c: 543: }
  6911                           ;doprnt.c: 546: width = 0;
  6912  0021' 0020               	movlb	0	; select bank0
  6913  0022' 01C3'              	clrf	printf@width
  6914  0023' 01C4'              	clrf	printf@width+1
  6915                           
  6916                           ;doprnt.c: 548: flag = 0;
  6917  0024' 01C1'              	clrf	printf@flag
  6918                           
  6919                           ;doprnt.c: 551: switch(*f) {
  6920                           
  6921                           ;doprnt.c: 550: for(;;) {
  6922  0025' 2800'              	goto	l3870
  6923  0026'                    l625:	
  6924                           ;doprnt.c: 579: case '0':
  6925                           
  6926                           
  6927                           ;doprnt.c: 580: flag |= 0x04;
  6928  0026' 1541'              	bsf	printf@flag,2
  6929                           
  6930                           ;doprnt.c: 581: f++;
  6931  0027' 3001               	movlw	1
  6932  0028' 07A6'              	addwf	printf@f,f
  6933  0029' 3000               	movlw	0
  6934  002A' 3DA7'              	addwfc	printf@f+1,f
  6935  002B'                    l3870:	
  6936                           ;doprnt.c: 584: }
  6937                           
  6938                           ;doprnt.c: 582: continue;
  6939                           
  6940  002B' 0826'              	movf	printf@f,w
  6941  002C' 0084               	movwf	4
  6942  002D' 0827'              	movf	printf@f+1,w
  6943  002E' 0085               	movwf	5
  6944  002F' 0800               	movf	0,w	;code access
  6945                           
  6946                           ; Switch size 1, requested type "space"
  6947                           ; Number of cases is 1, Range of values is 48 to 48
  6948                           ; switch strategies available:
  6949                           ; Name         Instructions Cycles
  6950                           ; simple_byte            4     3 (average)
  6951                           ; direct_byte           11     9 (fixed)
  6952                           ; jumptable            263     9 (fixed)
  6953                           ;	Chosen strategy is simple_byte
  6954  0030' 3A30               	xorlw	48	; case 48
  6955  0031' 1903               	skipnz
  6956  0032' 2800'              	goto	l625
  6957  0033' 2800'              	goto	l3872
  6958  0034'                    l3872:	
  6959                           ;doprnt.c: 586: }
  6960                           
  6961                           ;doprnt.c: 585: break;
  6962                           
  6963                           
  6964                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6965  0034' 0826'              	movf	printf@f,w
  6966  0035' 0084               	movwf	4
  6967  0036' 0827'              	movf	printf@f+1,w
  6968  0037' 0085               	movwf	5
  6969  0038' 0800               	movf	0,w	;code access
  6970  0039' 3180' 2000' 3180'  	fcall	_isdigit
  6971  003C' 1C03               	btfss	3,0
  6972  003D' 2800'              	goto	l3916
  6973                           
  6974                           ;doprnt.c: 598: width = 0;
  6975  003E' 0020               	movlb	0	; select bank0
  6976  003F' 01C3'              	clrf	printf@width
  6977  0040' 01C4'              	clrf	printf@width+1
  6978  0041'                    l3876:	
  6979                           ;doprnt.c: 599: do {
  6980                           
  6981                           
  6982                           ;doprnt.c: 600: width *= 10;
  6983  0041' 300A               	movlw	10
  6984  0042' 0020               	movlb	0	; select bank0
  6985  0043' 0080'              	movwf	___wmul@multiplier
  6986  0044' 3000               	movlw	0
  6987  0045' 0081'              	movwf	___wmul@multiplier+1
  6988  0046' 0844'              	movf	printf@width+1,w
  6989  0047' 0083'              	movwf	___wmul@multiplicand+1
  6990  0048' 0843'              	movf	printf@width,w
  6991  0049' 0082'              	movwf	___wmul@multiplicand
  6992  004A' 3180' 2000' 3180'  	fcall	___wmul
  6993  004D' 0020               	movlb	0	; select bank0
  6994  004E' 0801'              	movf	?___wmul+1,w
  6995  004F' 00C4'              	movwf	printf@width+1
  6996  0050' 0800'              	movf	?___wmul,w
  6997  0051' 00C3'              	movwf	printf@width
  6998                           
  6999                           ;doprnt.c: 601: width += *f++ - '0';
  7000  0052' 0826'              	movf	printf@f,w
  7001  0053' 0084               	movwf	4
  7002  0054' 0827'              	movf	printf@f+1,w
  7003  0055' 0085               	movwf	5
  7004  0056' 0800               	movf	0,w	;code access
  7005  0057' 3ED0               	addlw	208
  7006  0058' 00B0'              	movwf	??_printf
  7007  0059' 30FF               	movlw	255
  7008  005A' 1803               	skipnc
  7009  005B' 3000               	movlw	0
  7010  005C' 00B1'              	movwf	??_printf+1
  7011  005D' 0830'              	movf	??_printf,w
  7012  005E' 07C3'              	addwf	printf@width,f
  7013  005F' 0831'              	movf	??_printf+1,w
  7014  0060' 3DC4'              	addwfc	printf@width+1,f
  7015  0061' 3001               	movlw	1
  7016  0062' 07A6'              	addwf	printf@f,f
  7017  0063' 3000               	movlw	0
  7018  0064' 3DA7'              	addwfc	printf@f+1,f
  7019                           
  7020                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7021  0065' 0826'              	movf	printf@f,w
  7022  0066' 0084               	movwf	4
  7023  0067' 0827'              	movf	printf@f+1,w
  7024  0068' 0085               	movwf	5
  7025  0069' 0800               	movf	0,w	;code access
  7026  006A' 3180' 2000' 3180'  	fcall	_isdigit
  7027  006D' 1C03               	btfss	3,0
  7028  006E' 2800'              	goto	l3916
  7029  006F' 2800'              	goto	l3876
  7030  0070'                    l636:	
  7031                           ;doprnt.c: 641: case 'l':
  7032                           
  7033                           ;doprnt.c: 638: goto alldone;
  7034                           
  7035                           ;doprnt.c: 637: case 0:
  7036                           
  7037                           ;doprnt.c: 635: switch(c = *f++) {
  7038                           
  7039                           ;doprnt.c: 608: }
  7040                           ;doprnt.c: 633: loop:
  7041                           
  7042                           
  7043                           ;doprnt.c: 643: flag |= 0x10;
  7044  0070' 1641'              	bsf	printf@flag,4
  7045                           
  7046                           ;doprnt.c: 644: goto loop;
  7047  0071' 2800'              	goto	l3916
  7048  0072'                    l3884:	
  7049                           ;doprnt.c: 728: case 's':
  7050                           
  7051                           ;doprnt.c: 698: case 'i':
  7052                           ;doprnt.c: 699: break;
  7053                           
  7054                           ;doprnt.c: 697: case 'd':
  7055                           
  7056                           
  7057                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7058  0072' 0840'              	movf	printf@ap,w
  7059  0073' 0086               	movwf	6
  7060  0074' 0187               	clrf	7
  7061  0075' 3F40               	moviw [0]fsr1
  7062  0076' 00B8'              	movwf	printf@cp
  7063  0077' 3F41               	moviw [1]fsr1
  7064  0078' 00B9'              	movwf	printf@cp+1
  7065  0079' 3002               	movlw	2
  7066  007A' 00B0'              	movwf	??_printf
  7067  007B' 0830'              	movf	??_printf,w
  7068  007C' 07C0'              	addwf	printf@ap,f
  7069                           
  7070                           ;doprnt.c: 740: if(!cp)
  7071  007D' 0838'              	movf	printf@cp,w
  7072  007E' 0439'              	iorwf	printf@cp+1,w
  7073  007F' 1D03               	btfss	3,2
  7074  0080' 2800'              	goto	l3892
  7075                           
  7076                           ;doprnt.c: 741: cp = "(null)";
  7077  0081' 3000'              	movlw	low (STR_60| (0+32768))
  7078  0082' 00B8'              	movwf	printf@cp
  7079  0083' 3000'              	movlw	high (STR_60| (0+32768))
  7080  0084' 00B9'              	movwf	printf@cp+1
  7081  0085'                    l3892:	
  7082                           
  7083                           ;doprnt.c: 745: len = 0;
  7084  0085' 01BA'              	clrf	printf@len
  7085  0086' 01BB'              	clrf	printf@len+1
  7086  0087'                    l3896:	
  7087                           ;doprnt.c: 746: while(cp[len])
  7088                           
  7089  0087' 0838'              	movf	printf@cp,w
  7090  0088' 073A'              	addwf	printf@len,w
  7091  0089' 0084               	movwf	4
  7092  008A' 0839'              	movf	printf@cp+1,w
  7093  008B' 3D3B'              	addwfc	printf@len+1,w
  7094  008C' 0085               	movwf	5
  7095  008D' 0012               	moviw fsr0++
  7096  008E' 1903               	btfsc	3,2
  7097  008F' 2800'              	goto	l3898
  7098                           
  7099                           ;doprnt.c: 747: len++;
  7100  0090' 3001               	movlw	1
  7101  0091' 07BA'              	addwf	printf@len,f
  7102  0092' 3000               	movlw	0
  7103  0093' 3DBB'              	addwfc	printf@len+1,f
  7104  0094' 2800'              	goto	l3896
  7105  0095'                    l3898:	
  7106                           
  7107                           ;doprnt.c: 757: if(width > len)
  7108  0095' 0844'              	movf	printf@width+1,w
  7109  0096' 023B'              	subwf	printf@len+1,w
  7110  0097' 1D03               	skipz
  7111  0098' 2800'              	goto	u3795
  7112  0099' 0843'              	movf	printf@width,w
  7113  009A' 023A'              	subwf	printf@len,w
  7114  009B'                    u3795:	
  7115  009B' 1803               	skipnc
  7116  009C' 2800'              	goto	l3902
  7117                           
  7118                           ;doprnt.c: 758: width -= len;
  7119  009D' 083A'              	movf	printf@len,w
  7120  009E' 02C3'              	subwf	printf@width,f
  7121  009F' 083B'              	movf	printf@len+1,w
  7122  00A0' 3BC4'              	subwfb	printf@width+1,f
  7123  00A1' 2800'              	goto	l3906
  7124  00A2'                    l3902:	
  7125                           
  7126                           ;doprnt.c: 759: else
  7127                           ;doprnt.c: 760: width = 0;
  7128  00A2' 01C3'              	clrf	printf@width
  7129  00A3' 01C4'              	clrf	printf@width+1
  7130  00A4'                    l3906:	
  7131                           ;doprnt.c: 764: while(width--)
  7132                           
  7133  00A4' 30FF               	movlw	255
  7134  00A5' 0020               	movlb	0	; select bank0
  7135  00A6' 07C3'              	addwf	printf@width,f
  7136  00A7' 30FF               	movlw	255
  7137  00A8' 3DC4'              	addwfc	printf@width+1,f
  7138  00A9' 0A43'              	incf	printf@width,w
  7139  00AA' 1903               	btfsc	3,2
  7140  00AB' 0A44'              	incf	printf@width+1,w
  7141  00AC' 1903               	btfsc	3,2
  7142  00AD' 2800'              	goto	l3912
  7143                           
  7144                           ;doprnt.c: 765: (putch(' ') );
  7145  00AE' 3020               	movlw	32
  7146  00AF' 3180' 2000' 3180'  	fcall	_putch
  7147  00B2' 2800'              	goto	l3906
  7148  00B3'                    l3908:	
  7149                           ;doprnt.c: 767: while(len--)
  7150                           
  7151                           
  7152                           ;doprnt.c: 768: (putch(*cp++) );
  7153  00B3' 0838'              	movf	printf@cp,w
  7154  00B4' 0084               	movwf	4
  7155  00B5' 0839'              	movf	printf@cp+1,w
  7156  00B6' 0085               	movwf	5
  7157  00B7' 0800               	movf	0,w	;code access
  7158  00B8' 3180' 2000' 3180'  	fcall	_putch
  7159  00BB' 3001               	movlw	1
  7160  00BC' 0020               	movlb	0	; select bank0
  7161  00BD' 07B8'              	addwf	printf@cp,f
  7162  00BE' 3000               	movlw	0
  7163  00BF' 3DB9'              	addwfc	printf@cp+1,f
  7164  00C0'                    l3912:	
  7165  00C0' 3001               	movlw	1
  7166  00C1' 02BA'              	subwf	printf@len,f
  7167  00C2' 3000               	movlw	0
  7168  00C3' 3BBB'              	subwfb	printf@len+1,f
  7169  00C4' 0A3A'              	incf	printf@len,w
  7170  00C5' 1D03               	skipz
  7171  00C6' 2800'              	goto	l3908
  7172  00C7' 0A3B'              	incf	printf@len+1,w
  7173  00C8' 1903               	btfsc	3,2
  7174  00C9' 2800'              	goto	l3994
  7175  00CA' 2800'              	goto	l3908
  7176  00CB'                    l654:	
  7177                           ;doprnt.c: 817: case 'u':
  7178                           
  7179                           ;doprnt.c: 813: continue;
  7180                           
  7181                           ;doprnt.c: 802: default:
  7182                           
  7183                           ;doprnt.c: 774: continue;
  7184                           
  7185                           
  7186                           ;doprnt.c: 818: flag |= 0x40;
  7187  00CB' 1741'              	bsf	printf@flag,6
  7188                           
  7189                           ;doprnt.c: 822: }
  7190                           
  7191                           ;doprnt.c: 819: break;
  7192  00CC' 2800'              	goto	l639
  7193  00CD'                    l3916:	
  7194  00CD' 0020               	movlb	0	; select bank0
  7195  00CE' 0827'              	movf	printf@f+1,w
  7196  00CF' 00B1'              	movwf	??_printf+1
  7197  00D0' 0826'              	movf	printf@f,w
  7198  00D1' 00B0'              	movwf	??_printf
  7199  00D2' 0AA6'              	incf	printf@f,f
  7200  00D3' 1903               	skipnz
  7201  00D4' 0AA7'              	incf	printf@f+1,f
  7202  00D5' 0830'              	movf	??_printf,w
  7203  00D6' 0084               	movwf	4
  7204  00D7' 0831'              	movf	??_printf+1,w
  7205  00D8' 0085               	movwf	5
  7206  00D9' 0800               	movf	0,w	;code access
  7207  00DA' 00C2'              	movwf	printf@c
  7208                           
  7209                           ; Switch size 1, requested type "space"
  7210                           ; Number of cases is 6, Range of values is 0 to 117
  7211                           ; switch strategies available:
  7212                           ; Name         Instructions Cycles
  7213                           ; simple_byte           19    10 (average)
  7214                           ; direct_byte          242     6 (fixed)
  7215                           ; jumptable            260     6 (fixed)
  7216                           ;	Chosen strategy is simple_byte
  7217  00DB' 3A00               	xorlw	0	; case 0
  7218  00DC' 1903               	skipnz
  7219  00DD' 2800'              	goto	l682
  7220  00DE' 3A64               	xorlw	100	; case 100
  7221  00DF' 1903               	skipnz
  7222  00E0' 2800'              	goto	l639
  7223  00E1' 3A0D               	xorlw	13	; case 105
  7224  00E2' 1903               	skipnz
  7225  00E3' 2800'              	goto	l639
  7226  00E4' 3A05               	xorlw	5	; case 108
  7227  00E5' 1903               	skipnz
  7228  00E6' 2800'              	goto	l636
  7229  00E7' 3A1F               	xorlw	31	; case 115
  7230  00E8' 1903               	skipnz
  7231  00E9' 2800'              	goto	l3884
  7232  00EA' 3A06               	xorlw	6	; case 117
  7233  00EB' 1903               	skipnz
  7234  00EC' 2800'              	goto	l654
  7235  00ED' 2800'              	goto	l3994
  7236  00EE'                    l639:	
  7237                           
  7238                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  7239  00EE' 1B41'              	btfsc	printf@flag,6
  7240  00EF' 2800'              	goto	l655
  7241                           
  7242                           ;doprnt.c: 1253: {
  7243                           ;doprnt.c: 1255: if(flag & 0x10)
  7244  00F0' 1E41'              	btfss	printf@flag,4
  7245  00F1' 2800'              	goto	l3924
  7246                           
  7247                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  7248  00F2' 0840'              	movf	printf@ap,w
  7249  00F3' 0086               	movwf	6
  7250  00F4' 0187               	clrf	7
  7251  00F5' 3F40               	moviw [0]fsr1
  7252  00F6' 00BC'              	movwf	printf@val
  7253  00F7' 3F41               	moviw [1]fsr1
  7254  00F8' 00BD'              	movwf	printf@val+1
  7255  00F9' 3F42               	moviw [2]fsr1
  7256  00FA' 00BE'              	movwf	printf@val+2
  7257  00FB' 3F43               	moviw [3]fsr1
  7258  00FC' 00BF'              	movwf	printf@val+3
  7259  00FD' 3004               	movlw	4
  7260  00FE' 2800'              	goto	L9
  7261  00FF'                    l3924:	
  7262                           
  7263                           ;doprnt.c: 1257: else
  7264                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7265  00FF' 0840'              	movf	printf@ap,w
  7266  0100' 0086               	movwf	6
  7267  0101' 0187               	clrf	7
  7268  0102' 3F40               	moviw [0]fsr1
  7269  0103' 00B0'              	movwf	??_printf
  7270  0104' 3F41               	moviw [1]fsr1
  7271  0105' 00B1'              	movwf	??_printf+1
  7272  0106' 0830'              	movf	??_printf,w
  7273  0107' 00BC'              	movwf	printf@val
  7274  0108' 0831'              	movf	??_printf+1,w
  7275  0109' 00BD'              	movwf	printf@val+1
  7276  010A' 0D89               	rlf	9,f
  7277  010B' 3B89               	subwfb	9,f
  7278  010C' 0989               	comf	9,f
  7279  010D' 00BE'              	movwf	printf@val+2
  7280  010E' 00BF'              	movwf	printf@val+3
  7281  010F' 3002               	movlw	2
  7282  0110'                    L9:	
  7283  0110' 00B0'              	movwf	??_printf
  7284  0111' 0830'              	movf	??_printf,w
  7285  0112' 07C0'              	addwf	printf@ap,f
  7286                           
  7287                           ;doprnt.c: 1261: if((long)val < 0) {
  7288  0113' 1FBF'              	btfss	printf@val+3,7
  7289  0114' 2800'              	goto	l3942
  7290                           
  7291                           ;doprnt.c: 1262: flag |= 0x03;
  7292  0115' 3003               	movlw	3
  7293  0116' 00B0'              	movwf	??_printf
  7294  0117' 0830'              	movf	??_printf,w
  7295  0118' 04C1'              	iorwf	printf@flag,f
  7296                           
  7297                           ;doprnt.c: 1263: val = -val;
  7298  0119' 09BC'              	comf	printf@val,f
  7299  011A' 09BD'              	comf	printf@val+1,f
  7300  011B' 09BE'              	comf	printf@val+2,f
  7301  011C' 09BF'              	comf	printf@val+3,f
  7302  011D' 0ABC'              	incf	printf@val,f
  7303  011E' 1903               	skipnz
  7304  011F' 0ABD'              	incf	printf@val+1,f
  7305  0120' 1903               	skipnz
  7306  0121' 0ABE'              	incf	printf@val+2,f
  7307  0122' 1903               	skipnz
  7308  0123' 0ABF'              	incf	printf@val+3,f
  7309                           
  7310                           ;doprnt.c: 1264: }
  7311                           ;doprnt.c: 1266: }
  7312  0124' 2800'              	goto	l3942
  7313  0125'                    l655:	
  7314                           
  7315                           ;doprnt.c: 1268: else
  7316                           ;doprnt.c: 1273: {
  7317                           ;doprnt.c: 1281: if(flag & 0x10)
  7318  0125' 1E41'              	btfss	printf@flag,4
  7319  0126' 2800'              	goto	l3938
  7320                           
  7321                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7322  0127' 0840'              	movf	printf@ap,w
  7323  0128' 0086               	movwf	6
  7324  0129' 0187               	clrf	7
  7325  012A' 3F40               	moviw [0]fsr1
  7326  012B' 00BC'              	movwf	printf@val
  7327  012C' 3F41               	moviw [1]fsr1
  7328  012D' 00BD'              	movwf	printf@val+1
  7329  012E' 3F42               	moviw [2]fsr1
  7330  012F' 00BE'              	movwf	printf@val+2
  7331  0130' 3F43               	moviw [3]fsr1
  7332  0131' 00BF'              	movwf	printf@val+3
  7333  0132' 3004               	movlw	4
  7334  0133' 2800'              	goto	L10
  7335  0134'                    l3938:	
  7336                           
  7337                           ;doprnt.c: 1283: else
  7338                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7339  0134' 0840'              	movf	printf@ap,w
  7340  0135' 0086               	movwf	6
  7341  0136' 0187               	clrf	7
  7342  0137' 3F40               	moviw [0]fsr1
  7343  0138' 00B0'              	movwf	??_printf
  7344  0139' 3F41               	moviw [1]fsr1
  7345  013A' 00B1'              	movwf	??_printf+1
  7346  013B' 0830'              	movf	??_printf,w
  7347  013C' 00BC'              	movwf	printf@val
  7348  013D' 0831'              	movf	??_printf+1,w
  7349  013E' 00BD'              	movwf	printf@val+1
  7350  013F' 01BE'              	clrf	printf@val+2
  7351  0140' 01BF'              	clrf	printf@val+3
  7352  0141' 3002               	movlw	2
  7353  0142'                    L10:	
  7354  0142' 00B0'              	movwf	??_printf
  7355  0143' 0830'              	movf	??_printf,w
  7356  0144' 07C0'              	addwf	printf@ap,f
  7357  0145'                    l3942:	
  7358                           
  7359                           ;doprnt.c: 1287: }
  7360                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7361  0145' 01C2'              	clrf	printf@c
  7362  0146' 0AC2'              	incf	printf@c,f
  7363  0147' 300A               	movlw	10
  7364  0148' 0642'              	xorwf	printf@c,w
  7365  0149' 1903               	btfsc	3,2
  7366  014A' 2800'              	goto	l3954
  7367  014B'                    l3948:	
  7368                           
  7369                           ;doprnt.c: 1306: if(val < dpowers[c])
  7370  014B' 0842'              	movf	printf@c,w
  7371  014C' 00B0'              	movwf	??_printf
  7372  014D' 01B1'              	clrf	??_printf+1
  7373  014E' 35B0'              	lslf	??_printf,f
  7374  014F' 0DB1'              	rlf	??_printf+1,f
  7375  0150' 35B0'              	lslf	??_printf,f
  7376  0151' 0DB1'              	rlf	??_printf+1,f
  7377  0152' 3000'              	movlw	low (_dpowers| (0+32768))
  7378  0153' 0730'              	addwf	??_printf,w
  7379  0154' 0084               	movwf	4
  7380  0155' 3000'              	movlw	high (_dpowers| (0+32768))
  7381  0156' 3D31'              	addwfc	??_printf+1,w
  7382  0157' 0085               	movwf	5
  7383  0158' 3F00               	moviw [0]fsr0
  7384  0159' 00B2'              	movwf	??_printf+2
  7385  015A' 3F01               	moviw [1]fsr0
  7386  015B' 00B3'              	movwf	??_printf+3
  7387  015C' 3F02               	moviw [2]fsr0
  7388  015D' 00B4'              	movwf	??_printf+4
  7389  015E' 3F03               	moviw [3]fsr0
  7390  015F' 00B5'              	movwf	??_printf+5
  7391  0160' 0835'              	movf	??_printf+5,w
  7392  0161' 023F'              	subwf	printf@val+3,w
  7393  0162' 1D03               	skipz
  7394  0163' 2800'              	goto	u3875
  7395  0164' 0834'              	movf	??_printf+4,w
  7396  0165' 023E'              	subwf	printf@val+2,w
  7397  0166' 1D03               	skipz
  7398  0167' 2800'              	goto	u3875
  7399  0168' 0833'              	movf	??_printf+3,w
  7400  0169' 023D'              	subwf	printf@val+1,w
  7401  016A' 1D03               	skipz
  7402  016B' 2800'              	goto	u3875
  7403  016C' 0832'              	movf	??_printf+2,w
  7404  016D' 023C'              	subwf	printf@val,w
  7405  016E'                    u3875:	
  7406  016E' 1C03               	btfss	3,0
  7407  016F' 2800'              	goto	l3954
  7408                           
  7409                           ;doprnt.c: 1307: break;
  7410  0170' 3001               	movlw	1
  7411  0171' 00B0'              	movwf	??_printf
  7412  0172' 0830'              	movf	??_printf,w
  7413  0173' 07C2'              	addwf	printf@c,f
  7414  0174' 300A               	movlw	10
  7415  0175' 0642'              	xorwf	printf@c,w
  7416  0176' 1D03               	btfss	3,2
  7417  0177' 2800'              	goto	l3948
  7418  0178'                    l3954:	
  7419                           
  7420                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7421  0178' 0843'              	movf	printf@width,w
  7422  0179' 0444'              	iorwf	printf@width+1,w
  7423  017A' 1903               	btfsc	3,2
  7424  017B' 2800'              	goto	l665
  7425  017C' 0841'              	movf	printf@flag,w
  7426  017D' 3903               	andlw	3
  7427  017E' 1903               	btfsc	3,2
  7428  017F' 2800'              	goto	l665
  7429                           
  7430                           ;doprnt.c: 1346: width--;
  7431  0180' 30FF               	movlw	255
  7432  0181' 07C3'              	addwf	printf@width,f
  7433  0182' 30FF               	movlw	255
  7434  0183' 3DC4'              	addwfc	printf@width+1,f
  7435  0184'                    l665:	
  7436                           
  7437                           ;doprnt.c: 1381: if(width > c)
  7438  0184' 0842'              	movf	printf@c,w
  7439  0185' 00B0'              	movwf	??_printf
  7440  0186' 01B1'              	clrf	??_printf+1
  7441  0187' 1BB0'              	btfsc	??_printf,7
  7442  0188' 03B1'              	decf	??_printf+1,f
  7443  0189' 0831'              	movf	??_printf+1,w
  7444  018A' 3A80               	xorlw	128
  7445  018B' 00B2'              	movwf	??_printf+2
  7446  018C' 0844'              	movf	printf@width+1,w
  7447  018D' 3A80               	xorlw	128
  7448  018E' 0232'              	subwf	??_printf+2,w
  7449  018F' 1D03               	skipz
  7450  0190' 2800'              	goto	u3915
  7451  0191' 0843'              	movf	printf@width,w
  7452  0192' 0230'              	subwf	??_printf,w
  7453  0193'                    u3915:	
  7454  0193' 1803               	skipnc
  7455  0194' 2800'              	goto	l3962
  7456                           
  7457                           ;doprnt.c: 1382: width -= c;
  7458  0195' 0020               	movlb	0	; select bank0
  7459  0196' 0842'              	movf	printf@c,w
  7460  0197' 00B0'              	movwf	??_printf
  7461  0198' 01B1'              	clrf	??_printf+1
  7462  0199' 1BB0'              	btfsc	??_printf,7
  7463  019A' 03B1'              	decf	??_printf+1,f
  7464  019B' 0830'              	movf	??_printf,w
  7465  019C' 02C3'              	subwf	printf@width,f
  7466  019D' 0831'              	movf	??_printf+1,w
  7467  019E' 3BC4'              	subwfb	printf@width+1,f
  7468  019F' 2800'              	goto	l3964
  7469  01A0'                    l3962:	
  7470                           
  7471                           ;doprnt.c: 1383: else
  7472                           ;doprnt.c: 1384: width = 0;
  7473  01A0' 0020               	movlb	0	; select bank0
  7474  01A1' 01C3'              	clrf	printf@width
  7475  01A2' 01C4'              	clrf	printf@width+1
  7476  01A3'                    l3964:	
  7477                           
  7478                           ;doprnt.c: 1387: if(flag & 0x04) {
  7479  01A3' 1D41'              	btfss	printf@flag,2
  7480  01A4' 2800'              	goto	l3976
  7481                           
  7482                           ;doprnt.c: 1392: if(flag & 0x03)
  7483  01A5' 0841'              	movf	printf@flag,w
  7484  01A6' 3903               	andlw	3
  7485  01A7' 1903               	btfsc	3,2
  7486  01A8' 2800'              	goto	l3970
  7487                           
  7488                           ;doprnt.c: 1393: (putch('-') );
  7489  01A9' 302D               	movlw	45
  7490  01AA' 3180' 2000' 3180'  	fcall	_putch
  7491  01AD'                    l3970:	
  7492                           
  7493                           ;doprnt.c: 1415: if(width)
  7494  01AD' 0020               	movlb	0	; select bank0
  7495  01AE'                    L11:	
  7496  01AE' 0843'              	movf	printf@width,w
  7497  01AF' 0444'              	iorwf	printf@width+1,w
  7498  01B0' 1903               	btfsc	3,2
  7499  01B1' 2800'              	goto	l3986
  7500                           
  7501                           ;doprnt.c: 1417: (putch('0') );
  7502                           
  7503                           ;doprnt.c: 1416: do
  7504  01B2' 3030               	movlw	48
  7505  01B3' 3180' 2000' 3180'  	fcall	_putch
  7506                           
  7507                           ;doprnt.c: 1418: while(--width);
  7508  01B6' 30FF               	movlw	255
  7509  01B7' 0020               	movlb	0	; select bank0
  7510  01B8' 07C3'              	addwf	printf@width,f
  7511  01B9' 30FF               	movlw	255
  7512  01BA' 3DC4'              	addwfc	printf@width+1,f
  7513  01BB' 2800'              	goto	L11
  7514  01BC'                    l3976:	
  7515                           ;doprnt.c: 1420: } else
  7516                           
  7517                           
  7518                           ;doprnt.c: 1422: {
  7519                           ;doprnt.c: 1424: if(width
  7520                           ;doprnt.c: 1428: )
  7521  01BC' 0843'              	movf	printf@width,w
  7522  01BD' 0444'              	iorwf	printf@width+1,w
  7523  01BE' 1903               	btfsc	3,2
  7524  01BF' 2800'              	goto	l3982
  7525  01C0'                    l3978:	
  7526                           ;doprnt.c: 1429: do
  7527                           
  7528                           
  7529                           ;doprnt.c: 1430: (putch(' ') );
  7530  01C0' 3020               	movlw	32
  7531  01C1' 3180' 2000' 3180'  	fcall	_putch
  7532                           
  7533                           ;doprnt.c: 1431: while(--width);
  7534  01C4' 30FF               	movlw	255
  7535  01C5' 0020               	movlb	0	; select bank0
  7536  01C6' 07C3'              	addwf	printf@width,f
  7537  01C7' 30FF               	movlw	255
  7538  01C8' 3DC4'              	addwfc	printf@width+1,f
  7539  01C9' 0843'              	movf	printf@width,w
  7540  01CA' 0444'              	iorwf	printf@width+1,w
  7541  01CB' 1D03               	btfss	3,2
  7542  01CC' 2800'              	goto	l3978
  7543  01CD'                    l3982:	
  7544                           
  7545                           ;doprnt.c: 1438: if(flag & 0x03)
  7546  01CD' 0841'              	movf	printf@flag,w
  7547  01CE' 3903               	andlw	3
  7548  01CF' 1903               	btfsc	3,2
  7549  01D0' 2800'              	goto	l3986
  7550                           
  7551                           ;doprnt.c: 1439: (putch('-') );
  7552  01D1' 302D               	movlw	45
  7553  01D2' 3180' 2000' 3180'  	fcall	_putch
  7554  01D5'                    l3986:	
  7555                           
  7556                           ;doprnt.c: 1469: }
  7557                           ;doprnt.c: 1472: prec = c;
  7558  01D5' 0020               	movlb	0	; select bank0
  7559  01D6' 0842'              	movf	printf@c,w
  7560  01D7' 00B6'              	movwf	printf@prec
  7561  01D8' 01B7'              	clrf	printf@prec+1
  7562  01D9' 1BB6'              	btfsc	printf@prec,7
  7563  01DA' 03B7'              	decf	printf@prec+1,f
  7564  01DB'                    l3992:	
  7565                           ;doprnt.c: 1474: while(prec--) {
  7566                           
  7567  01DB' 30FF               	movlw	255
  7568  01DC' 0020               	movlb	0	; select bank0
  7569  01DD' 07B6'              	addwf	printf@prec,f
  7570  01DE' 30FF               	movlw	255
  7571  01DF' 3DB7'              	addwfc	printf@prec+1,f
  7572  01E0' 0A36'              	incf	printf@prec,w
  7573  01E1' 1903               	btfsc	3,2
  7574  01E2' 0A37'              	incf	printf@prec+1,w
  7575  01E3' 1903               	btfsc	3,2
  7576  01E4' 2800'              	goto	l3994
  7577                           
  7578                           ;doprnt.c: 1478: {
  7579                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7580  01E5' 3000               	movlw	0
  7581  01E6' 009D'              	movwf	___llmod@divisor+3
  7582  01E7' 3000               	movlw	0
  7583  01E8' 009C'              	movwf	___llmod@divisor+2
  7584  01E9' 3000               	movlw	0
  7585  01EA' 009B'              	movwf	___llmod@divisor+1
  7586  01EB' 300A               	movlw	10
  7587  01EC' 009A'              	movwf	___llmod@divisor
  7588  01ED' 0837'              	movf	printf@prec+1,w
  7589  01EE' 0085               	movwf	5
  7590  01EF' 0836'              	movf	printf@prec,w
  7591  01F0' 0084               	movwf	4
  7592  01F1' 3584               	lslf	4,f
  7593  01F2' 0D85               	rlf	5,f
  7594  01F3' 3584               	lslf	4,f
  7595  01F4' 0D85               	rlf	5,f
  7596  01F5' 3000'              	movlw	low (_dpowers| (0+32768))
  7597  01F6' 0784               	addwf	4,f
  7598  01F7' 3000'              	movlw	high (_dpowers| (0+32768))
  7599  01F8' 3D85               	addwfc	5,f
  7600  01F9' 3F00               	moviw [0]fsr0
  7601  01FA' 008C'              	movwf	___lldiv@divisor
  7602  01FB' 3F01               	moviw [1]fsr0
  7603  01FC' 008D'              	movwf	___lldiv@divisor+1
  7604  01FD' 3F02               	moviw [2]fsr0
  7605  01FE' 008E'              	movwf	___lldiv@divisor+2
  7606  01FF' 3F03               	moviw [3]fsr0
  7607  0200' 008F'              	movwf	___lldiv@divisor+3
  7608  0201' 083F'              	movf	printf@val+3,w
  7609  0202' 0093'              	movwf	___lldiv@dividend+3
  7610  0203' 083E'              	movf	printf@val+2,w
  7611  0204' 0092'              	movwf	___lldiv@dividend+2
  7612  0205' 083D'              	movf	printf@val+1,w
  7613  0206' 0091'              	movwf	___lldiv@dividend+1
  7614  0207' 083C'              	movf	printf@val,w
  7615  0208' 0090'              	movwf	___lldiv@dividend
  7616  0209' 3180' 2000' 3180'  	fcall	___lldiv
  7617  020C' 0020               	movlb	0	; select bank0
  7618  020D' 080F'              	movf	?___lldiv+3,w
  7619  020E' 00A1'              	movwf	___llmod@dividend+3
  7620  020F' 080E'              	movf	?___lldiv+2,w
  7621  0210' 00A0'              	movwf	___llmod@dividend+2
  7622  0211' 080D'              	movf	?___lldiv+1,w
  7623  0212' 009F'              	movwf	___llmod@dividend+1
  7624  0213' 080C'              	movf	?___lldiv,w
  7625  0214' 009E'              	movwf	___llmod@dividend
  7626  0215' 3180' 2000' 3180'  	fcall	___llmod
  7627  0218' 0020               	movlb	0	; select bank0
  7628  0219' 081A'              	movf	?___llmod,w
  7629  021A' 3E30               	addlw	48
  7630  021B' 00B0'              	movwf	??_printf
  7631  021C' 0830'              	movf	??_printf,w
  7632  021D' 00C2'              	movwf	printf@c
  7633                           
  7634                           ;doprnt.c: 1523: }
  7635                           ;doprnt.c: 1524: (putch(c) );
  7636  021E' 0842'              	movf	printf@c,w
  7637  021F' 3180' 2000' 3180'  	fcall	_putch
  7638  0222' 2800'              	goto	l3992
  7639  0223'                    l682:	
  7640                           ;doprnt.c: 1540: return 0;
  7641                           ;	Return value of _printf is never used
  7642                           
  7643                           ;doprnt.c: 1525: }
  7644                           ;doprnt.c: 1533: }
  7645                           ;doprnt.c: 1535: alldone:
  7646                           
  7647  0223' 0008               	return
  7648  0224'                    __end_of_printf:	
  7649                           
  7650                           	psect	text25
  7651  0000'                    __ptext25:	
  7652 ;; *************** function _putch *****************
  7653 ;; Defined at:
  7654 ;;		line 66 in file "LCD1602.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  c               1    wreg     unsigned char 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;  c               1    3[BANK0 ] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, pclath, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7668 ;;      Params:         0       0       0       0       0       0
  7669 ;;      Locals:         0       1       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0
  7671 ;;      Totals:         0       1       0       0       0       0
  7672 ;;Total ram usage:        1 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    4
  7675 ;; This function calls:
  7676 ;;		_LCD1602_WriteData
  7677 ;; This function is called by:
  7678 ;;		_printf
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _putch
  7684  0000'                    _putch:	
  7685                           
  7686                           ;incstack = 0
  7687                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7688                           ;putch@c stored from wreg
  7689  0000' 0020               	movlb	0	; select bank0
  7690  0001' 0083'              	movwf	putch@c
  7691                           
  7692                           ;LCD1602.c: 68: LATA3 = 1;
  7693  0002' 0022               	movlb	2	; select bank2
  7694  0003' 158C               	bsf	12,3	;volatile
  7695                           
  7696                           ;LCD1602.c: 69: LCD1602_WriteData(c);
  7697  0004' 0020               	movlb	0	; select bank0
  7698  0005' 0803'              	movf	putch@c,w
  7699  0006' 3180' 2000'        	fcall	_LCD1602_WriteData
  7700  0008' 0008               	return
  7701  0009'                    __end_of_putch:	
  7702                           
  7703                           	psect	text26
  7704  0000'                    __ptext26:	
  7705 ;; *************** function _isdigit *****************
  7706 ;; Defined at:
  7707 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/isdigit.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  c               1    wreg     unsigned char 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  c               1    1[BANK0 ] unsigned char 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;		None               void
  7714 ;; Registers used:
  7715 ;;		wreg, status,2, status,0
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7721 ;;      Params:         0       0       0       0       0       0
  7722 ;;      Locals:         0       2       0       0       0       0
  7723 ;;      Temps:          0       0       0       0       0       0
  7724 ;;      Totals:         0       2       0       0       0       0
  7725 ;;Total ram usage:        2 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    3
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_printf
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function _isdigit
  7737  0000'                    _isdigit:	
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7741                           ;isdigit@c stored from wreg
  7742  0000' 0020               	movlb	0	; select bank0
  7743  0001' 0081'              	movwf	isdigit@c
  7744  0002' 0180'              	clrf	_isdigit$1034
  7745  0003' 303A               	movlw	58
  7746  0004' 0201'              	subwf	isdigit@c,w
  7747  0005' 1803               	skipnc
  7748  0006' 2800'              	goto	l3722
  7749  0007' 3030               	movlw	48
  7750  0008' 0201'              	subwf	isdigit@c,w
  7751  0009' 1C03               	skipc
  7752  000A' 2800'              	goto	l3722
  7753  000B' 0180'              	clrf	_isdigit$1034
  7754  000C' 0A80'              	incf	_isdigit$1034,f
  7755  000D'                    l3722:	
  7756  000D' 0C00'              	rrf	_isdigit$1034,w
  7757  000E' 0008               	return
  7758  000F'                    __end_of_isdigit:	
  7759                           
  7760                           	psect	text27
  7761  0000'                    __ptext27:	
  7762 ;; *************** function ___wmul *****************
  7763 ;; Defined at:
  7764 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul16.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7767 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  product         2    4[BANK0 ] unsigned int 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2    0[BANK0 ] unsigned int 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7779 ;;      Params:         0       4       0       0       0       0
  7780 ;;      Locals:         0       2       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0
  7782 ;;      Totals:         0       6       0       0       0       0
  7783 ;;Total ram usage:        6 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    3
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_StartUp_Menu
  7790 ;;		_Ssetting_PMT_Config
  7791 ;;		_printf
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           
  7796                           ;psect for function ___wmul
  7797  0000'                    ___wmul:	
  7798                           
  7799                           ;incstack = 0
  7800                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7801  0000' 0020               	movlb	0	; select bank0
  7802  0001' 0184'              	clrf	___wmul@product
  7803  0002' 0185'              	clrf	___wmul@product+1
  7804  0003'                    l3728:	
  7805  0003' 1C00'              	btfss	___wmul@multiplier,0
  7806  0004' 2800'              	goto	l807
  7807  0005' 0802'              	movf	___wmul@multiplicand,w
  7808  0006' 0784'              	addwf	___wmul@product,f
  7809  0007' 0803'              	movf	___wmul@multiplicand+1,w
  7810  0008' 3D85'              	addwfc	___wmul@product+1,f
  7811  0009'                    l807:	
  7812  0009' 3001               	movlw	1
  7813  000A'                    u3515:	
  7814  000A' 3582'              	lslf	___wmul@multiplicand,f
  7815  000B' 0D83'              	rlf	___wmul@multiplicand+1,f
  7816  000C' 0B89               	decfsz	9,f
  7817  000D' 2800'              	goto	u3515
  7818  000E' 3001               	movlw	1
  7819  000F'                    u3525:	
  7820  000F' 3681'              	lsrf	___wmul@multiplier+1,f
  7821  0010' 0C80'              	rrf	___wmul@multiplier,f
  7822  0011' 0B89               	decfsz	9,f
  7823  0012' 2800'              	goto	u3525
  7824  0013' 0800'              	movf	___wmul@multiplier,w
  7825  0014' 0401'              	iorwf	___wmul@multiplier+1,w
  7826  0015' 1D03               	btfss	3,2
  7827  0016' 2800'              	goto	l3728
  7828  0017' 0805'              	movf	___wmul@product+1,w
  7829  0018' 0081'              	movwf	?___wmul+1
  7830  0019' 0804'              	movf	___wmul@product,w
  7831  001A' 0080'              	movwf	?___wmul
  7832  001B' 0008               	return
  7833  001C'                    __end_of___wmul:	
  7834                           
  7835                           	psect	text28
  7836  0000'                    __ptext28:	
  7837 ;; *************** function ___llmod *****************
  7838 ;; Defined at:
  7839 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/llmod.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  divisor         4   26[BANK0 ] unsigned long 
  7842 ;;  dividend        4   30[BANK0 ] unsigned long 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  counter         1   35[BANK0 ] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  4   26[BANK0 ] unsigned long 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7854 ;;      Params:         0       8       0       0       0       0
  7855 ;;      Locals:         0       1       0       0       0       0
  7856 ;;      Temps:          0       1       0       0       0       0
  7857 ;;      Totals:         0      10       0       0       0       0
  7858 ;;Total ram usage:       10 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    3
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_printf
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function ___llmod
  7870  0000'                    ___llmod:	
  7871                           
  7872                           ;incstack = 0
  7873                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7874  0000' 0020               	movlb	0	; select bank0
  7875  0001' 081D'              	movf	___llmod@divisor+3,w
  7876  0002' 041C'              	iorwf	___llmod@divisor+2,w
  7877  0003' 041B'              	iorwf	___llmod@divisor+1,w
  7878  0004' 041A'              	iorwf	___llmod@divisor,w
  7879  0005' 1903               	skipnz
  7880  0006' 2800'              	goto	l3794
  7881  0007' 01A3'              	clrf	___llmod@counter
  7882  0008' 0AA3'              	incf	___llmod@counter,f
  7883  0009'                    l3784:	
  7884  0009' 1B9D'              	btfsc	___llmod@divisor+3,7
  7885  000A' 2800'              	goto	l3786
  7886  000B' 3001               	movlw	1
  7887  000C'                    u3665:	
  7888  000C' 359A'              	lslf	___llmod@divisor,f
  7889  000D' 0D9B'              	rlf	___llmod@divisor+1,f
  7890  000E' 0D9C'              	rlf	___llmod@divisor+2,f
  7891  000F' 0D9D'              	rlf	___llmod@divisor+3,f
  7892  0010' 0B89               	decfsz	9,f
  7893  0011' 2800'              	goto	u3665
  7894  0012' 3001               	movlw	1
  7895  0013' 00A2'              	movwf	??___llmod
  7896  0014' 0822'              	movf	??___llmod,w
  7897  0015' 07A3'              	addwf	___llmod@counter,f
  7898  0016' 2800'              	goto	l3784
  7899  0017'                    l3786:	
  7900  0017' 081D'              	movf	___llmod@divisor+3,w
  7901  0018' 0221'              	subwf	___llmod@dividend+3,w
  7902  0019' 1D03               	skipz
  7903  001A' 2800'              	goto	u3685
  7904  001B' 081C'              	movf	___llmod@divisor+2,w
  7905  001C' 0220'              	subwf	___llmod@dividend+2,w
  7906  001D' 1D03               	skipz
  7907  001E' 2800'              	goto	u3685
  7908  001F' 081B'              	movf	___llmod@divisor+1,w
  7909  0020' 021F'              	subwf	___llmod@dividend+1,w
  7910  0021' 1D03               	skipz
  7911  0022' 2800'              	goto	u3685
  7912  0023' 081A'              	movf	___llmod@divisor,w
  7913  0024' 021E'              	subwf	___llmod@dividend,w
  7914  0025'                    u3685:	
  7915  0025' 1C03               	skipc
  7916  0026' 2800'              	goto	l3790
  7917  0027' 081A'              	movf	___llmod@divisor,w
  7918  0028' 029E'              	subwf	___llmod@dividend,f
  7919  0029' 081B'              	movf	___llmod@divisor+1,w
  7920  002A' 3B9F'              	subwfb	___llmod@dividend+1,f
  7921  002B' 081C'              	movf	___llmod@divisor+2,w
  7922  002C' 3BA0'              	subwfb	___llmod@dividend+2,f
  7923  002D' 081D'              	movf	___llmod@divisor+3,w
  7924  002E' 3BA1'              	subwfb	___llmod@dividend+3,f
  7925  002F'                    l3790:	
  7926  002F' 3001               	movlw	1
  7927  0030'                    u3695:	
  7928  0030' 369D'              	lsrf	___llmod@divisor+3,f
  7929  0031' 0C9C'              	rrf	___llmod@divisor+2,f
  7930  0032' 0C9B'              	rrf	___llmod@divisor+1,f
  7931  0033' 0C9A'              	rrf	___llmod@divisor,f
  7932  0034' 0B89               	decfsz	9,f
  7933  0035' 2800'              	goto	u3695
  7934  0036' 3001               	movlw	1
  7935  0037' 02A3'              	subwf	___llmod@counter,f
  7936  0038' 1D03               	btfss	3,2
  7937  0039' 2800'              	goto	l3786
  7938  003A'                    l3794:	
  7939  003A' 0821'              	movf	___llmod@dividend+3,w
  7940  003B' 009D'              	movwf	?___llmod+3
  7941  003C' 0820'              	movf	___llmod@dividend+2,w
  7942  003D' 009C'              	movwf	?___llmod+2
  7943  003E' 081F'              	movf	___llmod@dividend+1,w
  7944  003F' 009B'              	movwf	?___llmod+1
  7945  0040' 081E'              	movf	___llmod@dividend,w
  7946  0041' 009A'              	movwf	?___llmod
  7947  0042' 0008               	return
  7948  0043'                    __end_of___llmod:	
  7949                           
  7950                           	psect	text29
  7951  0000'                    __ptext29:	
  7952 ;; *************** function ___lldiv *****************
  7953 ;; Defined at:
  7954 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/lldiv.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  divisor         4   12[BANK0 ] unsigned long 
  7957 ;;  dividend        4   16[BANK0 ] unsigned long 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  quotient        4   21[BANK0 ] unsigned long 
  7960 ;;  counter         1   25[BANK0 ] unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  4   12[BANK0 ] unsigned long 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7970 ;;      Params:         0       8       0       0       0       0
  7971 ;;      Locals:         0       5       0       0       0       0
  7972 ;;      Temps:          0       1       0       0       0       0
  7973 ;;      Totals:         0      14       0       0       0       0
  7974 ;;Total ram usage:       14 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    3
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_Timer1_GetCPS
  7981 ;;		_printf
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function ___lldiv
  7987  0000'                    ___lldiv:	
  7988                           
  7989                           ;incstack = 0
  7990                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7991  0000' 3000               	movlw	0
  7992  0001' 0020               	movlb	0	; select bank0
  7993  0002' 0098'              	movwf	___lldiv@quotient+3
  7994  0003' 3000               	movlw	0
  7995  0004' 0097'              	movwf	___lldiv@quotient+2
  7996  0005' 3000               	movlw	0
  7997  0006' 0096'              	movwf	___lldiv@quotient+1
  7998  0007' 3000               	movlw	0
  7999  0008' 0095'              	movwf	___lldiv@quotient
  8000  0009' 080F'              	movf	___lldiv@divisor+3,w
  8001  000A' 040E'              	iorwf	___lldiv@divisor+2,w
  8002  000B' 040D'              	iorwf	___lldiv@divisor+1,w
  8003  000C' 040C'              	iorwf	___lldiv@divisor,w
  8004  000D' 1903               	skipnz
  8005  000E' 2800'              	goto	l3774
  8006  000F' 0199'              	clrf	___lldiv@counter
  8007  0010' 0A99'              	incf	___lldiv@counter,f
  8008  0011'                    l3760:	
  8009  0011' 1B8F'              	btfsc	___lldiv@divisor+3,7
  8010  0012' 2800'              	goto	l3762
  8011  0013' 3001               	movlw	1
  8012  0014'                    u3595:	
  8013  0014' 358C'              	lslf	___lldiv@divisor,f
  8014  0015' 0D8D'              	rlf	___lldiv@divisor+1,f
  8015  0016' 0D8E'              	rlf	___lldiv@divisor+2,f
  8016  0017' 0D8F'              	rlf	___lldiv@divisor+3,f
  8017  0018' 0B89               	decfsz	9,f
  8018  0019' 2800'              	goto	u3595
  8019  001A' 3001               	movlw	1
  8020  001B' 0094'              	movwf	??___lldiv
  8021  001C' 0814'              	movf	??___lldiv,w
  8022  001D' 0799'              	addwf	___lldiv@counter,f
  8023  001E' 2800'              	goto	l3760
  8024  001F'                    l3762:	
  8025  001F' 3001               	movlw	1
  8026  0020'                    u3615:	
  8027  0020' 3595'              	lslf	___lldiv@quotient,f
  8028  0021' 0D96'              	rlf	___lldiv@quotient+1,f
  8029  0022' 0D97'              	rlf	___lldiv@quotient+2,f
  8030  0023' 0D98'              	rlf	___lldiv@quotient+3,f
  8031  0024' 0B89               	decfsz	9,f
  8032  0025' 2800'              	goto	u3615
  8033  0026' 080F'              	movf	___lldiv@divisor+3,w
  8034  0027' 0213'              	subwf	___lldiv@dividend+3,w
  8035  0028' 1D03               	skipz
  8036  0029' 2800'              	goto	u3625
  8037  002A' 080E'              	movf	___lldiv@divisor+2,w
  8038  002B' 0212'              	subwf	___lldiv@dividend+2,w
  8039  002C' 1D03               	skipz
  8040  002D' 2800'              	goto	u3625
  8041  002E' 080D'              	movf	___lldiv@divisor+1,w
  8042  002F' 0211'              	subwf	___lldiv@dividend+1,w
  8043  0030' 1D03               	skipz
  8044  0031' 2800'              	goto	u3625
  8045  0032' 080C'              	movf	___lldiv@divisor,w
  8046  0033' 0210'              	subwf	___lldiv@dividend,w
  8047  0034'                    u3625:	
  8048  0034' 1C03               	skipc
  8049  0035' 2800'              	goto	l3770
  8050  0036' 080C'              	movf	___lldiv@divisor,w
  8051  0037' 0290'              	subwf	___lldiv@dividend,f
  8052  0038' 080D'              	movf	___lldiv@divisor+1,w
  8053  0039' 3B91'              	subwfb	___lldiv@dividend+1,f
  8054  003A' 080E'              	movf	___lldiv@divisor+2,w
  8055  003B' 3B92'              	subwfb	___lldiv@dividend+2,f
  8056  003C' 080F'              	movf	___lldiv@divisor+3,w
  8057  003D' 3B93'              	subwfb	___lldiv@dividend+3,f
  8058  003E' 1415'              	bsf	___lldiv@quotient,0
  8059  003F'                    l3770:	
  8060  003F' 3001               	movlw	1
  8061  0040'                    u3635:	
  8062  0040' 368F'              	lsrf	___lldiv@divisor+3,f
  8063  0041' 0C8E'              	rrf	___lldiv@divisor+2,f
  8064  0042' 0C8D'              	rrf	___lldiv@divisor+1,f
  8065  0043' 0C8C'              	rrf	___lldiv@divisor,f
  8066  0044' 0B89               	decfsz	9,f
  8067  0045' 2800'              	goto	u3635
  8068  0046' 3001               	movlw	1
  8069  0047' 0299'              	subwf	___lldiv@counter,f
  8070  0048' 1D03               	btfss	3,2
  8071  0049' 2800'              	goto	l3762
  8072  004A'                    l3774:	
  8073  004A' 0818'              	movf	___lldiv@quotient+3,w
  8074  004B' 008F'              	movwf	?___lldiv+3
  8075  004C' 0817'              	movf	___lldiv@quotient+2,w
  8076  004D' 008E'              	movwf	?___lldiv+2
  8077  004E' 0816'              	movf	___lldiv@quotient+1,w
  8078  004F' 008D'              	movwf	?___lldiv+1
  8079  0050' 0815'              	movf	___lldiv@quotient,w
  8080  0051' 008C'              	movwf	?___lldiv
  8081  0052' 0008               	return
  8082  0053'                    __end_of___lldiv:	
  8083                           
  8084                           	psect	text30
  8085  0000'                    __ptext30:	
  8086 ;; *************** function _mTouch_Check *****************
  8087 ;; Defined at:
  8088 ;;		line 60 in file "PIC_mTouch.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  elements        1    wreg     unsigned char 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  elements        1    8[BANK0 ] unsigned char 
  8093 ;;  DifferValue     2    6[BANK0 ] int 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      unsigned char 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8103 ;;      Params:         0       0       0       0       0       0
  8104 ;;      Locals:         0       3       0       0       0       0
  8105 ;;      Temps:          0       6       0       0       0       0
  8106 ;;      Totals:         0       9       0       0       0       0
  8107 ;;Total ram usage:        9 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    3
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_main
  8114 ;;		_Ssetting_PMT_Config
  8115 ;;		_Show_PMT_Config
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _mTouch_Check
  8121  0000'                    _mTouch_Check:	
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _mTouch_Check: [wreg-fsr1h+status,2+status,0]
  8125                           ;mTouch_Check@elements stored from wreg
  8126  0000' 0020               	movlb	0	; select bank0
  8127  0001' 0088'              	movwf	mTouch_Check@elements
  8128                           
  8129                           ;PIC_mTouch.c: 62: if(using_channel<=elements)return 0;
  8130  0002' 0803'              	movf	_using_channel,w
  8131  0003' 0208'              	subwf	mTouch_Check@elements,w
  8132  0004' 1C03               	skipc
  8133  0005' 2800'              	goto	l2682
  8134  0006' 3000               	movlw	0
  8135  0007' 0008               	return
  8136  0008'                    l2682:	
  8137                           
  8138                           ;PIC_mTouch.c: 64: int16_t DifferValue = (int16_t)(config_ptr[elements].CPS_PreData-conf
      +                          ig_ptr[elements].CPS_Data);
  8139  0008' 0808'              	movf	mTouch_Check@elements,w
  8140  0009' 0080'              	movwf	??_mTouch_Check
  8141  000A' 3002               	movlw	2
  8142  000B'                    u2145:	
  8143  000B' 3580'              	lslf	??_mTouch_Check,f
  8144  000C' 3EFF               	addlw	-1
  8145  000D' 1D03               	skipz
  8146  000E' 2800'              	goto	u2145
  8147  000F' 3500'              	lslf	??_mTouch_Check,w
  8148  0010' 0704'              	addwf	_config_ptr,w
  8149  0011' 0081'              	movwf	??_mTouch_Check+1
  8150  0012' 0801'              	movf	??_mTouch_Check+1,w
  8151  0013' 3E05               	addlw	5
  8152  0014' 0086               	movwf	6
  8153  0015' 0187               	clrf	7
  8154  0016' 0808'              	movf	mTouch_Check@elements,w
  8155  0017' 0082'              	movwf	??_mTouch_Check+2
  8156  0018' 3002               	movlw	2
  8157  0019'                    u2155:	
  8158  0019' 3582'              	lslf	??_mTouch_Check+2,f
  8159  001A' 3EFF               	addlw	-1
  8160  001B' 1D03               	skipz
  8161  001C' 2800'              	goto	u2155
  8162  001D' 3502'              	lslf	??_mTouch_Check+2,w
  8163  001E' 0704'              	addwf	_config_ptr,w
  8164  001F' 0083'              	movwf	??_mTouch_Check+3
  8165  0020' 0803'              	movf	??_mTouch_Check+3,w
  8166  0021' 3E03               	addlw	3
  8167  0022' 0084               	movwf	4
  8168  0023' 0185               	clrf	5
  8169  0024' 3F00               	moviw [0]fsr0
  8170  0025' 0084'              	movwf	??_mTouch_Check+4
  8171  0026' 3F01               	moviw [1]fsr0
  8172  0027' 0085'              	movwf	??_mTouch_Check+5
  8173  0028' 0984'              	comf	??_mTouch_Check+4,f
  8174  0029' 0985'              	comf	??_mTouch_Check+5,f
  8175  002A' 0A84'              	incf	??_mTouch_Check+4,f
  8176  002B' 1903               	skipnz
  8177  002C' 0A85'              	incf	??_mTouch_Check+5,f
  8178  002D' 3F40               	moviw [0]fsr1
  8179  002E' 0704'              	addwf	??_mTouch_Check+4,w
  8180  002F' 0086'              	movwf	mTouch_Check@DifferValue
  8181  0030' 3F41               	moviw [1]fsr1
  8182  0031' 3D05'              	addwfc	??_mTouch_Check+5,w
  8183  0032' 0087'              	movwf	mTouch_Check@DifferValue+1
  8184                           
  8185                           ;PIC_mTouch.c: 66: if((DifferValue>config_ptr[elements].Threshould_Diff)&&!config_ptr[el
      +                          ements].Check_Interval)
  8186  0033' 0808'              	movf	mTouch_Check@elements,w
  8187  0034' 0080'              	movwf	??_mTouch_Check
  8188  0035' 3002               	movlw	2
  8189  0036'                    u2165:	
  8190  0036' 3580'              	lslf	??_mTouch_Check,f
  8191  0037' 3EFF               	addlw	-1
  8192  0038' 1D03               	skipz
  8193  0039' 2800'              	goto	u2165
  8194  003A' 3500'              	lslf	??_mTouch_Check,w
  8195  003B' 0704'              	addwf	_config_ptr,w
  8196  003C' 0081'              	movwf	??_mTouch_Check+1
  8197  003D' 0A01'              	incf	??_mTouch_Check+1,w
  8198  003E' 0086               	movwf	6
  8199  003F' 0187               	clrf	7
  8200  0040' 3F40               	moviw [0]fsr1
  8201  0041' 0082'              	movwf	??_mTouch_Check+2
  8202  0042' 3F41               	moviw [1]fsr1
  8203  0043' 0083'              	movwf	??_mTouch_Check+3
  8204  0044' 0803'              	movf	??_mTouch_Check+3,w
  8205  0045' 3A80               	xorlw	128
  8206  0046' 0084'              	movwf	??_mTouch_Check+4
  8207  0047' 0807'              	movf	mTouch_Check@DifferValue+1,w
  8208  0048' 3A80               	xorlw	128
  8209  0049' 0204'              	subwf	??_mTouch_Check+4,w
  8210  004A' 1D03               	skipz
  8211  004B' 2800'              	goto	u2175
  8212  004C' 0806'              	movf	mTouch_Check@DifferValue,w
  8213  004D' 0202'              	subwf	??_mTouch_Check+2,w
  8214  004E'                    u2175:	
  8215  004E' 1803               	skipnc
  8216  004F' 2800'              	goto	l2694
  8217  0050' 0020               	movlb	0	; select bank0
  8218  0051' 0808'              	movf	mTouch_Check@elements,w
  8219  0052' 0080'              	movwf	??_mTouch_Check
  8220  0053' 3002               	movlw	2
  8221  0054'                    u2185:	
  8222  0054' 3580'              	lslf	??_mTouch_Check,f
  8223  0055' 3EFF               	addlw	-1
  8224  0056' 1D03               	skipz
  8225  0057' 2800'              	goto	u2185
  8226  0058' 3500'              	lslf	??_mTouch_Check,w
  8227  0059' 0704'              	addwf	_config_ptr,w
  8228  005A' 0081'              	movwf	??_mTouch_Check+1
  8229  005B' 0801'              	movf	??_mTouch_Check+1,w
  8230  005C' 3E07               	addlw	7
  8231  005D' 0086               	movwf	6
  8232  005E' 0187               	clrf	7
  8233  005F' 0801               	movf	1,w
  8234  0060' 1D03               	btfss	3,2
  8235  0061' 2800'              	goto	l2694
  8236                           
  8237                           ;PIC_mTouch.c: 67: {
  8238                           ;PIC_mTouch.c: 68: config_ptr[elements].Check_Interval = 100;
  8239  0062' 3064               	movlw	100
  8240  0063' 0080'              	movwf	??_mTouch_Check
  8241  0064' 0808'              	movf	mTouch_Check@elements,w
  8242  0065' 0081'              	movwf	??_mTouch_Check+1
  8243  0066' 3002               	movlw	2
  8244  0067'                    u2205:	
  8245  0067' 3581'              	lslf	??_mTouch_Check+1,f
  8246  0068' 3EFF               	addlw	-1
  8247  0069' 1D03               	skipz
  8248  006A' 2800'              	goto	u2205
  8249  006B' 3501'              	lslf	??_mTouch_Check+1,w
  8250  006C' 0704'              	addwf	_config_ptr,w
  8251  006D' 0082'              	movwf	??_mTouch_Check+2
  8252  006E' 0802'              	movf	??_mTouch_Check+2,w
  8253  006F' 3E07               	addlw	7
  8254  0070' 0086               	movwf	6
  8255  0071' 0187               	clrf	7
  8256  0072' 0800'              	movf	??_mTouch_Check,w
  8257  0073' 0081               	movwf	1
  8258                           
  8259                           ;PIC_mTouch.c: 69: return 1;
  8260  0074' 3001               	movlw	1
  8261  0075' 0008               	return
  8262  0076'                    l2694:	
  8263                           
  8264                           ;PIC_mTouch.c: 70: }
  8265                           ;PIC_mTouch.c: 71: return 0;
  8266  0076' 3000               	movlw	0
  8267  0077' 0008               	return
  8268  0078'                    __end_of_mTouch_Check:	
  8269                           
  8270                           	psect	text31
  8271  0000'                    __ptext31:	
  8272 ;; *************** function _LCD1602_CursorPosition *****************
  8273 ;; Defined at:
  8274 ;;		line 97 in file "LCD1602.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  tx              1    wreg     unsigned char 
  8277 ;;  ty              1    3[BANK0 ] unsigned char 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  tx              1    5[BANK0 ] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0, pclath, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8289 ;;      Params:         0       1       0       0       0       0
  8290 ;;      Locals:         0       1       0       0       0       0
  8291 ;;      Temps:          0       1       0       0       0       0
  8292 ;;      Totals:         0       3       0       0       0       0
  8293 ;;Total ram usage:        3 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    4
  8296 ;; This function calls:
  8297 ;;		_LCD1602_WriteData
  8298 ;; This function is called by:
  8299 ;;		_main
  8300 ;;		_StartUp_Menu
  8301 ;;		_Ssetting_PMT_Config
  8302 ;;		_Show_PMT_Config
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function _LCD1602_CursorPosition
  8308  0000'                    _LCD1602_CursorPosition:	
  8309                           
  8310                           ;incstack = 0
  8311                           ; Regs used in _LCD1602_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  8312                           ;LCD1602_CursorPosition@tx stored from wreg
  8313  0000' 0020               	movlb	0	; select bank0
  8314  0001' 0085'              	movwf	LCD1602_CursorPosition@tx
  8315                           
  8316                           ;LCD1602.c: 99: LATA3 = 0;
  8317  0002' 0022               	movlb	2	; select bank2
  8318  0003' 118C               	bcf	12,3	;volatile
  8319                           
  8320                           ;LCD1602.c: 100: LCD1602_WriteData(0x80|tx|(0x40*ty));
  8321  0004' 0020               	movlb	0	; select bank0
  8322  0005' 0803'              	movf	LCD1602_CursorPosition@ty,w
  8323  0006' 0084'              	movwf	??_LCD1602_CursorPosition
  8324  0007' 3005               	movlw	5
  8325  0008'                    u3735:	
  8326  0008' 3584'              	lslf	??_LCD1602_CursorPosition,f
  8327  0009' 3EFF               	addlw	-1
  8328  000A' 1D03               	skipz
  8329  000B' 2800'              	goto	u3735
  8330  000C' 3504'              	lslf	??_LCD1602_CursorPosition,w
  8331  000D' 0405'              	iorwf	LCD1602_CursorPosition@tx,w
  8332  000E' 3880               	iorlw	-128
  8333  000F' 3180' 2000' 3180'  	fcall	_LCD1602_WriteData
  8334                           
  8335                           ;LCD1602.c: 101: _delay((unsigned long)((40)*(32000000/4000000.0)));
  8336  0012' 306A               	movlw	106
  8337  0013'                    u4397:	
  8338  0013' 0B89               	decfsz	9,f
  8339  0014' 2800'              	goto	u4397
  8340  0015' 3200               	nop2
  8341  0016' 0008               	return
  8342  0017'                    __end_of_LCD1602_CursorPosition:	
  8343                           
  8344                           	psect	text32
  8345  0000'                    __ptext32:	
  8346 ;; *************** function _LCD1602_CursorHome *****************
  8347 ;; Defined at:
  8348 ;;		line 86 in file "LCD1602.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8362 ;;      Params:         0       0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0
  8364 ;;      Temps:          0       1       0       0       0       0
  8365 ;;      Totals:         0       1       0       0       0       0
  8366 ;;Total ram usage:        1 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    4
  8369 ;; This function calls:
  8370 ;;		_LCD1602_WriteData
  8371 ;; This function is called by:
  8372 ;;		_StartUp_Menu
  8373 ;;		_Ssetting_PMT_Config
  8374 ;;		_Show_PMT_Config
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function _LCD1602_CursorHome
  8380  0000'                    _LCD1602_CursorHome:	
  8381                           
  8382                           ;LCD1602.c: 88: LATA3 = 0;
  8383                           
  8384                           ;incstack = 0
  8385                           ; Regs used in _LCD1602_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  8386  0000' 0022               	movlb	2	; select bank2
  8387  0001' 118C               	bcf	12,3	;volatile
  8388                           
  8389                           ;LCD1602.c: 89: LCD1602_WriteData(0x02);
  8390  0002' 3002               	movlw	2
  8391  0003' 3180' 2000' 3180'  	fcall	_LCD1602_WriteData
  8392                           
  8393                           ;LCD1602.c: 90: _delay((unsigned long)((2)*(32000000/4000.0)));
  8394  0006' 3015               	movlw	21
  8395  0007' 0020               	movlb	0	; select bank0
  8396  0008' 0083'              	movwf	??_LCD1602_CursorHome
  8397  0009' 30C6               	movlw	198
  8398  000A'                    u4407:	
  8399  000A' 0B89               	decfsz	9,f
  8400  000B' 2800'              	goto	u4407
  8401  000C' 0B83'              	decfsz	??_LCD1602_CursorHome,f
  8402  000D' 2800'              	goto	u4407
  8403  000E' 0000               	nop
  8404  000F' 0008               	return
  8405  0010'                    __end_of_LCD1602_CursorHome:	
  8406                           
  8407                           	psect	text33
  8408  0000'                    __ptext33:	
  8409 ;; *************** function _LCD1602_Init *****************
  8410 ;; Defined at:
  8411 ;;		line 28 in file "LCD1602.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  LCD1602_Init    2    4[BANK0 ] PTR FTN()void 
  8414 ;;		 -> Absolute function(1), 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2, status,0, pclath, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8426 ;;      Params:         0       2       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0
  8428 ;;      Temps:          0       2       0       0       0       0
  8429 ;;      Totals:         0       4       0       0       0       0
  8430 ;;Total ram usage:        4 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    5
  8433 ;; This function calls:
  8434 ;;		_LCD1602_DisplayClear
  8435 ;;		_LCD1602_WriteData
  8436 ;; This function is called by:
  8437 ;;		_main
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           
  8442                           ;psect for function _LCD1602_Init
  8443  0000'                    _LCD1602_Init:	
  8444                           
  8445                           ;LCD1602.c: 32: LATA3 = 0;
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _LCD1602_Init: [wreg+status,2+status,0+pclath+cstack]
  8449  0000' 0022               	movlb	2	; select bank2
  8450  0001' 118C               	bcf	12,3	;volatile
  8451                           
  8452                           ;LCD1602.c: 33: LATA4 = 0;
  8453  0002' 120C               	bcf	12,4	;volatile
  8454                           
  8455                           ;LCD1602.c: 35: _delay((unsigned long)((30)*(32000000/4000.0)));
  8456  0003' 3002               	movlw	2
  8457  0004' 0020               	movlb	0	; select bank0
  8458  0005' 0087'              	movwf	??_LCD1602_Init+1
  8459  0006' 3038               	movlw	56
  8460  0007' 0086'              	movwf	??_LCD1602_Init
  8461  0008' 30AD               	movlw	173
  8462  0009'                    u4417:	
  8463  0009' 0B89               	decfsz	9,f
  8464  000A' 2800'              	goto	u4417
  8465  000B' 0B86'              	decfsz	??_LCD1602_Init,f
  8466  000C' 2800'              	goto	u4417
  8467  000D' 0B87'              	decfsz	??_LCD1602_Init+1,f
  8468  000E' 2800'              	goto	u4417
  8469                           
  8470                           ;LCD1602.c: 36: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  8471  000F' 3003               	movlw	3
  8472  0010' 0020               	movlb	0	; select bank0
  8473  0011' 008D               	movwf	13	;volatile
  8474                           
  8475                           ;LCD1602.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8476  0012' 0022               	movlb	2	; select bank2
  8477  0013' 160C               	bsf	12,4	;volatile
  8478  0014' 3200               	nop2	;2 cycle nop
  8479  0015' 3200               	nop2	;2 cycle nop
  8480  0016' 3200               	nop2	;2 cycle nop
  8481  0017' 3200               	nop2	;2 cycle nop
  8482  0018' 0022               	movlb	2	; select bank2
  8483  0019' 120C               	bcf	12,4	;volatile
  8484  001A' 3200               	nop2	;2 cycle nop
  8485  001B' 3200               	nop2	;2 cycle nop
  8486  001C' 3200               	nop2	;2 cycle nop
  8487  001D' 3200               	nop2	;2 cycle nop
  8488                           
  8489                           ;LCD1602.c: 38: _delay((unsigned long)((5)*(32000000/4000.0)));
  8490  001E' 3034               	movlw	52
  8491  001F' 0020               	movlb	0	; select bank0
  8492  0020' 0086'              	movwf	??_LCD1602_Init
  8493  0021' 30F1               	movlw	241
  8494  0022'                    u4427:	
  8495  0022' 0B89               	decfsz	9,f
  8496  0023' 2800'              	goto	u4427
  8497  0024' 0B86'              	decfsz	??_LCD1602_Init,f
  8498  0025' 2800'              	goto	u4427
  8499  0026' 3200               	nop2
  8500                           
  8501                           ;LCD1602.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8502  0027' 0022               	movlb	2	; select bank2
  8503  0028' 160C               	bsf	12,4	;volatile
  8504  0029' 3200               	nop2	;2 cycle nop
  8505  002A' 3200               	nop2	;2 cycle nop
  8506  002B' 3200               	nop2	;2 cycle nop
  8507  002C' 3200               	nop2	;2 cycle nop
  8508  002D' 0022               	movlb	2	; select bank2
  8509  002E' 120C               	bcf	12,4	;volatile
  8510  002F' 3200               	nop2	;2 cycle nop
  8511  0030' 3200               	nop2	;2 cycle nop
  8512  0031' 3200               	nop2	;2 cycle nop
  8513  0032' 3200               	nop2	;2 cycle nop
  8514                           
  8515                           ;LCD1602.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  8516  0033' 3005               	movlw	5
  8517  0034' 0020               	movlb	0	; select bank0
  8518  0035' 0086'              	movwf	??_LCD1602_Init
  8519  0036' 3026               	movlw	38
  8520  0037'                    u4437:	
  8521  0037' 0B89               	decfsz	9,f
  8522  0038' 2800'              	goto	u4437
  8523  0039' 0B86'              	decfsz	??_LCD1602_Init,f
  8524  003A' 2800'              	goto	u4437
  8525  003B' 0000               	nop
  8526                           
  8527                           ;LCD1602.c: 41: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8528  003C' 0022               	movlb	2	; select bank2
  8529  003D' 160C               	bsf	12,4	;volatile
  8530  003E' 3200               	nop2	;2 cycle nop
  8531  003F' 3200               	nop2	;2 cycle nop
  8532  0040' 3200               	nop2	;2 cycle nop
  8533  0041' 3200               	nop2	;2 cycle nop
  8534  0042' 0022               	movlb	2	; select bank2
  8535  0043' 120C               	bcf	12,4	;volatile
  8536  0044' 3200               	nop2	;2 cycle nop
  8537  0045' 3200               	nop2	;2 cycle nop
  8538  0046' 3200               	nop2	;2 cycle nop
  8539  0047' 3200               	nop2	;2 cycle nop
  8540                           
  8541                           ;LCD1602.c: 42: _delay((unsigned long)((400)*(32000000/4000000.0)));
  8542  0048' 3005               	movlw	5
  8543  0049' 0020               	movlb	0	; select bank0
  8544  004A' 0086'              	movwf	??_LCD1602_Init
  8545  004B' 3026               	movlw	38
  8546  004C'                    u4447:	
  8547  004C' 0B89               	decfsz	9,f
  8548  004D' 2800'              	goto	u4447
  8549  004E' 0B86'              	decfsz	??_LCD1602_Init,f
  8550  004F' 2800'              	goto	u4447
  8551  0050' 0000               	nop
  8552                           
  8553                           ;LCD1602.c: 43: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  8554  0051' 3002               	movlw	2
  8555  0052' 0020               	movlb	0	; select bank0
  8556  0053' 008D               	movwf	13	;volatile
  8557                           
  8558                           ;LCD1602.c: 44: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8559  0054' 0022               	movlb	2	; select bank2
  8560  0055' 160C               	bsf	12,4	;volatile
  8561  0056' 3200               	nop2	;2 cycle nop
  8562  0057' 3200               	nop2	;2 cycle nop
  8563  0058' 3200               	nop2	;2 cycle nop
  8564  0059' 3200               	nop2	;2 cycle nop
  8565  005A' 0022               	movlb	2	; select bank2
  8566  005B' 120C               	bcf	12,4	;volatile
  8567  005C' 3200               	nop2	;2 cycle nop
  8568  005D' 3200               	nop2	;2 cycle nop
  8569  005E' 3200               	nop2	;2 cycle nop
  8570  005F' 3200               	nop2	;2 cycle nop
  8571                           
  8572                           ;LCD1602.c: 46: LCD1602_WriteData(0x28);
  8573  0060' 3028               	movlw	40
  8574  0061' 3180' 2000' 3180'  	fcall	_LCD1602_WriteData
  8575                           
  8576                           ;LCD1602.c: 47: LCD1602_WriteData(0x0c);
  8577  0064' 300C               	movlw	12
  8578  0065' 3180' 2000' 3180'  	fcall	_LCD1602_WriteData
  8579                           
  8580                           ;LCD1602.c: 48: LCD1602_DisplayClear();
  8581  0068' 3180' 2000' 3180'  	fcall	_LCD1602_DisplayClear
  8582                           
  8583                           ;LCD1602.c: 49: LCD1602_WriteData(0x06);
  8584  006B' 3006               	movlw	6
  8585  006C' 3180' 2000'        	fcall	_LCD1602_WriteData
  8586  006E' 0008               	return
  8587  006F'                    __end_of_LCD1602_Init:	
  8588                           
  8589                           	psect	text34
  8590  0000'                    __ptext34:	
  8591 ;; *************** function _LCD1602_DisplayClear *****************
  8592 ;; Defined at:
  8593 ;;		line 75 in file "LCD1602.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0, pclath, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8607 ;;      Params:         0       0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0
  8609 ;;      Temps:          0       1       0       0       0       0
  8610 ;;      Totals:         0       1       0       0       0       0
  8611 ;;Total ram usage:        1 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    4
  8614 ;; This function calls:
  8615 ;;		_LCD1602_WriteData
  8616 ;; This function is called by:
  8617 ;;		_main
  8618 ;;		_StartUp_Menu
  8619 ;;		_Ssetting_PMT_Config
  8620 ;;		_Show_PMT_Config
  8621 ;;		_LCD1602_Init
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _LCD1602_DisplayClear
  8627  0000'                    _LCD1602_DisplayClear:	
  8628                           
  8629                           ;LCD1602.c: 77: LATA3 = 0;
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _LCD1602_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  8633  0000' 0022               	movlb	2	; select bank2
  8634  0001' 118C               	bcf	12,3	;volatile
  8635                           
  8636                           ;LCD1602.c: 78: LCD1602_WriteData(0x01);
  8637  0002' 3001               	movlw	1
  8638  0003' 3180' 2000' 3180'  	fcall	_LCD1602_WriteData
  8639                           
  8640                           ;LCD1602.c: 79: _delay((unsigned long)((2)*(32000000/4000.0)));
  8641  0006' 3015               	movlw	21
  8642  0007' 0020               	movlb	0	; select bank0
  8643  0008' 0083'              	movwf	??_LCD1602_DisplayClear
  8644  0009' 30C6               	movlw	198
  8645  000A'                    u4457:	
  8646  000A' 0B89               	decfsz	9,f
  8647  000B' 2800'              	goto	u4457
  8648  000C' 0B83'              	decfsz	??_LCD1602_DisplayClear,f
  8649  000D' 2800'              	goto	u4457
  8650  000E' 0000               	nop
  8651  000F' 0008               	return
  8652  0010'                    __end_of_LCD1602_DisplayClear:	
  8653                           
  8654                           	psect	text35
  8655  0000'                    __ptext35:	
  8656 ;; *************** function _LCD1602_WriteData *****************
  8657 ;; Defined at:
  8658 ;;		line 15 in file "LCD1602.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  point           1    wreg     char 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  point           1    2[BANK0 ] char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8672 ;;      Params:         0       0       0       0       0       0
  8673 ;;      Locals:         0       1       0       0       0       0
  8674 ;;      Temps:          0       2       0       0       0       0
  8675 ;;      Totals:         0       3       0       0       0       0
  8676 ;;Total ram usage:        3 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    3
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_LCD1602_Init
  8683 ;;		_putch
  8684 ;;		_LCD1602_DisplayClear
  8685 ;;		_LCD1602_CursorHome
  8686 ;;		_LCD1602_CursorPosition
  8687 ;;		_LCD1602_Put
  8688 ;;		_LCD1602_CursorShift
  8689 ;;		_LCD1602_DispShift
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           
  8694                           ;psect for function _LCD1602_WriteData
  8695  0000'                    _LCD1602_WriteData:	
  8696                           
  8697                           ;incstack = 0
  8698                           ; Regs used in _LCD1602_WriteData: [wreg+status,2+status,0]
  8699                           ;LCD1602_WriteData@point stored from wreg
  8700  0000' 0020               	movlb	0	; select bank0
  8701  0001' 0082'              	movwf	LCD1602_WriteData@point
  8702                           
  8703                           ;LCD1602.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  8704  0002' 30D5               	movlw	213
  8705  0003'                    u4467:	
  8706  0003' 0B89               	decfsz	9,f
  8707  0004' 2800'              	goto	u4467
  8708  0005' 0000               	nop
  8709                           
  8710                           ;LCD1602.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  8711  0006' 0020               	movlb	0	; select bank0
  8712  0007' 0802'              	movf	LCD1602_WriteData@point,w
  8713  0008' 0080'              	movwf	??_LCD1602_WriteData
  8714  0009' 3004               	movlw	4
  8715  000A'                    u3435:	
  8716  000A' 1003               	clrc
  8717  000B' 1B80'              	btfsc	??_LCD1602_WriteData,7
  8718  000C' 1403               	setc
  8719  000D' 0C80'              	rrf	??_LCD1602_WriteData,f
  8720  000E' 0B89               	decfsz	9,f
  8721  000F' 2800'              	goto	u3435
  8722  0010' 3003               	movlw	3
  8723  0011' 0500'              	andwf	??_LCD1602_WriteData,w
  8724  0012' 0081'              	movwf	??_LCD1602_WriteData+1
  8725  0013' 0E02'              	swapf	LCD1602_WriteData@point,w
  8726  0014' 390F               	andlw	15
  8727  0015' 1989               	btfsc	9,3
  8728  0016' 38F0               	iorlw	240
  8729  0017' 390C               	andlw	12
  8730  0018' 0709               	addwf	9,w
  8731  0019' 0401'              	iorwf	??_LCD1602_WriteData+1,w
  8732  001A' 008D               	movwf	13	;volatile
  8733                           
  8734                           ;LCD1602.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8735  001B' 0022               	movlb	2	; select bank2
  8736  001C' 160C               	bsf	12,4	;volatile
  8737  001D' 3200               	nop2	;2 cycle nop
  8738  001E' 3200               	nop2	;2 cycle nop
  8739  001F' 3200               	nop2	;2 cycle nop
  8740  0020' 3200               	nop2	;2 cycle nop
  8741  0021' 0022               	movlb	2	; select bank2
  8742  0022' 120C               	bcf	12,4	;volatile
  8743  0023' 3200               	nop2	;2 cycle nop
  8744  0024' 3200               	nop2	;2 cycle nop
  8745  0025' 3200               	nop2	;2 cycle nop
  8746  0026' 3200               	nop2	;2 cycle nop
  8747                           
  8748                           ;LCD1602.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  8749  0027' 3003               	movlw	3
  8750  0028' 0020               	movlb	0	; select bank0
  8751  0029' 0502'              	andwf	LCD1602_WriteData@point,w
  8752  002A' 0080'              	movwf	??_LCD1602_WriteData
  8753  002B' 0802'              	movf	LCD1602_WriteData@point,w
  8754  002C' 390C               	andlw	12
  8755  002D' 0709               	addwf	9,w
  8756  002E' 0400'              	iorwf	??_LCD1602_WriteData,w
  8757  002F' 008D               	movwf	13	;volatile
  8758                           
  8759                           ;LCD1602.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0
      +                          ; _delay((unsigned long)((1)*(32000000/4000000.0)));};
  8760  0030' 0022               	movlb	2	; select bank2
  8761  0031' 160C               	bsf	12,4	;volatile
  8762  0032' 3200               	nop2	;2 cycle nop
  8763  0033' 3200               	nop2	;2 cycle nop
  8764  0034' 3200               	nop2	;2 cycle nop
  8765  0035' 3200               	nop2	;2 cycle nop
  8766  0036' 0022               	movlb	2	; select bank2
  8767  0037' 120C               	bcf	12,4	;volatile
  8768  0038' 3200               	nop2	;2 cycle nop
  8769  0039' 3200               	nop2	;2 cycle nop
  8770  003A' 3200               	nop2	;2 cycle nop
  8771  003B' 3200               	nop2	;2 cycle nop
  8772  003C' 0008               	return
  8773  003D'                    __end_of_LCD1602_WriteData:	
  8774                           
  8775                           	psect	text36
  8776  0000'                    __ptext36:	
  8777 ;; *************** function _DAC_Initialize *****************
  8778 ;; Defined at:
  8779 ;;		line 14 in file "MCP4726.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8793 ;;      Params:         0       0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0
  8795 ;;      Temps:          0       2       0       0       0       0
  8796 ;;      Totals:         0       2       0       0       0       0
  8797 ;;Total ram usage:        2 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:    5
  8800 ;; This function calls:
  8801 ;;		_I2C2_Init
  8802 ;;		_I2C_Transmit
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _DAC_Initialize
  8810  0000'                    _DAC_Initialize:	
  8811                           
  8812                           ;MCP4726.c: 16: I2C2_Init(I2C2_Init_Port,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  8813                           
  8814                           ;incstack = 0
  8815                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8816  0000' 3000'              	movlw	low _I2C2_Init_Port
  8817  0001' 0020               	movlb	0	; select bank0
  8818  0002' 0081'              	movwf	I2C2_Init@I2C2_Init_PORT
  8819  0003' 3000'              	movlw	high _I2C2_Init_Port
  8820  0004' 0082'              	movwf	I2C2_Init@I2C2_Init_PORT+1
  8821  0005' 0183'              	clrf	I2C2_Init@address
  8822  0006' 0184'              	clrf	I2C2_Init@mode
  8823  0007' 0185'              	clrf	I2C2_Init@Speed
  8824  0008' 3180' 2000' 3180'  	fcall	_I2C2_Init
  8825                           
  8826                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  8827  000B' 0020               	movlb	0	; select bank0
  8828  000C' 0801'              	movf	_ConfigReg,w
  8829  000D' 391F               	andlw	-225
  8830  000E' 3880               	iorlw	128
  8831  000F' 0081'              	movwf	_ConfigReg
  8832                           
  8833                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  8834  0010' 1001'              	bcf	_ConfigReg,0
  8835                           
  8836                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  8837  0011' 30F9               	movlw	-7
  8838  0012' 0581'              	andwf	_ConfigReg,f
  8839                           
  8840                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  8841  0013' 30E7               	movlw	-25
  8842  0014' 0581'              	andwf	_ConfigReg,f
  8843                           
  8844                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  8845  0015' 3060               	movlw	96
  8846  0016' 0090'              	movwf	??_DAC_Initialize
  8847  0017' 0810'              	movf	??_DAC_Initialize,w
  8848  0018' 0088'              	movwf	I2C_Transmit@address
  8849  0019' 3000'              	movlw	(low (_ConfigReg| 0))& (0+255)
  8850  001A' 0091'              	movwf	??_DAC_Initialize+1
  8851  001B' 0811'              	movf	??_DAC_Initialize+1,w
  8852  001C' 0089'              	movwf	I2C_Transmit@pData
  8853  001D' 018A'              	clrf	I2C_Transmit@size
  8854  001E' 0A8A'              	incf	I2C_Transmit@size,f
  8855  001F' 3001               	movlw	1
  8856  0020' 3180' 2000'        	fcall	_I2C_Transmit
  8857  0022' 0008               	return
  8858  0023'                    __end_of_DAC_Initialize:	
  8859                           
  8860                           	psect	text37
  8861  0000'                    __ptext37:	
  8862 ;; *************** function _I2C_Transmit *****************
  8863 ;; Defined at:
  8864 ;;		line 10 in file "PIC_I2C.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  I2Cx            1    wreg     enum E3320
  8867 ;;  address         1    8[BANK0 ] unsigned char 
  8868 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  8869 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8870 ;;  size            1   10[BANK0 ] unsigned char 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  I2Cx            1   14[BANK0 ] enum E3320
  8873 ;;  result          1   15[BANK0 ] char 
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      char 
  8876 ;; Registers used:
  8877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8883 ;;      Params:         0       3       0       0       0       0
  8884 ;;      Locals:         0       2       0       0       0       0
  8885 ;;      Temps:          0       3       0       0       0       0
  8886 ;;      Totals:         0       8       0       0       0       0
  8887 ;;Total ram usage:        8 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:    4
  8890 ;; This function calls:
  8891 ;;		_I2C2_Transmit
  8892 ;; This function is called by:
  8893 ;;		_DAC_Initialize
  8894 ;;		_DAC_WriteVoltage
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           
  8899                           ;psect for function _I2C_Transmit
  8900  0000'                    _I2C_Transmit:	
  8901                           
  8902                           ;incstack = 0
  8903                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8904                           ;I2C_Transmit@I2Cx stored from wreg
  8905  0000' 0020               	movlb	0	; select bank0
  8906  0001' 008E'              	movwf	I2C_Transmit@I2Cx
  8907                           
  8908                           ;PIC_I2C.c: 12: int8_t result;
  8909                           ;PIC_I2C.c: 14: switch(I2Cx)
  8910  0002' 2800'              	goto	l3666
  8911  0003'                    l3662:	
  8912                           ;PIC_I2C.c: 15: {
  8913                           ;PIC_I2C.c: 22: case I2C2_MODULE:
  8914                           
  8915                           
  8916                           ;PIC_I2C.c: 23: result = I2C2_Transmit(address,pData,size);
  8917  0003' 0809'              	movf	I2C_Transmit@pData,w
  8918  0004' 008B'              	movwf	??_I2C_Transmit
  8919  0005' 080B'              	movf	??_I2C_Transmit,w
  8920  0006' 0080'              	movwf	I2C2_Transmit@pData
  8921  0007' 080A'              	movf	I2C_Transmit@size,w
  8922  0008' 008C'              	movwf	??_I2C_Transmit+1
  8923  0009' 080C'              	movf	??_I2C_Transmit+1,w
  8924  000A' 0081'              	movwf	I2C2_Transmit@size
  8925  000B' 0808'              	movf	I2C_Transmit@address,w
  8926  000C' 3180' 2000' 3180'  	fcall	_I2C2_Transmit
  8927  000F' 0020               	movlb	0	; select bank0
  8928  0010' 008D'              	movwf	??_I2C_Transmit+2
  8929  0011' 080D'              	movf	??_I2C_Transmit+2,w
  8930  0012' 008F'              	movwf	I2C_Transmit@result
  8931                           
  8932                           ;PIC_I2C.c: 26: }
  8933                           
  8934                           ;PIC_I2C.c: 24: break;
  8935  0013' 2800'              	goto	l3668
  8936  0014'                    l3666:	
  8937  0014' 080E'              	movf	I2C_Transmit@I2Cx,w
  8938                           
  8939                           ; Switch size 1, requested type "space"
  8940                           ; Number of cases is 1, Range of values is 1 to 1
  8941                           ; switch strategies available:
  8942                           ; Name         Instructions Cycles
  8943                           ; simple_byte            4     3 (average)
  8944                           ; direct_byte           11     9 (fixed)
  8945                           ; jumptable            263     9 (fixed)
  8946                           ;	Chosen strategy is simple_byte
  8947  0015' 3A01               	xorlw	1	; case 1
  8948  0016' 1903               	skipnz
  8949  0017' 2800'              	goto	l3662
  8950  0018' 2800'              	goto	l3668
  8951  0019'                    l3668:	
  8952                           
  8953                           ;PIC_I2C.c: 27: return result;
  8954  0019' 080F'              	movf	I2C_Transmit@result,w
  8955  001A' 0008               	return
  8956  001B'                    __end_of_I2C_Transmit:	
  8957                           
  8958                           	psect	text38
  8959  0000'                    __ptext38:	
  8960 ;; *************** function _I2C2_Transmit *****************
  8961 ;; Defined at:
  8962 ;;		line 49 in file "PIC_I2C2.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  address         1    wreg     unsigned char 
  8965 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  8966 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8967 ;;  size            1    1[BANK0 ] unsigned char 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  address         1    4[BANK0 ] unsigned char 
  8970 ;;  i               1    6[BANK0 ] unsigned char 
  8971 ;;  i               1    5[BANK0 ] unsigned char 
  8972 ;;  result          1    7[BANK0 ] char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      char 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8982 ;;      Params:         0       2       0       0       0       0
  8983 ;;      Locals:         0       4       0       0       0       0
  8984 ;;      Temps:          0       2       0       0       0       0
  8985 ;;      Totals:         0       8       0       0       0       0
  8986 ;;Total ram usage:        8 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    3
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_I2C_Transmit
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _I2C2_Transmit
  8998  0000'                    _I2C2_Transmit:	
  8999                           
  9000                           ;incstack = 0
  9001                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  9002                           ;I2C2_Transmit@address stored from wreg
  9003  0000' 0020               	movlb	0	; select bank0
  9004  0001' 0084'              	movwf	I2C2_Transmit@address
  9005                           
  9006                           ;PIC_I2C2.c: 51: int8_t result = 0;
  9007  0002' 0187'              	clrf	I2C2_Transmit@result
  9008                           
  9009                           ;PIC_I2C2.c: 53: switch(I2C2_Config.Mode)
  9010  0003' 2800'              	goto	l3632
  9011  0004'                    l3588:	
  9012                           ;PIC_I2C2.c: 56: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  9013                           
  9014                           ;PIC_I2C2.c: 54: {
  9015                           ;PIC_I2C2.c: 55: case I2C_MODE_MASTER:
  9016                           
  9017  0004' 3005               	movlw	5
  9018  0005' 0024               	movlb	4	; select bank4
  9019  0006' 051C               	andwf	28,w	;volatile
  9020  0007' 0020               	movlb	0	; select bank0
  9021  0008' 0082'              	movwf	??_I2C2_Transmit
  9022  0009' 0024               	movlb	4	; select bank4
  9023  000A' 081E               	movf	30,w	;volatile
  9024  000B' 391F               	andlw	31
  9025  000C' 0020               	movlb	0	; select bank0
  9026  000D' 0402'              	iorwf	??_I2C2_Transmit,w
  9027  000E' 1D03               	btfss	3,2
  9028  000F' 2800'              	goto	l3588
  9029                           
  9030                           ;PIC_I2C2.c: 57: SSP2CON2bits.SEN = 1;
  9031  0010' 0024               	movlb	4	; select bank4
  9032  0011' 141E               	bsf	30,0	;volatile
  9033  0012'                    l3590:	
  9034                           ;PIC_I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  9035                           
  9036  0012' 3005               	movlw	5
  9037  0013' 0024               	movlb	4	; select bank4
  9038  0014' 051C               	andwf	28,w	;volatile
  9039  0015' 0020               	movlb	0	; select bank0
  9040  0016' 0082'              	movwf	??_I2C2_Transmit
  9041  0017' 0024               	movlb	4	; select bank4
  9042  0018' 081E               	movf	30,w	;volatile
  9043  0019' 391F               	andlw	31
  9044  001A' 0020               	movlb	0	; select bank0
  9045  001B' 0402'              	iorwf	??_I2C2_Transmit,w
  9046  001C' 1D03               	btfss	3,2
  9047  001D' 2800'              	goto	l3590
  9048                           
  9049                           ;PIC_I2C2.c: 60: SSP2BUF = address << 1;
  9050  001E' 3504'              	lslf	I2C2_Transmit@address,w
  9051  001F' 0024               	movlb	4	; select bank4
  9052  0020' 0099               	movwf	25	;volatile
  9053  0021'                    l371:	
  9054                           ;PIC_I2C2.c: 61: while(SSP2STATbits.R_nW);
  9055                           
  9056  0021' 191C               	btfsc	28,2	;volatile
  9057  0022' 2800'              	goto	l371
  9058                           
  9059                           ;PIC_I2C2.c: 63: result = SSP2CON2bits.ACKSTAT;
  9060  0023' 3000               	movlw	0
  9061  0024' 1B1E               	btfsc	30,6	;volatile
  9062  0025' 3001               	movlw	1
  9063  0026' 0020               	movlb	0	; select bank0
  9064  0027' 0087'              	movwf	I2C2_Transmit@result
  9065                           
  9066                           ;PIC_I2C2.c: 64: if (!result)
  9067  0028' 0807'              	movf	I2C2_Transmit@result,w
  9068  0029' 1D03               	btfss	3,2
  9069  002A' 2800'              	goto	l3614
  9070                           
  9071                           ;PIC_I2C2.c: 65: {
  9072                           ;PIC_I2C2.c: 66: for(uint8_t i=0;i<size;i++)
  9073  002B' 0185'              	clrf	I2C2_Transmit@i
  9074  002C' 2800'              	goto	l3612
  9075  002D'                    l3610:	
  9076                           ;PIC_I2C2.c: 76: break;
  9077                           
  9078  002D' 3001               	movlw	1
  9079  002E' 0082'              	movwf	??_I2C2_Transmit
  9080  002F' 0802'              	movf	??_I2C2_Transmit,w
  9081  0030' 0785'              	addwf	I2C2_Transmit@i,f
  9082  0031'                    l3612:	
  9083  0031' 0801'              	movf	I2C2_Transmit@size,w
  9084  0032' 0205'              	subwf	I2C2_Transmit@i,w
  9085  0033' 1803               	btfsc	3,0
  9086  0034' 2800'              	goto	l3614
  9087  0035'                    l3600:	
  9088                           ;PIC_I2C2.c: 67: {
  9089                           ;PIC_I2C2.c: 68: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  9090                           
  9091  0035' 3005               	movlw	5
  9092  0036' 0024               	movlb	4	; select bank4
  9093  0037' 051C               	andwf	28,w	;volatile
  9094  0038' 0020               	movlb	0	; select bank0
  9095  0039' 0082'              	movwf	??_I2C2_Transmit
  9096  003A' 0024               	movlb	4	; select bank4
  9097  003B' 081E               	movf	30,w	;volatile
  9098  003C' 391F               	andlw	31
  9099  003D' 0020               	movlb	0	; select bank0
  9100  003E' 0402'              	iorwf	??_I2C2_Transmit,w
  9101  003F' 1D03               	btfss	3,2
  9102  0040' 2800'              	goto	l3600
  9103                           
  9104                           ;PIC_I2C2.c: 69: SSP2BUF = *(pData+i);
  9105  0041' 0805'              	movf	I2C2_Transmit@i,w
  9106  0042' 0700'              	addwf	I2C2_Transmit@pData,w
  9107  0043' 0082'              	movwf	??_I2C2_Transmit
  9108  0044' 0802'              	movf	??_I2C2_Transmit,w
  9109  0045' 0086               	movwf	6
  9110  0046' 0187               	clrf	7
  9111  0047' 0801               	movf	1,w
  9112  0048' 0024               	movlb	4	; select bank4
  9113  0049' 0099               	movwf	25	;volatile
  9114  004A'                    l380:	
  9115                           ;PIC_I2C2.c: 70: while(SSP2STATbits.R_nW);
  9116                           
  9117  004A' 191C               	btfsc	28,2	;volatile
  9118  004B' 2800'              	goto	l380
  9119                           
  9120                           ;PIC_I2C2.c: 72: result = SSP2CON2bits.ACKSTAT;
  9121  004C' 3000               	movlw	0
  9122  004D' 1B1E               	btfsc	30,6	;volatile
  9123  004E' 3001               	movlw	1
  9124  004F' 0020               	movlb	0	; select bank0
  9125  0050' 0087'              	movwf	I2C2_Transmit@result
  9126                           
  9127                           ;PIC_I2C2.c: 73: if (result)
  9128  0051' 0807'              	movf	I2C2_Transmit@result,w
  9129  0052' 1903               	btfsc	3,2
  9130  0053' 2800'              	goto	l3610
  9131                           
  9132                           ;PIC_I2C2.c: 74: {
  9133                           ;PIC_I2C2.c: 75: result = 2;
  9134  0054' 3002               	movlw	2
  9135  0055' 0082'              	movwf	??_I2C2_Transmit
  9136  0056' 0802'              	movf	??_I2C2_Transmit,w
  9137  0057' 0087'              	movwf	I2C2_Transmit@result
  9138  0058'                    l3614:	
  9139                           ;PIC_I2C2.c: 77: }
  9140                           ;PIC_I2C2.c: 78: }
  9141                           ;PIC_I2C2.c: 79: }
  9142                           ;PIC_I2C2.c: 81: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  9143                           
  9144  0058' 3005               	movlw	5
  9145  0059' 0024               	movlb	4	; select bank4
  9146  005A' 051C               	andwf	28,w	;volatile
  9147  005B' 0020               	movlb	0	; select bank0
  9148  005C' 0082'              	movwf	??_I2C2_Transmit
  9149  005D' 0024               	movlb	4	; select bank4
  9150  005E' 081E               	movf	30,w	;volatile
  9151  005F' 391F               	andlw	31
  9152  0060' 0020               	movlb	0	; select bank0
  9153  0061' 0402'              	iorwf	??_I2C2_Transmit,w
  9154  0062' 1D03               	btfss	3,2
  9155  0063' 2800'              	goto	l3614
  9156                           
  9157                           ;PIC_I2C2.c: 82: SSP2CON2bits.PEN = 1;
  9158  0064' 0024               	movlb	4	; select bank4
  9159  0065' 151E               	bsf	30,2	;volatile
  9160                           
  9161                           ;PIC_I2C2.c: 83: break;
  9162  0066' 2800'              	goto	l3634
  9163  0067'                    l389:	
  9164                           ;PIC_I2C2.c: 85: case I2C_MODE_SLAVE:
  9165                           
  9166                           
  9167                           ;PIC_I2C2.c: 86: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  9168  0067' 0024               	movlb	4	; select bank4
  9169  0068' 1D9C               	btfss	28,3	;volatile
  9170  0069' 1E1C               	btfss	28,4	;volatile
  9171  006A' 2800'              	goto	l3628
  9172                           
  9173                           ;PIC_I2C2.c: 87: {
  9174                           ;PIC_I2C2.c: 88: for(uint8_t i = 0;i<size;i++)
  9175  006B' 0020               	movlb	0	; select bank0
  9176  006C' 0186'              	clrf	I2C2_Transmit@i_681
  9177  006D'                    l3624:	
  9178  006D' 0801'              	movf	I2C2_Transmit@size,w
  9179  006E' 0206'              	subwf	I2C2_Transmit@i_681,w
  9180  006F' 1803               	btfsc	3,0
  9181  0070' 2800'              	goto	l3626
  9182                           
  9183                           ;PIC_I2C2.c: 89: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  9184  0071' 0806'              	movf	I2C2_Transmit@i_681,w
  9185  0072' 0700'              	addwf	I2C2_Transmit@pData,w
  9186  0073' 0082'              	movwf	??_I2C2_Transmit
  9187  0074' 0802'              	movf	??_I2C2_Transmit,w
  9188  0075' 0086               	movwf	6
  9189  0076' 0187               	clrf	7
  9190  0077' 0801               	movf	1,w
  9191  0078' 0083'              	movwf	??_I2C2_Transmit+1
  9192  0079' 0806'              	movf	I2C2_Transmit@i_681,w
  9193  007A' 3E00'              	addlw	(low (_I2C2_Config| 0))& (0+255)
  9194  007B' 0086               	movwf	6
  9195  007C' 0187               	clrf	7
  9196  007D' 0803'              	movf	??_I2C2_Transmit+1,w
  9197  007E' 0081               	movwf	1
  9198  007F' 3001               	movlw	1
  9199  0080' 0082'              	movwf	??_I2C2_Transmit
  9200  0081' 0802'              	movf	??_I2C2_Transmit,w
  9201  0082' 0786'              	addwf	I2C2_Transmit@i_681,f
  9202  0083' 2800'              	goto	l3624
  9203  0084'                    l3626:	
  9204                           
  9205                           ;PIC_I2C2.c: 90: result = size;
  9206  0084' 0801'              	movf	I2C2_Transmit@size,w
  9207  0085' 0082'              	movwf	??_I2C2_Transmit
  9208  0086' 0802'              	movf	??_I2C2_Transmit,w
  9209  0087' 0087'              	movwf	I2C2_Transmit@result
  9210                           
  9211                           ;PIC_I2C2.c: 91: }
  9212  0088' 2800'              	goto	l3634
  9213  0089'                    l3628:	
  9214                           
  9215                           ;PIC_I2C2.c: 92: else
  9216                           ;PIC_I2C2.c: 93: result = 0;
  9217  0089' 0020               	movlb	0	; select bank0
  9218  008A' 0187'              	clrf	I2C2_Transmit@result
  9219                           
  9220                           ;PIC_I2C2.c: 95: }
  9221                           
  9222                           ;PIC_I2C2.c: 94: break;
  9223  008B' 2800'              	goto	l3634
  9224  008C'                    l3632:	
  9225  008C' 0021               	movlb	1	; select bank1
  9226  008D' 0812'              	movf	(_I2C2_Config^(0+128)+18),w
  9227                           
  9228                           ; Switch size 1, requested type "space"
  9229                           ; Number of cases is 2, Range of values is 0 to 1
  9230                           ; switch strategies available:
  9231                           ; Name         Instructions Cycles
  9232                           ; simple_byte            7     4 (average)
  9233                           ; direct_byte           10     6 (fixed)
  9234                           ; jumptable            260     6 (fixed)
  9235                           ;	Chosen strategy is simple_byte
  9236  008E' 3A00               	xorlw	0	; case 0
  9237  008F' 1903               	skipnz
  9238  0090' 2800'              	goto	l3588
  9239  0091' 3A01               	xorlw	1	; case 1
  9240  0092' 1903               	skipnz
  9241  0093' 2800'              	goto	l389
  9242  0094' 2800'              	goto	l3634
  9243  0095'                    l3634:	
  9244                           
  9245                           ;PIC_I2C2.c: 97: return result;
  9246  0095' 0020               	movlb	0	; select bank0
  9247  0096' 0807'              	movf	I2C2_Transmit@result,w
  9248  0097' 0008               	return
  9249  0098'                    __end_of_I2C2_Transmit:	
  9250                           
  9251                           	psect	text39
  9252  0000'                    __ptext39:	
  9253 ;; *************** function _I2C2_Init *****************
  9254 ;; Defined at:
  9255 ;;		line 9 in file "PIC_I2C2.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  I2C2_Init_PO    2    1[BANK0 ] PTR FTN()void 
  9258 ;;		 -> I2C2_Init_Port(1), 
  9259 ;;  address         1    3[BANK0 ] unsigned char 
  9260 ;;  mode            1    4[BANK0 ] enum E3311
  9261 ;;  Speed           1    5[BANK0 ] enum E3315
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9273 ;;      Params:         0       5       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0
  9275 ;;      Temps:          0       1       0       0       0       0
  9276 ;;      Totals:         0       6       0       0       0       0
  9277 ;;Total ram usage:        6 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    4
  9280 ;; This function calls:
  9281 ;;		_I2C2_Init_Port
  9282 ;; This function is called by:
  9283 ;;		_DAC_Initialize
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function _I2C2_Init
  9289  0000'                    _I2C2_Init:	
  9290                           
  9291                           ;PIC_I2C2.c: 11: I2C2_Init_PORT();
  9292                           
  9293                           ;incstack = 0
  9294                           ; Regs used in _I2C2_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9295  0000' 0020               	movlb	0	; select bank0
  9296  0001' 0802'              	movf	I2C2_Init@I2C2_Init_PORT+1,w
  9297  0002' 008A               	movwf	10
  9298  0003' 0801'              	movf	I2C2_Init@I2C2_Init_PORT,w
  9299  0004' 000A               	callw
  9300  0005' 3180'              	pagesel	$
  9301                           
  9302                           ;PIC_I2C2.c: 12: I2C2_Config.Mode = mode;
  9303  0006' 0020               	movlb	0	; select bank0
  9304  0007' 0804'              	movf	I2C2_Init@mode,w
  9305  0008' 0086'              	movwf	??_I2C2_Init
  9306  0009' 0806'              	movf	??_I2C2_Init,w
  9307  000A' 0021               	movlb	1	; select bank1
  9308  000B' 0092'              	movwf	(_I2C2_Config^(0+128)+18)
  9309                           
  9310                           ;PIC_I2C2.c: 14: switch(mode)
  9311  000C' 2800'              	goto	l3830
  9312  000D'                    l354:	
  9313                           ;PIC_I2C2.c: 15: {
  9314                           ;PIC_I2C2.c: 16: case I2C_MODE_MASTER:
  9315                           
  9316                           
  9317                           ;PIC_I2C2.c: 17: SSP2CON1 |= (0x08<<0);
  9318  000D' 0024               	movlb	4	; select bank4
  9319  000E' 159D               	bsf	29,3	;volatile
  9320                           
  9321                           ;PIC_I2C2.c: 18: if(Speed==I2C_SPEED_STANDARD)
  9322  000F' 0020               	movlb	0	; select bank0
  9323  0010' 0805'              	movf	I2C2_Init@Speed,w
  9324  0011' 1D03               	btfss	3,2
  9325  0012' 2800'              	goto	l3808
  9326                           
  9327                           ;PIC_I2C2.c: 19: {
  9328                           ;PIC_I2C2.c: 20: SSP2STAT |= (1<<7);
  9329  0013' 0024               	movlb	4	; select bank4
  9330  0014' 179C               	bsf	28,7	;volatile
  9331                           
  9332                           ;PIC_I2C2.c: 21: SSP2ADD = 0x4F;
  9333  0015' 304F               	movlw	79
  9334  0016' 2800'              	goto	L12
  9335  0017'                    l3808:	
  9336                           ;PIC_I2C2.c: 22: }
  9337                           
  9338                           
  9339                           ;PIC_I2C2.c: 23: else if(Speed==I2C_SPEED_HIGH)
  9340  0017' 0020               	movlb	0	; select bank0
  9341  0018' 0305'              	decf	I2C2_Init@Speed,w
  9342  0019' 1D03               	btfss	3,2
  9343  001A' 2800'              	goto	l3814
  9344                           
  9345                           ;PIC_I2C2.c: 24: {
  9346                           ;PIC_I2C2.c: 25: SSP2STAT &= ~(1<<7);
  9347  001B' 307F               	movlw	127
  9348  001C' 0086'              	movwf	??_I2C2_Init
  9349  001D' 0806'              	movf	??_I2C2_Init,w
  9350  001E' 0024               	movlb	4	; select bank4
  9351  001F' 059C               	andwf	28,f	;volatile
  9352                           
  9353                           ;PIC_I2C2.c: 26: SSP2ADD = 0x13;
  9354  0020' 3013               	movlw	19
  9355  0021'                    L12:	
  9356  0021' 009A               	movwf	26	;volatile
  9357  0022'                    l3814:	
  9358                           
  9359                           ;PIC_I2C2.c: 27: }
  9360                           ;PIC_I2C2.c: 28: SSP2CON1bits.SSPEN = 1;
  9361  0022' 0024               	movlb	4	; select bank4
  9362  0023' 2800'              	goto	l3826
  9363  0024'                    l3816:	
  9364                           ;PIC_I2C2.c: 31: case I2C_MODE_SLAVE:
  9365                           
  9366                           ;PIC_I2C2.c: 29: break;
  9367                           
  9368                           
  9369                           ;PIC_I2C2.c: 32: SSP2STAT = 0x00;
  9370  0024' 0024               	movlb	4	; select bank4
  9371  0025' 019C               	clrf	28	;volatile
  9372                           
  9373                           ;PIC_I2C2.c: 33: SSP2CON1 |= (0x06<<0);
  9374  0026' 3006               	movlw	6
  9375  0027' 0020               	movlb	0	; select bank0
  9376  0028' 0086'              	movwf	??_I2C2_Init
  9377  0029' 0806'              	movf	??_I2C2_Init,w
  9378  002A' 0024               	movlb	4	; select bank4
  9379  002B' 049D               	iorwf	29,f	;volatile
  9380                           
  9381                           ;PIC_I2C2.c: 34: SSP2CON2bits.SEN= 1;
  9382  002C' 141E               	bsf	30,0	;volatile
  9383                           
  9384                           ;PIC_I2C2.c: 35: SSP2ADD = address << 1;
  9385  002D' 0020               	movlb	0	; select bank0
  9386  002E' 3503'              	lslf	I2C2_Init@address,w
  9387  002F' 0024               	movlb	4	; select bank4
  9388  0030' 009A               	movwf	26	;volatile
  9389                           
  9390                           ;PIC_I2C2.c: 36: SSP2MSK = 0xFE;
  9391  0031' 30FE               	movlw	254
  9392  0032' 009B               	movwf	27	;volatile
  9393  0033'                    l3826:	
  9394                           
  9395                           ;PIC_I2C2.c: 37: SSP2CON1bits.SSPEN = 1;
  9396  0033' 169D               	bsf	29,5	;volatile
  9397                           
  9398                           ;PIC_I2C2.c: 39: }
  9399                           
  9400                           ;PIC_I2C2.c: 38: break;
  9401  0034' 2800'              	goto	l358
  9402  0035'                    l3830:	
  9403  0035' 0020               	movlb	0	; select bank0
  9404  0036' 0804'              	movf	I2C2_Init@mode,w
  9405                           
  9406                           ; Switch size 1, requested type "space"
  9407                           ; Number of cases is 2, Range of values is 0 to 1
  9408                           ; switch strategies available:
  9409                           ; Name         Instructions Cycles
  9410                           ; simple_byte            7     4 (average)
  9411                           ; direct_byte           10     6 (fixed)
  9412                           ; jumptable            260     6 (fixed)
  9413                           ;	Chosen strategy is simple_byte
  9414  0037' 3A00               	xorlw	0	; case 0
  9415  0038' 1903               	skipnz
  9416  0039' 2800'              	goto	l354
  9417  003A' 3A01               	xorlw	1	; case 1
  9418  003B' 1903               	skipnz
  9419  003C' 2800'              	goto	l3816
  9420  003D' 2800'              	goto	l358
  9421  003E'                    l358:	
  9422                           
  9423                           ;PIC_I2C2.c: 40: SSP2IE = 1;
  9424  003E' 0021               	movlb	1	; select bank1
  9425  003F' 1414               	bsf	20,0	;volatile
  9426                           
  9427                           ;PIC_I2C2.c: 41: BCL2IE = 1;
  9428  0040' 1494               	bsf	20,1	;volatile
  9429                           
  9430                           ;PIC_I2C2.c: 42: SSP2IF = 0;
  9431  0041' 0020               	movlb	0	; select bank0
  9432  0042' 1014               	bcf	20,0	;volatile
  9433                           
  9434                           ;PIC_I2C2.c: 43: BCL2IF = 0;
  9435  0043' 1094               	bcf	20,1	;volatile
  9436                           
  9437                           ;PIC_I2C2.c: 45: PEIE = 1;
  9438  0044' 170B               	bsf	11,6	;volatile
  9439                           
  9440                           ;PIC_I2C2.c: 46: GIE = 1;
  9441  0045' 178B               	bsf	11,7	;volatile
  9442  0046' 0008               	return
  9443  0047'                    __end_of_I2C2_Init:	
  9444                           
  9445                           	psect	text40
  9446  0000'                    __ptext40:	
  9447 ;; *************** function _I2C2_Init_Port *****************
  9448 ;; Defined at:
  9449 ;;		line 186 in file "main.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9463 ;;      Params:         0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0
  9465 ;;      Temps:          0       1       0       0       0       0
  9466 ;;      Totals:         0       1       0       0       0       0
  9467 ;;Total ram usage:        1 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    3
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_DAC_Initialize
  9474 ;;		_I2C2_Init
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           
  9479                           ;psect for function _I2C2_Init_Port
  9480  0000'                    _I2C2_Init_Port:	
  9481                           
  9482                           ;main.c: 188: TRISB |= ((1<<2)|(1<<5));
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in _I2C2_Init_Port: [wreg+status,2+status,0]
  9486  0000' 3024               	movlw	36
  9487  0001' 0020               	movlb	0	; select bank0
  9488  0002' 0080'              	movwf	??_I2C2_Init_Port
  9489  0003' 0800'              	movf	??_I2C2_Init_Port,w
  9490  0004' 0021               	movlb	1	; select bank1
  9491  0005' 048D               	iorwf	13,f	;volatile
  9492                           
  9493                           ;main.c: 189: ANSELB &= ~((1<<2)|(1<<5));
  9494  0006' 30DB               	movlw	219
  9495  0007' 0020               	movlb	0	; select bank0
  9496  0008' 0080'              	movwf	??_I2C2_Init_Port
  9497  0009' 0800'              	movf	??_I2C2_Init_Port,w
  9498  000A' 0023               	movlb	3	; select bank3
  9499  000B' 058D               	andwf	13,f	;volatile
  9500  000C' 0008               	return
  9501  000D'                    __end_of_I2C2_Init_Port:	
  9502                           
  9503                           	psect	text41
  9504  0000'                    __ptext41:	
  9505 ;; *************** function _Buzzer_Init *****************
  9506 ;; Defined at:
  9507 ;;		line 11 in file "Buzzer.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  Buzzer_Init_    2    1[BANK0 ] PTR FTN()void 
  9510 ;;		 -> Buzzer_Init_Port(1), 
  9511 ;;  pre_val         1    3[BANK0 ] enum E3360
  9512 ;;  period          1    4[BANK0 ] unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0, pclath, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9524 ;;      Params:         0       4       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0       0
  9526 ;;      Temps:          0       1       0       0       0       0
  9527 ;;      Totals:         0       5       0       0       0       0
  9528 ;;Total ram usage:        5 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    4
  9531 ;; This function calls:
  9532 ;;		_Buzzer_Init_Port
  9533 ;; This function is called by:
  9534 ;;		_main
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           
  9539                           ;psect for function _Buzzer_Init
  9540  0000'                    _Buzzer_Init:	
  9541                           
  9542                           ;Buzzer.c: 13: Buzzer_Init_PORT();
  9543                           
  9544                           ;incstack = 0
  9545                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0+pclath+cstack]
  9546  0000' 0020               	movlb	0	; select bank0
  9547  0001' 0802'              	movf	Buzzer_Init@Buzzer_Init_PORT+1,w
  9548  0002' 008A               	movwf	10
  9549  0003' 0801'              	movf	Buzzer_Init@Buzzer_Init_PORT,w
  9550  0004' 000A               	callw
  9551  0005' 3180'              	pagesel	$
  9552                           
  9553                           ;Buzzer.c: 15: T2CON |= (0x00<<3);
  9554  0006' 0020               	movlb	0	; select bank0
  9555  0007' 081C               	movf	28,w	;volatile
  9556                           
  9557                           ;Buzzer.c: 16: T2CON |= ((uint8_t)pre_val<<0);
  9558  0008' 0803'              	movf	Buzzer_Init@pre_val,w
  9559  0009' 0085'              	movwf	??_Buzzer_Init
  9560  000A' 0805'              	movf	??_Buzzer_Init,w
  9561  000B' 049C               	iorwf	28,f	;volatile
  9562                           
  9563                           ;Buzzer.c: 17: T2CON |= (0x01<<2);
  9564  000C' 151C               	bsf	28,2	;volatile
  9565                           
  9566                           ;Buzzer.c: 19: TMR2 = 0x00;
  9567  000D' 019A               	clrf	26	;volatile
  9568                           
  9569                           ;Buzzer.c: 20: PR2 = period;
  9570  000E' 0804'              	movf	Buzzer_Init@period,w
  9571  000F' 009B               	movwf	27	;volatile
  9572                           
  9573                           ;Buzzer.c: 22: CCP2CON &= ~(0x03<<6);
  9574  0010' 303F               	movlw	63
  9575  0011' 0085'              	movwf	??_Buzzer_Init
  9576  0012' 0805'              	movf	??_Buzzer_Init,w
  9577  0013' 0025               	movlb	5	; select bank5
  9578  0014' 059A               	andwf	26,f	;volatile
  9579                           
  9580                           ;Buzzer.c: 23: CCP2CON |= (0x0C<<0);
  9581  0015' 300C               	movlw	12
  9582  0016' 0020               	movlb	0	; select bank0
  9583  0017' 0085'              	movwf	??_Buzzer_Init
  9584  0018' 0805'              	movf	??_Buzzer_Init,w
  9585  0019' 0025               	movlb	5	; select bank5
  9586  001A' 049A               	iorwf	26,f	;volatile
  9587                           
  9588                           ;Buzzer.c: 24: CCPTMRS &= ~(0x03<<2);
  9589  001B' 30F3               	movlw	243
  9590  001C' 0020               	movlb	0	; select bank0
  9591  001D' 0085'              	movwf	??_Buzzer_Init
  9592  001E' 0805'              	movf	??_Buzzer_Init,w
  9593  001F' 0025               	movlb	5	; select bank5
  9594  0020' 059E               	andwf	30,f	;volatile
  9595                           
  9596                           ;Buzzer.c: 26: CCPR2L = 0x00;
  9597  0021' 0198               	clrf	24	;volatile
  9598  0022' 0008               	return
  9599  0023'                    __end_of_Buzzer_Init:	
  9600                           
  9601                           	psect	text42
  9602  0000'                    __ptext42:	
  9603 ;; *************** function _Buzzer_Init_Port *****************
  9604 ;; Defined at:
  9605 ;;		line 192 in file "main.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;		None
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2, status,0
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9619 ;;      Params:         0       0       0       0       0       0
  9620 ;;      Locals:         0       0       0       0       0       0
  9621 ;;      Temps:          0       1       0       0       0       0
  9622 ;;      Totals:         0       1       0       0       0       0
  9623 ;;Total ram usage:        1 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    3
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;;		_Buzzer_Init
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           
  9635                           ;psect for function _Buzzer_Init_Port
  9636  0000'                    _Buzzer_Init_Port:	
  9637                           
  9638                           ;main.c: 194: TRISA &= ~(0x01<<7);
  9639                           
  9640                           ;incstack = 0
  9641                           ; Regs used in _Buzzer_Init_Port: [wreg+status,2+status,0]
  9642  0000' 307F               	movlw	127
  9643  0001' 0020               	movlb	0	; select bank0
  9644  0002' 0080'              	movwf	??_Buzzer_Init_Port
  9645  0003' 0800'              	movf	??_Buzzer_Init_Port,w
  9646  0004' 0021               	movlb	1	; select bank1
  9647  0005' 058C               	andwf	12,f	;volatile
  9648                           
  9649                           ;main.c: 195: ANSELA &= ~(0x01<<7);
  9650  0006' 307F               	movlw	127
  9651  0007' 0020               	movlb	0	; select bank0
  9652  0008' 0080'              	movwf	??_Buzzer_Init_Port
  9653  0009' 0800'              	movf	??_Buzzer_Init_Port,w
  9654  000A' 0023               	movlb	3	; select bank3
  9655  000B' 058C               	andwf	12,f	;volatile
  9656                           
  9657                           ;main.c: 196: APFCON0 |= (0x01<<3);
  9658  000C' 0022               	movlb	2	; select bank2
  9659  000D' 159D               	bsf	29,3	;volatile
  9660  000E' 0008               	return
  9661  000F'                    __end_of_Buzzer_Init_Port:	
  9662                           
  9663                           	psect	text43
  9664  0000'                    __ptext43:	
  9665 ;; *************** function _Basic_Init *****************
  9666 ;; Defined at:
  9667 ;;		line 150 in file "main.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9681 ;;      Params:         0       0       0       0       0       0
  9682 ;;      Locals:         0       0       0       0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0
  9684 ;;      Totals:         0       0       0       0       0       0
  9685 ;;Total ram usage:        0 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    3
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		_main
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           
  9696                           ;psect for function _Basic_Init
  9697  0000'                    _Basic_Init:	
  9698                           
  9699                           ;main.c: 152: OSCCON = 0xF0;
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _Basic_Init: [wreg+status,2]
  9703  0000' 30F0               	movlw	240
  9704  0001' 0021               	movlb	1	; select bank1
  9705  0002' 0099               	movwf	25	;volatile
  9706                           
  9707                           ;main.c: 156: TRISA = 0x00;
  9708  0003' 018C               	clrf	12	;volatile
  9709                           
  9710                           ;main.c: 157: ANSELA = 0x00;
  9711  0004' 0023               	movlb	3	; select bank3
  9712  0005' 018C               	clrf	12	;volatile
  9713                           
  9714                           ;main.c: 159: TRISB = 0x00;
  9715  0006' 0021               	movlb	1	; select bank1
  9716  0007' 018D               	clrf	13	;volatile
  9717                           
  9718                           ;main.c: 160: ANSELB = 0x00;
  9719  0008' 0023               	movlb	3	; select bank3
  9720  0009' 018D               	clrf	13	;volatile
  9721                           
  9722                           ;main.c: 162: APFCON0 = 0x00;
  9723  000A' 0022               	movlb	2	; select bank2
  9724  000B' 019D               	clrf	29	;volatile
  9725                           
  9726                           ;main.c: 163: APFCON1 = 0x00;
  9727  000C' 019E               	clrf	30	;volatile
  9728                           
  9729                           ;main.c: 165: PORTA = 0x00;
  9730  000D' 0020               	movlb	0	; select bank0
  9731  000E' 018C               	clrf	12	;volatile
  9732                           
  9733                           ;main.c: 166: PORTB = 0x00;
  9734  000F' 018D               	clrf	13	;volatile
  9735  0010' 0008               	return
  9736  0011'                    __end_of_Basic_Init:	
  9737                           
  9738                           	psect	intentry
  9739  0000'                    __pintentry:	
  9740 ;; *************** function _Handler *****************
  9741 ;; Defined at:
  9742 ;;		line 170 in file "main.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9756 ;;      Params:         0       0       0       0       0       0
  9757 ;;      Locals:         0       0       0       0       0       0
  9758 ;;      Temps:          1       0       0       0       0       0
  9759 ;;      Totals:         1       0       0       0       0       0
  9760 ;;Total ram usage:        1 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    2
  9763 ;; This function calls:
  9764 ;;		_Buzzer_Count1ms
  9765 ;;		_I2C_Interrupt
  9766 ;;		_Timer1_Count1ms
  9767 ;;		_Timer1_DetectAssignCount
  9768 ;;		_Timer6_CheckFlag
  9769 ;;		_mTouch_Count1ms
  9770 ;;		_mTouch_Scan
  9771 ;; This function is called by:
  9772 ;;		Interrupt level 1
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776  0000'                    _Handler:	
  9777                           
  9778                           ;incstack = 0
  9779  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9780                           
  9781                           ; Regs used in _Handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9782  0001' 3180'              	pagesel	$
  9783  0002' 0020               	movlb	0	; select bank0
  9784  0003' 087F               	movf	127,w
  9785  0004' 0085'              	movwf	??_Handler
  9786                           
  9787                           ;main.c: 172: if(Timer1_DetectAssignCount())
  9788  0005' 3180' 2000' 3180'  	fcall	_Timer1_DetectAssignCount
  9789  0008' 3A00               	xorlw	0
  9790  0009' 1903               	skipnz
  9791  000A' 2800'              	goto	i1l3438
  9792                           
  9793                           ;main.c: 173: LATA6 = !LATA6;
  9794  000B' 3040               	movlw	64
  9795  000C' 0022               	movlb	2	; select bank2
  9796  000D' 068C               	xorwf	12,f
  9797  000E'                    i1l3438:	
  9798                           
  9799                           ;main.c: 175: if(Timer6_CheckFlag())
  9800  000E' 3180' 2000' 3180'  	fcall	_Timer6_CheckFlag
  9801  0011' 3A00               	xorlw	0
  9802  0012' 1903               	skipnz
  9803  0013' 2800'              	goto	i1l3448
  9804                           
  9805                           ;main.c: 176: {
  9806                           ;main.c: 177: mTouch_Count1ms();
  9807  0014' 3180' 2000' 3180'  	fcall	_mTouch_Count1ms
  9808                           
  9809                           ;main.c: 178: Timer1_Count1ms();
  9810  0017' 3180' 2000' 3180'  	fcall	_Timer1_Count1ms
  9811                           
  9812                           ;main.c: 180: mTouch_Scan();
  9813  001A' 3180' 2000' 3180'  	fcall	_mTouch_Scan
  9814                           
  9815                           ;main.c: 181: Buzzer_Count1ms();
  9816  001D' 3180' 2000' 3180'  	fcall	_Buzzer_Count1ms
  9817  0020'                    i1l3448:	
  9818                           
  9819                           ;main.c: 182: }
  9820                           ;main.c: 183: I2C_Interrupt();
  9821  0020' 3180' 2000'        	fcall	_I2C_Interrupt
  9822  0022' 0805'              	movf	??_Handler,w
  9823  0023' 0020               	movlb	0	; select bank0
  9824  0024' 00FF               	movwf	127
  9825  0025' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9826  0026' 0009               	retfie
  9827  0027'                    __end_of_Handler:	
  9828                           
  9829                           	psect	text45
  9830  0000'                    __ptext45:	
  9831 ;; *************** function _mTouch_Scan *****************
  9832 ;; Defined at:
  9833 ;;		line 33 in file "PIC_mTouch.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9847 ;;      Params:         0       0       0       0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0
  9849 ;;      Temps:          4       0       0       0       0       0
  9850 ;;      Totals:         4       0       0       0       0       0
  9851 ;;Total ram usage:        4 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_Handler
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           
  9861                           ;psect for function _mTouch_Scan
  9862  0000'                    _mTouch_Scan:	
  9863                           
  9864                           ;PIC_mTouch.c: 35: static uint8_t elements = 0;
  9865                           ;PIC_mTouch.c: 37: config_ptr[elements].CPS_PreData = config_ptr[elements].CPS_Data;
  9866                           
  9867                           ;incstack = 0
  9868                           ; Regs used in _mTouch_Scan: [wreg-fsr1h+status,2+status,0]
  9869  0000' 0802'              	movf	mTouch_Scan@elements,w
  9870  0001' 0080'              	movwf	??_mTouch_Scan
  9871  0002' 3002               	movlw	2
  9872  0003'                    u292_25:	
  9873  0003' 3580'              	lslf	??_mTouch_Scan,f
  9874  0004' 3EFF               	addlw	-1
  9875  0005' 1D03               	skipz
  9876  0006' 2800'              	goto	u292_25
  9877  0007' 3500'              	lslf	??_mTouch_Scan,w
  9878  0008' 0704'              	addwf	_config_ptr,w
  9879  0009' 0081'              	movwf	??_mTouch_Scan+1
  9880  000A' 0801'              	movf	??_mTouch_Scan+1,w
  9881  000B' 3E03               	addlw	3
  9882  000C' 0086               	movwf	6
  9883  000D' 0187               	clrf	7
  9884  000E' 0802'              	movf	mTouch_Scan@elements,w
  9885  000F' 0082'              	movwf	??_mTouch_Scan+2
  9886  0010' 3002               	movlw	2
  9887  0011'                    u293_25:	
  9888  0011' 3582'              	lslf	??_mTouch_Scan+2,f
  9889  0012' 3EFF               	addlw	-1
  9890  0013' 1D03               	skipz
  9891  0014' 2800'              	goto	u293_25
  9892  0015' 3502'              	lslf	??_mTouch_Scan+2,w
  9893  0016' 0704'              	addwf	_config_ptr,w
  9894  0017' 0083'              	movwf	??_mTouch_Scan+3
  9895  0018' 0803'              	movf	??_mTouch_Scan+3,w
  9896  0019' 3E05               	addlw	5
  9897  001A' 0084               	movwf	4
  9898  001B' 0185               	clrf	5
  9899  001C' 3F40               	moviw [0]fsr1
  9900  001D' 3F80               	movwi [0]fsr0
  9901  001E' 3F41               	moviw [1]fsr1
  9902  001F' 3F81               	movwi [1]fsr0
  9903                           
  9904                           ;PIC_mTouch.c: 39: CPSCON0 &= ~(0x01<<7);;
  9905  0020' 307F               	movlw	127
  9906  0021' 0080'              	movwf	??_mTouch_Scan
  9907  0022' 0800'              	movf	??_mTouch_Scan,w
  9908  0023' 0020               	movlb	0	; select bank0
  9909  0024' 059E               	andwf	30,f	;volatile
  9910                           
  9911                           ;PIC_mTouch.c: 41: config_ptr[elements].CPS_Data = TMR1;
  9912  0025' 0802'              	movf	mTouch_Scan@elements,w
  9913  0026' 0080'              	movwf	??_mTouch_Scan
  9914  0027' 3002               	movlw	2
  9915  0028'                    u294_25:	
  9916  0028' 3580'              	lslf	??_mTouch_Scan,f
  9917  0029' 3EFF               	addlw	-1
  9918  002A' 1D03               	skipz
  9919  002B' 2800'              	goto	u294_25
  9920  002C' 3500'              	lslf	??_mTouch_Scan,w
  9921  002D' 0704'              	addwf	_config_ptr,w
  9922  002E' 0081'              	movwf	??_mTouch_Scan+1
  9923  002F' 0801'              	movf	??_mTouch_Scan+1,w
  9924  0030' 3E03               	addlw	3
  9925  0031' 0086               	movwf	6
  9926  0032' 0187               	clrf	7
  9927  0033' 0816               	movf	22,w	;volatile
  9928  0034' 3FC0               	movwi [0]fsr1
  9929  0035' 0817               	movf	23,w	;volatile
  9930  0036' 3FC1               	movwi [1]fsr1
  9931                           
  9932                           ;PIC_mTouch.c: 42: TMR1 = 0x0000;
  9933  0037' 0196               	clrf	22	;volatile
  9934  0038' 0197               	clrf	23	;volatile
  9935                           
  9936                           ;PIC_mTouch.c: 44: CPSCON0 |= (0x01<<7);;
  9937  0039' 179E               	bsf	30,7	;volatile
  9938                           
  9939                           ;PIC_mTouch.c: 46: if(++elements>=using_channel)elements = 0;
  9940  003A' 3001               	movlw	1
  9941  003B' 0080'              	movwf	??_mTouch_Scan
  9942  003C' 0800'              	movf	??_mTouch_Scan,w
  9943  003D' 0782'              	addwf	mTouch_Scan@elements,f
  9944  003E' 0803'              	movf	_using_channel,w
  9945  003F' 0202'              	subwf	mTouch_Scan@elements,w
  9946  0040' 1803               	btfsc	3,0
  9947  0041' 0182'              	clrf	mTouch_Scan@elements
  9948                           
  9949                           ;PIC_mTouch.c: 48: CPSCON1 = (uint8_t)config_ptr[elements].CPS_Channel;
  9950  0042' 0802'              	movf	mTouch_Scan@elements,w
  9951  0043' 0080'              	movwf	??_mTouch_Scan
  9952  0044' 3002               	movlw	2
  9953  0045'                    u296_25:	
  9954  0045' 3580'              	lslf	??_mTouch_Scan,f
  9955  0046' 3EFF               	addlw	-1
  9956  0047' 1D03               	skipz
  9957  0048' 2800'              	goto	u296_25
  9958  0049' 3500'              	lslf	??_mTouch_Scan,w
  9959  004A' 0704'              	addwf	_config_ptr,w
  9960  004B' 0081'              	movwf	??_mTouch_Scan+1
  9961  004C' 0801'              	movf	??_mTouch_Scan+1,w
  9962  004D' 0086               	movwf	6
  9963  004E' 0187               	clrf	7
  9964  004F' 0801               	movf	1,w
  9965  0050' 009F               	movwf	31	;volatile
  9966  0051' 0008               	return
  9967  0052'                    __end_of_mTouch_Scan:	
  9968                           
  9969                           	psect	text46
  9970  0000'                    __ptext46:	
  9971 ;; *************** function _mTouch_Count1ms *****************
  9972 ;; Defined at:
  9973 ;;		line 51 in file "PIC_mTouch.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  elements        1    2[COMMON] unsigned char 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9987 ;;      Params:         0       0       0       0       0       0
  9988 ;;      Locals:         1       0       0       0       0       0
  9989 ;;      Temps:          2       0       0       0       0       0
  9990 ;;      Totals:         3       0       0       0       0       0
  9991 ;;Total ram usage:        3 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_Handler
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           
 10001                           ;psect for function _mTouch_Count1ms
 10002  0000'                    _mTouch_Count1ms:	
 10003                           
 10004                           ;PIC_mTouch.c: 53: for(uint8_t elements=0;elements<using_channel;elements++)
 10005                           
 10006                           ;incstack = 0
 10007                           ; Regs used in _mTouch_Count1ms: [wreg+fsr1l+fsr1h+status,2+status,0]
 10008  0000' 0182'              	clrf	mTouch_Count1ms@elements
 10009  0001'                    i1l3286:	
 10010  0001' 0803'              	movf	_using_channel,w
 10011  0002' 0202'              	subwf	mTouch_Count1ms@elements,w
 10012  0003' 1803               	btfsc	3,0
 10013  0004' 0008               	return
 10014                           
 10015                           ;PIC_mTouch.c: 54: {
 10016                           ;PIC_mTouch.c: 55: if(config_ptr[elements].Check_Interval)
 10017  0005' 0802'              	movf	mTouch_Count1ms@elements,w
 10018  0006' 0080'              	movwf	??_mTouch_Count1ms
 10019  0007' 3002               	movlw	2
 10020  0008'                    u283_25:	
 10021  0008' 3580'              	lslf	??_mTouch_Count1ms,f
 10022  0009' 3EFF               	addlw	-1
 10023  000A' 1D03               	skipz
 10024  000B' 2800'              	goto	u283_25
 10025  000C' 3500'              	lslf	??_mTouch_Count1ms,w
 10026  000D' 0704'              	addwf	_config_ptr,w
 10027  000E' 0081'              	movwf	??_mTouch_Count1ms+1
 10028  000F' 0801'              	movf	??_mTouch_Count1ms+1,w
 10029  0010' 3E07               	addlw	7
 10030  0011' 0086               	movwf	6
 10031  0012' 0187               	clrf	7
 10032  0013' 0801               	movf	1,w
 10033  0014' 1903               	btfsc	3,2
 10034  0015' 2800'              	goto	i1l3284
 10035                           
 10036                           ;PIC_mTouch.c: 56: config_ptr[elements].Check_Interval--;
 10037  0016' 0802'              	movf	mTouch_Count1ms@elements,w
 10038  0017' 0080'              	movwf	??_mTouch_Count1ms
 10039  0018' 3002               	movlw	2
 10040  0019'                    u285_25:	
 10041  0019' 3580'              	lslf	??_mTouch_Count1ms,f
 10042  001A' 3EFF               	addlw	-1
 10043  001B' 1D03               	skipz
 10044  001C' 2800'              	goto	u285_25
 10045  001D' 3500'              	lslf	??_mTouch_Count1ms,w
 10046  001E' 0704'              	addwf	_config_ptr,w
 10047  001F' 0081'              	movwf	??_mTouch_Count1ms+1
 10048  0020' 0801'              	movf	??_mTouch_Count1ms+1,w
 10049  0021' 3E07               	addlw	7
 10050  0022' 0086               	movwf	6
 10051  0023' 0187               	clrf	7
 10052  0024' 3001               	movlw	1
 10053  0025' 0281               	subwf	1,f
 10054  0026'                    i1l3284:	
 10055  0026' 3001               	movlw	1
 10056  0027' 0080'              	movwf	??_mTouch_Count1ms
 10057  0028' 0800'              	movf	??_mTouch_Count1ms,w
 10058  0029' 0782'              	addwf	mTouch_Count1ms@elements,f
 10059  002A' 2800'              	goto	i1l3286
 10060  002B'                    __end_of_mTouch_Count1ms:	
 10061                           
 10062                           	psect	text47
 10063  0000'                    __ptext47:	
 10064 ;; *************** function _Timer6_CheckFlag *****************
 10065 ;; Defined at:
 10066 ;;		line 17 in file "PIC_Timer6.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      unsigned char 
 10073 ;; Registers used:
 10074 ;;		wreg
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10080 ;;      Params:         0       0       0       0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0
 10082 ;;      Temps:          0       0       0       0       0       0
 10083 ;;      Totals:         0       0       0       0       0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_Handler
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           
 10094                           ;psect for function _Timer6_CheckFlag
 10095  0000'                    _Timer6_CheckFlag:	
 10096                           
 10097                           ;PIC_Timer6.c: 19: if(TMR6IE&&TMR6IF)
 10098                           
 10099                           ;incstack = 0
 10100                           ; Regs used in _Timer6_CheckFlag: [wreg]
 10101  0000' 0021               	movlb	1	; select bank1
 10102  0001' 1D93               	btfss	19,3	;volatile
 10103  0002' 2800'              	goto	i1l2100
 10104  0003' 0020               	movlb	0	; select bank0
 10105  0004' 1D93               	btfss	19,3	;volatile
 10106  0005' 2800'              	goto	i1l2100
 10107                           
 10108                           ;PIC_Timer6.c: 20: {
 10109                           ;PIC_Timer6.c: 21: TMR6IF = 0;
 10110  0006' 1193               	bcf	19,3	;volatile
 10111                           
 10112                           ;PIC_Timer6.c: 22: return 1;
 10113  0007' 3001               	movlw	1
 10114  0008' 0008               	return
 10115  0009'                    i1l2100:	
 10116                           
 10117                           ;PIC_Timer6.c: 23: }
 10118                           ;PIC_Timer6.c: 24: return 0;
 10119  0009' 3000               	movlw	0
 10120  000A' 0008               	return
 10121  000B'                    __end_of_Timer6_CheckFlag:	
 10122                           
 10123                           	psect	text48
 10124  0000'                    __ptext48:	
 10125 ;; *************** function _Timer1_DetectAssignCount *****************
 10126 ;; Defined at:
 10127 ;;		line 105 in file "Timer1_Count.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;		None
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;		None
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      unsigned char 
 10134 ;; Registers used:
 10135 ;;		wreg
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10141 ;;      Params:         0       0       0       0       0       0
 10142 ;;      Locals:         0       0       0       0       0       0
 10143 ;;      Temps:          0       0       0       0       0       0
 10144 ;;      Totals:         0       0       0       0       0       0
 10145 ;;Total ram usage:        0 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_Handler
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _Timer1_DetectAssignCount
 10156  0000'                    _Timer1_DetectAssignCount:	
 10157                           
 10158                           ;Timer1_Count.c: 107: if(TMR1IF&&TMR1IE)
 10159                           
 10160                           ;incstack = 0
 10161                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
 10162  0000' 0020               	movlb	0	; select bank0
 10163  0001' 1C11               	btfss	17,0	;volatile
 10164  0002' 2800'              	goto	i1l3274
 10165  0003' 0021               	movlb	1	; select bank1
 10166  0004' 1C11               	btfss	17,0	;volatile
 10167  0005' 2800'              	goto	i1l3274
 10168                           
 10169                           ;Timer1_Count.c: 108: {
 10170                           ;Timer1_Count.c: 109: cnts.SigmaDeltaCount+= 2UL;
 10171  0006' 3002               	movlw	2
 10172  0007' 0780'              	addwf	_cnts^(0+128),f
 10173  0008' 3000               	movlw	0
 10174  0009' 3D80'              	addwfc	(_cnts+1)^(0+128),f
 10175  000A' 3000               	movlw	0
 10176  000B' 3D80'              	addwfc	(_cnts+2)^(0+128),f
 10177  000C' 3000               	movlw	0
 10178  000D' 3D80'              	addwfc	(_cnts+3)^(0+128),f
 10179                           
 10180                           ;Timer1_Count.c: 111: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-2UL+1; TMR1ON = 1; };
 10181  000E' 0020               	movlb	0	; select bank0
 10182  000F' 1018               	bcf	24,0	;volatile
 10183  0010' 30FF               	movlw	255
 10184  0011' 0097               	movwf	23	;volatile
 10185  0012' 30FE               	movlw	254
 10186  0013' 0096               	movwf	22	;volatile
 10187  0014' 1418               	bsf	24,0	;volatile
 10188                           
 10189                           ;Timer1_Count.c: 113: TMR1IF = 0;
 10190  0015' 1011               	bcf	17,0	;volatile
 10191                           
 10192                           ;Timer1_Count.c: 115: return 1;
 10193  0016' 3001               	movlw	1
 10194  0017' 0008               	return
 10195  0018'                    i1l3274:	
 10196                           
 10197                           ;Timer1_Count.c: 116: }
 10198                           ;Timer1_Count.c: 117: return 0;
 10199  0018' 3000               	movlw	0
 10200  0019' 0008               	return
 10201  001A'                    __end_of_Timer1_DetectAssignCount:	
 10202                           
 10203                           	psect	text49
 10204  0000'                    __ptext49:	
 10205 ;; *************** function _Timer1_Count1ms *****************
 10206 ;; Defined at:
 10207 ;;		line 76 in file "Timer1_Count.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;		None
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;		None
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10221 ;;      Params:         0       0       0       0       0       0
 10222 ;;      Locals:         0       0       0       0       0       0
 10223 ;;      Temps:          1       0       0       0       0       0
 10224 ;;      Totals:         1       0       0       0       0       0
 10225 ;;Total ram usage:        1 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    1
 10228 ;; This function calls:
 10229 ;;		_Buzzer_Sound_ms
 10230 ;; This function is called by:
 10231 ;;		_Handler
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           
 10236                           ;psect for function _Timer1_Count1ms
 10237  0000'                    _Timer1_Count1ms:	
 10238                           
 10239                           ;Timer1_Count.c: 78: if(TMR1ON==1)
 10240                           
 10241                           ;incstack = 0
 10242                           ; Regs used in _Timer1_Count1ms: [wreg+status,2+status,0+pclath+cstack]
 10243  0000' 0020               	movlb	0	; select bank0
 10244  0001' 1C18               	btfss	24,0	;volatile
 10245  0002' 0008               	return
 10246                           
 10247                           ;Timer1_Count.c: 79: {
 10248                           ;Timer1_Count.c: 80: tcnt.Delta_t++;
 10249  0003' 3001               	movlw	1
 10250  0004' 0021               	movlb	1	; select bank1
 10251  0005' 0782'              	addwf	(_tcnt^(0+128)+2),f
 10252  0006' 3000               	movlw	0
 10253  0007' 3D82'              	addwfc	((_tcnt+1)^(0+128)+2),f
 10254  0008' 3000               	movlw	0
 10255  0009' 3D82'              	addwfc	((_tcnt+2)^(0+128)+2),f
 10256  000A' 3000               	movlw	0
 10257  000B' 3D82'              	addwfc	((_tcnt+3)^(0+128)+2),f
 10258                           
 10259                           ;Timer1_Count.c: 81: tcnt.RenewalRersult++;
 10260  000C' 3001               	movlw	1
 10261  000D' 0786'              	addwf	(_tcnt^(0+128)+6),f
 10262  000E' 3000               	movlw	0
 10263  000F' 3D86'              	addwfc	((_tcnt+1)^(0+128)+6),f
 10264                           
 10265                           ;Timer1_Count.c: 83: if(tcnt.RenewalRersult>1000)
 10266  0010' 3003               	movlw	3
 10267  0011' 0206'              	subwf	((_tcnt+1)^(0+128)+6),w
 10268  0012' 30E9               	movlw	233
 10269  0013' 1903               	skipnz
 10270  0014' 0206'              	subwf	(_tcnt^(0+128)+6),w
 10271  0015' 1C03               	skipc
 10272  0016' 0008               	return
 10273                           
 10274                           ;Timer1_Count.c: 84: {
 10275                           ;Timer1_Count.c: 85: tcnt.Second_t++;
 10276  0017' 3001               	movlw	1
 10277  0018' 0082'              	movwf	??_Timer1_Count1ms
 10278  0019' 0802'              	movf	??_Timer1_Count1ms,w
 10279  001A' 0780'              	addwf	_tcnt^(0+128),f
 10280                           
 10281                           ;Timer1_Count.c: 87: if((56<tcnt.Second_t)&&(tcnt.Second_t<60))
 10282  001B' 3039               	movlw	57
 10283  001C' 0200'              	subwf	_tcnt^(0+128),w
 10284  001D' 1C03               	skipc
 10285  001E' 2800'              	goto	i1l3300
 10286  001F' 303C               	movlw	60
 10287  0020' 0200'              	subwf	_tcnt^(0+128),w
 10288  0021' 1803               	skipnc
 10289  0022' 2800'              	goto	i1l3300
 10290                           
 10291                           ;Timer1_Count.c: 88: {
 10292                           ;Timer1_Count.c: 89: Buzzer_Sound_ms(300);
 10293  0023' 302C               	movlw	44
 10294  0024' 0080'              	movwf	Buzzer_Sound_ms@time
 10295  0025' 3001               	movlw	1
 10296  0026' 2800'              	goto	L13
 10297  0027'                    i1l3300:	
 10298                           ;Timer1_Count.c: 90: }
 10299                           
 10300                           
 10301                           ;Timer1_Count.c: 91: else if(tcnt.Second_t>59)
 10302  0027' 303C               	movlw	60
 10303  0028' 0021               	movlb	1	; select bank1
 10304  0029' 0200'              	subwf	_tcnt^(0+128),w
 10305  002A' 1C03               	skipc
 10306  002B' 2800'              	goto	i1l3308
 10307                           
 10308                           ;Timer1_Count.c: 92: {
 10309                           ;Timer1_Count.c: 93: tcnt.Second_t = 0;
 10310  002C' 0180'              	clrf	_tcnt^(0+128)
 10311                           
 10312                           ;Timer1_Count.c: 94: tcnt.Minute_t++;
 10313  002D' 3001               	movlw	1
 10314  002E' 0082'              	movwf	??_Timer1_Count1ms
 10315  002F' 0802'              	movf	??_Timer1_Count1ms,w
 10316  0030' 0781'              	addwf	(_tcnt^(0+128)+1),f
 10317                           
 10318                           ;Timer1_Count.c: 96: Buzzer_Sound_ms(600);
 10319  0031' 3058               	movlw	88
 10320  0032' 0080'              	movwf	Buzzer_Sound_ms@time
 10321  0033' 3002               	movlw	2
 10322  0034'                    L13:	
 10323  0034' 0081'              	movwf	Buzzer_Sound_ms@time+1
 10324  0035' 3180' 2000'        	fcall	_Buzzer_Sound_ms
 10325  0037'                    i1l3308:	
 10326                           
 10327                           ;Timer1_Count.c: 97: }
 10328                           ;Timer1_Count.c: 99: tcnt.RenewalRersult = 0;
 10329  0037' 0021               	movlb	1	; select bank1
 10330  0038' 0186'              	clrf	(_tcnt^(0+128)+6)
 10331  0039' 0186'              	clrf	((_tcnt+1)^(0+128)+6)
 10332  003A' 0008               	return
 10333  003B'                    __end_of_Timer1_Count1ms:	
 10334                           
 10335                           	psect	text50
 10336  0000'                    __ptext50:	
 10337 ;; *************** function _Buzzer_Sound_ms *****************
 10338 ;; Defined at:
 10339 ;;		line 36 in file "Buzzer.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  time            2    0[COMMON] unsigned int 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, status,2, status,0
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10353 ;;      Params:         2       0       0       0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0
 10355 ;;      Temps:          0       0       0       0       0       0
 10356 ;;      Totals:         2       0       0       0       0       0
 10357 ;;Total ram usage:        2 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; This function calls:
 10360 ;;		Nothing
 10361 ;; This function is called by:
 10362 ;;		_Timer1_Count1ms
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           
 10367                           ;psect for function _Buzzer_Sound_ms
 10368  0000'                    _Buzzer_Sound_ms:	
 10369                           
 10370                           ;Buzzer.c: 38: if(count==0)
 10371                           
 10372                           ;incstack = 0
 10373                           ; Regs used in _Buzzer_Sound_ms: [wreg+status,2+status,0]
 10374  0000' 0800'              	movf	_count,w
 10375  0001' 0401'              	iorwf	_count+1,w
 10376  0002' 1D03               	btfss	3,2
 10377  0003' 0008               	return
 10378                           
 10379                           ;Buzzer.c: 39: count = time;
 10380  0004' 0801'              	movf	Buzzer_Sound_ms@time+1,w
 10381  0005' 0081'              	movwf	_count+1
 10382  0006' 0800'              	movf	Buzzer_Sound_ms@time,w
 10383  0007' 0080'              	movwf	_count
 10384  0008' 0008               	return
 10385  0009'                    __end_of_Buzzer_Sound_ms:	
 10386                           
 10387                           	psect	text51
 10388  0000'                    __ptext51:	
 10389 ;; *************** function _I2C_Interrupt *****************
 10390 ;; Defined at:
 10391 ;;		line 50 in file "PIC_I2C.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10405 ;;      Params:         0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    1
 10412 ;; This function calls:
 10413 ;;		_I2C2_Interrupt
 10414 ;; This function is called by:
 10415 ;;		_Handler
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           
 10420                           ;psect for function _I2C_Interrupt
 10421  0000'                    _I2C_Interrupt:	
 10422                           
 10423                           ;PIC_I2C.c: 56: I2C2_Interrupt();
 10424                           
 10425                           ;incstack = 0
 10426                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10427  0000' 3180' 2000'        	fcall	_I2C2_Interrupt
 10428  0002' 0008               	return
 10429  0003'                    __end_of_I2C_Interrupt:	
 10430                           
 10431                           	psect	text52
 10432  0000'                    __ptext52:	
 10433 ;; *************** function _I2C2_Interrupt *****************
 10434 ;; Defined at:
 10435 ;;		line 149 in file "PIC_I2C2.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;		None
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;		None
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10449 ;;      Params:         0       0       0       0       0       0
 10450 ;;      Locals:         0       0       0       0       0       0
 10451 ;;      Temps:          1       0       0       0       0       0
 10452 ;;      Totals:         1       0       0       0       0       0
 10453 ;;Total ram usage:        1 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_I2C_Interrupt
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function _I2C2_Interrupt
 10464  0000'                    _I2C2_Interrupt:	
 10465                           
 10466                           ;PIC_I2C2.c: 151: if(SSP2IF&&SSP2IE)
 10467                           
 10468                           ;incstack = 0
 10469                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 10470  0000' 0020               	movlb	0	; select bank0
 10471  0001' 1C14               	btfss	20,0	;volatile
 10472  0002' 2800'              	goto	i1l2922
 10473  0003' 0021               	movlb	1	; select bank1
 10474  0004' 1C14               	btfss	20,0	;volatile
 10475  0005' 2800'              	goto	i1l2922
 10476                           
 10477                           ;PIC_I2C2.c: 152: {
 10478                           ;PIC_I2C2.c: 153: if(SSP2STATbits.D_nA)
 10479  0006' 0024               	movlb	4	; select bank4
 10480  0007' 1E9C               	btfss	28,5	;volatile
 10481  0008' 2800'              	goto	i1l437
 10482                           
 10483                           ;PIC_I2C2.c: 154: {
 10484                           ;PIC_I2C2.c: 155: if(SSP2STATbits.R_nW)
 10485  0009' 1D1C               	btfss	28,2	;volatile
 10486  000A' 2800'              	goto	i1l2898
 10487                           
 10488                           ;PIC_I2C2.c: 156: {
 10489                           ;PIC_I2C2.c: 157: if(!SSP2CON2bits.ACKSTAT)
 10490  000B' 1B1E               	btfsc	30,6	;volatile
 10491  000C' 2800'              	goto	i1l2920
 10492  000D'                    i1l2890:	
 10493                           ;PIC_I2C2.c: 158: {
 10494                           ;PIC_I2C2.c: 159: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
 10495                           
 10496  000D' 081C               	movf	28,w	;volatile
 10497  000E' 3901               	andlw	1
 10498  000F' 0080'              	movwf	??_I2C2_Interrupt
 10499  0010' 0E1D               	swapf	29,w	;volatile
 10500  0011' 3901               	andlw	1
 10501  0012' 0400'              	iorwf	??_I2C2_Interrupt,w
 10502  0013' 1D03               	btfss	3,2
 10503  0014' 2800'              	goto	i1l2890
 10504  0015' 2800'              	goto	L14
 10505  0016'                    i1l2898:	
 10506                           ;PIC_I2C2.c: 163: }
 10507                           ;PIC_I2C2.c: 164: }
 10508                           
 10509                           ;PIC_I2C2.c: 162: SSP2CON1bits.CKP = 1;
 10510                           
 10511                           ;PIC_I2C2.c: 161: I2C2_Config.TransmitPoint++;
 10512                           
 10513                           ;PIC_I2C2.c: 160: SSP2BUF = *I2C2_Config.TransmitPoint;
 10514                           
 10515                           
 10516                           ;PIC_I2C2.c: 165: else
 10517                           ;PIC_I2C2.c: 166: {
 10518                           ;PIC_I2C2.c: 167: *I2C2_Config.ReceivePoint = SSP2BUF;
 10519  0016' 0819               	movf	25,w	;volatile
 10520  0017' 0080'              	movwf	??_I2C2_Interrupt
 10521  0018' 0021               	movlb	1	; select bank1
 10522  0019' 0800'              	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
 10523  001A' 0086               	movwf	6
 10524  001B' 0187               	clrf	7
 10525  001C' 0800'              	movf	??_I2C2_Interrupt,w
 10526  001D' 0081               	movwf	1
 10527                           
 10528                           ;PIC_I2C2.c: 168: I2C2_Config.ReceivePoint++;
 10529  001E' 3001               	movlw	1
 10530  001F' 0080'              	movwf	??_I2C2_Interrupt
 10531  0020' 0800'              	movf	??_I2C2_Interrupt,w
 10532  0021' 0780'              	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
 10533  0022' 2800'              	goto	i1l2918
 10534  0023'                    i1l437:	
 10535                           ;PIC_I2C2.c: 170: }
 10536                           ;PIC_I2C2.c: 171: }
 10537                           
 10538                           ;PIC_I2C2.c: 169: SSP2CON1bits.CKP = 1;
 10539                           
 10540                           
 10541                           ;PIC_I2C2.c: 172: else if(!SSP2STATbits.D_nA)
 10542  0023' 1A9C               	btfsc	28,5	;volatile
 10543  0024' 2800'              	goto	i1l2920
 10544                           
 10545                           ;PIC_I2C2.c: 173: {
 10546                           ;PIC_I2C2.c: 174: SSP2BUF;
 10547  0025' 0819               	movf	25,w	;volatile
 10548                           
 10549                           ;PIC_I2C2.c: 176: if(SSP2STATbits.R_nW)
 10550  0026' 1D1C               	btfss	28,2	;volatile
 10551  0027' 2800'              	goto	i1l2916
 10552                           
 10553                           ;PIC_I2C2.c: 177: {
 10554                           ;PIC_I2C2.c: 178: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
 10555  0028' 3000'              	movlw	(low (_I2C2_Config| 0))& (0+255)
 10556  0029' 0080'              	movwf	??_I2C2_Interrupt
 10557  002A' 0800'              	movf	??_I2C2_Interrupt,w
 10558  002B' 0021               	movlb	1	; select bank1
 10559  002C' 0080'              	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
 10560  002D'                    i1l2910:	
 10561                           ;PIC_I2C2.c: 180: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
 10562                           
 10563  002D' 0024               	movlb	4	; select bank4
 10564  002E' 081C               	movf	28,w	;volatile
 10565  002F' 3901               	andlw	1
 10566  0030' 0080'              	movwf	??_I2C2_Interrupt
 10567  0031' 0E1D               	swapf	29,w	;volatile
 10568  0032' 3901               	andlw	1
 10569  0033' 0400'              	iorwf	??_I2C2_Interrupt,w
 10570  0034' 1D03               	btfss	3,2
 10571  0035' 2800'              	goto	i1l2910
 10572  0036'                    L14:	
 10573                           
 10574                           ;PIC_I2C2.c: 181: SSP2BUF = *I2C2_Config.TransmitPoint;
 10575  0036' 0021               	movlb	1	; select bank1
 10576  0037' 0800'              	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
 10577  0038' 0086               	movwf	6
 10578  0039' 0187               	clrf	7
 10579  003A' 0801               	movf	1,w
 10580  003B' 0024               	movlb	4	; select bank4
 10581  003C' 0099               	movwf	25	;volatile
 10582                           
 10583                           ;PIC_I2C2.c: 182: I2C2_Config.TransmitPoint++;
 10584  003D' 3001               	movlw	1
 10585  003E' 0080'              	movwf	??_I2C2_Interrupt
 10586  003F' 0800'              	movf	??_I2C2_Interrupt,w
 10587  0040' 0021               	movlb	1	; select bank1
 10588  0041' 0780'              	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
 10589                           
 10590                           ;PIC_I2C2.c: 183: }
 10591  0042' 2800'              	goto	i1l2918
 10592  0043'                    i1l2916:	
 10593                           
 10594                           ;PIC_I2C2.c: 184: else
 10595                           ;PIC_I2C2.c: 185: {
 10596                           ;PIC_I2C2.c: 186: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
 10597  0043' 3000'              	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
 10598  0044' 0080'              	movwf	??_I2C2_Interrupt
 10599  0045' 0800'              	movf	??_I2C2_Interrupt,w
 10600  0046' 0021               	movlb	1	; select bank1
 10601  0047' 0080'              	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
 10602  0048'                    i1l2918:	
 10603                           
 10604                           ;PIC_I2C2.c: 187: }
 10605                           ;PIC_I2C2.c: 188: SSP2CON1bits.CKP = 1;
 10606  0048' 0024               	movlb	4	; select bank4
 10607  0049' 161D               	bsf	29,4	;volatile
 10608  004A'                    i1l2920:	
 10609                           
 10610                           ;PIC_I2C2.c: 189: }
 10611                           ;PIC_I2C2.c: 190: SSP2IF = 0;
 10612  004A' 0020               	movlb	0	; select bank0
 10613  004B' 1014               	bcf	20,0	;volatile
 10614  004C'                    i1l2922:	
 10615                           
 10616                           ;PIC_I2C2.c: 191: }
 10617                           ;PIC_I2C2.c: 193: if(BCL2IE&&BCL2IF)
 10618  004C' 0021               	movlb	1	; select bank1
 10619  004D' 1C94               	btfss	20,1	;volatile
 10620  004E' 0008               	return
 10621  004F' 0020               	movlb	0	; select bank0
 10622  0050' 1C94               	btfss	20,1	;volatile
 10623  0051' 0008               	return
 10624                           
 10625                           ;PIC_I2C2.c: 194: BCL2IF = 0;
 10626  0052' 1094               	bcf	20,1	;volatile
 10627  0053' 0008               	return
 10628  0054'                    __end_of_I2C2_Interrupt:	
 10629                           
 10630                           	psect	text53
 10631  0000'                    __ptext53:	
 10632 ;; *************** function _Buzzer_Count1ms *****************
 10633 ;; Defined at:
 10634 ;;		line 42 in file "Buzzer.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;		None
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;		None
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, status,2, status,0, pclath, cstack
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10648 ;;      Params:         0       0       0       0       0       0
 10649 ;;      Locals:         0       0       0       0       0       0
 10650 ;;      Temps:          0       0       0       0       0       0
 10651 ;;      Totals:         0       0       0       0       0       0
 10652 ;;Total ram usage:        0 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:    1
 10655 ;; This function calls:
 10656 ;;		_Buzzer_SetDuty
 10657 ;; This function is called by:
 10658 ;;		_Handler
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           
 10663                           ;psect for function _Buzzer_Count1ms
 10664  0000'                    _Buzzer_Count1ms:	
 10665                           
 10666                           ;Buzzer.c: 44: if(count>0)
 10667                           
 10668                           ;incstack = 0
 10669                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
 10670  0000' 0800'              	movf	_count,w
 10671  0001' 0401'              	iorwf	_count+1,w
 10672  0002' 1903               	btfsc	3,2
 10673  0003' 2800'              	goto	i1l2954
 10674                           
 10675                           ;Buzzer.c: 45: {
 10676                           ;Buzzer.c: 46: count--;
 10677  0004' 3001               	movlw	1
 10678  0005' 0280'              	subwf	_count,f
 10679  0006' 3000               	movlw	0
 10680  0007' 3B81'              	subwfb	_count+1,f
 10681                           
 10682                           ;Buzzer.c: 47: Buzzer_SetDuty(0x01FF);
 10683  0008' 30FF               	movlw	255
 10684  0009' 0080'              	movwf	Buzzer_SetDuty@duty
 10685  000A' 3001               	movlw	1
 10686  000B' 0081'              	movwf	Buzzer_SetDuty@duty+1
 10687  000C' 3180' 2000'        	fcall	_Buzzer_SetDuty
 10688                           
 10689                           ;Buzzer.c: 48: }
 10690  000E' 0008               	return
 10691  000F'                    i1l2954:	
 10692                           
 10693                           ;Buzzer.c: 49: else
 10694                           ;Buzzer.c: 50: {
 10695                           ;Buzzer.c: 51: Buzzer_SetDuty(0x0000);
 10696  000F' 3000               	movlw	0
 10697  0010' 0080'              	movwf	Buzzer_SetDuty@duty
 10698  0011' 0081'              	movwf	Buzzer_SetDuty@duty+1
 10699  0012' 3180' 2000'        	fcall	_Buzzer_SetDuty
 10700  0014' 0008               	return
 10701  0015'                    __end_of_Buzzer_Count1ms:	
 10702                           
 10703                           	psect	text54
 10704  0000'                    __ptext54:	
 10705 ;; *************** function _Buzzer_SetDuty *****************
 10706 ;; Defined at:
 10707 ;;		line 29 in file "Buzzer.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  duty            2    0[COMMON] unsigned int 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10721 ;;      Params:         2       0       0       0       0       0
 10722 ;;      Locals:         1       0       0       0       0       0
 10723 ;;      Temps:          2       0       0       0       0       0
 10724 ;;      Totals:         5       0       0       0       0       0
 10725 ;;Total ram usage:        5 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_Buzzer_Count1ms
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           
 10735                           ;psect for function _Buzzer_SetDuty
 10736  0000'                    _Buzzer_SetDuty:	
 10737                           
 10738                           ;Buzzer.c: 31: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
 10739                           
 10740                           ;incstack = 0
 10741                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
 10742  0000' 0025               	movlb	5	; select bank5
 10743  0001' 081A               	movf	26,w	;volatile
 10744  0002' 39CF               	andlw	207
 10745  0003' 0082'              	movwf	??_Buzzer_SetDuty
 10746  0004' 0802'              	movf	??_Buzzer_SetDuty,w
 10747  0005' 0084'              	movwf	Buzzer_SetDuty@CCP2CON_Pre
 10748                           
 10749                           ;Buzzer.c: 32: CCPR2L = (duty>>2);
 10750  0006' 0801'              	movf	Buzzer_SetDuty@duty+1,w
 10751  0007' 0083'              	movwf	??_Buzzer_SetDuty+1
 10752  0008' 0800'              	movf	Buzzer_SetDuty@duty,w
 10753  0009' 0082'              	movwf	??_Buzzer_SetDuty
 10754  000A' 3683'              	lsrf	??_Buzzer_SetDuty+1,f
 10755  000B' 0C82'              	rrf	??_Buzzer_SetDuty,f
 10756  000C' 3683'              	lsrf	??_Buzzer_SetDuty+1,f
 10757  000D' 0C82'              	rrf	??_Buzzer_SetDuty,f
 10758  000E' 0802'              	movf	??_Buzzer_SetDuty,w
 10759  000F' 0098               	movwf	24	;volatile
 10760                           
 10761                           ;Buzzer.c: 33: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
 10762  0010' 0800'              	movf	Buzzer_SetDuty@duty,w
 10763  0011' 3903               	andlw	3
 10764  0012' 0082'              	movwf	??_Buzzer_SetDuty
 10765  0013' 3003               	movlw	3
 10766  0014'                    u209_25:	
 10767  0014' 3582'              	lslf	??_Buzzer_SetDuty,f
 10768  0015' 3EFF               	addlw	-1
 10769  0016' 1D03               	skipz
 10770  0017' 2800'              	goto	u209_25
 10771  0018' 3502'              	lslf	??_Buzzer_SetDuty,w
 10772  0019' 0404'              	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
 10773  001A' 009A               	movwf	26	;volatile
 10774  001B' 0008               	return
 10775  001C'                    __end_of_Buzzer_SetDuty:	
 10776  007E                     btemp	set	126	;btemp
 10777  007E                     int$flags	set	126
 10778  007E                     wtemp0	set	126


Data Sizes:
    Strings     513
    Constant    40
    Data        60
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     76      78
    BANK1            80      0      60
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    Show_PMT_Config$1276	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    Ssetting_PMT_Config$1275	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_60(CODE[7]), STR_51(CODE[5]), STR_40(CODE[5]), STR_36(CODE[7]), 
		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[7]), 
		 -> STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), STR_28(CODE[6]), 
		 -> STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_59(CODE[2]), STR_58(CODE[14]), STR_57(CODE[12]), STR_56(CODE[12]), 
		 -> STR_55(CODE[12]), STR_54(CODE[17]), STR_53(CODE[17]), STR_52(CODE[20]), 
		 -> STR_50(CODE[14]), STR_49(CODE[12]), STR_48(CODE[12]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[11]), STR_41(CODE[20]), STR_39(CODE[14]), STR_38(CODE[17]), 
		 -> STR_37(CODE[17]), STR_6(CODE[17]), STR_5(CODE[10]), STR_4(CODE[17]), 
		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    mTouch_Init@cps_config	PTR struct . size(1) Largest target is 24
		 -> main@cps_config(BANK1[24]), 

    config_ptr	PTR struct . size(1) Largest target is 24
		 -> NULL(NULL[0]), main@cps_config(BANK1[24]), 

    mTouch_Init@mTouch_PortInit	PTR FTN()void  size(2) Largest target is 1
		 -> mTouch_Init_Port(), 

    LCD1602_Init@LCD1602_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    I2C2_Init@I2C2_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Init_Port(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    S504$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S504$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    Show_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Ssetting_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    StartUp_Menu@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Load_PMTConfing@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Save_PMTConfig@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    H7826_01_Gain	PTR unsigned char [15] size(2) Largest target is 7
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    H7826_Gain	PTR unsigned char [15] size(2) Largest target is 8
		 -> STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), 
		 -> STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 

    EEPROM_MultiRead@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3388..(BANK1[3]), main@pmt_config(BANK1[3]), 

    EEPROM_MultiWrite@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3388..(BANK1[3]), main@pmt_config(BANK1[3]), 

    Buzzer_Init@Buzzer_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> Buzzer_Init_Port(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_Count1ms->_Buzzer_Sound_ms
    _I2C_Interrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_Show_PMT_Config
    _main->_Ssetting_PMT_Config
    _main->_StartUp_Menu
    _mTouch_Init->_mTouch_Init_Port
    _Timer1_GetCPM->_Timer1_GetCPS
    _Timer1_GetCPS->___lldiv
    _StartUp_Menu->_printf
    _Load_PMTConfing->_EEPROM_MultiRead
    _EEPROM_MultiRead->_eeprom_read
    _Ssetting_PMT_Config->_printf
    _Save_PMTConfig->_EEPROM_MultiWrite
    _EEPROM_MultiWrite->_eeprom_write
    _DAC_WriteVoltage->_I2C_Transmit
    _Show_PMT_Config->_printf
    _printf->_Timer1_GetCPM
    _putch->_LCD1602_WriteData
    ___llmod->___lldiv
    ___lldiv->___lmul
    _LCD1602_CursorPosition->_LCD1602_WriteData
    _LCD1602_CursorHome->_LCD1602_WriteData
    _LCD1602_Init->_LCD1602_DisplayClear
    _LCD1602_DisplayClear->_LCD1602_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C2_Init->_I2C2_Init_Port
    _Buzzer_Init->_Buzzer_Init_Port

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   50623
                                             72 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
             _LCD1602_CursorPosition
               _LCD1602_DisplayClear
                       _LCD1602_Init
                    _Show_PMT_Config
                _Ssetting_PMT_Config
                       _StartUp_Menu
                 _Timer1_ClearRecord
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                   _Timer1_StopCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          5     1      4     405
                                              1 BANK0      5     1      4
                   _mTouch_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _mTouch_Init_Port                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Timer1_StopCount                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        8     4      4    1795
                                             30 BANK0      8     4      4
                      _Timer1_GetCPS
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4    1209
                                             26 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     552
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _StartUp_Menu                                         3     3      0   12660
                                             69 BANK0      3     3      0
                   _DAC_WriteVoltage
                 _LCD1602_CursorHome
             _LCD1602_CursorPosition
               _LCD1602_DisplayClear
                    _Load_PMTConfing
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Load_PMTConfing                                      2     2      0     602
                                             11 BANK0      2     2      0
                   _EEPROM_MultiRead
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiRead                                     7     5      2     532
                                              4 BANK0      7     5      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          4     4      0      31
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Ssetting_PMT_Config                                  3     3      0   13353
                                             69 BANK0      3     3      0
                   _DAC_WriteVoltage
                 _LCD1602_CursorHome
             _LCD1602_CursorPosition
               _LCD1602_DisplayClear
                     _Save_PMTConfig
                             ___wmul
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Save_PMTConfig                                       2     2      0     737
                                             11 BANK0      2     2      0
                  _EEPROM_MultiWrite
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiWrite                                    7     5      2     667
                                              4 BANK0      7     5      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DAC_WriteVoltage                                     5     3      2    1724
                                             16 BANK0      5     3      2
                       _I2C_Transmit
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Show_PMT_Config                                      3     3      0    9301
                                             69 BANK0      3     3      0
                 _LCD1602_CursorHome
             _LCD1602_CursorPosition
               _LCD1602_DisplayClear
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    7104
                                             38 BANK0     31    21     10
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                  _LCD1602_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1312
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     440
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     657
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         9     9      0     155
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) _LCD1602_CursorPosition                               3     2      1    1538
                                              3 BANK0      3     2      1
                  _LCD1602_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD1602_CursorHome                                   1     1      0     124
                                              3 BANK0      1     1      0
                  _LCD1602_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD1602_Init                                         4     2      2     352
                                              4 BANK0      4     2      2
               _LCD1602_DisplayClear
                  _LCD1602_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD1602_DisplayClear                                 1     1      0     124
                                              3 BANK0      1     1      0
                  _LCD1602_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD1602_WriteData                                    3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2056
                                             16 BANK0      2     2      0
                          _I2C2_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                         8     5      3    1454
                                              8 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (4) _I2C2_Transmit                                        8     6      2     672
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_Init                                            6     1      5     602
                                              1 BANK0      6     1      5
                     _I2C2_Init_Port *
 ---------------------------------------------------------------------------------
 (3) _I2C2_Init_Port                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          5     1      4     405
                                              1 BANK0      5     1      4
                   _Buzzer_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _Buzzer_Init_Port                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     513
                                              5 COMMON     1     1      0
                    _Buzzer_Count1ms
                      _I2C_Interrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
                    _mTouch_Count1ms
                        _mTouch_Scan
 ---------------------------------------------------------------------------------
 (6) _mTouch_Scan                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_Count1ms                                      3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0     200
                                              2 COMMON     1     1      0
                    _Buzzer_Sound_ms
 ---------------------------------------------------------------------------------
 (7) _Buzzer_Sound_ms                                      2     0      2     200
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     245
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     245
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
     _Buzzer_Init_Port *
   _DAC_Initialize
     _I2C2_Init
       _I2C2_Init_Port *
     _I2C_Transmit
       _I2C2_Transmit
   _LCD1602_CursorPosition
     _LCD1602_WriteData
   _LCD1602_DisplayClear
     _LCD1602_WriteData
   _LCD1602_Init
     _LCD1602_DisplayClear
       _LCD1602_WriteData
     _LCD1602_WriteData
   _Show_PMT_Config
     _LCD1602_CursorHome
       _LCD1602_WriteData
     _LCD1602_CursorPosition
       _LCD1602_WriteData
     _LCD1602_DisplayClear
       _LCD1602_WriteData
     _mTouch_Check
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD1602_WriteData
   _Ssetting_PMT_Config
     _DAC_WriteVoltage
       _I2C_Transmit
         _I2C2_Transmit
       ___wmul (ARG)
     _LCD1602_CursorHome
       _LCD1602_WriteData
     _LCD1602_CursorPosition
       _LCD1602_WriteData
     _LCD1602_DisplayClear
       _LCD1602_WriteData
     _Save_PMTConfig
       _EEPROM_MultiWrite
         _eeprom_write
     ___wmul
     _mTouch_Check
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD1602_WriteData
   _StartUp_Menu
     _DAC_WriteVoltage
       _I2C_Transmit
         _I2C2_Transmit
       ___wmul (ARG)
     _LCD1602_CursorHome
       _LCD1602_WriteData
     _LCD1602_CursorPosition
       _LCD1602_WriteData
     _LCD1602_DisplayClear
       _LCD1602_WriteData
     _Load_PMTConfing
       _EEPROM_MultiRead
         _eeprom_read
     ___wmul
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD1602_WriteData
   _Timer1_ClearRecord
   _Timer1_GetCPM
     _Timer1_GetCPS
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lmul
   _Timer1_GetCPS
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer1_StopCount
   _Timer6_Init
   _mTouch_Check
   _mTouch_Init
     _mTouch_Init_Port *
   _printf
     _Timer1_GetCPM (ARG)
       _Timer1_GetCPS
         ___lldiv
           ___lmul (ARG)
         ___lmul
       ___lmul
     _Timer1_GetCPS (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD1602_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_Interrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     _Buzzer_Sound_ms
   _Timer1_DetectAssignCount
   _Timer6_CheckFlag
   _mTouch_Count1ms
   _mTouch_Scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D1      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 27 02:40:51 2017

                  _Load_PMTConfing 0000           __end_of_Timer1_StopCount 0003  
                                pc 0002                        __CFG_CP$OFF 0000  
  __size_of_LCD1602_CursorPosition 0017                     I2C2_Transmit@i 0005  
                               _RD 0CA8                                 _WR 0CA9  
              ___wmul@multiplicand 0002                 Timer6_Init@pre_val 0002  
              _Ssetting_PMT_Config 0000                                l241 000D  
                              l250 0068                                l262 0002  
                              l265 008A                                l354 000D  
                              l371 0021                                l380 004A  
                              l358 003E                                l625 0026  
                              l636 0070                                l389 0067  
                              l717 0002                                l654 00CB  
                              l807 0009                                l655 0125  
                              l639 00EE                                l665 0184  
                              l682 0223                                l695 0004  
                              _GIE 005F                                _PR2 001B  
                  _Buzzer_Count1ms 0000                       __CFG_CPD$OFF 0000  
                              _PR6 041D                       __CFG_BORV$LO 0000  
                              wreg 0009                         _Basic_Init 0000  
                             S4504 0000                       __CFG_LVP$OFF 0000  
       ??_Timer1_DetectAssignCount 0000                               l4302 00B8  
                             l3600 0035                               l4320 0032  
                             l4400 00A2                               l3610 002D  
                             l4330 0050                               l4306 00D1  
                             l3612 0031                               l4420 010C  
                             l4404 00A8                               l4412 00C2  
                             l3614 0058                               l4326 0041  
                             l4270 003E                               l3702 0003  
                             l4414 00CF                               l3624 006D  
                             l3632 008C                               l4336 006F  
                             l4280 005D                               l4264 002A  
                             l3704 002E                               l4432 01A0  
                             l3626 0084                               l3634 0095  
                             l2682 0008                               l3722 000D  
                             l4290 0086                               l4426 014A  
                             l4442 00B7                               l3628 0089  
                             l4276 0051                               l4436 01A5  
                             l3814 0022                               l3830 0035  
                             l3590 0012                               l3662 0003  
                             l2694 0076                               l3902 00A2  
                             l3742 0009                               l4438 01A9  
                             l4382 0075                               l3816 0024  
                             l3808 0017                               l3760 0011  
                             l3728 0003                               l3912 00C0  
                             l3680 0019                               l4296 0099  
                             l4392 008F                               l4376 0064  
                             l4368 0059                               l3826 0033  
                             l3666 0014                               l3770 003F  
                             l3762 001F                               l3906 00A4  
                             l3746 0013                               l4386 0080  
                             l3588 0004                               l3668 0019  
                             l3924 00FF                               l3908 00B3  
                             l3916 00CD                               l3684 0003  
                             l3774 004A                               l3790 002F  
                             l3942 0145                               l3870 002B  
                             l3686 002F                               l4398 009B  
                             l3784 0009                               l3872 0034  
                             l3864 0021                               l3786 0017  
                             l3794 003A                               l3970 01AD  
                             l3962 01A0                               l3954 0178  
                             l3938 0134                               l3698 0019  
                             l3964 01A3                               l3948 014B  
                             l3892 0085                               l3884 0072  
                             l3876 0041                               l3982 01CD  
                             l3992 01DB                               l3976 01BC  
                             l3896 0087                               l3978 01C0  
                             l3986 01D5                               l3898 0095  
                             l3994 0005                  ?_DAC_WriteVoltage 0010  
             EEPROM_MultiRead@addr 0005                               STR_1 0000  
                             STR_2 0000                               STR_3 0000  
                             STR_4 0000                               STR_5 0000  
                             STR_6 0000                               STR_7 0000  
                             STR_8 0000                               STR_9 0000  
                             u2205 0067                               u2145 000B  
                             u2155 0019                               u2165 0036  
                             u3301 0003                               u2175 004E  
                             u2185 0054                               u3435 000A  
                             u3515 000A                               u3525 000F  
                             u3445 0015                               u4407 000A  
                             u3615 0020                               u4417 0009  
                             u3625 0034                               u3465 0015  
                             u4427 0022                               u3635 0040  
                             u3555 0014                               _PEIE 005E  
                             u4437 0037                               u3565 001B  
                             u4447 004C                               u3735 0008  
                             u4367 0042                               u4457 000A  
                             u3665 000C                               u4377 007A  
                             u4467 0003                               u3595 0014  
                             u3915 0193                               u4387 00A4  
                             u4397 0013                               u3685 0025  
                             u3695 0030                               u3875 016E  
                             u3795 009B                               _TMR1 0016  
                             _TMR2 001A                               _TMR6 041C  
             EEPROM_MultiRead@size 0004                               _WREN 0CAA  
                             _WPUB 020D                     ??_eeprom_write 0001  
                     __CFG_WRT$OFF 0000               ?_Ssetting_PMT_Config 0000  
               ??_DAC_WriteVoltage 0012              mTouch_Init@cps_config 0003  
                             _cnts 0008                               _main 0000  
                             _tcnt 0000                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                    ??_I2C2_Transmit 0002  
                  _Buzzer_Sound_ms 0000                   _Buzzer_Init_Port 0000  
                             start 0000*                     __CFG_IESO$OFF 0000  
                 ??_I2C2_Init_Port 0000                    __end_of_Handler 0027  
                    __CFG_MCLRE$ON 0000            I2C2_Init@I2C2_Init_PORT 0001  
             mTouch_Check@elements 0008                   ??_I2C2_Interrupt 0000  
               Buzzer_Init@pre_val 0003              __size_of_I2C_Transmit 001B  
        mTouch_Init@num_of_channel 0004                      __CFG_PLLEN$ON 0000  
                __end_of_I2C2_Init 0047                              ?_main 0000  
                            _EEADR 0191                              STR_10 0000  
                            STR_11 0000                              STR_20 0000  
                            STR_12 0000                              STR_21 0000  
                            STR_13 0000                              STR_14 0000  
                            STR_30 0000                              STR_22 0000  
                            STR_15 0000                              STR_31 0000  
                            STR_23 0000                              STR_40 0000  
                            STR_16 0000                              STR_32 0000  
                            STR_24 0000                              STR_41 0028  
                            STR_17 0000                              STR_33 0000  
                            STR_25 0000                      __CFG_WDTE$OFF 0000  
                            STR_50 0000                              STR_42 0000  
                            STR_18 0000                              STR_34 0000  
                            STR_26 0000                              STR_51 0000  
                            STR_43 0000                              STR_19 0000  
                            STR_35 0000                              STR_27 0000  
                            STR_52 0028                              STR_60 0000  
                            STR_44 0000                              STR_36 0000  
                            STR_28 0000                              STR_45 0000  
                            STR_37 0000                              STR_53 0000  
                            STR_29 0000                              STR_46 0000  
                            STR_54 0000                              STR_38 0000  
                            STR_55 0000                              STR_39 0000  
                            STR_47 0000                              STR_56 0000  
                            STR_48 0000                              STR_49 0000  
                            STR_57 0000                              STR_58 0000  
                            STR_59 0000              EEPROM_MultiRead@pData 0009  
                            _CARRY 0018                    __end_of___lldiv 0053  
                            _T1CON 0018                    __end_of___llmod 0043  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T6CON 041E        __size_of_Timer1_ClearRecord 0014  
                            i1l437 0023                              _PORTA 000C  
                            _PORTB 000D                              _TRISA 008C  
                            _TRISB 008D                  I2C2_Transmit@size 0001  
              ___lmul@multiplicand 0004                      __CFG_PWRTE$ON 0000  
                   __CFG_FCMEN$OFF 0000         __size_of_EEPROM_MultiWrite 0031  
                  __end_of_dpowers 0028                              _count 0000  
                  __end_of_isdigit 000F             _LCD1602_CursorPosition 0000  
                 ??_Save_PMTConfig 000B                  ??_Timer1_Count1ms 0002  
                            _putch 0000                      ??_Buzzer_Init 0005  
            __end_of_Timer1_GetCPM 0028              __end_of_Timer1_GetCPS 003D  
                            pclath 000A              ??_Ssetting_PMT_Config 0045  
            __size_of_LCD1602_Init 006F        __size_of_Timer1_GetCountSum 0011  
           __size_of_I2C_Interrupt 0003                              status 0003  
    __size_of_LCD1602_DisplayClear 0010                              wtemp0 007E  
          __end_of_Load_PMTConfing 000B            Ssetting_PMT_Config@data 0047  
                     _I2C_Transmit 0000                Buzzer_Sound_ms@time 0000  
                EEPROM_MultiRead@i 000A                   ??_DAC_Initialize 0010  
                  __initialization 0000                       __end_of_main 01AF  
          __end_of_Buzzer_Count1ms 0015          __size_of_mTouch_Init_Port 000D  
       __end_of_LCD1602_CursorHome 0010                             ??_main 0048  
         __size_of_Show_PMT_Config 0094               __end_of_mTouch_Check 0078  
                     _LCD1602_Init 0000                        ?_Basic_Init 0000  
                  _mTouch_Count1ms 0000                             _BCL2IE 04A1  
                           _BCL2IF 00A1                   ___llmod@dividend 001E  
             __size_of_mTouch_Init 0028               __size_of_mTouch_Scan 0052  
                           _EEDATA 0193                             _CCPR2L 0298  
                           _EECON1 0195                             _EECON2 0196  
          __end_of_Buzzer_Sound_ms 0009                             _ANSELA 018C  
                           ?_putch 0000                             _ANSELB 018D  
                           _T1GCON 0019                             i1l2100 0009  
                           i1l3300 0027                             i1l3308 0037  
                           i1l3274 0018                             i1l3284 0026  
                           i1l2910 002D                             i1l3286 0001  
                           i1l3438 000E                             i1l2920 004A  
                           i1l3448 0020                             i1l2922 004C  
                           i1l2916 0043                             i1l2918 0048  
                           i1l2954 000F                             i1l2890 000D  
                           i1l2898 0016                 I2C2_Transmit@i_681 0006  
                           u209_25 0014                             u283_25 0008  
                           u292_25 0003                             u285_25 0019  
                           u293_25 0011                             u294_25 0028  
                           u296_25 0045                             _OSCCON 0099  
               I2C2_Transmit@pData 0000                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 0005  
                           _TMR6IE 049B                             _TMR6IF 009B  
                           _TMR1ON 00C0                             _SSP2IE 04A0  
                           _SSP2IF 00A0           __end_of_EEPROM_MultiRead 0030  
                ?_Timer1_GetMinute 0000                  ?_Timer1_GetSecond 0000  
                    ??_Timer1_Init 0000                __end_of_Buzzer_Init 0023  
                    ??_Timer6_Init 0001                 ??_Timer1_GetMinute 0000  
               ??_Timer1_GetSecond 0000               __size_of_eeprom_read 0021  
                           ___lmul 0000                             ___wmul 0000  
                        ??___lldiv 0014                          ??___llmod 0022  
                    _I2C_Interrupt 0000               __end_of_eeprom_write 002C  
                           _printf 0000                   I2C_Transmit@I2Cx 000E  
                        ??_isdigit 0000              EEPROM_MultiWrite@addr 0005  
            EEPROM_MultiWrite@size 0004                             putch@c 0003  
                 I2C_Transmit@size 000A                      _using_channel 0003  
          __end_of__initialization 001A                    eeprom_read@addr 0003  
                ?_Timer6_CheckFlag 0000                   ?_Load_PMTConfing 0000  
                       _VoltageReg 003A                 ??_Timer6_CheckFlag 0000  
               Buzzer_SetDuty@duty 0000                     __pcstackCOMMON 0000  
              __size_of_Basic_Init 0011                       __pidataBANK2 0000  
                 ?_Buzzer_Count1ms 0000                  ?_Timer1_StopCount 0000  
               EEPROM_MultiWrite@i 000A                      __end_of_putch 0009  
              __end_of_Timer1_Init 0021                     ?_I2C_Interrupt 0000  
              __end_of_Timer6_Init 0015                  _LCD1602_WriteData 0000  
               ??_Timer1_StopCount 0000            __end_of_mTouch_Count1ms 002B  
        Buzzer_SetDuty@CCP2CON_Pre 0004                 ?_LCD1602_WriteData 0000  
         __end_of_Buzzer_Init_Port 000F                  eeprom_write@value 0000  
                ??_Show_PMT_Config 0045                ??_LCD1602_WriteData 0000  
                          ??_putch 0003                   ?_Buzzer_Sound_ms 0000  
                       __pbssBANK0 0000                         __pbssBANK1 0000  
                      _Buzzer_Init 0000            __size_of_Buzzer_SetDuty 001C  
          mTouch_Count1ms@elements 0002                         __pmaintext 0000  
                          ?___lmul 0000                            ?___wmul 0000  
                   main@cps_config 000C          __size_of_DAC_WriteVoltage 003A  
        __end_of_LCD1602_WriteData 003D                         __pintentry 0000  
            __size_of_mTouch_Check 0078                            _CCP2CON 029A  
                   ___lmul@product 0008                   _mTouch_Init_Port 0000  
                          _APFCON0 011D                            _APFCON1 011E  
                          _CCPTMRS 029E                            ?_printf 0026  
                  _Timer1_Count1ms 0000                            _CPSCON0 001E  
                          _CPSCON1 001F            ?_LCD1602_CursorPosition 0003  
                        _I2C2_Init 0000                         _config_ptr 0004  
                          _SSP2ADD 021A                            _SSP2BUF 0219  
                          _SSP2MSK 021B                I2C2_Transmit@result 0007  
                          _Handler 0000                       _mTouch_Check 0000  
            __end_of_I2C2_Transmit 0098                        _Timer1_Init 0000  
              Load_PMTConfing@data 000C                        _Timer6_Init 0000  
            __size_of_eeprom_write 002C  __size_of_Timer1_DetectAssignCount 001A  
                  ??_I2C_Interrupt 0001                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0000                            ___lldiv 0000  
                  __size_of___wmul 001C                            ___llmod 0000  
                  __CFG_STVREN$OFF 0000         __end_of_Timer1_ClearRecord 0014  
           LCD1602_WriteData@point 0002       __end_of_LCD1602_DisplayClear 0010  
                          __ptext1 0000                            __ptext2 0000  
                          __ptext3 0000                            __ptext4 0000  
                          __ptext5 0000                            __ptext6 0000  
                          __ptext7 0000                            __ptext8 0000  
                          __ptext9 0000                   ?_mTouch_Count1ms 0000  
                  __size_of_printf 0224     __end_of_LCD1602_CursorPosition 0017  
                          _dpowers 0000                            _isdigit 0000  
                       ?_I2C2_Init 0001                       ??_Basic_Init 0000  
      __end_of_Ssetting_PMT_Config 00F5                     main@pmt_config 0037  
                          clrloop0 0001         __end_of_Timer1_GetCountSum 0011  
               _LCD1602_CursorHome 0000               end_of_initialization 001A  
                          init_ram 0000                       _eeprom_write 0000  
                          initloop 0001                  ?_EEPROM_MultiRead 0004  
                      _I2C2_Config 0024             EEPROM_MultiWrite@pData 0009  
              ?_LCD1602_CursorHome 0000                    ___lldiv@divisor 000C  
                  ___lldiv@counter 0019                 ??_EEPROM_MultiRead 0006  
                I2C_Transmit@pData 0009            __end_of_Timer1_Count1ms 003B  
                          printf@c 0042                            printf@f 0026  
                   main@state_mode 0000                 __end_of_Basic_Init 0011  
       __size_of_LCD1602_WriteData 003D                      ?_StartUp_Menu 0000  
           __size_of_Timer1_GetCPM 0028             __size_of_Timer1_GetCPS 003D  
          __size_of_I2C2_Init_Port 000D          __size_of_Timer1_GetMinute 0003  
        __size_of_Timer1_GetSecond 0003               ??_LCD1602_CursorHome 0003  
                 __CFG_FOSC$INTOSC 0000                      ??_mTouch_Init 0005  
                    ??_mTouch_Scan 0000            __size_of_I2C2_Interrupt 0054  
                Timer6_Init@period 0000                     _Buzzer_SetDuty 0000  
                    ??_eeprom_read 0000                        printf@width 0043  
                    _H7826_01_Gain 0000                  _Timer1_StartCount 0000  
          __size_of_Save_PMTConfig 000B                  Buzzer_Init@period 0004  
                 _DAC_WriteVoltage 0000                 ?_Timer1_StartCount 0000  
                   __end_of___lmul 0030                     __end_of___wmul 001C  
                        _ConfigReg 0001                     ??_StartUp_Menu 0045  
                  _Show_PMT_Config 0000          __size_of_Timer6_CheckFlag 000B  
              ??_Timer1_StartCount 0000            __size_of_DAC_Initialize 0023  
                   __end_of_printf 0224                  ?_Buzzer_Init_Port 0000  
              start_initialization 0000                        ??_I2C2_Init 0006  
               ??_Buzzer_Init_Port 0000          __size_of_Timer1_StopCount 0003  
           __end_of_Buzzer_SetDuty 001C                   I2C2_Init@address 0003  
                     ?_Buzzer_Init 0001                __end_of_mTouch_Init 0028  
              __end_of_mTouch_Scan 0052           __end_of_mTouch_Init_Port 000D  
                    _Timer1_GetCPM 0000                      _Timer1_GetCPS 0000  
             _LCD1602_DisplayClear 0000                    ___llmod@divisor 001A  
        __end_of_Timer1_StartCount 0005                    ___llmod@counter 0023  
                 ?_Timer1_Count1ms 0000                           ??___lmul 0008  
                         ??___wmul 0004                __end_of_eeprom_read 0021  
         __size_of_Load_PMTConfing 000B                        __pdataBANK2 0000  
                         ??_printf 0030           __size_of_Buzzer_Count1ms 0015  
                      __pbssCOMMON 0000                          ___latbits 0001  
                    __pcstackBANK0 0000                       _isdigit$1034 0000  
                  ?_Buzzer_SetDuty 0000                 _Timer1_GetCPM$1277 0022  
                   ?_Timer1_GetCPM 001E                     ?_Timer1_GetCPS 001A  
                 eeprom_write@addr 0003   __end_of_Timer1_DetectAssignCount 001A  
            ?_LCD1602_DisplayClear 0000                           ?_Handler 0000  
                 StartUp_Menu@data 0047                      ?_I2C_Transmit 0008  
         __size_of_Buzzer_Sound_ms 0009                       ?_Timer1_Init 0000  
            DAC_WriteVoltage@volue 0010                       ?_Timer6_Init 0000  
          __end_of_Show_PMT_Config 0094                           ?___lldiv 000C  
                         ?___llmod 001A         mTouch_Init@mTouch_PortInit 0001  
                   _I2C2_Init_Port 0000                          __pswtext1 0000  
                 _Timer1_GetMinute 0000                   _Timer1_GetSecond 0000  
                         ?_isdigit 0000                      ?_LCD1602_Init 0004  
                   _I2C2_Interrupt 0000                         _H7826_Gain 001E  
                      _mTouch_Init 0000                        _mTouch_Scan 0000  
               _Timer1_ClearRecord 0000                     __size_of_putch 0009  
             __end_of_StartUp_Menu 00AE                     ___wmul@product 0004  
                   ??_I2C_Transmit 000B                ?_Timer1_ClearRecord 0000  
       __size_of_Timer1_StartCount 0005                          clear_ram0 0000  
                      _eeprom_read 0000                     _Save_PMTConfig 0000  
               _Timer1_GetCountSum 0000               I2C2_Transmit@address 0004  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP2STAT 021C             __end_of_I2C2_Init_Port 000D  
            __end_of_I2C_Interrupt 0003                ?_Timer1_GetCountSum 0000  
                 _Timer6_CheckFlag 0000          __size_of_EEPROM_MultiRead 0030  
                ___wmul@multiplier 0000                     _DAC_Initialize 0000  
             ??_Timer1_ClearRecord 0000             __end_of_I2C2_Interrupt 0054  
                   ??_LCD1602_Init 0006                         printf@flag 0041  
                ??_Load_PMTConfing 000B                         printf@prec 0036  
           __size_of_I2C2_Transmit 0098                    ??_Timer1_GetCPM 0022  
                 _Timer1_StopCount 0000                    ??_Timer1_GetCPS 001E  
         __size_of_mTouch_Count1ms 002B           __end_of_DAC_WriteVoltage 003A  
                ___lmul@multiplier 0000             ??_LCD1602_DisplayClear 0003  
                ??_Buzzer_Count1ms 0005               ??_Timer1_GetCountSum 0004  
     __size_of_Ssetting_PMT_Config 00F5             __end_of_Save_PMTConfig 000B  
                 __size_of_Handler 0027               __size_of_Buzzer_Init 0023  
         _Timer1_DetectAssignCount 0000                   ?_Show_PMT_Config 0000  
                  ?_I2C2_Init_Port 0000             __end_of_DAC_Initialize 0023  
                 __size_of___lldiv 0053                   __size_of___llmod 0043  
                ??_Buzzer_Sound_ms 0002                    ?_I2C2_Interrupt 0000  
      __size_of_LCD1602_CursorHome 0010                   __size_of_isdigit 000F  
                         __ptext10 0000                           __ptext11 0000  
                         __ptext20 0000                           __ptext12 0000  
                         __ptext21 0000                           __ptext13 0000  
                         __ptext30 0000                           __ptext22 0000  
                         __ptext14 0000                           __ptext31 0000  
                         __ptext23 0000                           __ptext15 0000  
                         __ptext40 0000                           __ptext32 0000  
                         __ptext24 0000                           __ptext16 0000  
                         __ptext41 0000                           __ptext33 0000  
                         __ptext25 0000                           __ptext17 0000  
                         __ptext50 0000                           __ptext42 0000  
                         __ptext34 0000                           __ptext26 0000  
                         __ptext18 0000                           __ptext51 0000  
                         __ptext43 0000                           __ptext35 0000  
                         __ptext27 0000                           __ptext19 0000  
                         __ptext52 0000                           __ptext36 0000  
                         __ptext28 0000                           __ptext53 0000  
                         __ptext45 0000                           __ptext37 0000  
                         __ptext29 0000                           __ptext54 0000  
                         __ptext46 0000                           __ptext38 0000  
                         __ptext47 0000                           __ptext39 0000  
                         __ptext48 0000                           __ptext49 0000  
                     _SSP2CON1bits 021D                       _SSP2CON2bits 021E  
                ?_mTouch_Init_Port 0000                      __size_of_main 01AF  
                  ?_Save_PMTConfig 0000          __size_of_Buzzer_Init_Port 000F  
               ??_mTouch_Init_Port 0000                      _I2C2_Transmit 0000  
             __size_of_Timer1_Init 0021                           int$flags 007E  
         ??_LCD1602_CursorPosition 0004                I2C_Transmit@address 0008  
             __size_of_Timer6_Init 0015                mTouch_Scan@elements 0002  
                        printf@len 003A                    ?_DAC_Initialize 0000  
                        printf@val 003C                Show_PMT_Config@data 0047  
                     _SSP2STATbits 021C                     I2C2_Init@Speed 0005  
             __end_of_I2C_Transmit 001B                   ??_Buzzer_SetDuty 0002  
                   __pstringtext10 0000                     __pstringtext11 0000  
                   __pstringtext20 0000                     __pstringtext12 0000  
                   __pstringtext21 0000                     __pstringtext13 0000  
                   __pstringtext30 0000                     __pstringtext22 0000  
                   __pstringtext14 0000                     __pstringtext31 0000  
                   __pstringtext23 0000                     __pstringtext15 0000  
                   __pstringtext40 0000                     __pstringtext32 0000  
                   __pstringtext24 0000                     __pstringtext16 0000  
                   __pstringtext41 0000                     __pstringtext33 0000  
                   __pstringtext25 0000                     __pstringtext17 0000  
                   __pstringtext50 0000                     __pstringtext42 0000  
                   __pstringtext34 0000                     __pstringtext26 0000  
                   __pstringtext18 0000                     __pstringtext51 0000  
                   __pstringtext43 0000                     __pstringtext35 0000  
                   __pstringtext27 0000                     __pstringtext19 0000  
                   __pstringtext52 0000                     __pstringtext44 0000  
                   __pstringtext36 0000                     __pstringtext28 0000  
                   __pstringtext53 0000                     __pstringtext45 0000  
                   __pstringtext37 0000                     __pstringtext29 0000  
                   __pstringtext54 0000                     __pstringtext46 0000  
                   __pstringtext38 0000                     __pstringtext47 0000  
                   __pstringtext39 0000                     __pstringtext48 0000  
                   __pstringtext49 0000                           isdigit@c 0001  
            __size_of_StartUp_Menu 00AE                  _EEPROM_MultiWrite 0000  
                         intlevel1 0000*                ?_EEPROM_MultiWrite 0004  
                 ___lldiv@dividend 0010           __end_of_Timer1_GetMinute 0003  
         __end_of_Timer1_GetSecond 0003                  __CFG_CLKOUTEN$OFF 0000  
                ??_mTouch_Count1ms 0000                      ?_mTouch_Check 0000  
             __end_of_LCD1602_Init 006F                     ?_I2C2_Transmit 0000  
              ??_EEPROM_MultiWrite 0006                           printf@ap 0040  
                         printf@cp 0038                 I2C_Transmit@result 000F  
                    I2C2_Init@mode 0004                      __pstringtext1 0000  
                    __pstringtext2 0000                      __pstringtext3 0000  
                    __pstringtext4 0000                      __pstringtext5 0000  
                    __pstringtext6 0000                      __pstringtext7 0000  
                    __pstringtext8 0000                      __pstringtext9 0000  
                 _EEPROM_MultiRead 0000                       _StartUp_Menu 0000  
         __size_of_Timer1_Count1ms 003B        Buzzer_Init@Buzzer_Init_PORT 0001  
                 ___lldiv@quotient 0015                       ?_mTouch_Init 0001  
                     ?_mTouch_Scan 0000          __end_of_EEPROM_MultiWrite 0031  
               Save_PMTConfig@data 000C                 __size_of_I2C2_Init 0047  
         LCD1602_CursorPosition@tx 0005           LCD1602_CursorPosition@ty 0003  
                    ?_eeprom_write 0000           __end_of_Timer6_CheckFlag 000B  
                   ??_mTouch_Check 0000                       ?_eeprom_read 0000  
          mTouch_Check@DifferValue 0006      LCD1602_Init@LCD1602_Init_PORT 0004  
