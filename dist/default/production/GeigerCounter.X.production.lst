

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May  2 00:56:41 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1827 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029C                     	;# 
   208  029C                     	;# 
   209  029D                     	;# 
   210  029E                     	;# 
   211  029E                     	;# 
   212  0311                     	;# 
   213  0311                     	;# 
   214  0312                     	;# 
   215  0313                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  0394                     	;# 
   221  0395                     	;# 
   222  0396                     	;# 
   223  039A                     	;# 
   224  039C                     	;# 
   225  039D                     	;# 
   226  039E                     	;# 
   227  039F                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  041C                     	;# 
   232  041D                     	;# 
   233  041E                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011E                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020D                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0219                     	;# 
   346  021A                     	;# 
   347  021B                     	;# 
   348  021C                     	;# 
   349  021D                     	;# 
   350  021E                     	;# 
   351  021F                     	;# 
   352  0291                     	;# 
   353  0291                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0294                     	;# 
   357  0295                     	;# 
   358  0295                     	;# 
   359  0296                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  029B                     	;# 
   365  029C                     	;# 
   366  029C                     	;# 
   367  029D                     	;# 
   368  029E                     	;# 
   369  029E                     	;# 
   370  0311                     	;# 
   371  0311                     	;# 
   372  0312                     	;# 
   373  0313                     	;# 
   374  0318                     	;# 
   375  0318                     	;# 
   376  0319                     	;# 
   377  031A                     	;# 
   378  0394                     	;# 
   379  0395                     	;# 
   380  0396                     	;# 
   381  039A                     	;# 
   382  039C                     	;# 
   383  039D                     	;# 
   384  039E                     	;# 
   385  039F                     	;# 
   386  0415                     	;# 
   387  0416                     	;# 
   388  0417                     	;# 
   389  041C                     	;# 
   390  041D                     	;# 
   391  041E                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  0111                     	;# 
   452  0112                     	;# 
   453  0113                     	;# 
   454  0114                     	;# 
   455  0115                     	;# 
   456  0116                     	;# 
   457  0117                     	;# 
   458  0118                     	;# 
   459  0119                     	;# 
   460  011A                     	;# 
   461  011B                     	;# 
   462  011D                     	;# 
   463  011E                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0191                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  0193                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0199                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019F                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0219                     	;# 
   504  021A                     	;# 
   505  021B                     	;# 
   506  021C                     	;# 
   507  021D                     	;# 
   508  021E                     	;# 
   509  021F                     	;# 
   510  0291                     	;# 
   511  0291                     	;# 
   512  0292                     	;# 
   513  0293                     	;# 
   514  0294                     	;# 
   515  0295                     	;# 
   516  0295                     	;# 
   517  0296                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  029B                     	;# 
   523  029C                     	;# 
   524  029C                     	;# 
   525  029D                     	;# 
   526  029E                     	;# 
   527  029E                     	;# 
   528  0311                     	;# 
   529  0311                     	;# 
   530  0312                     	;# 
   531  0313                     	;# 
   532  0318                     	;# 
   533  0318                     	;# 
   534  0319                     	;# 
   535  031A                     	;# 
   536  0394                     	;# 
   537  0395                     	;# 
   538  0396                     	;# 
   539  039A                     	;# 
   540  039C                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0016                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001C                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0113                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0118                     	;# 
   617  0119                     	;# 
   618  011A                     	;# 
   619  011B                     	;# 
   620  011D                     	;# 
   621  011E                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624  0191                     	;# 
   625  0191                     	;# 
   626  0192                     	;# 
   627  0193                     	;# 
   628  0193                     	;# 
   629  0193                     	;# 
   630  0194                     	;# 
   631  0195                     	;# 
   632  0196                     	;# 
   633  0199                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019D                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  0211                     	;# 
   647  0211                     	;# 
   648  0212                     	;# 
   649  0212                     	;# 
   650  0213                     	;# 
   651  0213                     	;# 
   652  0214                     	;# 
   653  0214                     	;# 
   654  0215                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0216                     	;# 
   658  0216                     	;# 
   659  0217                     	;# 
   660  0217                     	;# 
   661  0219                     	;# 
   662  021A                     	;# 
   663  021B                     	;# 
   664  021C                     	;# 
   665  021D                     	;# 
   666  021E                     	;# 
   667  021F                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0294                     	;# 
   673  0295                     	;# 
   674  0295                     	;# 
   675  0296                     	;# 
   676  0298                     	;# 
   677  0298                     	;# 
   678  0299                     	;# 
   679  029A                     	;# 
   680  029B                     	;# 
   681  029C                     	;# 
   682  029C                     	;# 
   683  029D                     	;# 
   684  029E                     	;# 
   685  029E                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  0FE4                     	;# 
   709  0FE5                     	;# 
   710  0FE6                     	;# 
   711  0FE7                     	;# 
   712  0FE8                     	;# 
   713  0FE9                     	;# 
   714  0FEA                     	;# 
   715  0FEB                     	;# 
   716  0FED                     	;# 
   717  0FEE                     	;# 
   718  0FEF                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0008                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0113                     	;# 
   770  0114                     	;# 
   771  0115                     	;# 
   772  0116                     	;# 
   773  0117                     	;# 
   774  0118                     	;# 
   775  0119                     	;# 
   776  011A                     	;# 
   777  011B                     	;# 
   778  011D                     	;# 
   779  011E                     	;# 
   780  018C                     	;# 
   781  018D                     	;# 
   782  0191                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  0193                     	;# 
   786  0193                     	;# 
   787  0193                     	;# 
   788  0194                     	;# 
   789  0195                     	;# 
   790  0196                     	;# 
   791  0199                     	;# 
   792  019A                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019C                     	;# 
   798  019C                     	;# 
   799  019D                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  0211                     	;# 
   805  0211                     	;# 
   806  0212                     	;# 
   807  0212                     	;# 
   808  0213                     	;# 
   809  0213                     	;# 
   810  0214                     	;# 
   811  0214                     	;# 
   812  0215                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0216                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0217                     	;# 
   819  0219                     	;# 
   820  021A                     	;# 
   821  021B                     	;# 
   822  021C                     	;# 
   823  021D                     	;# 
   824  021E                     	;# 
   825  021F                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029C                     	;# 
   841  029D                     	;# 
   842  029E                     	;# 
   843  029E                     	;# 
   844  0311                     	;# 
   845  0311                     	;# 
   846  0312                     	;# 
   847  0313                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  039A                     	;# 
   856  039C                     	;# 
   857  039D                     	;# 
   858  039E                     	;# 
   859  039F                     	;# 
   860  0415                     	;# 
   861  0416                     	;# 
   862  0417                     	;# 
   863  041C                     	;# 
   864  041D                     	;# 
   865  041E                     	;# 
   866  0FE4                     	;# 
   867  0FE5                     	;# 
   868  0FE6                     	;# 
   869  0FE7                     	;# 
   870  0FE8                     	;# 
   871  0FE9                     	;# 
   872  0FEA                     	;# 
   873  0FEB                     	;# 
   874  0FED                     	;# 
   875  0FEE                     	;# 
   876  0FEF                     	;# 
   877  0000                     	;# 
   878  0001                     	;# 
   879  0002                     	;# 
   880  0003                     	;# 
   881  0004                     	;# 
   882  0005                     	;# 
   883  0006                     	;# 
   884  0007                     	;# 
   885  0008                     	;# 
   886  0009                     	;# 
   887  000A                     	;# 
   888  000B                     	;# 
   889  000C                     	;# 
   890  000D                     	;# 
   891  0011                     	;# 
   892  0012                     	;# 
   893  0013                     	;# 
   894  0014                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0095                     	;# 
   913  0096                     	;# 
   914  0097                     	;# 
   915  0098                     	;# 
   916  0099                     	;# 
   917  009A                     	;# 
   918  009B                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  0111                     	;# 
   926  0112                     	;# 
   927  0113                     	;# 
   928  0114                     	;# 
   929  0115                     	;# 
   930  0116                     	;# 
   931  0117                     	;# 
   932  0118                     	;# 
   933  0119                     	;# 
   934  011A                     	;# 
   935  011B                     	;# 
   936  011D                     	;# 
   937  011E                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  0191                     	;# 
   941  0191                     	;# 
   942  0192                     	;# 
   943  0193                     	;# 
   944  0193                     	;# 
   945  0193                     	;# 
   946  0194                     	;# 
   947  0195                     	;# 
   948  0196                     	;# 
   949  0199                     	;# 
   950  019A                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019C                     	;# 
   956  019C                     	;# 
   957  019D                     	;# 
   958  019E                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  0211                     	;# 
   963  0211                     	;# 
   964  0212                     	;# 
   965  0212                     	;# 
   966  0213                     	;# 
   967  0213                     	;# 
   968  0214                     	;# 
   969  0214                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  0219                     	;# 
   978  021A                     	;# 
   979  021B                     	;# 
   980  021C                     	;# 
   981  021D                     	;# 
   982  021E                     	;# 
   983  021F                     	;# 
   984  0291                     	;# 
   985  0291                     	;# 
   986  0292                     	;# 
   987  0293                     	;# 
   988  0294                     	;# 
   989  0295                     	;# 
   990  0295                     	;# 
   991  0296                     	;# 
   992  0298                     	;# 
   993  0298                     	;# 
   994  0299                     	;# 
   995  029A                     	;# 
   996  029B                     	;# 
   997  029C                     	;# 
   998  029C                     	;# 
   999  029D                     	;# 
  1000  029E                     	;# 
  1001  029E                     	;# 
  1002  0311                     	;# 
  1003  0311                     	;# 
  1004  0312                     	;# 
  1005  0313                     	;# 
  1006  0318                     	;# 
  1007  0318                     	;# 
  1008  0319                     	;# 
  1009  031A                     	;# 
  1010  0394                     	;# 
  1011  0395                     	;# 
  1012  0396                     	;# 
  1013  039A                     	;# 
  1014  039C                     	;# 
  1015  039D                     	;# 
  1016  039E                     	;# 
  1017  039F                     	;# 
  1018  0415                     	;# 
  1019  0416                     	;# 
  1020  0417                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  0FE4                     	;# 
  1025  0FE5                     	;# 
  1026  0FE6                     	;# 
  1027  0FE7                     	;# 
  1028  0FE8                     	;# 
  1029  0FE9                     	;# 
  1030  0FEA                     	;# 
  1031  0FEB                     	;# 
  1032  0FED                     	;# 
  1033  0FEE                     	;# 
  1034  0FEF                     	;# 
  1035  0000                     	;# 
  1036  0001                     	;# 
  1037  0002                     	;# 
  1038  0003                     	;# 
  1039  0004                     	;# 
  1040  0005                     	;# 
  1041  0006                     	;# 
  1042  0007                     	;# 
  1043  0008                     	;# 
  1044  0009                     	;# 
  1045  000A                     	;# 
  1046  000B                     	;# 
  1047  000C                     	;# 
  1048  000D                     	;# 
  1049  0011                     	;# 
  1050  0012                     	;# 
  1051  0013                     	;# 
  1052  0014                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0016                     	;# 
  1056  0017                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001E                     	;# 
  1063  001F                     	;# 
  1064  008C                     	;# 
  1065  008D                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  0111                     	;# 
  1084  0112                     	;# 
  1085  0113                     	;# 
  1086  0114                     	;# 
  1087  0115                     	;# 
  1088  0116                     	;# 
  1089  0117                     	;# 
  1090  0118                     	;# 
  1091  0119                     	;# 
  1092  011A                     	;# 
  1093  011B                     	;# 
  1094  011D                     	;# 
  1095  011E                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0191                     	;# 
  1099  0191                     	;# 
  1100  0192                     	;# 
  1101  0193                     	;# 
  1102  0193                     	;# 
  1103  0193                     	;# 
  1104  0194                     	;# 
  1105  0195                     	;# 
  1106  0196                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019C                     	;# 
  1114  019C                     	;# 
  1115  019D                     	;# 
  1116  019E                     	;# 
  1117  019F                     	;# 
  1118  020C                     	;# 
  1119  020D                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  0219                     	;# 
  1136  021A                     	;# 
  1137  021B                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021E                     	;# 
  1141  021F                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0294                     	;# 
  1147  0295                     	;# 
  1148  0295                     	;# 
  1149  0296                     	;# 
  1150  0298                     	;# 
  1151  0298                     	;# 
  1152  0299                     	;# 
  1153  029A                     	;# 
  1154  029B                     	;# 
  1155  029C                     	;# 
  1156  029C                     	;# 
  1157  029D                     	;# 
  1158  029E                     	;# 
  1159  029E                     	;# 
  1160  0311                     	;# 
  1161  0311                     	;# 
  1162  0312                     	;# 
  1163  0313                     	;# 
  1164  0318                     	;# 
  1165  0318                     	;# 
  1166  0319                     	;# 
  1167  031A                     	;# 
  1168  0394                     	;# 
  1169  0395                     	;# 
  1170  0396                     	;# 
  1171  039A                     	;# 
  1172  039C                     	;# 
  1173  039D                     	;# 
  1174  039E                     	;# 
  1175  039F                     	;# 
  1176  0415                     	;# 
  1177  0416                     	;# 
  1178  0417                     	;# 
  1179  041C                     	;# 
  1180  041D                     	;# 
  1181  041E                     	;# 
  1182  0FE4                     	;# 
  1183  0FE5                     	;# 
  1184  0FE6                     	;# 
  1185  0FE7                     	;# 
  1186  0FE8                     	;# 
  1187  0FE9                     	;# 
  1188  0FEA                     	;# 
  1189  0FEB                     	;# 
  1190  0FED                     	;# 
  1191  0FEE                     	;# 
  1192  0FEF                     	;# 
  1193  0000                     	;# 
  1194  0001                     	;# 
  1195  0002                     	;# 
  1196  0003                     	;# 
  1197  0004                     	;# 
  1198  0005                     	;# 
  1199  0006                     	;# 
  1200  0007                     	;# 
  1201  0008                     	;# 
  1202  0009                     	;# 
  1203  000A                     	;# 
  1204  000B                     	;# 
  1205  000C                     	;# 
  1206  000D                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001B                     	;# 
  1219  001C                     	;# 
  1220  001E                     	;# 
  1221  001F                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0094                     	;# 
  1228  0095                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0098                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  0111                     	;# 
  1242  0112                     	;# 
  1243  0113                     	;# 
  1244  0114                     	;# 
  1245  0115                     	;# 
  1246  0116                     	;# 
  1247  0117                     	;# 
  1248  0118                     	;# 
  1249  0119                     	;# 
  1250  011A                     	;# 
  1251  011B                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019C                     	;# 
  1272  019C                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  0211                     	;# 
  1279  0211                     	;# 
  1280  0212                     	;# 
  1281  0212                     	;# 
  1282  0213                     	;# 
  1283  0213                     	;# 
  1284  0214                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  0219                     	;# 
  1294  021A                     	;# 
  1295  021B                     	;# 
  1296  021C                     	;# 
  1297  021D                     	;# 
  1298  021E                     	;# 
  1299  021F                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  029A                     	;# 
  1312  029B                     	;# 
  1313  029C                     	;# 
  1314  029C                     	;# 
  1315  029D                     	;# 
  1316  029E                     	;# 
  1317  029E                     	;# 
  1318  0311                     	;# 
  1319  0311                     	;# 
  1320  0312                     	;# 
  1321  0313                     	;# 
  1322  0318                     	;# 
  1323  0318                     	;# 
  1324  0319                     	;# 
  1325  031A                     	;# 
  1326  0394                     	;# 
  1327  0395                     	;# 
  1328  0396                     	;# 
  1329  039A                     	;# 
  1330  039C                     	;# 
  1331  039D                     	;# 
  1332  039E                     	;# 
  1333  039F                     	;# 
  1334  0415                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  041C                     	;# 
  1338  041D                     	;# 
  1339  041E                     	;# 
  1340  0FE4                     	;# 
  1341  0FE5                     	;# 
  1342  0FE6                     	;# 
  1343  0FE7                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEB                     	;# 
  1348  0FED                     	;# 
  1349  0FEE                     	;# 
  1350  0FEF                     	;# 
  1351  0000                     	;# 
  1352  0001                     	;# 
  1353  0002                     	;# 
  1354  0003                     	;# 
  1355  0004                     	;# 
  1356  0005                     	;# 
  1357  0006                     	;# 
  1358  0007                     	;# 
  1359  0008                     	;# 
  1360  0009                     	;# 
  1361  000A                     	;# 
  1362  000B                     	;# 
  1363  000C                     	;# 
  1364  000D                     	;# 
  1365  0011                     	;# 
  1366  0012                     	;# 
  1367  0013                     	;# 
  1368  0014                     	;# 
  1369  0015                     	;# 
  1370  0016                     	;# 
  1371  0016                     	;# 
  1372  0017                     	;# 
  1373  0018                     	;# 
  1374  0019                     	;# 
  1375  001A                     	;# 
  1376  001B                     	;# 
  1377  001C                     	;# 
  1378  001E                     	;# 
  1379  001F                     	;# 
  1380  008C                     	;# 
  1381  008D                     	;# 
  1382  0091                     	;# 
  1383  0092                     	;# 
  1384  0093                     	;# 
  1385  0094                     	;# 
  1386  0095                     	;# 
  1387  0096                     	;# 
  1388  0097                     	;# 
  1389  0098                     	;# 
  1390  0099                     	;# 
  1391  009A                     	;# 
  1392  009B                     	;# 
  1393  009B                     	;# 
  1394  009C                     	;# 
  1395  009D                     	;# 
  1396  009E                     	;# 
  1397  010C                     	;# 
  1398  010D                     	;# 
  1399  0111                     	;# 
  1400  0112                     	;# 
  1401  0113                     	;# 
  1402  0114                     	;# 
  1403  0115                     	;# 
  1404  0116                     	;# 
  1405  0117                     	;# 
  1406  0118                     	;# 
  1407  0119                     	;# 
  1408  011A                     	;# 
  1409  011B                     	;# 
  1410  011D                     	;# 
  1411  011E                     	;# 
  1412  018C                     	;# 
  1413  018D                     	;# 
  1414  0191                     	;# 
  1415  0191                     	;# 
  1416  0192                     	;# 
  1417  0193                     	;# 
  1418  0193                     	;# 
  1419  0193                     	;# 
  1420  0194                     	;# 
  1421  0195                     	;# 
  1422  0196                     	;# 
  1423  0199                     	;# 
  1424  019A                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019F                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  0211                     	;# 
  1437  0211                     	;# 
  1438  0212                     	;# 
  1439  0212                     	;# 
  1440  0213                     	;# 
  1441  0213                     	;# 
  1442  0214                     	;# 
  1443  0214                     	;# 
  1444  0215                     	;# 
  1445  0215                     	;# 
  1446  0215                     	;# 
  1447  0216                     	;# 
  1448  0216                     	;# 
  1449  0217                     	;# 
  1450  0217                     	;# 
  1451  0219                     	;# 
  1452  021A                     	;# 
  1453  021B                     	;# 
  1454  021C                     	;# 
  1455  021D                     	;# 
  1456  021E                     	;# 
  1457  021F                     	;# 
  1458  0291                     	;# 
  1459  0291                     	;# 
  1460  0292                     	;# 
  1461  0293                     	;# 
  1462  0294                     	;# 
  1463  0295                     	;# 
  1464  0295                     	;# 
  1465  0296                     	;# 
  1466  0298                     	;# 
  1467  0298                     	;# 
  1468  0299                     	;# 
  1469  029A                     	;# 
  1470  029B                     	;# 
  1471  029C                     	;# 
  1472  029C                     	;# 
  1473  029D                     	;# 
  1474  029E                     	;# 
  1475  029E                     	;# 
  1476  0311                     	;# 
  1477  0311                     	;# 
  1478  0312                     	;# 
  1479  0313                     	;# 
  1480  0318                     	;# 
  1481  0318                     	;# 
  1482  0319                     	;# 
  1483  031A                     	;# 
  1484  0394                     	;# 
  1485  0395                     	;# 
  1486  0396                     	;# 
  1487  039A                     	;# 
  1488  039C                     	;# 
  1489  039D                     	;# 
  1490  039E                     	;# 
  1491  039F                     	;# 
  1492  0415                     	;# 
  1493  0416                     	;# 
  1494  0417                     	;# 
  1495  041C                     	;# 
  1496  041D                     	;# 
  1497  041E                     	;# 
  1498  0FE4                     	;# 
  1499  0FE5                     	;# 
  1500  0FE6                     	;# 
  1501  0FE7                     	;# 
  1502  0FE8                     	;# 
  1503  0FE9                     	;# 
  1504  0FEA                     	;# 
  1505  0FEB                     	;# 
  1506  0FED                     	;# 
  1507  0FEE                     	;# 
  1508  0FEF                     	;# 
  1509  0000                     	;# 
  1510  0001                     	;# 
  1511  0002                     	;# 
  1512  0003                     	;# 
  1513  0004                     	;# 
  1514  0005                     	;# 
  1515  0006                     	;# 
  1516  0007                     	;# 
  1517  0008                     	;# 
  1518  0009                     	;# 
  1519  000A                     	;# 
  1520  000B                     	;# 
  1521  000C                     	;# 
  1522  000D                     	;# 
  1523  0011                     	;# 
  1524  0012                     	;# 
  1525  0013                     	;# 
  1526  0014                     	;# 
  1527  0015                     	;# 
  1528  0016                     	;# 
  1529  0016                     	;# 
  1530  0017                     	;# 
  1531  0018                     	;# 
  1532  0019                     	;# 
  1533  001A                     	;# 
  1534  001B                     	;# 
  1535  001C                     	;# 
  1536  001E                     	;# 
  1537  001F                     	;# 
  1538  008C                     	;# 
  1539  008D                     	;# 
  1540  0091                     	;# 
  1541  0092                     	;# 
  1542  0093                     	;# 
  1543  0094                     	;# 
  1544  0095                     	;# 
  1545  0096                     	;# 
  1546  0097                     	;# 
  1547  0098                     	;# 
  1548  0099                     	;# 
  1549  009A                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  010C                     	;# 
  1556  010D                     	;# 
  1557  0111                     	;# 
  1558  0112                     	;# 
  1559  0113                     	;# 
  1560  0114                     	;# 
  1561  0115                     	;# 
  1562  0116                     	;# 
  1563  0117                     	;# 
  1564  0118                     	;# 
  1565  0119                     	;# 
  1566  011A                     	;# 
  1567  011B                     	;# 
  1568  011D                     	;# 
  1569  011E                     	;# 
  1570  018C                     	;# 
  1571  018D                     	;# 
  1572  0191                     	;# 
  1573  0191                     	;# 
  1574  0192                     	;# 
  1575  0193                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0194                     	;# 
  1579  0195                     	;# 
  1580  0196                     	;# 
  1581  0199                     	;# 
  1582  019A                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019C                     	;# 
  1588  019C                     	;# 
  1589  019D                     	;# 
  1590  019E                     	;# 
  1591  019F                     	;# 
  1592  020C                     	;# 
  1593  020D                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0212                     	;# 
  1598  0213                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0216                     	;# 
  1606  0216                     	;# 
  1607  0217                     	;# 
  1608  0217                     	;# 
  1609  0219                     	;# 
  1610  021A                     	;# 
  1611  021B                     	;# 
  1612  021C                     	;# 
  1613  021D                     	;# 
  1614  021E                     	;# 
  1615  021F                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0294                     	;# 
  1621  0295                     	;# 
  1622  0295                     	;# 
  1623  0296                     	;# 
  1624  0298                     	;# 
  1625  0298                     	;# 
  1626  0299                     	;# 
  1627  029A                     	;# 
  1628  029B                     	;# 
  1629  029C                     	;# 
  1630  029C                     	;# 
  1631  029D                     	;# 
  1632  029E                     	;# 
  1633  029E                     	;# 
  1634  0311                     	;# 
  1635  0311                     	;# 
  1636  0312                     	;# 
  1637  0313                     	;# 
  1638  0318                     	;# 
  1639  0318                     	;# 
  1640  0319                     	;# 
  1641  031A                     	;# 
  1642  0394                     	;# 
  1643  0395                     	;# 
  1644  0396                     	;# 
  1645  039A                     	;# 
  1646  039C                     	;# 
  1647  039D                     	;# 
  1648  039E                     	;# 
  1649  039F                     	;# 
  1650  0415                     	;# 
  1651  0416                     	;# 
  1652  0417                     	;# 
  1653  041C                     	;# 
  1654  041D                     	;# 
  1655  041E                     	;# 
  1656  0FE4                     	;# 
  1657  0FE5                     	;# 
  1658  0FE6                     	;# 
  1659  0FE7                     	;# 
  1660  0FE8                     	;# 
  1661  0FE9                     	;# 
  1662  0FEA                     	;# 
  1663  0FEB                     	;# 
  1664  0FED                     	;# 
  1665  0FEE                     	;# 
  1666  0FEF                     	;# 
  1667  0000                     	;# 
  1668  0001                     	;# 
  1669  0002                     	;# 
  1670  0003                     	;# 
  1671  0004                     	;# 
  1672  0005                     	;# 
  1673  0006                     	;# 
  1674  0007                     	;# 
  1675  0008                     	;# 
  1676  0009                     	;# 
  1677  000A                     	;# 
  1678  000B                     	;# 
  1679  000C                     	;# 
  1680  000D                     	;# 
  1681  0011                     	;# 
  1682  0012                     	;# 
  1683  0013                     	;# 
  1684  0014                     	;# 
  1685  0015                     	;# 
  1686  0016                     	;# 
  1687  0016                     	;# 
  1688  0017                     	;# 
  1689  0018                     	;# 
  1690  0019                     	;# 
  1691  001A                     	;# 
  1692  001B                     	;# 
  1693  001C                     	;# 
  1694  001E                     	;# 
  1695  001F                     	;# 
  1696  008C                     	;# 
  1697  008D                     	;# 
  1698  0091                     	;# 
  1699  0092                     	;# 
  1700  0093                     	;# 
  1701  0094                     	;# 
  1702  0095                     	;# 
  1703  0096                     	;# 
  1704  0097                     	;# 
  1705  0098                     	;# 
  1706  0099                     	;# 
  1707  009A                     	;# 
  1708  009B                     	;# 
  1709  009B                     	;# 
  1710  009C                     	;# 
  1711  009D                     	;# 
  1712  009E                     	;# 
  1713  010C                     	;# 
  1714  010D                     	;# 
  1715  0111                     	;# 
  1716  0112                     	;# 
  1717  0113                     	;# 
  1718  0114                     	;# 
  1719  0115                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0118                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011B                     	;# 
  1726  011D                     	;# 
  1727  011E                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  0191                     	;# 
  1731  0191                     	;# 
  1732  0192                     	;# 
  1733  0193                     	;# 
  1734  0193                     	;# 
  1735  0193                     	;# 
  1736  0194                     	;# 
  1737  0195                     	;# 
  1738  0196                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019B                     	;# 
  1742  019B                     	;# 
  1743  019B                     	;# 
  1744  019B                     	;# 
  1745  019C                     	;# 
  1746  019C                     	;# 
  1747  019D                     	;# 
  1748  019E                     	;# 
  1749  019F                     	;# 
  1750  020C                     	;# 
  1751  020D                     	;# 
  1752  0211                     	;# 
  1753  0211                     	;# 
  1754  0212                     	;# 
  1755  0212                     	;# 
  1756  0213                     	;# 
  1757  0213                     	;# 
  1758  0214                     	;# 
  1759  0214                     	;# 
  1760  0215                     	;# 
  1761  0215                     	;# 
  1762  0215                     	;# 
  1763  0216                     	;# 
  1764  0216                     	;# 
  1765  0217                     	;# 
  1766  0217                     	;# 
  1767  0219                     	;# 
  1768  021A                     	;# 
  1769  021B                     	;# 
  1770  021C                     	;# 
  1771  021D                     	;# 
  1772  021E                     	;# 
  1773  021F                     	;# 
  1774  0291                     	;# 
  1775  0291                     	;# 
  1776  0292                     	;# 
  1777  0293                     	;# 
  1778  0294                     	;# 
  1779  0295                     	;# 
  1780  0295                     	;# 
  1781  0296                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  029A                     	;# 
  1786  029B                     	;# 
  1787  029C                     	;# 
  1788  029C                     	;# 
  1789  029D                     	;# 
  1790  029E                     	;# 
  1791  029E                     	;# 
  1792  0311                     	;# 
  1793  0311                     	;# 
  1794  0312                     	;# 
  1795  0313                     	;# 
  1796  0318                     	;# 
  1797  0318                     	;# 
  1798  0319                     	;# 
  1799  031A                     	;# 
  1800  0394                     	;# 
  1801  0395                     	;# 
  1802  0396                     	;# 
  1803  039A                     	;# 
  1804  039C                     	;# 
  1805  039D                     	;# 
  1806  039E                     	;# 
  1807  039F                     	;# 
  1808  0415                     	;# 
  1809  0416                     	;# 
  1810  0417                     	;# 
  1811  041C                     	;# 
  1812  041D                     	;# 
  1813  041E                     	;# 
  1814  0FE4                     	;# 
  1815  0FE5                     	;# 
  1816  0FE6                     	;# 
  1817  0FE7                     	;# 
  1818  0FE8                     	;# 
  1819  0FE9                     	;# 
  1820  0FEA                     	;# 
  1821  0FEB                     	;# 
  1822  0FED                     	;# 
  1823  0FEE                     	;# 
  1824  0FEF                     	;# 
  1825  0016                     _TMR1	set	22
  1826  000C                     _PORTA	set	12
  1827  001F                     _CPSCON1	set	31
  1828  001E                     _CPSCON0	set	30
  1829  0015                     _TMR0	set	21
  1830  0019                     _T1GCON	set	25
  1831  0018                     _T1CON	set	24
  1832  000D                     _PORTB	set	13
  1833  001B                     _PR2	set	27
  1834  001A                     _TMR2	set	26
  1835  001C                     _T2CON	set	28
  1836  0099                     _TMR4IF	set	153
  1837  00C0                     _TMR1ON	set	192
  1838  0088                     _TMR1IF	set	136
  1839  005F                     _GIE	set	95
  1840  005E                     _PEIE	set	94
  1841  00A1                     _BCL2IF	set	161
  1842  00A0                     _SSP2IF	set	160
  1843  0093                     _BCL1IF	set	147
  1844  008B                     _SSP1IF	set	139
  1845  0099                     _OSCCON	set	153
  1846  0095                     _OPTION_REG	set	149
  1847  008D                     _TRISB	set	141
  1848  008C                     _TRISA	set	140
  1849  0499                     _TMR4IE	set	1177
  1850  0488                     _TMR1IE	set	1160
  1851  04A1                     _BCL2IE	set	1185
  1852  04A0                     _SSP2IE	set	1184
  1853  0493                     _BCL1IE	set	1171
  1854  048B                     _SSP1IE	set	1163
  1855  011E                     _APFCON1	set	286
  1856  011D                     _APFCON0	set	285
  1857  0866                     _LATA6	set	2150
  1858  0863                     _LATA3	set	2147
  1859  0864                     _LATA4	set	2148
  1860  018D                     _ANSELB	set	397
  1861  018C                     _ANSELA	set	396
  1862  021C                     _SSP2STATbits	set	540
  1863  0219                     _SSP2BUF	set	537
  1864  021E                     _SSP2CON2	set	542
  1865  021B                     _SSP2MSK	set	539
  1866  021E                     _SSP2CON2bits	set	542
  1867  021D                     _SSP2CON1bits	set	541
  1868  021A                     _SSP2ADD	set	538
  1869  021C                     _SSP2STAT	set	540
  1870  021D                     _SSP2CON1	set	541
  1871  0214                     _SSP1STATbits	set	532
  1872  0211                     _SSP1BUF	set	529
  1873  0216                     _SSP1CON2	set	534
  1874  0213                     _SSP1MSK	set	531
  1875  0216                     _SSP1CON2bits	set	534
  1876  0215                     _SSP1CON1bits	set	533
  1877  0212                     _SSP1ADD	set	530
  1878  0214                     _SSP1STAT	set	532
  1879  0215                     _SSP1CON1	set	533
  1880  0298                     _CCPR2L	set	664
  1881  029E                     _CCPTMRS	set	670
  1882  029A                     _CCP2CON	set	666
  1883  0417                     _T4CON	set	1047
  1884  0415                     _TMR4	set	1045
  1885  0416                     _PR4	set	1046
  1886                           
  1887                           	psect	stringtext
  1888  06D1                     __pstringtext:	
  1889  06D1                     STR_5:	
  1890  06D1  3425               	retlw	37	;'%'
  1891  06D2  3430               	retlw	48	;'0'
  1892  06D3  3438               	retlw	56	;'8'
  1893  06D4  346C               	retlw	108	;'l'
  1894  06D5  3458               	retlw	88	;'X'
  1895  06D6  3420               	retlw	32	;' '
  1896  06D7  3400               	retlw	0
  1897  06D8                     STR_8:	
  1898  06D8  3420               	retlw	32	;' '
  1899  06D9  3425               	retlw	37	;'%'
  1900  06DA  3430               	retlw	48	;'0'
  1901  06DB  3438               	retlw	56	;'8'
  1902  06DC  344C               	retlw	76	;'L'
  1903  06DD  3458               	retlw	88	;'X'
  1904  06DE  3400               	retlw	0
  1905  06DF                     STR_6:	
  1906  06DF  3420               	retlw	32	;' '
  1907  06E0  3425               	retlw	37	;'%'
  1908  06E1  3430               	retlw	48	;'0'
  1909  06E2  3432               	retlw	50	;'2'
  1910  06E3  3458               	retlw	88	;'X'
  1911  06E4  3400               	retlw	0
  1912  06E5                     STR_7:	
  1913  06E5  3420               	retlw	32	;' '
  1914  06E6  3425               	retlw	37	;'%'
  1915  06E7  3430               	retlw	48	;'0'
  1916  06E8  3434               	retlw	52	;'4'
  1917  06E9  3458               	retlw	88	;'X'
  1918  06EA  3400               	retlw	0
  1919  06EB                     STR_1:	
  1920  06EB  3443               	retlw	67	;'C'
  1921  06EC  3450               	retlw	80	;'P'
  1922  06ED  3453               	retlw	83	;'S'
  1923  06EE  3431               	retlw	49	;'1'
  1924  06EF  3400               	retlw	0
  1925  06F0                     STR_2:	
  1926  06F0  3443               	retlw	67	;'C'
  1927  06F1  3450               	retlw	80	;'P'
  1928  06F2  3453               	retlw	83	;'S'
  1929  06F3  3432               	retlw	50	;'2'
  1930  06F4  3400               	retlw	0
  1931  06F5                     STR_3:	
  1932  06F5  3443               	retlw	67	;'C'
  1933  06F6  3450               	retlw	80	;'P'
  1934  06F7  3453               	retlw	83	;'S'
  1935  06F8  3433               	retlw	51	;'3'
  1936  06F9  3400               	retlw	0
  1937  06FA                     STR_4:	
  1938  06FA  340D               	retlw	13
  1939  06FB  3400               	retlw	0
  1940                           
  1941                           ; #config settings
  1942  0000                     
  1943                           	psect	cinit
  1944  0032                     start_initialization:	
  1945  0032                     __initialization:	
  1946                           
  1947                           ; Clear objects allocated to COMMON
  1948  0032  01F6               	clrf	__pbssCOMMON& (0+127)
  1949  0033  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1950  0034  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1951  0035  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1952  0036  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1953                           
  1954                           ; Clear objects allocated to BANK0
  1955  0037  0020               	movlb	0	; select bank0
  1956  0038  01E6               	clrf	__pbssBANK0& (0+127)
  1957  0039  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1958  003A  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1959  003B  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1960  003C  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1961  003D  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1962                           
  1963                           ; Clear objects allocated to BANK1
  1964  003E  30A0               	movlw	low __pbssBANK1
  1965  003F  0084               	movwf	4
  1966  0040  3000               	movlw	high __pbssBANK1
  1967  0041  0085               	movwf	5
  1968  0042  3031               	movlw	49
  1969  0043  318F  2702         	fcall	clear_ram0
  1970  0045                     end_of_initialization:	
  1971                           ;End of C runtime variable initialization code
  1972                           
  1973  0045                     __end_of__initialization:	
  1974  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1975  0046  0020               	movlb	0
  1976  0047  3183  2BA2         	ljmp	_main	;jump to C main() function
  1977                           
  1978                           	psect	bssCOMMON
  1979  0076                     __pbssCOMMON:	
  1980  0076                     _xfunc_in:	
  1981  0076                     	ds	2
  1982  0078                     _count:	
  1983  0078                     	ds	2
  1984  007A                     CPSx_Read@channel:	
  1985  007A                     	ds	1
  1986                           
  1987                           	psect	bssBANK0
  1988  0066                     __pbssBANK0:	
  1989  0066                     _xfunc_out:	
  1990  0066                     	ds	2
  1991  0068                     _outptr:	
  1992  0068                     	ds	1
  1993  0069                     _VoltageReg:	
  1994  0069                     	ds	2
  1995  006B                     _ConfigReg:	
  1996  006B                     	ds	1
  1997                           
  1998                           	psect	bssBANK1
  1999  00A0                     __pbssBANK1:	
  2000  00A0                     _CPS_Data:	
  2001  00A0                     	ds	3
  2002  00A3                     _CPS_PreData:	
  2003  00A3                     	ds	3
  2004  00A6                     _MemoryReg:	
  2005  00A6                     	ds	3
  2006  00A9                     Handler@count:	
  2007  00A9                     	ds	2
  2008  00AB                     _I2C2_Config:	
  2009  00AB                     	ds	19
  2010  00BE                     _I2C1_Config:	
  2011  00BE                     	ds	19
  2012                           
  2013                           	psect	clrtext
  2014  0F02                     clear_ram0:	
  2015                           ;	Called with FSR0 containing the base address, and
  2016                           ;	WREG with the size to clear
  2017                           
  2018  0F02  0064               	clrwdt	;clear the watchdog before getting into this loop
  2019  0F03                     clrloop0:	
  2020  0F03  0180               	clrf	0	;clear RAM location pointed to by FSR
  2021  0F04  3101               	addfsr 0,1
  2022  0F05  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2023  0F06  2F03               	goto	clrloop0	;have we reached the end yet?
  2024  0F07  3400               	retlw	0	;all done for this memory range, return
  2025                           
  2026                           	psect	cstackBANK1
  2027  00D1                     __pcstackBANK1:	
  2028  00D1                     ??_main:	
  2029                           
  2030                           ; 1 bytes @ 0x0
  2031  00D1                     	ds	5
  2032                           
  2033                           	psect	cstackCOMMON
  2034  0070                     __pcstackCOMMON:	
  2035  0070                     ?_LCD_DisplayClear:	
  2036  0070                     ?_Basic_Init:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ?_Buzzer_Init:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ?_Buzzer_SetDuty:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?_Buzzer_Handler:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ?_I2C1_PinInit:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051  0070                     ?_I2C1_Interrupt:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054  0070                     ??_I2C1_Interrupt:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057  0070                     ?_I2C2_PinInit:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_I2C2_Interrupt:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ??_I2C2_Interrupt:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_I2C_CommonInterrupt:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ?_LCD_WriteData:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_LCD_Init:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_DAC_Initialize:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_Timer1_Init:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_Timer1_Handler:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ??_Timer1_Handler:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_Timer4_Init:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ?_Timer4_Handler:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ??_Timer4_Handler:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ?_mTouch_PortInit:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?_mTouch_Init:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ?_CPSx_Read:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ??_CPSx_Read:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ?_main:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?_Handler:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ?_xputc:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_xputs:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     Buzzer_SetDuty@duty:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0x0
  2125  0070                     	ds	1
  2126  0071                     ??_I2C_CommonInterrupt:	
  2127                           
  2128                           ; 1 bytes @ 0x1
  2129  0071                     	ds	1
  2130  0072                     ??_Buzzer_SetDuty:	
  2131                           
  2132                           ; 1 bytes @ 0x2
  2133  0072                     	ds	2
  2134  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2135                           
  2136                           ; 1 bytes @ 0x4
  2137  0074                     	ds	1
  2138  0075                     ??_Buzzer_Handler:	
  2139  0075                     ??_Handler:	
  2140                           ; 1 bytes @ 0x5
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x5
  2144  0075                     	ds	1
  2145                           
  2146                           	psect	cstackBANK0
  2147  0020                     __pcstackBANK0:	
  2148  0020                     ??_Basic_Init:	
  2149  0020                     ??_Buzzer_Init:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0020                     ?_Buzzer_MiliSecond:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0020                     ??_I2C1_PinInit:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0020                     ?_I2C1_Transmit:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0020                     ??_I2C2_PinInit:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0020                     ?_I2C2_Transmit:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0020                     ??_LCD_WriteData:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0020                     ??_Timer1_Init:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0020                     ??_Timer4_Init:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0020                     ??_mTouch_PortInit:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0020                     ?___wmul:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0020                     ?___lldiv:	
  2183                           ; 2 bytes @ 0x0
  2184                           
  2185  0020                     ?___llmod:	
  2186                           ; 4 bytes @ 0x0
  2187                           
  2188  0020                     I2C1_Transmit@pData:	
  2189                           ; 4 bytes @ 0x0
  2190                           
  2191  0020                     I2C2_Transmit@pData:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0020                     Buzzer_MiliSecond@time:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0020                     ___wmul@multiplier:	
  2198                           ; 2 bytes @ 0x0
  2199                           
  2200  0020                     ___lldiv@divisor:	
  2201                           ; 2 bytes @ 0x0
  2202                           
  2203  0020                     ___llmod@divisor:	
  2204                           ; 4 bytes @ 0x0
  2205                           
  2206                           
  2207                           ; 4 bytes @ 0x0
  2208  0020                     	ds	1
  2209  0021                     ?_I2C1_Setting:	
  2210  0021                     ?_I2C2_Setting:	
  2211                           ; 1 bytes @ 0x1
  2212                           
  2213  0021                     ??_mTouch_Init:	
  2214                           ; 1 bytes @ 0x1
  2215                           
  2216  0021                     I2C1_Setting@mode:	
  2217                           ; 1 bytes @ 0x1
  2218                           
  2219  0021                     I2C1_Transmit@size:	
  2220                           ; 1 bytes @ 0x1
  2221                           
  2222  0021                     I2C2_Setting@mode:	
  2223                           ; 1 bytes @ 0x1
  2224                           
  2225  0021                     I2C2_Transmit@size:	
  2226                           ; 1 bytes @ 0x1
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x1
  2230  0021                     	ds	1
  2231  0022                     ??_Buzzer_MiliSecond:	
  2232  0022                     ??_I2C1_Transmit:	
  2233                           ; 1 bytes @ 0x2
  2234                           
  2235  0022                     ??_I2C2_Transmit:	
  2236                           ; 1 bytes @ 0x2
  2237                           
  2238  0022                     I2C1_Setting@Speed:	
  2239                           ; 1 bytes @ 0x2
  2240                           
  2241  0022                     I2C2_Setting@Speed:	
  2242                           ; 1 bytes @ 0x2
  2243                           
  2244  0022                     LCD_WriteData@point:	
  2245                           ; 1 bytes @ 0x2
  2246                           
  2247  0022                     ___wmul@multiplicand:	
  2248                           ; 1 bytes @ 0x2
  2249                           
  2250                           
  2251                           ; 2 bytes @ 0x2
  2252  0022                     	ds	1
  2253  0023                     ??_LCD_DisplayClear:	
  2254  0023                     ??_I2C1_Setting:	
  2255                           ; 1 bytes @ 0x3
  2256                           
  2257  0023                     ??_I2C2_Setting:	
  2258                           ; 1 bytes @ 0x3
  2259                           
  2260  0023                     ?_LCD_Put:	
  2261                           ; 1 bytes @ 0x3
  2262                           
  2263  0023                     ?_LCD_CursorPosition:	
  2264                           ; 1 bytes @ 0x3
  2265                           
  2266  0023                     LCD_Put@word:	
  2267                           ; 1 bytes @ 0x3
  2268                           
  2269  0023                     LCD_CursorPosition@ty:	
  2270                           ; 1 bytes @ 0x3
  2271                           
  2272                           
  2273                           ; 1 bytes @ 0x3
  2274  0023                     	ds	1
  2275  0024                     ??_LCD_Init:	
  2276  0024                     ??_LCD_Put:	
  2277                           ; 1 bytes @ 0x4
  2278                           
  2279  0024                     ??_LCD_CursorPosition:	
  2280                           ; 1 bytes @ 0x4
  2281                           
  2282  0024                     ??_xputc:	
  2283                           ; 1 bytes @ 0x4
  2284                           
  2285  0024                     ??___wmul:	
  2286                           ; 1 bytes @ 0x4
  2287                           
  2288  0024                     I2C1_Setting@address:	
  2289                           ; 1 bytes @ 0x4
  2290                           
  2291  0024                     I2C1_Transmit@address:	
  2292                           ; 1 bytes @ 0x4
  2293                           
  2294  0024                     I2C2_Setting@address:	
  2295                           ; 1 bytes @ 0x4
  2296                           
  2297  0024                     I2C2_Transmit@address:	
  2298                           ; 1 bytes @ 0x4
  2299                           
  2300  0024                     ___wmul@product:	
  2301                           ; 1 bytes @ 0x4
  2302                           
  2303  0024                     ___lldiv@dividend:	
  2304                           ; 2 bytes @ 0x4
  2305                           
  2306  0024                     ___llmod@dividend:	
  2307                           ; 4 bytes @ 0x4
  2308                           
  2309                           
  2310                           ; 4 bytes @ 0x4
  2311  0024                     	ds	1
  2312  0025                     ?_I2C_Init:	
  2313  0025                     I2C1_Transmit@i:	
  2314                           ; 1 bytes @ 0x5
  2315                           
  2316  0025                     I2C2_Transmit@i:	
  2317                           ; 1 bytes @ 0x5
  2318                           
  2319  0025                     I2C_Init@address:	
  2320                           ; 1 bytes @ 0x5
  2321                           
  2322  0025                     LCD_CursorPosition@tx:	
  2323                           ; 1 bytes @ 0x5
  2324                           
  2325  0025                     xputc@c:	
  2326                           ; 1 bytes @ 0x5
  2327                           
  2328                           
  2329                           ; 1 bytes @ 0x5
  2330  0025                     	ds	1
  2331  0026                     ??_xputs:	
  2332  0026                     I2C1_Transmit@i_172:	
  2333                           ; 1 bytes @ 0x6
  2334                           
  2335  0026                     I2C2_Transmit@i_316:	
  2336                           ; 1 bytes @ 0x6
  2337                           
  2338  0026                     I2C_Init@mode:	
  2339                           ; 1 bytes @ 0x6
  2340                           
  2341                           
  2342                           ; 1 bytes @ 0x6
  2343  0026                     	ds	1
  2344  0027                     I2C1_Transmit@result:	
  2345  0027                     I2C2_Transmit@result:	
  2346                           ; 1 bytes @ 0x7
  2347                           
  2348  0027                     I2C_Init@Speed:	
  2349                           ; 1 bytes @ 0x7
  2350                           
  2351  0027                     xputs@str:	
  2352                           ; 1 bytes @ 0x7
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0x7
  2356  0027                     	ds	1
  2357  0028                     ??_I2C_Init:	
  2358  0028                     ?_I2C_Transmit:	
  2359                           ; 1 bytes @ 0x8
  2360                           
  2361  0028                     ??___lldiv:	
  2362                           ; 1 bytes @ 0x8
  2363                           
  2364  0028                     ??___llmod:	
  2365                           ; 1 bytes @ 0x8
  2366                           
  2367  0028                     I2C_Transmit@address:	
  2368                           ; 1 bytes @ 0x8
  2369                           
  2370                           
  2371                           ; 1 bytes @ 0x8
  2372  0028                     	ds	1
  2373  0029                     I2C_Transmit@pData:	
  2374  0029                     ___llmod@counter:	
  2375                           ; 1 bytes @ 0x9
  2376                           
  2377  0029                     ___lldiv@quotient:	
  2378                           ; 1 bytes @ 0x9
  2379                           
  2380                           
  2381                           ; 4 bytes @ 0x9
  2382  0029                     	ds	1
  2383  002A                     I2C_Init@I2Cx:	
  2384  002A                     I2C_Transmit@size:	
  2385                           ; 1 bytes @ 0xA
  2386                           
  2387                           
  2388                           ; 1 bytes @ 0xA
  2389  002A                     	ds	1
  2390  002B                     ??_I2C_Transmit:	
  2391                           
  2392                           ; 1 bytes @ 0xB
  2393  002B                     	ds	2
  2394  002D                     ___lldiv@counter:	
  2395                           
  2396                           ; 1 bytes @ 0xD
  2397  002D                     	ds	1
  2398  002E                     ?_xvprintf:	
  2399  002E                     I2C_Transmit@I2Cx:	
  2400                           ; 1 bytes @ 0xE
  2401                           
  2402  002E                     xvprintf@fmt:	
  2403                           ; 1 bytes @ 0xE
  2404                           
  2405                           
  2406                           ; 2 bytes @ 0xE
  2407  002E                     	ds	1
  2408  002F                     I2C_Transmit@result:	
  2409                           
  2410                           ; 1 bytes @ 0xF
  2411  002F                     	ds	1
  2412  0030                     ??_DAC_Initialize:	
  2413  0030                     xvprintf@arp:	
  2414                           ; 1 bytes @ 0x10
  2415                           
  2416                           
  2417                           ; 1 bytes @ 0x10
  2418  0030                     	ds	1
  2419  0031                     ??_xvprintf:	
  2420                           
  2421                           ; 1 bytes @ 0x11
  2422  0031                     	ds	4
  2423  0035                     xvprintf@s:	
  2424                           
  2425                           ; 16 bytes @ 0x15
  2426  0035                     	ds	16
  2427  0045                     _xvprintf$667:	
  2428                           
  2429                           ; 4 bytes @ 0x25
  2430  0045                     	ds	4
  2431  0049                     _xvprintf$668:	
  2432                           
  2433                           ; 2 bytes @ 0x29
  2434  0049                     	ds	2
  2435  004B                     _xvprintf$669:	
  2436                           
  2437                           ; 2 bytes @ 0x2B
  2438  004B                     	ds	2
  2439  004D                     xvprintf@p:	
  2440                           
  2441                           ; 1 bytes @ 0x2D
  2442  004D                     	ds	1
  2443  004E                     xvprintf@r:	
  2444                           
  2445                           ; 2 bytes @ 0x2E
  2446  004E                     	ds	2
  2447  0050                     xvprintf@w:	
  2448                           
  2449                           ; 2 bytes @ 0x30
  2450  0050                     	ds	2
  2451  0052                     xvprintf@j:	
  2452                           
  2453                           ; 2 bytes @ 0x32
  2454  0052                     	ds	2
  2455  0054                     xvprintf@v:	
  2456                           
  2457                           ; 4 bytes @ 0x34
  2458  0054                     	ds	4
  2459  0058                     xvprintf@f:	
  2460                           
  2461                           ; 2 bytes @ 0x38
  2462  0058                     	ds	2
  2463  005A                     xvprintf@i:	
  2464                           
  2465                           ; 2 bytes @ 0x3A
  2466  005A                     	ds	2
  2467  005C                     xvprintf@d:	
  2468                           
  2469                           ; 1 bytes @ 0x3C
  2470  005C                     	ds	1
  2471  005D                     xvprintf@c:	
  2472                           
  2473                           ; 1 bytes @ 0x3D
  2474  005D                     	ds	1
  2475  005E                     ?_xprintf:	
  2476  005E                     xprintf@fmt:	
  2477                           ; 1 bytes @ 0x3E
  2478                           
  2479                           
  2480                           ; 2 bytes @ 0x3E
  2481  005E                     	ds	6
  2482  0064                     ??_xprintf:	
  2483                           
  2484                           ; 1 bytes @ 0x44
  2485  0064                     	ds	1
  2486  0065                     xprintf@arp:	
  2487                           
  2488                           ; 1 bytes @ 0x45
  2489  0065                     	ds	1
  2490                           
  2491                           	psect	maintext
  2492  03A2                     __pmaintext:	
  2493 ;;
  2494 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2495 ;;
  2496 ;; *************** function _main *****************
  2497 ;; Defined at:
  2498 ;;		line 13 in file "main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : B1F/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2512 ;;      Params:         0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0
  2514 ;;      Temps:          0       0       5       0       0       0
  2515 ;;      Totals:         0       0       5       0       0       0
  2516 ;;Total ram usage:        5 bytes
  2517 ;; Hardware stack levels required when called:    9
  2518 ;; This function calls:
  2519 ;;		_Basic_Init
  2520 ;;		_Buzzer_Init
  2521 ;;		_Buzzer_MiliSecond
  2522 ;;		_DAC_Initialize
  2523 ;;		_LCD_CursorPosition
  2524 ;;		_LCD_Init
  2525 ;;		_Timer1_Init
  2526 ;;		_Timer4_Init
  2527 ;;		_mTouch_Init
  2528 ;;		_xprintf
  2529 ;; This function is called by:
  2530 ;;		Startup code after reset
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _main
  2536  03A2                     _main:	
  2537                           
  2538                           ;main.c: 15: Basic_Init();
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2542  03A2  318F  27A5  3183   	fcall	_Basic_Init
  2543                           
  2544                           ;main.c: 17: LATA6 = 1;
  2545  03A5  0022               	movlb	2	; select bank2
  2546  03A6  170C               	bsf	12,6	;volatile
  2547                           
  2548                           ;main.c: 19: Buzzer_Init();
  2549  03A7  3187  2751  3183   	fcall	_Buzzer_Init
  2550                           
  2551                           ;main.c: 21: LCD_Init();
  2552  03AA  3184  2432  3183   	fcall	_LCD_Init
  2553                           
  2554                           ;main.c: 22: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2555  03AD  3008               	movlw	low _LCD_Put
  2556  03AE  0020               	movlb	0	; select bank0
  2557  03AF  00E6               	movwf	_xfunc_out
  2558  03B0  300F               	movlw	high _LCD_Put
  2559  03B1  00E7               	movwf	_xfunc_out+1
  2560                           
  2561                           ;main.c: 24: Timer1_Init();
  2562  03B2  318F  27E6  3183   	fcall	_Timer1_Init
  2563                           
  2564                           ;main.c: 25: TMR1ON = 1;;
  2565  03B5  0020               	movlb	0	; select bank0
  2566  03B6  1418               	bsf	24,0	;volatile
  2567                           
  2568                           ;main.c: 27: mTouch_Init();
  2569  03B7  318F  277D  3183   	fcall	_mTouch_Init
  2570                           
  2571                           ;main.c: 29: Timer4_Init();
  2572  03BA  318F  276A  3183   	fcall	_Timer4_Init
  2573                           
  2574                           ;main.c: 31: DAC_Initialize();
  2575  03BD  3187  279E  3183   	fcall	_DAC_Initialize
  2576  03C0  2BD6               	goto	l4680
  2577  03C1                     l4684:	
  2578                           
  2579                           ;main.c: 38: {
  2580                           ;main.c: 39: Buzzer_MiliSecond(100);
  2581  03C1  3064               	movlw	100
  2582  03C2  0020               	movlb	0	; select bank0
  2583  03C3  00A0               	movwf	Buzzer_MiliSecond@time
  2584  03C4  3000               	movlw	0
  2585  03C5  00A1               	movwf	Buzzer_MiliSecond@time+1
  2586  03C6  3187  27F6  3183   	fcall	_Buzzer_MiliSecond
  2587                           
  2588                           ;main.c: 40: xprintf("CPS1");
  2589  03C9  30EB               	movlw	low (STR_1| (0+32768))
  2590  03CA  0020               	movlb	0	; select bank0
  2591  03CB  00DE               	movwf	xprintf@fmt
  2592  03CC  3086               	movlw	high (STR_1| (0+32768))
  2593  03CD  2BD2               	goto	L1
  2594  03CE                     l4690:	
  2595                           ;main.c: 41: }
  2596                           
  2597                           
  2598                           ;main.c: 43: xprintf("CPS2");
  2599  03CE  30F0               	movlw	low (STR_2| (0+32768))
  2600  03CF  0020               	movlb	0	; select bank0
  2601  03D0  00DE               	movwf	xprintf@fmt
  2602  03D1  3086               	movlw	high (STR_2| (0+32768))
  2603  03D2                     L1:	
  2604  03D2  00DF               	movwf	xprintf@fmt+1
  2605  03D3  318F  275A  3183   	fcall	_xprintf
  2606  03D6                     l4680:	
  2607                           ;main.c: 33: while(1)
  2608                           
  2609                           
  2610                           ;main.c: 34: {
  2611                           ;main.c: 36: LCD_CursorPosition(0,0);
  2612  03D6  0020               	movlb	0	; select bank0
  2613  03D7  01A3               	clrf	LCD_CursorPosition@ty
  2614  03D8  3000               	movlw	0
  2615  03D9  318F  27CF  3183   	fcall	_LCD_CursorPosition
  2616                           
  2617                           ;main.c: 37: if((CPS_PreData[0]-CPS_Data[0])>100)
  2618  03DC  0021               	movlb	1	; select bank1
  2619  03DD  0820               	movf	_CPS_Data^(0+128),w
  2620  03DE  00D1               	movwf	??_main^(0+128)
  2621  03DF  01D2               	clrf	(??_main^(0+128)+1)
  2622  03E0  09D1               	comf	??_main^(0+128),f
  2623  03E1  09D2               	comf	(??_main^(0+128)+1),f
  2624  03E2  0AD1               	incf	??_main^(0+128),f
  2625  03E3  1903               	skipnz
  2626  03E4  0AD2               	incf	(??_main^(0+128)+1),f
  2627  03E5  0823               	movf	_CPS_PreData^(0+128),w
  2628  03E6  0751               	addwf	??_main^(0+128),w
  2629  03E7  00D3               	movwf	(??_main+2)^(0+128)
  2630  03E8  0852               	movf	(??_main+1)^(0+128),w
  2631  03E9  1803               	skipnc
  2632  03EA  0A52               	incf	(??_main+1)^(0+128),w
  2633  03EB  00D4               	movwf	((??_main+2)^(0+128)+1)
  2634  03EC  0854               	movf	(??_main+3)^(0+128),w
  2635  03ED  3A80               	xorlw	128
  2636  03EE  00D5               	movwf	(??_main+4)^(0+128)
  2637  03EF  3080               	movlw	128
  2638  03F0  0255               	subwf	(??_main+4)^(0+128),w
  2639  03F1  1D03               	skipz
  2640  03F2  2BF5               	goto	u4755
  2641  03F3  3065               	movlw	101
  2642  03F4  0253               	subwf	(??_main+2)^(0+128),w
  2643  03F5                     u4755:	
  2644  03F5  1803               	btfsc	3,0
  2645  03F6  2BC1               	goto	l4684
  2646                           
  2647                           ;main.c: 42: else if((CPS_PreData[1]-CPS_Data[1])>100)
  2648  03F7  0021               	movlb	1	; select bank1
  2649  03F8  0821               	movf	(_CPS_Data^(0+128)+1),w
  2650  03F9  00D1               	movwf	??_main^(0+128)
  2651  03FA  01D2               	clrf	(??_main^(0+128)+1)
  2652  03FB  09D1               	comf	??_main^(0+128),f
  2653  03FC  09D2               	comf	(??_main^(0+128)+1),f
  2654  03FD  0AD1               	incf	??_main^(0+128),f
  2655  03FE  1903               	skipnz
  2656  03FF  0AD2               	incf	(??_main^(0+128)+1),f
  2657  0400  0824               	movf	(_CPS_PreData^(0+128)+1),w
  2658  0401  0751               	addwf	??_main^(0+128),w
  2659  0402  00D3               	movwf	(??_main+2)^(0+128)
  2660  0403  0852               	movf	(??_main+1)^(0+128),w
  2661  0404  1803               	skipnc
  2662  0405  0A52               	incf	(??_main+1)^(0+128),w
  2663  0406  00D4               	movwf	((??_main+2)^(0+128)+1)
  2664  0407  0854               	movf	(??_main+3)^(0+128),w
  2665  0408  3A80               	xorlw	128
  2666  0409  00D5               	movwf	(??_main+4)^(0+128)
  2667  040A  3080               	movlw	128
  2668  040B  0255               	subwf	(??_main+4)^(0+128),w
  2669  040C  1D03               	skipz
  2670  040D  2C10               	goto	u4765
  2671  040E  3065               	movlw	101
  2672  040F  0253               	subwf	(??_main+2)^(0+128),w
  2673  0410                     u4765:	
  2674  0410  1803               	btfsc	3,0
  2675  0411  2BCE               	goto	l4690
  2676                           
  2677                           ;main.c: 44: else if((CPS_PreData[2]-CPS_Data[2])>100)
  2678  0412  0021               	movlb	1	; select bank1
  2679  0413  0822               	movf	(_CPS_Data^(0+128)+2),w
  2680  0414  00D1               	movwf	??_main^(0+128)
  2681  0415  01D2               	clrf	(??_main^(0+128)+1)
  2682  0416  09D1               	comf	??_main^(0+128),f
  2683  0417  09D2               	comf	(??_main^(0+128)+1),f
  2684  0418  0AD1               	incf	??_main^(0+128),f
  2685  0419  1903               	skipnz
  2686  041A  0AD2               	incf	(??_main^(0+128)+1),f
  2687  041B  0825               	movf	(_CPS_PreData^(0+128)+2),w
  2688  041C  0751               	addwf	??_main^(0+128),w
  2689  041D  00D3               	movwf	(??_main+2)^(0+128)
  2690  041E  0852               	movf	(??_main+1)^(0+128),w
  2691  041F  1803               	skipnc
  2692  0420  0A52               	incf	(??_main+1)^(0+128),w
  2693  0421  00D4               	movwf	((??_main+2)^(0+128)+1)
  2694  0422  0854               	movf	(??_main+3)^(0+128),w
  2695  0423  3A80               	xorlw	128
  2696  0424  00D5               	movwf	(??_main+4)^(0+128)
  2697  0425  3080               	movlw	128
  2698  0426  0255               	subwf	(??_main+4)^(0+128),w
  2699  0427  1D03               	skipz
  2700  0428  2C2B               	goto	u4775
  2701  0429  3065               	movlw	101
  2702  042A  0253               	subwf	(??_main+2)^(0+128),w
  2703  042B                     u4775:	
  2704  042B  1C03               	skipc
  2705  042C  2BD6               	goto	l4680
  2706                           
  2707                           ;main.c: 45: xprintf("CPS3");
  2708  042D  30F5               	movlw	low (STR_3| (0+32768))
  2709  042E  0020               	movlb	0	; select bank0
  2710  042F  00DE               	movwf	xprintf@fmt
  2711  0430  3086               	movlw	high (STR_3| (0+32768))
  2712  0431  2BD2               	goto	L1
  2713  0432                     __end_of_main:	
  2714                           ;main.c: 46: }
  2715                           ;main.c: 48: return 0;
  2716                           ;	Return value of _main is never used
  2717                           
  2718                           
  2719                           	psect	text1
  2720  0F5A                     __ptext1:	
  2721 ;; *************** function _xprintf *****************
  2722 ;; Defined at:
  2723 ;;		line 165 in file "xprintf.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2726 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2727 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  arp             1   69[BANK0 ] PTR void [1]
  2730 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2740 ;;      Params:         0       6       0       0       0       0
  2741 ;;      Locals:         0       1       0       0       0       0
  2742 ;;      Temps:          0       1       0       0       0       0
  2743 ;;      Totals:         0       8       0       0       0       0
  2744 ;;Total ram usage:        8 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    8
  2747 ;; This function calls:
  2748 ;;		_xvprintf
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;;		_put_dump
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _xprintf
  2757  0F5A                     _xprintf:	
  2758                           
  2759                           ;xprintf.c: 170: va_list arp;
  2760                           ;xprintf.c: 173: *arp = __va_start();
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2764  0F5A  3060               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2765  0F5B  0020               	movlb	0	; select bank0
  2766  0F5C  00E4               	movwf	??_xprintf
  2767  0F5D  0864               	movf	??_xprintf,w
  2768  0F5E  00E5               	movwf	xprintf@arp
  2769                           
  2770                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2771  0F5F  085F               	movf	xprintf@fmt+1,w
  2772  0F60  00AF               	movwf	xvprintf@fmt+1
  2773  0F61  085E               	movf	xprintf@fmt,w
  2774  0F62  00AE               	movwf	xvprintf@fmt
  2775  0F63  3065               	movlw	(low (xprintf@arp| 0))& (0+255)
  2776  0F64  00E4               	movwf	??_xprintf
  2777  0F65  0864               	movf	??_xprintf,w
  2778  0F66  00B0               	movwf	xvprintf@arp
  2779  0F67  3180  2049         	fcall	_xvprintf
  2780  0F69  0008               	return
  2781  0F6A                     __end_of_xprintf:	
  2782                           
  2783                           	psect	text2
  2784  0049                     __ptext2:	
  2785 ;; *************** function _xvprintf *****************
  2786 ;; Defined at:
  2787 ;;		line 88 in file "xprintf.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2790 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2791 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2792 ;;  arp             1   16[BANK0 ] PTR PTR void 
  2793 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  s              16   21[BANK0 ] unsigned char [16]
  2796 ;;  v               4   52[BANK0 ] unsigned long 
  2797 ;;  i               2   58[BANK0 ] unsigned int 
  2798 ;;  f               2   56[BANK0 ] unsigned int 
  2799 ;;  j               2   50[BANK0 ] unsigned int 
  2800 ;;  w               2   48[BANK0 ] unsigned int 
  2801 ;;  r               2   46[BANK0 ] unsigned int 
  2802 ;;  c               1   61[BANK0 ] unsigned char 
  2803 ;;  d               1   60[BANK0 ] unsigned char 
  2804 ;;  p               1   45[BANK0 ] PTR unsigned char 
  2805 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2815 ;;      Params:         0       3       0       0       0       0
  2816 ;;      Locals:         0      41       0       0       0       0
  2817 ;;      Temps:          0       4       0       0       0       0
  2818 ;;      Totals:         0      48       0       0       0       0
  2819 ;;Total ram usage:       48 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    7
  2822 ;; This function calls:
  2823 ;;		___lldiv
  2824 ;;		___llmod
  2825 ;;		___wmul
  2826 ;;		_xputc
  2827 ;;		_xputs
  2828 ;; This function is called by:
  2829 ;;		_xprintf
  2830 ;;		_xsprintf
  2831 ;;		_xfprintf
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _xvprintf
  2837  0049                     _xvprintf:	
  2838  0049                     l620:	
  2839                           ;incstack = 0
  2840                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2841                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2842                           ;xprintf.c: 94: unsigned long v;
  2843                           ;xprintf.c: 95: char s[16], c, d, *p;
  2844                           ;xprintf.c: 98: for (;;) {
  2845                           
  2846                           
  2847                           ;xprintf.c: 99: c = *fmt++;
  2848  0049  0020               	movlb	0	; select bank0
  2849  004A  082E               	movf	xvprintf@fmt,w
  2850  004B  0084               	movwf	4
  2851  004C  082F               	movf	xvprintf@fmt+1,w
  2852  004D  0085               	movwf	5
  2853  004E  0800               	movf	0,w	;code access
  2854  004F  00B1               	movwf	??_xvprintf
  2855  0050  0831               	movf	??_xvprintf,w
  2856  0051  00DD               	movwf	xvprintf@c
  2857  0052  3001               	movlw	1
  2858  0053  07AE               	addwf	xvprintf@fmt,f
  2859  0054  3000               	movlw	0
  2860  0055  3DAF               	addwfc	xvprintf@fmt+1,f
  2861                           
  2862                           ;xprintf.c: 100: if (!c) break;
  2863  0056  085D               	movf	xvprintf@c,w
  2864  0057  1903               	btfsc	3,2
  2865  0058  0008               	return
  2866                           
  2867                           ;xprintf.c: 101: if (c != '%') {
  2868  0059  3025               	movlw	37
  2869  005A  065D               	xorwf	xvprintf@c,w
  2870  005B  1903               	btfsc	3,2
  2871  005C  2862               	goto	l4468
  2872                           
  2873                           ;xprintf.c: 102: xputc(c); continue;
  2874  005D  085D               	movf	xvprintf@c,w
  2875  005E  3186  26A4  3180   	fcall	_xputc
  2876  0061  2849               	goto	l620
  2877  0062                     l4468:	
  2878                           
  2879                           ;xprintf.c: 103: }
  2880                           ;xprintf.c: 104: f = 0;
  2881  0062  0020               	movlb	0	; select bank0
  2882  0063  01D8               	clrf	xvprintf@f
  2883  0064  01D9               	clrf	xvprintf@f+1
  2884                           
  2885                           ;xprintf.c: 105: c = *fmt++;
  2886  0065  082E               	movf	xvprintf@fmt,w
  2887  0066  0084               	movwf	4
  2888  0067  082F               	movf	xvprintf@fmt+1,w
  2889  0068  0085               	movwf	5
  2890  0069  0800               	movf	0,w	;code access
  2891  006A  00B1               	movwf	??_xvprintf
  2892  006B  0831               	movf	??_xvprintf,w
  2893  006C  00DD               	movwf	xvprintf@c
  2894  006D  3001               	movlw	1
  2895  006E  07AE               	addwf	xvprintf@fmt,f
  2896  006F  3000               	movlw	0
  2897  0070  3DAF               	addwfc	xvprintf@fmt+1,f
  2898                           
  2899                           ;xprintf.c: 106: if (c == '0') {
  2900  0071  3030               	movlw	48
  2901  0072  065D               	xorwf	xvprintf@c,w
  2902  0073  1D03               	btfss	3,2
  2903  0074  2877               	goto	l4482
  2904                           
  2905                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2906  0075  3001               	movlw	1
  2907  0076  287C               	goto	L7
  2908  0077                     l4482:	
  2909                           ;xprintf.c: 108: } else {
  2910                           
  2911                           
  2912                           ;xprintf.c: 109: if (c == '-') {
  2913  0077  302D               	movlw	45
  2914  0078  065D               	xorwf	xvprintf@c,w
  2915  0079  1D03               	btfss	3,2
  2916  007A  288B               	goto	l4490
  2917                           
  2918                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2919  007B  3002               	movlw	2
  2920  007C                     L7:	
  2921  007C  00D8               	movwf	xvprintf@f
  2922  007D  3000               	movlw	0
  2923  007E  00D9               	movwf	xvprintf@f+1
  2924  007F  082E               	movf	xvprintf@fmt,w
  2925  0080  0084               	movwf	4
  2926  0081  082F               	movf	xvprintf@fmt+1,w
  2927  0082  0085               	movwf	5
  2928  0083  0800               	movf	0,w	;code access
  2929  0084  00B1               	movwf	??_xvprintf
  2930  0085  0831               	movf	??_xvprintf,w
  2931  0086  00DD               	movwf	xvprintf@c
  2932  0087  3001               	movlw	1
  2933  0088  07AE               	addwf	xvprintf@fmt,f
  2934  0089  3000               	movlw	0
  2935  008A  3DAF               	addwfc	xvprintf@fmt+1,f
  2936  008B                     l4490:	
  2937                           
  2938                           ;xprintf.c: 111: }
  2939                           ;xprintf.c: 112: }
  2940                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2941  008B  01D0               	clrf	xvprintf@w
  2942  008C  01D1               	clrf	xvprintf@w+1
  2943  008D  28B5               	goto	l4498
  2944  008E                     l4492:	
  2945                           
  2946                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2947  008E  085D               	movf	xvprintf@c,w
  2948  008F  00B1               	movwf	??_xvprintf
  2949  0090  01B2               	clrf	??_xvprintf+1
  2950  0091  0851               	movf	xvprintf@w+1,w
  2951  0092  00A1               	movwf	___wmul@multiplier+1
  2952  0093  0850               	movf	xvprintf@w,w
  2953  0094  00A0               	movwf	___wmul@multiplier
  2954  0095  300A               	movlw	10
  2955  0096  00A2               	movwf	___wmul@multiplicand
  2956  0097  3000               	movlw	0
  2957  0098  00A3               	movwf	___wmul@multiplicand+1
  2958  0099  3187  27BE  3180   	fcall	___wmul
  2959  009C  0020               	movlb	0	; select bank0
  2960  009D  0831               	movf	??_xvprintf,w
  2961  009E  0720               	addwf	?___wmul,w
  2962  009F  00B3               	movwf	??_xvprintf+2
  2963  00A0  0832               	movf	??_xvprintf+1,w
  2964  00A1  3D21               	addwfc	?___wmul+1,w
  2965  00A2  00B4               	movwf	??_xvprintf+3
  2966  00A3  0833               	movf	??_xvprintf+2,w
  2967  00A4  3ED0               	addlw	208
  2968  00A5  00D0               	movwf	xvprintf@w
  2969  00A6  30FF               	movlw	255
  2970  00A7  3D34               	addwfc	??_xvprintf+3,w
  2971  00A8  00D1               	movwf	xvprintf@w+1
  2972  00A9  082E               	movf	xvprintf@fmt,w
  2973  00AA  0084               	movwf	4
  2974  00AB  082F               	movf	xvprintf@fmt+1,w
  2975  00AC  0085               	movwf	5
  2976  00AD  0800               	movf	0,w	;code access
  2977  00AE  00B1               	movwf	??_xvprintf
  2978  00AF  0831               	movf	??_xvprintf,w
  2979  00B0  00DD               	movwf	xvprintf@c
  2980  00B1  3001               	movlw	1
  2981  00B2  07AE               	addwf	xvprintf@fmt,f
  2982  00B3  3000               	movlw	0
  2983  00B4  3DAF               	addwfc	xvprintf@fmt+1,f
  2984  00B5                     l4498:	
  2985  00B5  3030               	movlw	48
  2986  00B6  025D               	subwf	xvprintf@c,w
  2987  00B7  1C03               	skipc
  2988  00B8  28BD               	goto	l4502
  2989  00B9  303A               	movlw	58
  2990  00BA  025D               	subwf	xvprintf@c,w
  2991  00BB  1C03               	skipc
  2992  00BC  288E               	goto	l4492
  2993  00BD                     l4502:	
  2994                           
  2995                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2996  00BD  306C               	movlw	108
  2997  00BE  065D               	xorwf	xvprintf@c,w
  2998  00BF  1903               	btfsc	3,2
  2999  00C0  28C5               	goto	l635
  3000  00C1  304C               	movlw	76
  3001  00C2  065D               	xorwf	xvprintf@c,w
  3002  00C3  1D03               	btfss	3,2
  3003  00C4  28D2               	goto	l4510
  3004  00C5                     l635:	
  3005                           
  3006                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3007  00C5  1558               	bsf	xvprintf@f,2
  3008  00C6  082E               	movf	xvprintf@fmt,w
  3009  00C7  0084               	movwf	4
  3010  00C8  082F               	movf	xvprintf@fmt+1,w
  3011  00C9  0085               	movwf	5
  3012  00CA  0800               	movf	0,w	;code access
  3013  00CB  00B1               	movwf	??_xvprintf
  3014  00CC  0831               	movf	??_xvprintf,w
  3015  00CD  00DD               	movwf	xvprintf@c
  3016  00CE  3001               	movlw	1
  3017  00CF  07AE               	addwf	xvprintf@fmt,f
  3018  00D0  3000               	movlw	0
  3019  00D1  3DAF               	addwfc	xvprintf@fmt+1,f
  3020  00D2                     l4510:	
  3021                           
  3022                           ;xprintf.c: 117: }
  3023                           ;xprintf.c: 118: if (!c) break;
  3024  00D2  085D               	movf	xvprintf@c,w
  3025  00D3  1903               	btfsc	3,2
  3026  00D4  0008               	return
  3027                           
  3028                           ;xprintf.c: 119: d = c;
  3029  00D5  085D               	movf	xvprintf@c,w
  3030  00D6  00B1               	movwf	??_xvprintf
  3031  00D7  0831               	movf	??_xvprintf,w
  3032  00D8  00DC               	movwf	xvprintf@d
  3033                           
  3034                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3035  00D9  3061               	movlw	97
  3036  00DA  025C               	subwf	xvprintf@d,w
  3037  00DB  1C03               	skipc
  3038  00DC  2948               	goto	l4552
  3039  00DD  3020               	movlw	32
  3040  00DE  02DC               	subwf	xvprintf@d,f
  3041                           
  3042                           ;xprintf.c: 121: switch (d) {
  3043  00DF  2948               	goto	l4552
  3044  00E0                     l4518:	
  3045                           ;xprintf.c: 122: case 'S' :
  3046                           
  3047                           
  3048                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3049  00E0  0830               	movf	xvprintf@arp,w
  3050  00E1  0086               	movwf	6
  3051  00E2  0187               	clrf	7
  3052  00E3  3F40               	moviw [0]fsr1
  3053  00E4  0084               	movwf	4
  3054  00E5  0185               	clrf	5
  3055  00E6  0A81               	incf	1,f
  3056  00E7  0800               	movf	0,w
  3057  00E8  00B1               	movwf	??_xvprintf
  3058  00E9  0831               	movf	??_xvprintf,w
  3059  00EA  00CD               	movwf	xvprintf@p
  3060                           
  3061                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3062  00EB  01D2               	clrf	xvprintf@j
  3063  00EC  01D3               	clrf	xvprintf@j+1
  3064  00ED                     l4524:	
  3065  00ED  0852               	movf	xvprintf@j,w
  3066  00EE  074D               	addwf	xvprintf@p,w
  3067  00EF  00B1               	movwf	??_xvprintf
  3068  00F0  0831               	movf	??_xvprintf,w
  3069  00F1  0086               	movwf	6
  3070  00F2  0187               	clrf	7
  3071  00F3  0801               	movf	1,w
  3072  00F4  1903               	btfsc	3,2
  3073  00F5  28FF               	goto	l4528
  3074  00F6  3001               	movlw	1
  3075  00F7  07D2               	addwf	xvprintf@j,f
  3076  00F8  3000               	movlw	0
  3077  00F9  3DD3               	addwfc	xvprintf@j+1,f
  3078  00FA  28ED               	goto	l4524
  3079  00FB                     l4526:	
  3080                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3081                           
  3082  00FB  3020               	movlw	32
  3083  00FC  3186  26A4  3180   	fcall	_xputc
  3084  00FF                     l4528:	
  3085  00FF  0020               	movlb	0	; select bank0
  3086  0100  18D8               	btfsc	xvprintf@f,1
  3087  0101  2911               	goto	l4532
  3088  0102  0853               	movf	xvprintf@j+1,w
  3089  0103  00B2               	movwf	??_xvprintf+1
  3090  0104  0852               	movf	xvprintf@j,w
  3091  0105  00B1               	movwf	??_xvprintf
  3092  0106  0AD2               	incf	xvprintf@j,f
  3093  0107  1903               	skipnz
  3094  0108  0AD3               	incf	xvprintf@j+1,f
  3095  0109  0851               	movf	xvprintf@w+1,w
  3096  010A  0232               	subwf	??_xvprintf+1,w
  3097  010B  1D03               	skipz
  3098  010C  290F               	goto	u4525
  3099  010D  0850               	movf	xvprintf@w,w
  3100  010E  0231               	subwf	??_xvprintf,w
  3101  010F                     u4525:	
  3102  010F  1C03               	skipc
  3103  0110  28FB               	goto	l4526
  3104  0111                     l4532:	
  3105                           
  3106                           ;xprintf.c: 126: xputs(p);
  3107  0111  084D               	movf	xvprintf@p,w
  3108  0112  318F  27BA  3180   	fcall	_xputs
  3109  0115                     l4536:	
  3110                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3111                           
  3112  0115  0020               	movlb	0	; select bank0
  3113  0116  0853               	movf	xvprintf@j+1,w
  3114  0117  00B2               	movwf	??_xvprintf+1
  3115  0118  0852               	movf	xvprintf@j,w
  3116  0119  00B1               	movwf	??_xvprintf
  3117  011A  0AD2               	incf	xvprintf@j,f
  3118  011B  1903               	skipnz
  3119  011C  0AD3               	incf	xvprintf@j+1,f
  3120  011D  0851               	movf	xvprintf@w+1,w
  3121  011E  0232               	subwf	??_xvprintf+1,w
  3122  011F  1D03               	skipz
  3123  0120  2923               	goto	u4535
  3124  0121  0850               	movf	xvprintf@w,w
  3125  0122  0231               	subwf	??_xvprintf,w
  3126  0123                     u4535:	
  3127  0123  1803               	btfsc	3,0
  3128  0124  2849               	goto	l620
  3129  0125  3020               	movlw	32
  3130  0126  3186  26A4  3180   	fcall	_xputc
  3131  0129  2915               	goto	l4536
  3132  012A                     l4538:	
  3133                           ;xprintf.c: 129: case 'C' :
  3134                           
  3135                           ;xprintf.c: 128: continue;
  3136                           
  3137                           
  3138                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3139  012A  0830               	movf	xvprintf@arp,w
  3140  012B  0086               	movwf	6
  3141  012C  0187               	clrf	7
  3142  012D  0801               	movf	1,w
  3143  012E  0084               	movwf	4
  3144  012F  0185               	clrf	5
  3145  0130  3002               	movlw	2
  3146  0131  0781               	addwf	1,f
  3147  0132  0800               	movf	0,w
  3148  0133  3186  26A4  3180   	fcall	_xputc
  3149  0136  2849               	goto	l620
  3150  0137                     l4540:	
  3151                           ;xprintf.c: 131: case 'B' :
  3152                           
  3153                           
  3154                           ;xprintf.c: 132: r = 2; break;
  3155  0137  3002               	movlw	2
  3156  0138  0020               	movlb	0	; select bank0
  3157  0139  293F               	goto	L4
  3158  013A                     l4542:	
  3159                           ;xprintf.c: 133: case 'O' :
  3160                           
  3161                           
  3162                           ;xprintf.c: 134: r = 8; break;
  3163  013A  3008               	movlw	8
  3164  013B  293F               	goto	L4
  3165  013C                     l4544:	
  3166                           ;xprintf.c: 135: case 'D' :
  3167                           
  3168                           
  3169                           ;xprintf.c: 136: case 'U' :
  3170                           ;xprintf.c: 137: r = 10; break;
  3171  013C  300A               	movlw	10
  3172  013D  293F               	goto	L4
  3173  013E                     l4546:	
  3174                           ;xprintf.c: 138: case 'X' :
  3175                           
  3176                           
  3177                           ;xprintf.c: 139: r = 16; break;
  3178  013E  3010               	movlw	16
  3179  013F                     L4:	
  3180  013F  00CE               	movwf	xvprintf@r
  3181  0140  3000               	movlw	0
  3182  0141  00CF               	movwf	xvprintf@r+1
  3183  0142  2960               	goto	l653
  3184  0143                     l4548:	
  3185                           ;xprintf.c: 140: default:
  3186                           
  3187                           
  3188                           ;xprintf.c: 141: xputc(c); continue;
  3189  0143  085D               	movf	xvprintf@c,w
  3190  0144  3186  26A4  3180   	fcall	_xputc
  3191  0147  2849               	goto	l620
  3192  0148                     l4552:	
  3193                           ;xprintf.c: 142: }
  3194                           
  3195  0148  0020               	movlb	0	; select bank0
  3196  0149  085C               	movf	xvprintf@d,w
  3197                           
  3198                           ; Switch size 1, requested type "space"
  3199                           ; Number of cases is 7, Range of values is 66 to 88
  3200                           ; switch strategies available:
  3201                           ; Name         Instructions Cycles
  3202                           ; simple_byte           22    12 (average)
  3203                           ; direct_byte           55     9 (fixed)
  3204                           ; jumptable            263     9 (fixed)
  3205                           ;	Chosen strategy is simple_byte
  3206  014A  3A42               	xorlw	66	; case 66
  3207  014B  1903               	skipnz
  3208  014C  2937               	goto	l4540
  3209  014D  3A01               	xorlw	1	; case 67
  3210  014E  1903               	skipnz
  3211  014F  292A               	goto	l4538
  3212  0150  3A07               	xorlw	7	; case 68
  3213  0151  1903               	skipnz
  3214  0152  293C               	goto	l4544
  3215  0153  3A0B               	xorlw	11	; case 79
  3216  0154  1903               	skipnz
  3217  0155  293A               	goto	l4542
  3218  0156  3A1C               	xorlw	28	; case 83
  3219  0157  1903               	skipnz
  3220  0158  28E0               	goto	l4518
  3221  0159  3A06               	xorlw	6	; case 85
  3222  015A  1903               	skipnz
  3223  015B  293C               	goto	l4544
  3224  015C  3A0D               	xorlw	13	; case 88
  3225  015D  1903               	skipnz
  3226  015E  293E               	goto	l4546
  3227  015F  2943               	goto	l4548
  3228  0160                     l653:	
  3229                           
  3230                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3231  0160  0020               	movlb	0	; select bank0
  3232  0161  1958               	btfsc	xvprintf@f,2
  3233  0162  2998               	goto	l4562
  3234  0163  3044               	movlw	68
  3235  0164  065C               	xorwf	xvprintf@d,w
  3236  0165  1903               	btfsc	3,2
  3237  0166  297A               	goto	l4558
  3238  0167  0830               	movf	xvprintf@arp,w
  3239  0168  0086               	movwf	6
  3240  0169  0187               	clrf	7
  3241  016A  0801               	movf	1,w
  3242  016B  0084               	movwf	4
  3243  016C  0185               	clrf	5
  3244  016D  3002               	movlw	2
  3245  016E  0781               	addwf	1,f
  3246  016F  3F00               	moviw [0]fsr0
  3247  0170  00B1               	movwf	??_xvprintf
  3248  0171  3F01               	moviw [1]fsr0
  3249  0172  00B2               	movwf	??_xvprintf+1
  3250  0173  0831               	movf	??_xvprintf,w
  3251  0174  00C5               	movwf	_xvprintf$667
  3252  0175  0832               	movf	??_xvprintf+1,w
  3253  0176  00C6               	movwf	_xvprintf$667+1
  3254  0177  01C7               	clrf	_xvprintf$667+2
  3255  0178  01C8               	clrf	_xvprintf$667+3
  3256  0179  298F               	goto	l4560
  3257  017A                     l4558:	
  3258  017A  0830               	movf	xvprintf@arp,w
  3259  017B  0086               	movwf	6
  3260  017C  0187               	clrf	7
  3261  017D  0801               	movf	1,w
  3262  017E  0084               	movwf	4
  3263  017F  0185               	clrf	5
  3264  0180  3002               	movlw	2
  3265  0181  0781               	addwf	1,f
  3266  0182  3F00               	moviw [0]fsr0
  3267  0183  00B1               	movwf	??_xvprintf
  3268  0184  3F01               	moviw [1]fsr0
  3269  0185  00B2               	movwf	??_xvprintf+1
  3270  0186  0831               	movf	??_xvprintf,w
  3271  0187  00C5               	movwf	_xvprintf$667
  3272  0188  0832               	movf	??_xvprintf+1,w
  3273  0189  00C6               	movwf	_xvprintf$667+1
  3274  018A  0D89               	rlf	9,f
  3275  018B  3B89               	subwfb	9,f
  3276  018C  0989               	comf	9,f
  3277  018D  00C7               	movwf	_xvprintf$667+2
  3278  018E  00C8               	movwf	_xvprintf$667+3
  3279  018F                     l4560:	
  3280  018F  0848               	movf	_xvprintf$667+3,w
  3281  0190  00D7               	movwf	xvprintf@v+3
  3282  0191  0847               	movf	_xvprintf$667+2,w
  3283  0192  00D6               	movwf	xvprintf@v+2
  3284  0193  0846               	movf	_xvprintf$667+1,w
  3285  0194  00D5               	movwf	xvprintf@v+1
  3286  0195  0845               	movf	_xvprintf$667,w
  3287  0196  00D4               	movwf	xvprintf@v
  3288  0197  29A8               	goto	l4564
  3289  0198                     l4562:	
  3290  0198  0830               	movf	xvprintf@arp,w
  3291  0199  0086               	movwf	6
  3292  019A  0187               	clrf	7
  3293  019B  0801               	movf	1,w
  3294  019C  0084               	movwf	4
  3295  019D  0185               	clrf	5
  3296  019E  3004               	movlw	4
  3297  019F  0781               	addwf	1,f
  3298  01A0  3F00               	moviw [0]fsr0
  3299  01A1  00D4               	movwf	xvprintf@v
  3300  01A2  3F01               	moviw [1]fsr0
  3301  01A3  00D5               	movwf	xvprintf@v+1
  3302  01A4  3F02               	moviw [2]fsr0
  3303  01A5  00D6               	movwf	xvprintf@v+2
  3304  01A6  3F03               	moviw [3]fsr0
  3305  01A7  00D7               	movwf	xvprintf@v+3
  3306  01A8                     l4564:	
  3307                           
  3308                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3309  01A8  3044               	movlw	68
  3310  01A9  065C               	xorwf	xvprintf@d,w
  3311  01AA  1903               	btfsc	3,2
  3312  01AB  1FD7               	btfss	xvprintf@v+3,7
  3313  01AC  29B9               	goto	l4570
  3314                           
  3315                           ;xprintf.c: 147: v = 0 - v;
  3316  01AD  09D4               	comf	xvprintf@v,f
  3317  01AE  09D5               	comf	xvprintf@v+1,f
  3318  01AF  09D6               	comf	xvprintf@v+2,f
  3319  01B0  09D7               	comf	xvprintf@v+3,f
  3320  01B1  0AD4               	incf	xvprintf@v,f
  3321  01B2  1903               	skipnz
  3322  01B3  0AD5               	incf	xvprintf@v+1,f
  3323  01B4  1903               	skipnz
  3324  01B5  0AD6               	incf	xvprintf@v+2,f
  3325  01B6  1903               	skipnz
  3326  01B7  0AD7               	incf	xvprintf@v+3,f
  3327                           
  3328                           ;xprintf.c: 148: f |= 8;
  3329  01B8  15D8               	bsf	xvprintf@f,3
  3330  01B9                     l4570:	
  3331                           
  3332                           ;xprintf.c: 149: }
  3333                           ;xprintf.c: 150: i = 0;
  3334  01B9  01DA               	clrf	xvprintf@i
  3335  01BA  01DB               	clrf	xvprintf@i+1
  3336  01BB                     l4572:	
  3337                           ;xprintf.c: 151: do {
  3338                           
  3339                           
  3340                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  3341  01BB  084E               	movf	xvprintf@r,w
  3342  01BC  00A0               	movwf	___llmod@divisor
  3343  01BD  084F               	movf	xvprintf@r+1,w
  3344  01BE  00A1               	movwf	___llmod@divisor+1
  3345  01BF  01A2               	clrf	___llmod@divisor+2
  3346  01C0  01A3               	clrf	___llmod@divisor+3
  3347  01C1  0857               	movf	xvprintf@v+3,w
  3348  01C2  00A7               	movwf	___llmod@dividend+3
  3349  01C3  0856               	movf	xvprintf@v+2,w
  3350  01C4  00A6               	movwf	___llmod@dividend+2
  3351  01C5  0855               	movf	xvprintf@v+1,w
  3352  01C6  00A5               	movwf	___llmod@dividend+1
  3353  01C7  0854               	movf	xvprintf@v,w
  3354  01C8  00A4               	movwf	___llmod@dividend
  3355  01C9  3186  2624  3180   	fcall	___llmod
  3356  01CC  0020               	movlb	0	; select bank0
  3357  01CD  0820               	movf	?___llmod,w
  3358  01CE  00B1               	movwf	??_xvprintf
  3359  01CF  0831               	movf	??_xvprintf,w
  3360  01D0  00DC               	movwf	xvprintf@d
  3361  01D1  084E               	movf	xvprintf@r,w
  3362  01D2  00A0               	movwf	___lldiv@divisor
  3363  01D3  084F               	movf	xvprintf@r+1,w
  3364  01D4  00A1               	movwf	___lldiv@divisor+1
  3365  01D5  01A2               	clrf	___lldiv@divisor+2
  3366  01D6  01A3               	clrf	___lldiv@divisor+3
  3367  01D7  0857               	movf	xvprintf@v+3,w
  3368  01D8  00A7               	movwf	___lldiv@dividend+3
  3369  01D9  0856               	movf	xvprintf@v+2,w
  3370  01DA  00A6               	movwf	___lldiv@dividend+2
  3371  01DB  0855               	movf	xvprintf@v+1,w
  3372  01DC  00A5               	movwf	___lldiv@dividend+1
  3373  01DD  0854               	movf	xvprintf@v,w
  3374  01DE  00A4               	movwf	___lldiv@dividend
  3375  01DF  3185  2549  3180   	fcall	___lldiv
  3376  01E2  0020               	movlb	0	; select bank0
  3377  01E3  0823               	movf	?___lldiv+3,w
  3378  01E4  00D7               	movwf	xvprintf@v+3
  3379  01E5  0822               	movf	?___lldiv+2,w
  3380  01E6  00D6               	movwf	xvprintf@v+2
  3381  01E7  0821               	movf	?___lldiv+1,w
  3382  01E8  00D5               	movwf	xvprintf@v+1
  3383  01E9  0820               	movf	?___lldiv,w
  3384  01EA  00D4               	movwf	xvprintf@v
  3385                           
  3386                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3387  01EB  300A               	movlw	10
  3388  01EC  025C               	subwf	xvprintf@d,w
  3389  01ED  1C03               	skipc
  3390  01EE  29FD               	goto	l4586
  3391  01EF  3078               	movlw	120
  3392  01F0  065D               	xorwf	xvprintf@c,w
  3393  01F1  1903               	btfsc	3,2
  3394  01F2  29F5               	goto	l4582
  3395  01F3  3007               	movlw	7
  3396  01F4  29F6               	goto	L5
  3397  01F5                     l4582:	
  3398  01F5  3027               	movlw	39
  3399  01F6                     L5:	
  3400  01F6  00C9               	movwf	_xvprintf$668
  3401  01F7  3000               	movlw	0
  3402  01F8  00CA               	movwf	_xvprintf$668+1
  3403  01F9  0849               	movf	_xvprintf$668,w
  3404  01FA  00B1               	movwf	??_xvprintf
  3405  01FB  0831               	movf	??_xvprintf,w
  3406  01FC  07DC               	addwf	xvprintf@d,f
  3407  01FD                     l4586:	
  3408                           
  3409                           ;xprintf.c: 154: s[i++] = d + '0';
  3410  01FD  085C               	movf	xvprintf@d,w
  3411  01FE  3E30               	addlw	48
  3412  01FF  00B1               	movwf	??_xvprintf
  3413  0200  085A               	movf	xvprintf@i,w
  3414  0201  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3415  0202  0086               	movwf	6
  3416  0203  0187               	clrf	7
  3417  0204  0831               	movf	??_xvprintf,w
  3418  0205  0081               	movwf	1
  3419  0206  3001               	movlw	1
  3420  0207  07DA               	addwf	xvprintf@i,f
  3421  0208  3000               	movlw	0
  3422  0209  3DDB               	addwfc	xvprintf@i+1,f
  3423                           
  3424                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  3425  020A  0857               	movf	xvprintf@v+3,w
  3426  020B  0456               	iorwf	xvprintf@v+2,w
  3427  020C  0455               	iorwf	xvprintf@v+1,w
  3428  020D  0454               	iorwf	xvprintf@v,w
  3429  020E  1903               	skipnz
  3430  020F  2A17               	goto	l676
  3431  0210  3000               	movlw	0
  3432  0211  025B               	subwf	xvprintf@i+1,w
  3433  0212  3010               	movlw	16
  3434  0213  1903               	skipnz
  3435  0214  025A               	subwf	xvprintf@i,w
  3436  0215  1C03               	skipc
  3437  0216  29BB               	goto	l4572
  3438  0217                     l676:	
  3439                           
  3440                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  3441  0217  1DD8               	btfss	xvprintf@f,3
  3442  0218  2A25               	goto	l4598
  3443  0219  302D               	movlw	45
  3444  021A  00B1               	movwf	??_xvprintf
  3445  021B  085A               	movf	xvprintf@i,w
  3446  021C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3447  021D  0086               	movwf	6
  3448  021E  0187               	clrf	7
  3449  021F  0831               	movf	??_xvprintf,w
  3450  0220  0081               	movwf	1
  3451  0221  3001               	movlw	1
  3452  0222  07DA               	addwf	xvprintf@i,f
  3453  0223  3000               	movlw	0
  3454  0224  3DDB               	addwfc	xvprintf@i+1,f
  3455  0225                     l4598:	
  3456                           
  3457                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  3458  0225  085B               	movf	xvprintf@i+1,w
  3459  0226  00D3               	movwf	xvprintf@j+1
  3460  0227  085A               	movf	xvprintf@i,w
  3461  0228  00D2               	movwf	xvprintf@j
  3462  0229  1858               	btfsc	xvprintf@f,0
  3463  022A  2A2D               	goto	l4604
  3464  022B  3020               	movlw	32
  3465  022C  2A2E               	goto	L6
  3466  022D                     l4604:	
  3467  022D  3030               	movlw	48
  3468  022E                     L6:	
  3469  022E  00CB               	movwf	_xvprintf$669
  3470  022F  3000               	movlw	0
  3471  0230  00CC               	movwf	_xvprintf$669+1
  3472  0231  084B               	movf	_xvprintf$669,w
  3473  0232  00B1               	movwf	??_xvprintf
  3474  0233  0831               	movf	??_xvprintf,w
  3475  0234  00DC               	movwf	xvprintf@d
  3476                           
  3477                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  3478  0235  2A3A               	goto	l4608
  3479  0236                     l4606:	
  3480  0236  085C               	movf	xvprintf@d,w
  3481  0237  3186  26A4  3180   	fcall	_xputc
  3482  023A                     l4608:	
  3483  023A  0020               	movlb	0	; select bank0
  3484  023B  18D8               	btfsc	xvprintf@f,1
  3485  023C  2A4C               	goto	l4612
  3486  023D  0853               	movf	xvprintf@j+1,w
  3487  023E  00B2               	movwf	??_xvprintf+1
  3488  023F  0852               	movf	xvprintf@j,w
  3489  0240  00B1               	movwf	??_xvprintf
  3490  0241  0AD2               	incf	xvprintf@j,f
  3491  0242  1903               	skipnz
  3492  0243  0AD3               	incf	xvprintf@j+1,f
  3493  0244  0851               	movf	xvprintf@w+1,w
  3494  0245  0232               	subwf	??_xvprintf+1,w
  3495  0246  1D03               	skipz
  3496  0247  2A4A               	goto	u4655
  3497  0248  0850               	movf	xvprintf@w,w
  3498  0249  0231               	subwf	??_xvprintf,w
  3499  024A                     u4655:	
  3500  024A  1C03               	skipc
  3501  024B  2A36               	goto	l4606
  3502  024C                     l4612:	
  3503                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  3504                           
  3505  024C  3001               	movlw	1
  3506  024D  02DA               	subwf	xvprintf@i,f
  3507  024E  3000               	movlw	0
  3508  024F  3BDB               	subwfb	xvprintf@i+1,f
  3509  0250  085A               	movf	xvprintf@i,w
  3510  0251  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3511  0252  0086               	movwf	6
  3512  0253  0187               	clrf	7
  3513  0254  0801               	movf	1,w
  3514  0255  3186  26A4  3180   	fcall	_xputc
  3515  0258  0020               	movlb	0	; select bank0
  3516  0259  085A               	movf	xvprintf@i,w
  3517  025A  045B               	iorwf	xvprintf@i+1,w
  3518  025B  1903               	btfsc	3,2
  3519  025C  2A62               	goto	l4618
  3520  025D  2A4C               	goto	l4612
  3521  025E                     l4616:	
  3522                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3523                           
  3524  025E  3020               	movlw	32
  3525  025F  3186  26A4  3180   	fcall	_xputc
  3526  0262                     l4618:	
  3527  0262  0020               	movlb	0	; select bank0
  3528  0263  0853               	movf	xvprintf@j+1,w
  3529  0264  00B2               	movwf	??_xvprintf+1
  3530  0265  0852               	movf	xvprintf@j,w
  3531  0266  00B1               	movwf	??_xvprintf
  3532  0267  0AD2               	incf	xvprintf@j,f
  3533  0268  1903               	skipnz
  3534  0269  0AD3               	incf	xvprintf@j+1,f
  3535  026A  0851               	movf	xvprintf@w+1,w
  3536  026B  0232               	subwf	??_xvprintf+1,w
  3537  026C  1D03               	skipz
  3538  026D  2A70               	goto	u4675
  3539  026E  0850               	movf	xvprintf@w,w
  3540  026F  0231               	subwf	??_xvprintf,w
  3541  0270                     u4675:	
  3542  0270  1803               	btfsc	3,0
  3543  0271  2849               	goto	l620
  3544  0272  2A5E               	goto	l4616
  3545  0273                     __end_of_xvprintf:	
  3546                           ;xprintf.c: 161: }
  3547                           
  3548                           
  3549                           	psect	text3
  3550  0FBA                     __ptext3:	
  3551 ;; *************** function _xputs *****************
  3552 ;; Defined at:
  3553 ;;		line 44 in file "xprintf.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  str             1    wreg     PTR const unsigned char 
  3556 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  3559 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3569 ;;      Params:         0       0       0       0       0       0
  3570 ;;      Locals:         0       1       0       0       0       0
  3571 ;;      Temps:          0       1       0       0       0       0
  3572 ;;      Totals:         0       2       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    6
  3576 ;; This function calls:
  3577 ;;		_xputc
  3578 ;; This function is called by:
  3579 ;;		_xvprintf
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function _xputs
  3585  0FBA                     _xputs:	
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3589                           ;xputs@str stored from wreg
  3590  0FBA  0020               	movlb	0	; select bank0
  3591  0FBB  00A7               	movwf	xputs@str
  3592  0FBC                     l4454:	
  3593                           ;xprintf.c: 48: while (*str)
  3594                           
  3595  0FBC  0827               	movf	xputs@str,w
  3596  0FBD  0086               	movwf	6
  3597  0FBE  0187               	clrf	7
  3598  0FBF  0801               	movf	1,w
  3599  0FC0  1903               	btfsc	3,2
  3600  0FC1  0008               	return
  3601                           
  3602                           ;xprintf.c: 49: xputc(*str++);
  3603  0FC2  0827               	movf	xputs@str,w
  3604  0FC3  0086               	movwf	6
  3605  0FC4  0187               	clrf	7
  3606  0FC5  0801               	movf	1,w
  3607  0FC6  3186  26A4  318F   	fcall	_xputc
  3608  0FC9  3001               	movlw	1
  3609  0FCA  0020               	movlb	0	; select bank0
  3610  0FCB  00A6               	movwf	??_xputs
  3611  0FCC  0826               	movf	??_xputs,w
  3612  0FCD  07A7               	addwf	xputs@str,f
  3613  0FCE  2FBC               	goto	l4454
  3614  0FCF                     __end_of_xputs:	
  3615                           
  3616                           	psect	text4
  3617  06A4                     __ptext4:	
  3618 ;; *************** function _xputc *****************
  3619 ;; Defined at:
  3620 ;;		line 26 in file "xprintf.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  c               1    wreg     unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  c               1    5[BANK0 ] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3634 ;;      Params:         0       0       0       0       0       0
  3635 ;;      Locals:         0       1       0       0       0       0
  3636 ;;      Temps:          0       1       0       0       0       0
  3637 ;;      Totals:         0       2       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    5
  3641 ;; This function calls:
  3642 ;;		Absolute function
  3643 ;;		_LCD_Put
  3644 ;; This function is called by:
  3645 ;;		_xputs
  3646 ;;		_xvprintf
  3647 ;;		_xfputs
  3648 ;;		_put_dump
  3649 ;;		_xgets
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _xputc
  3655  06A4                     _xputc:	
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3659                           ;xputc@c stored from wreg
  3660  06A4  0020               	movlb	0	; select bank0
  3661  06A5  00A5               	movwf	xputc@c
  3662  06A6  300A               	movlw	10
  3663  06A7  0625               	xorwf	xputc@c,w
  3664  06A8  1D03               	btfss	3,2
  3665  06A9  2EB3               	goto	l4436
  3666  06AA  30FA               	movlw	(low (STR_4| (0+32768)))& (0+255)
  3667  06AB  00A4               	movwf	??_xputc
  3668  06AC  0824               	movf	??_xputc,w
  3669  06AD  00A3               	movwf	LCD_Put@word
  3670  06AE  0867               	movf	_xfunc_out+1,w
  3671  06AF  008A               	movwf	10
  3672  06B0  0866               	movf	_xfunc_out,w
  3673  06B1  000A               	callw
  3674  06B2  3186               	pagesel	$
  3675  06B3                     l4436:	
  3676                           
  3677                           ;xprintf.c: 30: if (outptr) {
  3678  06B3  0020               	movlb	0	; select bank0
  3679  06B4  0868               	movf	_outptr,w
  3680  06B5  1903               	btfsc	3,2
  3681  06B6  2EC3               	goto	l4444
  3682                           
  3683                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3684  06B7  0825               	movf	xputc@c,w
  3685  06B8  00A4               	movwf	??_xputc
  3686  06B9  0868               	movf	_outptr,w
  3687  06BA  0086               	movwf	6
  3688  06BB  0187               	clrf	7
  3689  06BC  0824               	movf	??_xputc,w
  3690  06BD  0081               	movwf	1
  3691  06BE  3001               	movlw	1
  3692  06BF  00A4               	movwf	??_xputc
  3693  06C0  0824               	movf	??_xputc,w
  3694  06C1  07E8               	addwf	_outptr,f
  3695                           
  3696                           ;xprintf.c: 32: return;
  3697  06C2  0008               	return
  3698  06C3                     l4444:	
  3699                           
  3700                           ;xprintf.c: 33: }
  3701                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3702  06C3  0866               	movf	_xfunc_out,w
  3703  06C4  0467               	iorwf	_xfunc_out+1,w
  3704  06C5  1903               	btfsc	3,2
  3705  06C6  0008               	return
  3706  06C7  0825               	movf	xputc@c,w
  3707  06C8  00A4               	movwf	??_xputc
  3708  06C9  0824               	movf	??_xputc,w
  3709  06CA  00A3               	movwf	LCD_Put@word
  3710  06CB  0867               	movf	_xfunc_out+1,w
  3711  06CC  008A               	movwf	10
  3712  06CD  0866               	movf	_xfunc_out,w
  3713  06CE  000A               	callw
  3714  06CF  3186               	pagesel	$
  3715  06D0  0008               	return
  3716  06D1                     __end_of_xputc:	
  3717                           
  3718                           	psect	text5
  3719  0F08                     __ptext5:	
  3720 ;; *************** function _LCD_Put *****************
  3721 ;; Defined at:
  3722 ;;		line 54 in file "LCD.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  word            1    3[BANK0 ] char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3736 ;;      Params:         0       1       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0
  3739 ;;      Totals:         0       1       0       0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    4
  3743 ;; This function calls:
  3744 ;;		_LCD_WriteData
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;;		_xputc
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _LCD_Put
  3753  0F08                     _LCD_Put:	
  3754                           
  3755                           ;LCD.c: 56: LATA3 = 1;
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3759  0F08  0022               	movlb	2	; select bank2
  3760  0F09  158C               	bsf	12,3	;volatile
  3761                           
  3762                           ;LCD.c: 57: LCD_WriteData(word);
  3763  0F0A  0020               	movlb	0	; select bank0
  3764  0F0B  0823               	movf	LCD_Put@word,w
  3765  0F0C  3186  2667         	fcall	_LCD_WriteData
  3766  0F0E  0008               	return
  3767  0F0F                     __end_of_LCD_Put:	
  3768                           
  3769                           	psect	text6
  3770  07BE                     __ptext6:	
  3771 ;; *************** function ___wmul *****************
  3772 ;; Defined at:
  3773 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3776 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  product         2    4[BANK0 ] unsigned int 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  2    0[BANK0 ] unsigned int 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3788 ;;      Params:         0       4       0       0       0       0
  3789 ;;      Locals:         0       2       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0
  3791 ;;      Totals:         0       6       0       0       0       0
  3792 ;;Total ram usage:        6 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    3
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_xvprintf
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function ___wmul
  3804  07BE                     ___wmul:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3808  07BE  0020               	movlb	0	; select bank0
  3809  07BF  01A4               	clrf	___wmul@product
  3810  07C0  01A5               	clrf	___wmul@product+1
  3811  07C1                     l3826:	
  3812  07C1  1C20               	btfss	___wmul@multiplier,0
  3813  07C2  2FC7               	goto	l898
  3814  07C3  0822               	movf	___wmul@multiplicand,w
  3815  07C4  07A4               	addwf	___wmul@product,f
  3816  07C5  0823               	movf	___wmul@multiplicand+1,w
  3817  07C6  3DA5               	addwfc	___wmul@product+1,f
  3818  07C7                     l898:	
  3819  07C7  3001               	movlw	1
  3820  07C8                     u3695:	
  3821  07C8  35A2               	lslf	___wmul@multiplicand,f
  3822  07C9  0DA3               	rlf	___wmul@multiplicand+1,f
  3823  07CA  0B89               	decfsz	9,f
  3824  07CB  2FC8               	goto	u3695
  3825  07CC  3001               	movlw	1
  3826  07CD                     u3705:	
  3827  07CD  36A1               	lsrf	___wmul@multiplier+1,f
  3828  07CE  0CA0               	rrf	___wmul@multiplier,f
  3829  07CF  0B89               	decfsz	9,f
  3830  07D0  2FCD               	goto	u3705
  3831  07D1  0820               	movf	___wmul@multiplier,w
  3832  07D2  0421               	iorwf	___wmul@multiplier+1,w
  3833  07D3  1D03               	btfss	3,2
  3834  07D4  2FC1               	goto	l3826
  3835  07D5  0825               	movf	___wmul@product+1,w
  3836  07D6  00A1               	movwf	?___wmul+1
  3837  07D7  0824               	movf	___wmul@product,w
  3838  07D8  00A0               	movwf	?___wmul
  3839  07D9  0008               	return
  3840  07DA                     __end_of___wmul:	
  3841                           
  3842                           	psect	text7
  3843  0624                     __ptext7:	
  3844 ;; *************** function ___llmod *****************
  3845 ;; Defined at:
  3846 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  divisor         4    0[BANK0 ] unsigned long 
  3849 ;;  dividend        4    4[BANK0 ] unsigned long 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  counter         1    9[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  4    0[BANK0 ] unsigned long 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3861 ;;      Params:         0       8       0       0       0       0
  3862 ;;      Locals:         0       1       0       0       0       0
  3863 ;;      Temps:          0       1       0       0       0       0
  3864 ;;      Totals:         0      10       0       0       0       0
  3865 ;;Total ram usage:       10 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    3
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_xvprintf
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function ___llmod
  3877  0624                     ___llmod:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3881  0624  0020               	movlb	0	; select bank0
  3882  0625  0823               	movf	___llmod@divisor+3,w
  3883  0626  0422               	iorwf	___llmod@divisor+2,w
  3884  0627  0421               	iorwf	___llmod@divisor+1,w
  3885  0628  0420               	iorwf	___llmod@divisor,w
  3886  0629  1903               	skipnz
  3887  062A  2E5E               	goto	l3878
  3888  062B  01A9               	clrf	___llmod@counter
  3889  062C  0AA9               	incf	___llmod@counter,f
  3890  062D                     l3868:	
  3891  062D  1BA3               	btfsc	___llmod@divisor+3,7
  3892  062E  2E3B               	goto	l3870
  3893  062F  3001               	movlw	1
  3894  0630                     u3805:	
  3895  0630  35A0               	lslf	___llmod@divisor,f
  3896  0631  0DA1               	rlf	___llmod@divisor+1,f
  3897  0632  0DA2               	rlf	___llmod@divisor+2,f
  3898  0633  0DA3               	rlf	___llmod@divisor+3,f
  3899  0634  0B89               	decfsz	9,f
  3900  0635  2E30               	goto	u3805
  3901  0636  3001               	movlw	1
  3902  0637  00A8               	movwf	??___llmod
  3903  0638  0828               	movf	??___llmod,w
  3904  0639  07A9               	addwf	___llmod@counter,f
  3905  063A  2E2D               	goto	l3868
  3906  063B                     l3870:	
  3907  063B  0823               	movf	___llmod@divisor+3,w
  3908  063C  0227               	subwf	___llmod@dividend+3,w
  3909  063D  1D03               	skipz
  3910  063E  2E49               	goto	u3825
  3911  063F  0822               	movf	___llmod@divisor+2,w
  3912  0640  0226               	subwf	___llmod@dividend+2,w
  3913  0641  1D03               	skipz
  3914  0642  2E49               	goto	u3825
  3915  0643  0821               	movf	___llmod@divisor+1,w
  3916  0644  0225               	subwf	___llmod@dividend+1,w
  3917  0645  1D03               	skipz
  3918  0646  2E49               	goto	u3825
  3919  0647  0820               	movf	___llmod@divisor,w
  3920  0648  0224               	subwf	___llmod@dividend,w
  3921  0649                     u3825:	
  3922  0649  1C03               	skipc
  3923  064A  2E53               	goto	l3874
  3924  064B  0820               	movf	___llmod@divisor,w
  3925  064C  02A4               	subwf	___llmod@dividend,f
  3926  064D  0821               	movf	___llmod@divisor+1,w
  3927  064E  3BA5               	subwfb	___llmod@dividend+1,f
  3928  064F  0822               	movf	___llmod@divisor+2,w
  3929  0650  3BA6               	subwfb	___llmod@dividend+2,f
  3930  0651  0823               	movf	___llmod@divisor+3,w
  3931  0652  3BA7               	subwfb	___llmod@dividend+3,f
  3932  0653                     l3874:	
  3933  0653  3001               	movlw	1
  3934  0654                     u3835:	
  3935  0654  36A3               	lsrf	___llmod@divisor+3,f
  3936  0655  0CA2               	rrf	___llmod@divisor+2,f
  3937  0656  0CA1               	rrf	___llmod@divisor+1,f
  3938  0657  0CA0               	rrf	___llmod@divisor,f
  3939  0658  0B89               	decfsz	9,f
  3940  0659  2E54               	goto	u3835
  3941  065A  3001               	movlw	1
  3942  065B  02A9               	subwf	___llmod@counter,f
  3943  065C  1D03               	btfss	3,2
  3944  065D  2E3B               	goto	l3870
  3945  065E                     l3878:	
  3946  065E  0827               	movf	___llmod@dividend+3,w
  3947  065F  00A3               	movwf	?___llmod+3
  3948  0660  0826               	movf	___llmod@dividend+2,w
  3949  0661  00A2               	movwf	?___llmod+2
  3950  0662  0825               	movf	___llmod@dividend+1,w
  3951  0663  00A1               	movwf	?___llmod+1
  3952  0664  0824               	movf	___llmod@dividend,w
  3953  0665  00A0               	movwf	?___llmod
  3954  0666  0008               	return
  3955  0667                     __end_of___llmod:	
  3956                           
  3957                           	psect	text8
  3958  0549                     __ptext8:	
  3959 ;; *************** function ___lldiv *****************
  3960 ;; Defined at:
  3961 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  divisor         4    0[BANK0 ] unsigned long 
  3964 ;;  dividend        4    4[BANK0 ] unsigned long 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  quotient        4    9[BANK0 ] unsigned long 
  3967 ;;  counter         1   13[BANK0 ] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  4    0[BANK0 ] unsigned long 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3977 ;;      Params:         0       8       0       0       0       0
  3978 ;;      Locals:         0       5       0       0       0       0
  3979 ;;      Temps:          0       1       0       0       0       0
  3980 ;;      Totals:         0      14       0       0       0       0
  3981 ;;Total ram usage:       14 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_xvprintf
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function ___lldiv
  3993  0549                     ___lldiv:	
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3997  0549  3000               	movlw	0
  3998  054A  0020               	movlb	0	; select bank0
  3999  054B  00AC               	movwf	___lldiv@quotient+3
  4000  054C  3000               	movlw	0
  4001  054D  00AB               	movwf	___lldiv@quotient+2
  4002  054E  3000               	movlw	0
  4003  054F  00AA               	movwf	___lldiv@quotient+1
  4004  0550  3000               	movlw	0
  4005  0551  00A9               	movwf	___lldiv@quotient
  4006  0552  0823               	movf	___lldiv@divisor+3,w
  4007  0553  0422               	iorwf	___lldiv@divisor+2,w
  4008  0554  0421               	iorwf	___lldiv@divisor+1,w
  4009  0555  0420               	iorwf	___lldiv@divisor,w
  4010  0556  1903               	skipnz
  4011  0557  2D93               	goto	l3858
  4012  0558  01AD               	clrf	___lldiv@counter
  4013  0559  0AAD               	incf	___lldiv@counter,f
  4014  055A                     l3844:	
  4015  055A  1BA3               	btfsc	___lldiv@divisor+3,7
  4016  055B  2D68               	goto	l3846
  4017  055C  3001               	movlw	1
  4018  055D                     u3735:	
  4019  055D  35A0               	lslf	___lldiv@divisor,f
  4020  055E  0DA1               	rlf	___lldiv@divisor+1,f
  4021  055F  0DA2               	rlf	___lldiv@divisor+2,f
  4022  0560  0DA3               	rlf	___lldiv@divisor+3,f
  4023  0561  0B89               	decfsz	9,f
  4024  0562  2D5D               	goto	u3735
  4025  0563  3001               	movlw	1
  4026  0564  00A8               	movwf	??___lldiv
  4027  0565  0828               	movf	??___lldiv,w
  4028  0566  07AD               	addwf	___lldiv@counter,f
  4029  0567  2D5A               	goto	l3844
  4030  0568                     l3846:	
  4031  0568  3001               	movlw	1
  4032  0569                     u3755:	
  4033  0569  35A9               	lslf	___lldiv@quotient,f
  4034  056A  0DAA               	rlf	___lldiv@quotient+1,f
  4035  056B  0DAB               	rlf	___lldiv@quotient+2,f
  4036  056C  0DAC               	rlf	___lldiv@quotient+3,f
  4037  056D  0B89               	decfsz	9,f
  4038  056E  2D69               	goto	u3755
  4039  056F  0823               	movf	___lldiv@divisor+3,w
  4040  0570  0227               	subwf	___lldiv@dividend+3,w
  4041  0571  1D03               	skipz
  4042  0572  2D7D               	goto	u3765
  4043  0573  0822               	movf	___lldiv@divisor+2,w
  4044  0574  0226               	subwf	___lldiv@dividend+2,w
  4045  0575  1D03               	skipz
  4046  0576  2D7D               	goto	u3765
  4047  0577  0821               	movf	___lldiv@divisor+1,w
  4048  0578  0225               	subwf	___lldiv@dividend+1,w
  4049  0579  1D03               	skipz
  4050  057A  2D7D               	goto	u3765
  4051  057B  0820               	movf	___lldiv@divisor,w
  4052  057C  0224               	subwf	___lldiv@dividend,w
  4053  057D                     u3765:	
  4054  057D  1C03               	skipc
  4055  057E  2D88               	goto	l3854
  4056  057F  0820               	movf	___lldiv@divisor,w
  4057  0580  02A4               	subwf	___lldiv@dividend,f
  4058  0581  0821               	movf	___lldiv@divisor+1,w
  4059  0582  3BA5               	subwfb	___lldiv@dividend+1,f
  4060  0583  0822               	movf	___lldiv@divisor+2,w
  4061  0584  3BA6               	subwfb	___lldiv@dividend+2,f
  4062  0585  0823               	movf	___lldiv@divisor+3,w
  4063  0586  3BA7               	subwfb	___lldiv@dividend+3,f
  4064  0587  1429               	bsf	___lldiv@quotient,0
  4065  0588                     l3854:	
  4066  0588  3001               	movlw	1
  4067  0589                     u3775:	
  4068  0589  36A3               	lsrf	___lldiv@divisor+3,f
  4069  058A  0CA2               	rrf	___lldiv@divisor+2,f
  4070  058B  0CA1               	rrf	___lldiv@divisor+1,f
  4071  058C  0CA0               	rrf	___lldiv@divisor,f
  4072  058D  0B89               	decfsz	9,f
  4073  058E  2D89               	goto	u3775
  4074  058F  3001               	movlw	1
  4075  0590  02AD               	subwf	___lldiv@counter,f
  4076  0591  1D03               	btfss	3,2
  4077  0592  2D68               	goto	l3846
  4078  0593                     l3858:	
  4079  0593  082C               	movf	___lldiv@quotient+3,w
  4080  0594  00A3               	movwf	?___lldiv+3
  4081  0595  082B               	movf	___lldiv@quotient+2,w
  4082  0596  00A2               	movwf	?___lldiv+2
  4083  0597  082A               	movf	___lldiv@quotient+1,w
  4084  0598  00A1               	movwf	?___lldiv+1
  4085  0599  0829               	movf	___lldiv@quotient,w
  4086  059A  00A0               	movwf	?___lldiv
  4087  059B  0008               	return
  4088  059C                     __end_of___lldiv:	
  4089                           
  4090                           	psect	text9
  4091  0F7D                     __ptext9:	
  4092 ;; *************** function _mTouch_Init *****************
  4093 ;; Defined at:
  4094 ;;		line 12 in file "mTouch.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4108 ;;      Params:         0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0
  4110 ;;      Temps:          0       1       0       0       0       0
  4111 ;;      Totals:         0       1       0       0       0       0
  4112 ;;Total ram usage:        1 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    4
  4115 ;; This function calls:
  4116 ;;		_mTouch_PortInit
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _mTouch_Init
  4124  0F7D                     _mTouch_Init:	
  4125                           
  4126                           ;mTouch.c: 14: mTouch_PortInit();
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4130  0F7D  318F  273D         	fcall	_mTouch_PortInit
  4131                           
  4132                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4133  0F7F  0021               	movlb	1	; select bank1
  4134  0F80  0815               	movf	21,w	;volatile
  4135                           
  4136                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4137  0F81  1595               	bsf	21,3	;volatile
  4138                           
  4139                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4140  0F82  1695               	bsf	21,5	;volatile
  4141                           
  4142                           ;mTouch.c: 20: TMR0 = 0x00;
  4143  0F83  0020               	movlb	0	; select bank0
  4144  0F84  0195               	clrf	21	;volatile
  4145                           
  4146                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4147  0F85  141E               	bsf	30,0	;volatile
  4148                           
  4149                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4150  0F86  300C               	movlw	12
  4151  0F87  00A1               	movwf	??_mTouch_Init
  4152  0F88  0821               	movf	??_mTouch_Init,w
  4153  0F89  049E               	iorwf	30,f	;volatile
  4154                           
  4155                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4156  0F8A  307F               	movlw	127
  4157  0F8B  00A1               	movwf	??_mTouch_Init
  4158  0F8C  0821               	movf	??_mTouch_Init,w
  4159  0F8D  059E               	andwf	30,f	;volatile
  4160                           
  4161                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4162  0F8E  019F               	clrf	31	;volatile
  4163  0F8F  0008               	return
  4164  0F90                     __end_of_mTouch_Init:	
  4165                           
  4166                           	psect	text10
  4167  0F3D                     __ptext10:	
  4168 ;; *************** function _mTouch_PortInit *****************
  4169 ;; Defined at:
  4170 ;;		line 6 in file "mTouch.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4184 ;;      Params:         0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0
  4186 ;;      Temps:          0       1       0       0       0       0
  4187 ;;      Totals:         0       1       0       0       0       0
  4188 ;;Total ram usage:        1 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    3
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_mTouch_Init
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _mTouch_PortInit
  4200  0F3D                     _mTouch_PortInit:	
  4201                           
  4202                           ;mTouch.c: 8: TRISA |= (0x07);
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4206  0F3D  3007               	movlw	7
  4207  0F3E  0020               	movlb	0	; select bank0
  4208  0F3F  00A0               	movwf	??_mTouch_PortInit
  4209  0F40  0820               	movf	??_mTouch_PortInit,w
  4210  0F41  0021               	movlb	1	; select bank1
  4211  0F42  048C               	iorwf	12,f	;volatile
  4212                           
  4213                           ;mTouch.c: 9: ANSELA |= (0x07);
  4214  0F43  3007               	movlw	7
  4215  0F44  0020               	movlb	0	; select bank0
  4216  0F45  00A0               	movwf	??_mTouch_PortInit
  4217  0F46  0820               	movf	??_mTouch_PortInit,w
  4218  0F47  0023               	movlb	3	; select bank3
  4219  0F48  048C               	iorwf	12,f	;volatile
  4220  0F49  0008               	return
  4221  0F4A                     __end_of_mTouch_PortInit:	
  4222                           
  4223                           	psect	text11
  4224  0F6A                     __ptext11:	
  4225 ;; *************** function _Timer4_Init *****************
  4226 ;; Defined at:
  4227 ;;		line 3 in file "Timer4.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4241 ;;      Params:         0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0
  4243 ;;      Temps:          0       1       0       0       0       0
  4244 ;;      Totals:         0       1       0       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    3
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _Timer4_Init
  4257  0F6A                     _Timer4_Init:	
  4258                           
  4259                           ;Timer4.c: 5: PR4 = 0x7D;
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4263  0F6A  307D               	movlw	125
  4264  0F6B  0028               	movlb	8	; select bank8
  4265  0F6C  0096               	movwf	22	;volatile
  4266                           
  4267                           ;Timer4.c: 6: TMR4 = 0x00;
  4268  0F6D  0195               	clrf	21	;volatile
  4269                           
  4270                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4271  0F6E  3003               	movlw	3
  4272  0F6F  0020               	movlb	0	; select bank0
  4273  0F70  00A0               	movwf	??_Timer4_Init
  4274  0F71  0820               	movf	??_Timer4_Init,w
  4275  0F72  0028               	movlb	8	; select bank8
  4276  0F73  0497               	iorwf	23,f	;volatile
  4277                           
  4278                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4279  0F74  0817               	movf	23,w	;volatile
  4280                           
  4281                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4282  0F75  1517               	bsf	23,2	;volatile
  4283                           
  4284                           ;Timer4.c: 11: TMR4IF = 0;
  4285  0F76  0020               	movlb	0	; select bank0
  4286  0F77  1093               	bcf	19,1	;volatile
  4287                           
  4288                           ;Timer4.c: 12: TMR4IE = 1;
  4289  0F78  0021               	movlb	1	; select bank1
  4290  0F79  1493               	bsf	19,1	;volatile
  4291                           
  4292                           ;Timer4.c: 13: PEIE = 1;
  4293  0F7A  170B               	bsf	11,6	;volatile
  4294                           
  4295                           ;Timer4.c: 14: GIE = 1;
  4296  0F7B  178B               	bsf	11,7	;volatile
  4297  0F7C  0008               	return
  4298  0F7D                     __end_of_Timer4_Init:	
  4299                           
  4300                           	psect	text12
  4301  0FE6                     __ptext12:	
  4302 ;; *************** function _Timer1_Init *****************
  4303 ;; Defined at:
  4304 ;;		line 3 in file "Timer1.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4318 ;;      Params:         0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0
  4320 ;;      Temps:          0       1       0       0       0       0
  4321 ;;      Totals:         0       1       0       0       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _Timer1_Init
  4334  0FE6                     _Timer1_Init:	
  4335                           
  4336                           ;Timer1.c: 5: TRISB |= (1<<6);
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4340  0FE6  0021               	movlb	1	; select bank1
  4341  0FE7  170D               	bsf	13,6	;volatile
  4342                           
  4343                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  4344  0FE8  30BF               	movlw	191
  4345  0FE9  0020               	movlb	0	; select bank0
  4346  0FEA  00A0               	movwf	??_Timer1_Init
  4347  0FEB  0820               	movf	??_Timer1_Init,w
  4348  0FEC  0023               	movlb	3	; select bank3
  4349  0FED  058D               	andwf	13,f	;volatile
  4350                           
  4351                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  4352  0FEE  0020               	movlb	0	; select bank0
  4353  0FEF  1518               	bsf	24,2	;volatile
  4354                           
  4355                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  4356  0FF0  30F7               	movlw	247
  4357  0FF1  00A0               	movwf	??_Timer1_Init
  4358  0FF2  0820               	movf	??_Timer1_Init,w
  4359  0FF3  0598               	andwf	24,f	;volatile
  4360                           
  4361                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  4362  0FF4  0818               	movf	24,w	;volatile
  4363                           
  4364                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  4365  0FF5  1798               	bsf	24,7	;volatile
  4366                           
  4367                           ;Timer1.c: 13: T1GCON = 0x00;
  4368  0FF6  0199               	clrf	25	;volatile
  4369                           
  4370                           ;Timer1.c: 15: TMR1 = 0x0000;
  4371  0FF7  0196               	clrf	22	;volatile
  4372  0FF8  0197               	clrf	23	;volatile
  4373                           
  4374                           ;Timer1.c: 17: TMR1IE = 1;
  4375  0FF9  0021               	movlb	1	; select bank1
  4376  0FFA  1411               	bsf	17,0	;volatile
  4377                           
  4378                           ;Timer1.c: 18: TMR1IF = 0;
  4379  0FFB  0020               	movlb	0	; select bank0
  4380  0FFC  1011               	bcf	17,0	;volatile
  4381                           
  4382                           ;Timer1.c: 19: PEIE = 1;
  4383  0FFD  170B               	bsf	11,6	;volatile
  4384                           
  4385                           ;Timer1.c: 20: GIE = 1;
  4386  0FFE  178B               	bsf	11,7	;volatile
  4387  0FFF  0008               	return
  4388  1000                     __end_of_Timer1_Init:	
  4389                           
  4390                           	psect	text13
  4391  0432                     __ptext13:	
  4392 ;; *************** function _LCD_Init *****************
  4393 ;; Defined at:
  4394 ;;		line 28 in file "LCD.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4408 ;;      Params:         0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0
  4410 ;;      Temps:          0       2       0       0       0       0
  4411 ;;      Totals:         0       2       0       0       0       0
  4412 ;;Total ram usage:        2 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    5
  4415 ;; This function calls:
  4416 ;;		_LCD_DisplayClear
  4417 ;;		_LCD_WriteData
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _LCD_Init
  4425  0432                     _LCD_Init:	
  4426                           
  4427                           ;LCD.c: 30: LATA3 = 0;
  4428                           
  4429                           ;incstack = 0
  4430                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4431  0432  0022               	movlb	2	; select bank2
  4432  0433  118C               	bcf	12,3	;volatile
  4433                           
  4434                           ;LCD.c: 31: LATA4 = 0;
  4435  0434  120C               	bcf	12,4	;volatile
  4436                           
  4437                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4438  0435  3002               	movlw	2
  4439  0436  0020               	movlb	0	; select bank0
  4440  0437  00A5               	movwf	??_LCD_Init+1
  4441  0438  3038               	movlw	56
  4442  0439  00A4               	movwf	??_LCD_Init
  4443  043A  30AD               	movlw	173
  4444  043B                     u4857:	
  4445  043B  0B89               	decfsz	9,f
  4446  043C  2C3B               	goto	u4857
  4447  043D  0BA4               	decfsz	??_LCD_Init,f
  4448  043E  2C3B               	goto	u4857
  4449  043F  0BA5               	decfsz	??_LCD_Init+1,f
  4450  0440  2C3B               	goto	u4857
  4451                           
  4452                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4453  0441  3003               	movlw	3
  4454  0442  0020               	movlb	0	; select bank0
  4455  0443  008D               	movwf	13	;volatile
  4456                           
  4457                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4458  0444  0022               	movlb	2	; select bank2
  4459  0445  160C               	bsf	12,4	;volatile
  4460  0446  3200               	nop2	;2 cycle nop
  4461  0447  3200               	nop2	;2 cycle nop
  4462  0448  3200               	nop2	;2 cycle nop
  4463  0449  3200               	nop2	;2 cycle nop
  4464  044A  0022               	movlb	2	; select bank2
  4465  044B  120C               	bcf	12,4	;volatile
  4466  044C  3200               	nop2	;2 cycle nop
  4467  044D  3200               	nop2	;2 cycle nop
  4468  044E  3200               	nop2	;2 cycle nop
  4469  044F  3200               	nop2	;2 cycle nop
  4470                           
  4471                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4472  0450  3034               	movlw	52
  4473  0451  0020               	movlb	0	; select bank0
  4474  0452  00A4               	movwf	??_LCD_Init
  4475  0453  30F1               	movlw	241
  4476  0454                     u4867:	
  4477  0454  0B89               	decfsz	9,f
  4478  0455  2C54               	goto	u4867
  4479  0456  0BA4               	decfsz	??_LCD_Init,f
  4480  0457  2C54               	goto	u4867
  4481  0458  3200               	nop2
  4482                           
  4483                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4484  0459  0022               	movlb	2	; select bank2
  4485  045A  160C               	bsf	12,4	;volatile
  4486  045B  3200               	nop2	;2 cycle nop
  4487  045C  3200               	nop2	;2 cycle nop
  4488  045D  3200               	nop2	;2 cycle nop
  4489  045E  3200               	nop2	;2 cycle nop
  4490  045F  0022               	movlb	2	; select bank2
  4491  0460  120C               	bcf	12,4	;volatile
  4492  0461  3200               	nop2	;2 cycle nop
  4493  0462  3200               	nop2	;2 cycle nop
  4494  0463  3200               	nop2	;2 cycle nop
  4495  0464  3200               	nop2	;2 cycle nop
  4496                           
  4497                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4498  0465  3005               	movlw	5
  4499  0466  0020               	movlb	0	; select bank0
  4500  0467  00A4               	movwf	??_LCD_Init
  4501  0468  3026               	movlw	38
  4502  0469                     u4877:	
  4503  0469  0B89               	decfsz	9,f
  4504  046A  2C69               	goto	u4877
  4505  046B  0BA4               	decfsz	??_LCD_Init,f
  4506  046C  2C69               	goto	u4877
  4507  046D  0000               	nop
  4508                           
  4509                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4510  046E  0022               	movlb	2	; select bank2
  4511  046F  160C               	bsf	12,4	;volatile
  4512  0470  3200               	nop2	;2 cycle nop
  4513  0471  3200               	nop2	;2 cycle nop
  4514  0472  3200               	nop2	;2 cycle nop
  4515  0473  3200               	nop2	;2 cycle nop
  4516  0474  0022               	movlb	2	; select bank2
  4517  0475  120C               	bcf	12,4	;volatile
  4518  0476  3200               	nop2	;2 cycle nop
  4519  0477  3200               	nop2	;2 cycle nop
  4520  0478  3200               	nop2	;2 cycle nop
  4521  0479  3200               	nop2	;2 cycle nop
  4522                           
  4523                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4524  047A  3005               	movlw	5
  4525  047B  0020               	movlb	0	; select bank0
  4526  047C  00A4               	movwf	??_LCD_Init
  4527  047D  3026               	movlw	38
  4528  047E                     u4887:	
  4529  047E  0B89               	decfsz	9,f
  4530  047F  2C7E               	goto	u4887
  4531  0480  0BA4               	decfsz	??_LCD_Init,f
  4532  0481  2C7E               	goto	u4887
  4533  0482  0000               	nop
  4534                           
  4535                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4536  0483  3002               	movlw	2
  4537  0484  0020               	movlb	0	; select bank0
  4538  0485  008D               	movwf	13	;volatile
  4539                           
  4540                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4541  0486  0022               	movlb	2	; select bank2
  4542  0487  160C               	bsf	12,4	;volatile
  4543  0488  3200               	nop2	;2 cycle nop
  4544  0489  3200               	nop2	;2 cycle nop
  4545  048A  3200               	nop2	;2 cycle nop
  4546  048B  3200               	nop2	;2 cycle nop
  4547  048C  0022               	movlb	2	; select bank2
  4548  048D  120C               	bcf	12,4	;volatile
  4549  048E  3200               	nop2	;2 cycle nop
  4550  048F  3200               	nop2	;2 cycle nop
  4551  0490  3200               	nop2	;2 cycle nop
  4552  0491  3200               	nop2	;2 cycle nop
  4553                           
  4554                           ;LCD.c: 44: LCD_WriteData(0x28);
  4555  0492  3028               	movlw	40
  4556  0493  3186  2667  3184   	fcall	_LCD_WriteData
  4557                           
  4558                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4559  0496  300C               	movlw	12
  4560  0497  3186  2667  3184   	fcall	_LCD_WriteData
  4561                           
  4562                           ;LCD.c: 46: LCD_DisplayClear();
  4563  049A  318F  274A  3184   	fcall	_LCD_DisplayClear
  4564                           
  4565                           ;LCD.c: 47: LCD_WriteData(0x06);
  4566  049D  3006               	movlw	6
  4567  049E  3186  2667         	fcall	_LCD_WriteData
  4568  04A0  0008               	return
  4569  04A1                     __end_of_LCD_Init:	
  4570                           
  4571                           	psect	text14
  4572  0F4A                     __ptext14:	
  4573 ;; *************** function _LCD_DisplayClear *****************
  4574 ;; Defined at:
  4575 ;;		line 64 in file "LCD.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, pclath, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4589 ;;      Params:         0       0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0
  4591 ;;      Temps:          0       1       0       0       0       0
  4592 ;;      Totals:         0       1       0       0       0       0
  4593 ;;Total ram usage:        1 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		_LCD_WriteData
  4598 ;; This function is called by:
  4599 ;;		_LCD_Init
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _LCD_DisplayClear
  4605  0F4A                     _LCD_DisplayClear:	
  4606                           
  4607                           ;LCD.c: 66: LATA3 = 0;
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4611  0F4A  0022               	movlb	2	; select bank2
  4612  0F4B  118C               	bcf	12,3	;volatile
  4613                           
  4614                           ;LCD.c: 67: LCD_WriteData(0x01);
  4615  0F4C  3001               	movlw	1
  4616  0F4D  3186  2667  318F   	fcall	_LCD_WriteData
  4617                           
  4618                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  4619  0F50  3015               	movlw	21
  4620  0F51  0020               	movlb	0	; select bank0
  4621  0F52  00A3               	movwf	??_LCD_DisplayClear
  4622  0F53  30C6               	movlw	198
  4623  0F54                     u4897:	
  4624  0F54  0B89               	decfsz	9,f
  4625  0F55  2F54               	goto	u4897
  4626  0F56  0BA3               	decfsz	??_LCD_DisplayClear,f
  4627  0F57  2F54               	goto	u4897
  4628  0F58  0000               	nop
  4629  0F59  0008               	return
  4630  0F5A                     __end_of_LCD_DisplayClear:	
  4631                           
  4632                           	psect	text15
  4633  0FCF                     __ptext15:	
  4634 ;; *************** function _LCD_CursorPosition *****************
  4635 ;; Defined at:
  4636 ;;		line 86 in file "LCD.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  tx              1    wreg     unsigned char 
  4639 ;;  ty              1    3[BANK0 ] unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  tx              1    5[BANK0 ] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4651 ;;      Params:         0       1       0       0       0       0
  4652 ;;      Locals:         0       1       0       0       0       0
  4653 ;;      Temps:          0       1       0       0       0       0
  4654 ;;      Totals:         0       3       0       0       0       0
  4655 ;;Total ram usage:        3 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    4
  4658 ;; This function calls:
  4659 ;;		_LCD_WriteData
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _LCD_CursorPosition
  4667  0FCF                     _LCD_CursorPosition:	
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  4671                           ;LCD_CursorPosition@tx stored from wreg
  4672  0FCF  0020               	movlb	0	; select bank0
  4673  0FD0  00A5               	movwf	LCD_CursorPosition@tx
  4674                           
  4675                           ;LCD.c: 88: LATA3 = 0;
  4676  0FD1  0022               	movlb	2	; select bank2
  4677  0FD2  118C               	bcf	12,3	;volatile
  4678                           
  4679                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  4680  0FD3  0020               	movlb	0	; select bank0
  4681  0FD4  0823               	movf	LCD_CursorPosition@ty,w
  4682  0FD5  00A4               	movwf	??_LCD_CursorPosition
  4683  0FD6  3005               	movlw	5
  4684  0FD7                     u4145:	
  4685  0FD7  35A4               	lslf	??_LCD_CursorPosition,f
  4686  0FD8  3EFF               	addlw	-1
  4687  0FD9  1D03               	skipz
  4688  0FDA  2FD7               	goto	u4145
  4689  0FDB  3524               	lslf	??_LCD_CursorPosition,w
  4690  0FDC  0425               	iorwf	LCD_CursorPosition@tx,w
  4691  0FDD  3880               	iorlw	-128
  4692  0FDE  3186  2667  318F   	fcall	_LCD_WriteData
  4693                           
  4694                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  4695  0FE1  306A               	movlw	106
  4696  0FE2                     u4907:	
  4697  0FE2  0B89               	decfsz	9,f
  4698  0FE3  2FE2               	goto	u4907
  4699  0FE4  3200               	nop2
  4700  0FE5  0008               	return
  4701  0FE6                     __end_of_LCD_CursorPosition:	
  4702                           
  4703                           	psect	text16
  4704  0667                     __ptext16:	
  4705 ;; *************** function _LCD_WriteData *****************
  4706 ;; Defined at:
  4707 ;;		line 15 in file "LCD.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  point           1    wreg     char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  point           1    2[BANK0 ] char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4721 ;;      Params:         0       0       0       0       0       0
  4722 ;;      Locals:         0       1       0       0       0       0
  4723 ;;      Temps:          0       2       0       0       0       0
  4724 ;;      Totals:         0       3       0       0       0       0
  4725 ;;Total ram usage:        3 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    3
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_LCD_Init
  4732 ;;		_LCD_Put
  4733 ;;		_LCD_DisplayClear
  4734 ;;		_LCD_CursorPosition
  4735 ;;		_LCD_CursorHome
  4736 ;;		_LCD_CursorShift
  4737 ;;		_LCD_DispShift
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _LCD_WriteData
  4743  0667                     _LCD_WriteData:	
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4747                           ;LCD_WriteData@point stored from wreg
  4748  0667  0020               	movlb	0	; select bank0
  4749  0668  00A2               	movwf	LCD_WriteData@point
  4750                           
  4751                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4752  0669  30D5               	movlw	213
  4753  066A                     u4917:	
  4754  066A  0B89               	decfsz	9,f
  4755  066B  2E6A               	goto	u4917
  4756  066C  0000               	nop
  4757                           
  4758                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4759  066D  0020               	movlb	0	; select bank0
  4760  066E  0822               	movf	LCD_WriteData@point,w
  4761  066F  00A0               	movwf	??_LCD_WriteData
  4762  0670  3004               	movlw	4
  4763  0671                     u3355:	
  4764  0671  1003               	clrc
  4765  0672  1BA0               	btfsc	??_LCD_WriteData,7
  4766  0673  1403               	setc
  4767  0674  0CA0               	rrf	??_LCD_WriteData,f
  4768  0675  0B89               	decfsz	9,f
  4769  0676  2E71               	goto	u3355
  4770  0677  3003               	movlw	3
  4771  0678  0520               	andwf	??_LCD_WriteData,w
  4772  0679  00A1               	movwf	??_LCD_WriteData+1
  4773  067A  0E22               	swapf	LCD_WriteData@point,w
  4774  067B  390F               	andlw	15
  4775  067C  1989               	btfsc	9,3
  4776  067D  38F0               	iorlw	240
  4777  067E  390C               	andlw	12
  4778  067F  0709               	addwf	9,w
  4779  0680  0421               	iorwf	??_LCD_WriteData+1,w
  4780  0681  008D               	movwf	13	;volatile
  4781                           
  4782                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4783  0682  0022               	movlb	2	; select bank2
  4784  0683  160C               	bsf	12,4	;volatile
  4785  0684  3200               	nop2	;2 cycle nop
  4786  0685  3200               	nop2	;2 cycle nop
  4787  0686  3200               	nop2	;2 cycle nop
  4788  0687  3200               	nop2	;2 cycle nop
  4789  0688  0022               	movlb	2	; select bank2
  4790  0689  120C               	bcf	12,4	;volatile
  4791  068A  3200               	nop2	;2 cycle nop
  4792  068B  3200               	nop2	;2 cycle nop
  4793  068C  3200               	nop2	;2 cycle nop
  4794  068D  3200               	nop2	;2 cycle nop
  4795                           
  4796                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4797  068E  3003               	movlw	3
  4798  068F  0020               	movlb	0	; select bank0
  4799  0690  0522               	andwf	LCD_WriteData@point,w
  4800  0691  00A0               	movwf	??_LCD_WriteData
  4801  0692  0822               	movf	LCD_WriteData@point,w
  4802  0693  390C               	andlw	12
  4803  0694  0709               	addwf	9,w
  4804  0695  0420               	iorwf	??_LCD_WriteData,w
  4805  0696  008D               	movwf	13	;volatile
  4806                           
  4807                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4808  0697  0022               	movlb	2	; select bank2
  4809  0698  160C               	bsf	12,4	;volatile
  4810  0699  3200               	nop2	;2 cycle nop
  4811  069A  3200               	nop2	;2 cycle nop
  4812  069B  3200               	nop2	;2 cycle nop
  4813  069C  3200               	nop2	;2 cycle nop
  4814  069D  0022               	movlb	2	; select bank2
  4815  069E  120C               	bcf	12,4	;volatile
  4816  069F  3200               	nop2	;2 cycle nop
  4817  06A0  3200               	nop2	;2 cycle nop
  4818  06A1  3200               	nop2	;2 cycle nop
  4819  06A2  3200               	nop2	;2 cycle nop
  4820  06A3  0008               	return
  4821  06A4                     __end_of_LCD_WriteData:	
  4822                           
  4823                           	psect	text17
  4824  079E                     __ptext17:	
  4825 ;; *************** function _DAC_Initialize *****************
  4826 ;; Defined at:
  4827 ;;		line 14 in file "MCP4726.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4841 ;;      Params:         0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0
  4843 ;;      Temps:          0       2       0       0       0       0
  4844 ;;      Totals:         0       2       0       0       0       0
  4845 ;;Total ram usage:        2 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    6
  4848 ;; This function calls:
  4849 ;;		_I2C_Init
  4850 ;;		_I2C_Transmit
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _DAC_Initialize
  4858  079E                     _DAC_Initialize:	
  4859                           
  4860                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4864  079E  0020               	movlb	0	; select bank0
  4865  079F  01A5               	clrf	I2C_Init@address
  4866  07A0  01A6               	clrf	I2C_Init@mode
  4867  07A1  01A7               	clrf	I2C_Init@Speed
  4868  07A2  3001               	movlw	1
  4869  07A3  3187  2727  3187   	fcall	_I2C_Init
  4870                           
  4871                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4872  07A6  0020               	movlb	0	; select bank0
  4873  07A7  086B               	movf	_ConfigReg,w
  4874  07A8  391F               	andlw	-225
  4875  07A9  3880               	iorlw	128
  4876  07AA  00EB               	movwf	_ConfigReg
  4877                           
  4878                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4879  07AB  106B               	bcf	_ConfigReg,0
  4880                           
  4881                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4882  07AC  30F9               	movlw	-7
  4883  07AD  05EB               	andwf	_ConfigReg,f
  4884                           
  4885                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4886  07AE  30E7               	movlw	-25
  4887  07AF  05EB               	andwf	_ConfigReg,f
  4888                           
  4889                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4890  07B0  3060               	movlw	96
  4891  07B1  00B0               	movwf	??_DAC_Initialize
  4892  07B2  0830               	movf	??_DAC_Initialize,w
  4893  07B3  00A8               	movwf	I2C_Transmit@address
  4894  07B4  306B               	movlw	(low (_ConfigReg| 0))& (0+255)
  4895  07B5  00B1               	movwf	??_DAC_Initialize+1
  4896  07B6  0831               	movf	??_DAC_Initialize+1,w
  4897  07B7  00A9               	movwf	I2C_Transmit@pData
  4898  07B8  01AA               	clrf	I2C_Transmit@size
  4899  07B9  0AAA               	incf	I2C_Transmit@size,f
  4900  07BA  3001               	movlw	1
  4901  07BB  3186  26FC         	fcall	_I2C_Transmit
  4902  07BD  0008               	return
  4903  07BE                     __end_of_DAC_Initialize:	
  4904                           
  4905                           	psect	text18
  4906  06FC                     __ptext18:	
  4907 ;; *************** function _I2C_Transmit *****************
  4908 ;; Defined at:
  4909 ;;		line 23 in file "I2C_Common.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  I2Cx            1    wreg     enum E3066
  4912 ;;  address         1    8[BANK0 ] unsigned char 
  4913 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  4914 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4915 ;;  size            1   10[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  I2Cx            1   14[BANK0 ] enum E3066
  4918 ;;  result          1   15[BANK0 ] char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      char 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4928 ;;      Params:         0       3       0       0       0       0
  4929 ;;      Locals:         0       2       0       0       0       0
  4930 ;;      Temps:          0       3       0       0       0       0
  4931 ;;      Totals:         0       8       0       0       0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    4
  4935 ;; This function calls:
  4936 ;;		_I2C1_Transmit
  4937 ;;		_I2C2_Transmit
  4938 ;; This function is called by:
  4939 ;;		_DAC_Initialize
  4940 ;;		_DAC_WriteVoltage
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _I2C_Transmit
  4946  06FC                     _I2C_Transmit:	
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4950                           ;I2C_Transmit@I2Cx stored from wreg
  4951  06FC  0020               	movlb	0	; select bank0
  4952  06FD  00AE               	movwf	I2C_Transmit@I2Cx
  4953                           
  4954                           ;I2C_Common.c: 25: int8_t result;
  4955                           ;I2C_Common.c: 27: switch(I2Cx)
  4956  06FE  2F1D               	goto	l3900
  4957  06FF                     l3894:	
  4958                           ;I2C_Common.c: 28: {
  4959                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4960                           
  4961                           
  4962                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4963  06FF  0829               	movf	I2C_Transmit@pData,w
  4964  0700  00AB               	movwf	??_I2C_Transmit
  4965  0701  082B               	movf	??_I2C_Transmit,w
  4966  0702  00A0               	movwf	I2C1_Transmit@pData
  4967  0703  082A               	movf	I2C_Transmit@size,w
  4968  0704  00AC               	movwf	??_I2C_Transmit+1
  4969  0705  082C               	movf	??_I2C_Transmit+1,w
  4970  0706  00A1               	movwf	I2C1_Transmit@size
  4971  0707  0828               	movf	I2C_Transmit@address,w
  4972  0708  3183  230B  3186   	fcall	_I2C1_Transmit
  4973  070B  2F18               	goto	L8
  4974  070C                     l3896:	
  4975                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4976                           
  4977                           ;I2C_Common.c: 31: break;
  4978                           
  4979                           
  4980                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4981  070C  0829               	movf	I2C_Transmit@pData,w
  4982  070D  00AB               	movwf	??_I2C_Transmit
  4983  070E  082B               	movf	??_I2C_Transmit,w
  4984  070F  00A0               	movwf	I2C2_Transmit@pData
  4985  0710  082A               	movf	I2C_Transmit@size,w
  4986  0711  00AC               	movwf	??_I2C_Transmit+1
  4987  0712  082C               	movf	??_I2C_Transmit+1,w
  4988  0713  00A1               	movwf	I2C2_Transmit@size
  4989  0714  0828               	movf	I2C_Transmit@address,w
  4990  0715  3182  2273  3186   	fcall	_I2C2_Transmit
  4991  0718                     L8:	
  4992  0718  0020               	movlb	0	; select bank0
  4993  0719  00AD               	movwf	??_I2C_Transmit+2
  4994  071A  082D               	movf	??_I2C_Transmit+2,w
  4995  071B  00AF               	movwf	I2C_Transmit@result
  4996                           
  4997                           ;I2C_Common.c: 36: }
  4998                           
  4999                           ;I2C_Common.c: 35: break;
  5000  071C  2F25               	goto	l3902
  5001  071D                     l3900:	
  5002  071D  082E               	movf	I2C_Transmit@I2Cx,w
  5003                           
  5004                           ; Switch size 1, requested type "space"
  5005                           ; Number of cases is 2, Range of values is 0 to 1
  5006                           ; switch strategies available:
  5007                           ; Name         Instructions Cycles
  5008                           ; simple_byte            7     4 (average)
  5009                           ; direct_byte           10     6 (fixed)
  5010                           ; jumptable            260     6 (fixed)
  5011                           ;	Chosen strategy is simple_byte
  5012  071E  3A00               	xorlw	0	; case 0
  5013  071F  1903               	skipnz
  5014  0720  2EFF               	goto	l3894
  5015  0721  3A01               	xorlw	1	; case 1
  5016  0722  1903               	skipnz
  5017  0723  2F0C               	goto	l3896
  5018  0724  2F25               	goto	l3902
  5019  0725                     l3902:	
  5020                           
  5021                           ;I2C_Common.c: 37: return result;
  5022  0725  082F               	movf	I2C_Transmit@result,w
  5023  0726  0008               	return
  5024  0727                     __end_of_I2C_Transmit:	
  5025                           
  5026                           	psect	text19
  5027  0273                     __ptext19:	
  5028 ;; *************** function _I2C2_Transmit *****************
  5029 ;; Defined at:
  5030 ;;		line 52 in file "I2C2.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  address         1    wreg     unsigned char 
  5033 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5034 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5035 ;;  size            1    1[BANK0 ] unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  address         1    4[BANK0 ] unsigned char 
  5038 ;;  i               1    6[BANK0 ] unsigned char 
  5039 ;;  i               1    5[BANK0 ] unsigned char 
  5040 ;;  result          1    7[BANK0 ] char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      char 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5050 ;;      Params:         0       2       0       0       0       0
  5051 ;;      Locals:         0       4       0       0       0       0
  5052 ;;      Temps:          0       2       0       0       0       0
  5053 ;;      Totals:         0       8       0       0       0       0
  5054 ;;Total ram usage:        8 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    3
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_I2C_Transmit
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _I2C2_Transmit
  5066  0273                     _I2C2_Transmit:	
  5067                           
  5068                           ;incstack = 0
  5069                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5070                           ;I2C2_Transmit@address stored from wreg
  5071  0273  0020               	movlb	0	; select bank0
  5072  0274  00A4               	movwf	I2C2_Transmit@address
  5073                           
  5074                           ;I2C2.c: 54: int8_t result = 0;
  5075  0275  01A7               	clrf	I2C2_Transmit@result
  5076                           
  5077                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5078  0276  2AFF               	goto	l3810
  5079  0277                     l3766:	
  5080                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5081                           
  5082                           ;I2C2.c: 57: {
  5083                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5084                           
  5085  0277  3005               	movlw	5
  5086  0278  0024               	movlb	4	; select bank4
  5087  0279  051C               	andwf	28,w	;volatile
  5088  027A  0020               	movlb	0	; select bank0
  5089  027B  00A2               	movwf	??_I2C2_Transmit
  5090  027C  0024               	movlb	4	; select bank4
  5091  027D  081E               	movf	30,w	;volatile
  5092  027E  391F               	andlw	31
  5093  027F  0020               	movlb	0	; select bank0
  5094  0280  0422               	iorwf	??_I2C2_Transmit,w
  5095  0281  1D03               	btfss	3,2
  5096  0282  2A77               	goto	l3766
  5097                           
  5098                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5099  0283  0024               	movlb	4	; select bank4
  5100  0284  141E               	bsf	30,0	;volatile
  5101  0285                     l3768:	
  5102                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5103                           
  5104  0285  3005               	movlw	5
  5105  0286  0024               	movlb	4	; select bank4
  5106  0287  051C               	andwf	28,w	;volatile
  5107  0288  0020               	movlb	0	; select bank0
  5108  0289  00A2               	movwf	??_I2C2_Transmit
  5109  028A  0024               	movlb	4	; select bank4
  5110  028B  081E               	movf	30,w	;volatile
  5111  028C  391F               	andlw	31
  5112  028D  0020               	movlb	0	; select bank0
  5113  028E  0422               	iorwf	??_I2C2_Transmit,w
  5114  028F  1D03               	btfss	3,2
  5115  0290  2A85               	goto	l3768
  5116                           
  5117                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5118  0291  3524               	lslf	I2C2_Transmit@address,w
  5119  0292  0024               	movlb	4	; select bank4
  5120  0293  0099               	movwf	25	;volatile
  5121  0294                     l228:	
  5122                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5123                           
  5124  0294  191C               	btfsc	28,2	;volatile
  5125  0295  2A94               	goto	l228
  5126                           
  5127                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5128  0296  3000               	movlw	0
  5129  0297  1B1E               	btfsc	30,6	;volatile
  5130  0298  3001               	movlw	1
  5131  0299  0020               	movlb	0	; select bank0
  5132  029A  00A7               	movwf	I2C2_Transmit@result
  5133                           
  5134                           ;I2C2.c: 67: if (!result)
  5135  029B  0827               	movf	I2C2_Transmit@result,w
  5136  029C  1D03               	btfss	3,2
  5137  029D  2ACB               	goto	l3792
  5138                           
  5139                           ;I2C2.c: 68: {
  5140                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5141  029E  01A5               	clrf	I2C2_Transmit@i
  5142  029F  2AA4               	goto	l3790
  5143  02A0                     l3788:	
  5144                           ;I2C2.c: 79: break;
  5145                           
  5146  02A0  3001               	movlw	1
  5147  02A1  00A2               	movwf	??_I2C2_Transmit
  5148  02A2  0822               	movf	??_I2C2_Transmit,w
  5149  02A3  07A5               	addwf	I2C2_Transmit@i,f
  5150  02A4                     l3790:	
  5151  02A4  0821               	movf	I2C2_Transmit@size,w
  5152  02A5  0225               	subwf	I2C2_Transmit@i,w
  5153  02A6  1803               	btfsc	3,0
  5154  02A7  2ACB               	goto	l3792
  5155  02A8                     l3778:	
  5156                           ;I2C2.c: 70: {
  5157                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5158                           
  5159  02A8  3005               	movlw	5
  5160  02A9  0024               	movlb	4	; select bank4
  5161  02AA  051C               	andwf	28,w	;volatile
  5162  02AB  0020               	movlb	0	; select bank0
  5163  02AC  00A2               	movwf	??_I2C2_Transmit
  5164  02AD  0024               	movlb	4	; select bank4
  5165  02AE  081E               	movf	30,w	;volatile
  5166  02AF  391F               	andlw	31
  5167  02B0  0020               	movlb	0	; select bank0
  5168  02B1  0422               	iorwf	??_I2C2_Transmit,w
  5169  02B2  1D03               	btfss	3,2
  5170  02B3  2AA8               	goto	l3778
  5171                           
  5172                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5173  02B4  0825               	movf	I2C2_Transmit@i,w
  5174  02B5  0720               	addwf	I2C2_Transmit@pData,w
  5175  02B6  00A2               	movwf	??_I2C2_Transmit
  5176  02B7  0822               	movf	??_I2C2_Transmit,w
  5177  02B8  0086               	movwf	6
  5178  02B9  0187               	clrf	7
  5179  02BA  0801               	movf	1,w
  5180  02BB  0024               	movlb	4	; select bank4
  5181  02BC  0099               	movwf	25	;volatile
  5182  02BD                     l237:	
  5183                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5184                           
  5185  02BD  191C               	btfsc	28,2	;volatile
  5186  02BE  2ABD               	goto	l237
  5187                           
  5188                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5189  02BF  3000               	movlw	0
  5190  02C0  1B1E               	btfsc	30,6	;volatile
  5191  02C1  3001               	movlw	1
  5192  02C2  0020               	movlb	0	; select bank0
  5193  02C3  00A7               	movwf	I2C2_Transmit@result
  5194                           
  5195                           ;I2C2.c: 76: if (result)
  5196  02C4  0827               	movf	I2C2_Transmit@result,w
  5197  02C5  1903               	btfsc	3,2
  5198  02C6  2AA0               	goto	l3788
  5199                           
  5200                           ;I2C2.c: 77: {
  5201                           ;I2C2.c: 78: result = 2;
  5202  02C7  3002               	movlw	2
  5203  02C8  00A2               	movwf	??_I2C2_Transmit
  5204  02C9  0822               	movf	??_I2C2_Transmit,w
  5205  02CA  00A7               	movwf	I2C2_Transmit@result
  5206  02CB                     l3792:	
  5207                           ;I2C2.c: 80: }
  5208                           ;I2C2.c: 81: }
  5209                           ;I2C2.c: 82: }
  5210                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5211                           
  5212  02CB  3005               	movlw	5
  5213  02CC  0024               	movlb	4	; select bank4
  5214  02CD  051C               	andwf	28,w	;volatile
  5215  02CE  0020               	movlb	0	; select bank0
  5216  02CF  00A2               	movwf	??_I2C2_Transmit
  5217  02D0  0024               	movlb	4	; select bank4
  5218  02D1  081E               	movf	30,w	;volatile
  5219  02D2  391F               	andlw	31
  5220  02D3  0020               	movlb	0	; select bank0
  5221  02D4  0422               	iorwf	??_I2C2_Transmit,w
  5222  02D5  1D03               	btfss	3,2
  5223  02D6  2ACB               	goto	l3792
  5224                           
  5225                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5226  02D7  0024               	movlb	4	; select bank4
  5227  02D8  151E               	bsf	30,2	;volatile
  5228                           
  5229                           ;I2C2.c: 86: break;
  5230  02D9  2B08               	goto	l3812
  5231  02DA                     l246:	
  5232                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5233                           
  5234                           
  5235                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5236  02DA  0024               	movlb	4	; select bank4
  5237  02DB  1D9C               	btfss	28,3	;volatile
  5238  02DC  1E1C               	btfss	28,4	;volatile
  5239  02DD  2AFC               	goto	l3806
  5240                           
  5241                           ;I2C2.c: 90: {
  5242                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5243  02DE  0020               	movlb	0	; select bank0
  5244  02DF  01A6               	clrf	I2C2_Transmit@i_316
  5245  02E0                     l3802:	
  5246  02E0  0821               	movf	I2C2_Transmit@size,w
  5247  02E1  0226               	subwf	I2C2_Transmit@i_316,w
  5248  02E2  1803               	btfsc	3,0
  5249  02E3  2AF7               	goto	l3804
  5250                           
  5251                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5252  02E4  0826               	movf	I2C2_Transmit@i_316,w
  5253  02E5  0720               	addwf	I2C2_Transmit@pData,w
  5254  02E6  00A2               	movwf	??_I2C2_Transmit
  5255  02E7  0822               	movf	??_I2C2_Transmit,w
  5256  02E8  0086               	movwf	6
  5257  02E9  0187               	clrf	7
  5258  02EA  0801               	movf	1,w
  5259  02EB  00A3               	movwf	??_I2C2_Transmit+1
  5260  02EC  0826               	movf	I2C2_Transmit@i_316,w
  5261  02ED  3EAB               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5262  02EE  0086               	movwf	6
  5263  02EF  0187               	clrf	7
  5264  02F0  0823               	movf	??_I2C2_Transmit+1,w
  5265  02F1  0081               	movwf	1
  5266  02F2  3001               	movlw	1
  5267  02F3  00A2               	movwf	??_I2C2_Transmit
  5268  02F4  0822               	movf	??_I2C2_Transmit,w
  5269  02F5  07A6               	addwf	I2C2_Transmit@i_316,f
  5270  02F6  2AE0               	goto	l3802
  5271  02F7                     l3804:	
  5272                           
  5273                           ;I2C2.c: 93: result = size;
  5274  02F7  0821               	movf	I2C2_Transmit@size,w
  5275  02F8  00A2               	movwf	??_I2C2_Transmit
  5276  02F9  0822               	movf	??_I2C2_Transmit,w
  5277  02FA  00A7               	movwf	I2C2_Transmit@result
  5278                           
  5279                           ;I2C2.c: 94: }
  5280  02FB  2B08               	goto	l3812
  5281  02FC                     l3806:	
  5282                           
  5283                           ;I2C2.c: 95: else
  5284                           ;I2C2.c: 96: result = 0;
  5285  02FC  0020               	movlb	0	; select bank0
  5286  02FD  01A7               	clrf	I2C2_Transmit@result
  5287                           
  5288                           ;I2C2.c: 98: }
  5289                           
  5290                           ;I2C2.c: 97: break;
  5291  02FE  2B08               	goto	l3812
  5292  02FF                     l3810:	
  5293  02FF  0021               	movlb	1	; select bank1
  5294  0300  083D               	movf	(_I2C2_Config^(0+128)+18),w
  5295                           
  5296                           ; Switch size 1, requested type "space"
  5297                           ; Number of cases is 2, Range of values is 0 to 1
  5298                           ; switch strategies available:
  5299                           ; Name         Instructions Cycles
  5300                           ; simple_byte            7     4 (average)
  5301                           ; direct_byte           10     6 (fixed)
  5302                           ; jumptable            260     6 (fixed)
  5303                           ;	Chosen strategy is simple_byte
  5304  0301  3A00               	xorlw	0	; case 0
  5305  0302  1903               	skipnz
  5306  0303  2A77               	goto	l3766
  5307  0304  3A01               	xorlw	1	; case 1
  5308  0305  1903               	skipnz
  5309  0306  2ADA               	goto	l246
  5310  0307  2B08               	goto	l3812
  5311  0308                     l3812:	
  5312                           
  5313                           ;I2C2.c: 100: return result;
  5314  0308  0020               	movlb	0	; select bank0
  5315  0309  0827               	movf	I2C2_Transmit@result,w
  5316  030A  0008               	return
  5317  030B                     __end_of_I2C2_Transmit:	
  5318                           
  5319                           	psect	text20
  5320  030B                     __ptext20:	
  5321 ;; *************** function _I2C1_Transmit *****************
  5322 ;; Defined at:
  5323 ;;		line 52 in file "I2C1.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  address         1    wreg     unsigned char 
  5326 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5327 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5328 ;;  size            1    1[BANK0 ] unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  address         1    4[BANK0 ] unsigned char 
  5331 ;;  i               1    6[BANK0 ] unsigned char 
  5332 ;;  i               1    5[BANK0 ] unsigned char 
  5333 ;;  result          1    7[BANK0 ] char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      char 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5343 ;;      Params:         0       2       0       0       0       0
  5344 ;;      Locals:         0       4       0       0       0       0
  5345 ;;      Temps:          0       2       0       0       0       0
  5346 ;;      Totals:         0       8       0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    3
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_I2C_Transmit
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _I2C1_Transmit
  5359  030B                     _I2C1_Transmit:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5363                           ;I2C1_Transmit@address stored from wreg
  5364  030B  0020               	movlb	0	; select bank0
  5365  030C  00A4               	movwf	I2C1_Transmit@address
  5366                           
  5367                           ;I2C1.c: 54: int8_t result;
  5368                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5369  030D  2B96               	goto	l3724
  5370  030E                     l3680:	
  5371                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5372                           
  5373                           ;I2C1.c: 57: {
  5374                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5375                           
  5376  030E  3005               	movlw	5
  5377  030F  0024               	movlb	4	; select bank4
  5378  0310  0514               	andwf	20,w	;volatile
  5379  0311  0020               	movlb	0	; select bank0
  5380  0312  00A2               	movwf	??_I2C1_Transmit
  5381  0313  0024               	movlb	4	; select bank4
  5382  0314  0816               	movf	22,w	;volatile
  5383  0315  391F               	andlw	31
  5384  0316  0020               	movlb	0	; select bank0
  5385  0317  0422               	iorwf	??_I2C1_Transmit,w
  5386  0318  1D03               	btfss	3,2
  5387  0319  2B0E               	goto	l3680
  5388                           
  5389                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5390  031A  0024               	movlb	4	; select bank4
  5391  031B  1416               	bsf	22,0	;volatile
  5392  031C                     l3682:	
  5393                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5394                           
  5395  031C  3005               	movlw	5
  5396  031D  0024               	movlb	4	; select bank4
  5397  031E  0514               	andwf	20,w	;volatile
  5398  031F  0020               	movlb	0	; select bank0
  5399  0320  00A2               	movwf	??_I2C1_Transmit
  5400  0321  0024               	movlb	4	; select bank4
  5401  0322  0816               	movf	22,w	;volatile
  5402  0323  391F               	andlw	31
  5403  0324  0020               	movlb	0	; select bank0
  5404  0325  0422               	iorwf	??_I2C1_Transmit,w
  5405  0326  1D03               	btfss	3,2
  5406  0327  2B1C               	goto	l3682
  5407                           
  5408                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5409  0328  3524               	lslf	I2C1_Transmit@address,w
  5410  0329  0024               	movlb	4	; select bank4
  5411  032A  0091               	movwf	17	;volatile
  5412  032B                     l91:	
  5413                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5414                           
  5415  032B  1914               	btfsc	20,2	;volatile
  5416  032C  2B2B               	goto	l91
  5417                           
  5418                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5419  032D  3000               	movlw	0
  5420  032E  1B16               	btfsc	22,6	;volatile
  5421  032F  3001               	movlw	1
  5422  0330  0020               	movlb	0	; select bank0
  5423  0331  00A7               	movwf	I2C1_Transmit@result
  5424                           
  5425                           ;I2C1.c: 67: if (!result)
  5426  0332  0827               	movf	I2C1_Transmit@result,w
  5427  0333  1D03               	btfss	3,2
  5428  0334  2B62               	goto	l3706
  5429                           
  5430                           ;I2C1.c: 68: {
  5431                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5432  0335  01A5               	clrf	I2C1_Transmit@i
  5433  0336  2B3B               	goto	l3704
  5434  0337                     l3702:	
  5435                           ;I2C1.c: 79: break;
  5436                           
  5437  0337  3001               	movlw	1
  5438  0338  00A2               	movwf	??_I2C1_Transmit
  5439  0339  0822               	movf	??_I2C1_Transmit,w
  5440  033A  07A5               	addwf	I2C1_Transmit@i,f
  5441  033B                     l3704:	
  5442  033B  0821               	movf	I2C1_Transmit@size,w
  5443  033C  0225               	subwf	I2C1_Transmit@i,w
  5444  033D  1803               	btfsc	3,0
  5445  033E  2B62               	goto	l3706
  5446  033F                     l3692:	
  5447                           ;I2C1.c: 70: {
  5448                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5449                           
  5450  033F  3005               	movlw	5
  5451  0340  0024               	movlb	4	; select bank4
  5452  0341  0514               	andwf	20,w	;volatile
  5453  0342  0020               	movlb	0	; select bank0
  5454  0343  00A2               	movwf	??_I2C1_Transmit
  5455  0344  0024               	movlb	4	; select bank4
  5456  0345  0816               	movf	22,w	;volatile
  5457  0346  391F               	andlw	31
  5458  0347  0020               	movlb	0	; select bank0
  5459  0348  0422               	iorwf	??_I2C1_Transmit,w
  5460  0349  1D03               	btfss	3,2
  5461  034A  2B3F               	goto	l3692
  5462                           
  5463                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5464  034B  0825               	movf	I2C1_Transmit@i,w
  5465  034C  0720               	addwf	I2C1_Transmit@pData,w
  5466  034D  00A2               	movwf	??_I2C1_Transmit
  5467  034E  0822               	movf	??_I2C1_Transmit,w
  5468  034F  0086               	movwf	6
  5469  0350  0187               	clrf	7
  5470  0351  0801               	movf	1,w
  5471  0352  0024               	movlb	4	; select bank4
  5472  0353  0091               	movwf	17	;volatile
  5473  0354                     l100:	
  5474                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5475                           
  5476  0354  1914               	btfsc	20,2	;volatile
  5477  0355  2B54               	goto	l100
  5478                           
  5479                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5480  0356  3000               	movlw	0
  5481  0357  1B16               	btfsc	22,6	;volatile
  5482  0358  3001               	movlw	1
  5483  0359  0020               	movlb	0	; select bank0
  5484  035A  00A7               	movwf	I2C1_Transmit@result
  5485                           
  5486                           ;I2C1.c: 76: if (result)
  5487  035B  0827               	movf	I2C1_Transmit@result,w
  5488  035C  1903               	btfsc	3,2
  5489  035D  2B37               	goto	l3702
  5490                           
  5491                           ;I2C1.c: 77: {
  5492                           ;I2C1.c: 78: result = 2;
  5493  035E  3002               	movlw	2
  5494  035F  00A2               	movwf	??_I2C1_Transmit
  5495  0360  0822               	movf	??_I2C1_Transmit,w
  5496  0361  00A7               	movwf	I2C1_Transmit@result
  5497  0362                     l3706:	
  5498                           ;I2C1.c: 80: }
  5499                           ;I2C1.c: 81: }
  5500                           ;I2C1.c: 82: }
  5501                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5502                           
  5503  0362  3005               	movlw	5
  5504  0363  0024               	movlb	4	; select bank4
  5505  0364  0514               	andwf	20,w	;volatile
  5506  0365  0020               	movlb	0	; select bank0
  5507  0366  00A2               	movwf	??_I2C1_Transmit
  5508  0367  0024               	movlb	4	; select bank4
  5509  0368  0816               	movf	22,w	;volatile
  5510  0369  391F               	andlw	31
  5511  036A  0020               	movlb	0	; select bank0
  5512  036B  0422               	iorwf	??_I2C1_Transmit,w
  5513  036C  1D03               	btfss	3,2
  5514  036D  2B62               	goto	l3706
  5515                           
  5516                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5517  036E  0024               	movlb	4	; select bank4
  5518  036F  1516               	bsf	22,2	;volatile
  5519                           
  5520                           ;I2C1.c: 86: break;
  5521  0370  2B9F               	goto	l3726
  5522  0371                     l109:	
  5523                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5524                           
  5525                           
  5526                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5527  0371  0024               	movlb	4	; select bank4
  5528  0372  1D94               	btfss	20,3	;volatile
  5529  0373  1E14               	btfss	20,4	;volatile
  5530  0374  2B93               	goto	l3720
  5531                           
  5532                           ;I2C1.c: 90: {
  5533                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5534  0375  0020               	movlb	0	; select bank0
  5535  0376  01A6               	clrf	I2C1_Transmit@i_172
  5536  0377                     l3716:	
  5537  0377  0821               	movf	I2C1_Transmit@size,w
  5538  0378  0226               	subwf	I2C1_Transmit@i_172,w
  5539  0379  1803               	btfsc	3,0
  5540  037A  2B8E               	goto	l3718
  5541                           
  5542                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5543  037B  0826               	movf	I2C1_Transmit@i_172,w
  5544  037C  0720               	addwf	I2C1_Transmit@pData,w
  5545  037D  00A2               	movwf	??_I2C1_Transmit
  5546  037E  0822               	movf	??_I2C1_Transmit,w
  5547  037F  0086               	movwf	6
  5548  0380  0187               	clrf	7
  5549  0381  0801               	movf	1,w
  5550  0382  00A3               	movwf	??_I2C1_Transmit+1
  5551  0383  0826               	movf	I2C1_Transmit@i_172,w
  5552  0384  3EBE               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5553  0385  0086               	movwf	6
  5554  0386  0187               	clrf	7
  5555  0387  0823               	movf	??_I2C1_Transmit+1,w
  5556  0388  0081               	movwf	1
  5557  0389  3001               	movlw	1
  5558  038A  00A2               	movwf	??_I2C1_Transmit
  5559  038B  0822               	movf	??_I2C1_Transmit,w
  5560  038C  07A6               	addwf	I2C1_Transmit@i_172,f
  5561  038D  2B77               	goto	l3716
  5562  038E                     l3718:	
  5563                           
  5564                           ;I2C1.c: 93: result = size;
  5565  038E  0821               	movf	I2C1_Transmit@size,w
  5566  038F  00A2               	movwf	??_I2C1_Transmit
  5567  0390  0822               	movf	??_I2C1_Transmit,w
  5568  0391  00A7               	movwf	I2C1_Transmit@result
  5569                           
  5570                           ;I2C1.c: 94: }
  5571  0392  2B9F               	goto	l3726
  5572  0393                     l3720:	
  5573                           
  5574                           ;I2C1.c: 95: else
  5575                           ;I2C1.c: 96: result = 0;
  5576  0393  0020               	movlb	0	; select bank0
  5577  0394  01A7               	clrf	I2C1_Transmit@result
  5578                           
  5579                           ;I2C1.c: 98: }
  5580                           
  5581                           ;I2C1.c: 97: break;
  5582  0395  2B9F               	goto	l3726
  5583  0396                     l3724:	
  5584  0396  0021               	movlb	1	; select bank1
  5585  0397  0850               	movf	(_I2C1_Config^(0+128)+18),w
  5586                           
  5587                           ; Switch size 1, requested type "space"
  5588                           ; Number of cases is 2, Range of values is 0 to 1
  5589                           ; switch strategies available:
  5590                           ; Name         Instructions Cycles
  5591                           ; simple_byte            7     4 (average)
  5592                           ; direct_byte           10     6 (fixed)
  5593                           ; jumptable            260     6 (fixed)
  5594                           ;	Chosen strategy is simple_byte
  5595  0398  3A00               	xorlw	0	; case 0
  5596  0399  1903               	skipnz
  5597  039A  2B0E               	goto	l3680
  5598  039B  3A01               	xorlw	1	; case 1
  5599  039C  1903               	skipnz
  5600  039D  2B71               	goto	l109
  5601  039E  2B9F               	goto	l3726
  5602  039F                     l3726:	
  5603                           
  5604                           ;I2C1.c: 100: return result;
  5605  039F  0020               	movlb	0	; select bank0
  5606  03A0  0827               	movf	I2C1_Transmit@result,w
  5607  03A1  0008               	return
  5608  03A2                     __end_of_I2C1_Transmit:	
  5609                           
  5610                           	psect	text21
  5611  0727                     __ptext21:	
  5612 ;; *************** function _I2C_Init *****************
  5613 ;; Defined at:
  5614 ;;		line 6 in file "I2C_Common.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  I2Cx            1    wreg     enum E3066
  5617 ;;  address         1    5[BANK0 ] unsigned char 
  5618 ;;  mode            1    6[BANK0 ] enum E3057
  5619 ;;  Speed           1    7[BANK0 ] enum E3061
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  I2Cx            1   10[BANK0 ] enum E3066
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5631 ;;      Params:         0       3       0       0       0       0
  5632 ;;      Locals:         0       1       0       0       0       0
  5633 ;;      Temps:          0       2       0       0       0       0
  5634 ;;      Totals:         0       6       0       0       0       0
  5635 ;;Total ram usage:        6 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		_I2C1_Setting
  5640 ;;		_I2C2_Setting
  5641 ;; This function is called by:
  5642 ;;		_DAC_Initialize
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _I2C_Init
  5648  0727                     _I2C_Init:	
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5652                           ;I2C_Init@I2Cx stored from wreg
  5653  0727  0020               	movlb	0	; select bank0
  5654  0728  00AA               	movwf	I2C_Init@I2Cx
  5655                           
  5656                           ;I2C_Common.c: 8: switch(I2Cx)
  5657  0729  2F45               	goto	l3890
  5658  072A                     l3884:	
  5659                           ;I2C_Common.c: 9: {
  5660                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5661                           
  5662                           
  5663                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5664  072A  0826               	movf	I2C_Init@mode,w
  5665  072B  00A8               	movwf	??_I2C_Init
  5666  072C  0828               	movf	??_I2C_Init,w
  5667  072D  00A1               	movwf	I2C1_Setting@mode
  5668  072E  0827               	movf	I2C_Init@Speed,w
  5669  072F  00A9               	movwf	??_I2C_Init+1
  5670  0730  0829               	movf	??_I2C_Init+1,w
  5671  0731  00A2               	movwf	I2C1_Setting@Speed
  5672  0732  0825               	movf	I2C_Init@address,w
  5673  0733  3185  25E0  3187   	fcall	_I2C1_Setting
  5674                           
  5675                           ;I2C_Common.c: 12: break;
  5676  0736  2F4E               	goto	l338
  5677  0737                     l3886:	
  5678                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5679                           
  5680                           
  5681                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5682  0737  0020               	movlb	0	; select bank0
  5683  0738  0826               	movf	I2C_Init@mode,w
  5684  0739  00A8               	movwf	??_I2C_Init
  5685  073A  0828               	movf	??_I2C_Init,w
  5686  073B  00A1               	movwf	I2C2_Setting@mode
  5687  073C  0827               	movf	I2C_Init@Speed,w
  5688  073D  00A9               	movwf	??_I2C_Init+1
  5689  073E  0829               	movf	??_I2C_Init+1,w
  5690  073F  00A2               	movwf	I2C2_Setting@Speed
  5691  0740  0825               	movf	I2C_Init@address,w
  5692  0741  3185  259C  3187   	fcall	_I2C2_Setting
  5693                           
  5694                           ;I2C_Common.c: 17: }
  5695                           
  5696                           ;I2C_Common.c: 16: break;
  5697  0744  2F4E               	goto	l338
  5698  0745                     l3890:	
  5699  0745  0020               	movlb	0	; select bank0
  5700  0746  082A               	movf	I2C_Init@I2Cx,w
  5701                           
  5702                           ; Switch size 1, requested type "space"
  5703                           ; Number of cases is 2, Range of values is 0 to 1
  5704                           ; switch strategies available:
  5705                           ; Name         Instructions Cycles
  5706                           ; simple_byte            7     4 (average)
  5707                           ; direct_byte           10     6 (fixed)
  5708                           ; jumptable            260     6 (fixed)
  5709                           ;	Chosen strategy is simple_byte
  5710  0747  3A00               	xorlw	0	; case 0
  5711  0748  1903               	skipnz
  5712  0749  2F2A               	goto	l3884
  5713  074A  3A01               	xorlw	1	; case 1
  5714  074B  1903               	skipnz
  5715  074C  2F37               	goto	l3886
  5716  074D  2F4E               	goto	l338
  5717  074E                     l338:	
  5718                           
  5719                           ;I2C_Common.c: 19: PEIE = 1;
  5720  074E  170B               	bsf	11,6	;volatile
  5721                           
  5722                           ;I2C_Common.c: 20: GIE = 1;
  5723  074F  178B               	bsf	11,7	;volatile
  5724  0750  0008               	return
  5725  0751                     __end_of_I2C_Init:	
  5726                           
  5727                           	psect	text22
  5728  059C                     __ptext22:	
  5729 ;; *************** function _I2C2_Setting *****************
  5730 ;; Defined at:
  5731 ;;		line 15 in file "I2C2.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  address         1    wreg     unsigned char 
  5734 ;;  mode            1    1[BANK0 ] enum E3057
  5735 ;;  Speed           1    2[BANK0 ] enum E3061
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  address         1    4[BANK0 ] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5747 ;;      Params:         0       2       0       0       0       0
  5748 ;;      Locals:         0       1       0       0       0       0
  5749 ;;      Temps:          0       1       0       0       0       0
  5750 ;;      Totals:         0       4       0       0       0       0
  5751 ;;Total ram usage:        4 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    4
  5754 ;; This function calls:
  5755 ;;		_I2C2_PinInit
  5756 ;; This function is called by:
  5757 ;;		_I2C_Init
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _I2C2_Setting
  5763  059C                     _I2C2_Setting:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5767                           ;I2C2_Setting@address stored from wreg
  5768  059C  0020               	movlb	0	; select bank0
  5769  059D  00A4               	movwf	I2C2_Setting@address
  5770                           
  5771                           ;I2C2.c: 17: I2C2_PinInit();
  5772  059E  318F  2730  3185   	fcall	_I2C2_PinInit
  5773                           
  5774                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5775  05A1  0020               	movlb	0	; select bank0
  5776  05A2  0821               	movf	I2C2_Setting@mode,w
  5777  05A3  00A3               	movwf	??_I2C2_Setting
  5778  05A4  0823               	movf	??_I2C2_Setting,w
  5779  05A5  0021               	movlb	1	; select bank1
  5780  05A6  00BD               	movwf	(_I2C2_Config^(0+128)+18)
  5781                           
  5782                           ;I2C2.c: 20: switch(mode)
  5783  05A7  2DD0               	goto	l3762
  5784  05A8                     l211:	
  5785                           ;I2C2.c: 21: {
  5786                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5787                           
  5788                           
  5789                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5790  05A8  0024               	movlb	4	; select bank4
  5791  05A9  159D               	bsf	29,3	;volatile
  5792                           
  5793                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5794  05AA  0020               	movlb	0	; select bank0
  5795  05AB  0822               	movf	I2C2_Setting@Speed,w
  5796  05AC  1D03               	btfss	3,2
  5797  05AD  2DB2               	goto	l3740
  5798                           
  5799                           ;I2C2.c: 25: {
  5800                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5801  05AE  0024               	movlb	4	; select bank4
  5802  05AF  179C               	bsf	28,7	;volatile
  5803                           
  5804                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5805  05B0  304F               	movlw	79
  5806  05B1  2DBC               	goto	L9
  5807  05B2                     l3740:	
  5808                           ;I2C2.c: 28: }
  5809                           
  5810                           
  5811                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5812  05B2  0020               	movlb	0	; select bank0
  5813  05B3  0322               	decf	I2C2_Setting@Speed,w
  5814  05B4  1D03               	btfss	3,2
  5815  05B5  2DBD               	goto	l3746
  5816                           
  5817                           ;I2C2.c: 30: {
  5818                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5819  05B6  307F               	movlw	127
  5820  05B7  00A3               	movwf	??_I2C2_Setting
  5821  05B8  0823               	movf	??_I2C2_Setting,w
  5822  05B9  0024               	movlb	4	; select bank4
  5823  05BA  059C               	andwf	28,f	;volatile
  5824                           
  5825                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5826  05BB  3013               	movlw	19
  5827  05BC                     L9:	
  5828  05BC  009A               	movwf	26	;volatile
  5829  05BD                     l3746:	
  5830                           
  5831                           ;I2C2.c: 33: }
  5832                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5833  05BD  0024               	movlb	4	; select bank4
  5834  05BE  2DCE               	goto	l3758
  5835  05BF                     l3748:	
  5836                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5837                           
  5838                           ;I2C2.c: 35: break;
  5839                           
  5840                           
  5841                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5842  05BF  0024               	movlb	4	; select bank4
  5843  05C0  019C               	clrf	28	;volatile
  5844                           
  5845                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5846  05C1  3006               	movlw	6
  5847  05C2  0020               	movlb	0	; select bank0
  5848  05C3  00A3               	movwf	??_I2C2_Setting
  5849  05C4  0823               	movf	??_I2C2_Setting,w
  5850  05C5  0024               	movlb	4	; select bank4
  5851  05C6  049D               	iorwf	29,f	;volatile
  5852                           
  5853                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5854  05C7  141E               	bsf	30,0	;volatile
  5855                           
  5856                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5857  05C8  0020               	movlb	0	; select bank0
  5858  05C9  3524               	lslf	I2C2_Setting@address,w
  5859  05CA  0024               	movlb	4	; select bank4
  5860  05CB  009A               	movwf	26	;volatile
  5861                           
  5862                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5863  05CC  30FE               	movlw	254
  5864  05CD  009B               	movwf	27	;volatile
  5865  05CE                     l3758:	
  5866                           
  5867                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5868  05CE  169D               	bsf	29,5	;volatile
  5869                           
  5870                           ;I2C2.c: 45: }
  5871                           
  5872                           ;I2C2.c: 44: break;
  5873  05CF  2DD9               	goto	l215
  5874  05D0                     l3762:	
  5875  05D0  0020               	movlb	0	; select bank0
  5876  05D1  0821               	movf	I2C2_Setting@mode,w
  5877                           
  5878                           ; Switch size 1, requested type "space"
  5879                           ; Number of cases is 2, Range of values is 0 to 1
  5880                           ; switch strategies available:
  5881                           ; Name         Instructions Cycles
  5882                           ; simple_byte            7     4 (average)
  5883                           ; direct_byte           10     6 (fixed)
  5884                           ; jumptable            260     6 (fixed)
  5885                           ;	Chosen strategy is simple_byte
  5886  05D2  3A00               	xorlw	0	; case 0
  5887  05D3  1903               	skipnz
  5888  05D4  2DA8               	goto	l211
  5889  05D5  3A01               	xorlw	1	; case 1
  5890  05D6  1903               	skipnz
  5891  05D7  2DBF               	goto	l3748
  5892  05D8  2DD9               	goto	l215
  5893  05D9                     l215:	
  5894                           
  5895                           ;I2C2.c: 46: SSP2IE = 1;
  5896  05D9  0021               	movlb	1	; select bank1
  5897  05DA  1414               	bsf	20,0	;volatile
  5898                           
  5899                           ;I2C2.c: 47: BCL2IE = 1;
  5900  05DB  1494               	bsf	20,1	;volatile
  5901                           
  5902                           ;I2C2.c: 48: SSP2IF = 0;
  5903  05DC  0020               	movlb	0	; select bank0
  5904  05DD  1014               	bcf	20,0	;volatile
  5905                           
  5906                           ;I2C2.c: 49: BCL2IF = 0;
  5907  05DE  1094               	bcf	20,1	;volatile
  5908  05DF  0008               	return
  5909  05E0                     __end_of_I2C2_Setting:	
  5910                           
  5911                           	psect	text23
  5912  0F30                     __ptext23:	
  5913 ;; *************** function _I2C2_PinInit *****************
  5914 ;; Defined at:
  5915 ;;		line 9 in file "I2C2.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5929 ;;      Params:         0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0
  5931 ;;      Temps:          0       1       0       0       0       0
  5932 ;;      Totals:         0       1       0       0       0       0
  5933 ;;Total ram usage:        1 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    3
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_I2C2_Setting
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _I2C2_PinInit
  5945  0F30                     _I2C2_PinInit:	
  5946                           
  5947                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5951  0F30  3024               	movlw	36
  5952  0F31  0020               	movlb	0	; select bank0
  5953  0F32  00A0               	movwf	??_I2C2_PinInit
  5954  0F33  0820               	movf	??_I2C2_PinInit,w
  5955  0F34  0021               	movlb	1	; select bank1
  5956  0F35  048D               	iorwf	13,f	;volatile
  5957                           
  5958                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5959  0F36  30DB               	movlw	219
  5960  0F37  0020               	movlb	0	; select bank0
  5961  0F38  00A0               	movwf	??_I2C2_PinInit
  5962  0F39  0820               	movf	??_I2C2_PinInit,w
  5963  0F3A  0023               	movlb	3	; select bank3
  5964  0F3B  058D               	andwf	13,f	;volatile
  5965  0F3C  0008               	return
  5966  0F3D                     __end_of_I2C2_PinInit:	
  5967                           
  5968                           	psect	text24
  5969  05E0                     __ptext24:	
  5970 ;; *************** function _I2C1_Setting *****************
  5971 ;; Defined at:
  5972 ;;		line 15 in file "I2C1.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  address         1    wreg     unsigned char 
  5975 ;;  mode            1    1[BANK0 ] enum E3057
  5976 ;;  Speed           1    2[BANK0 ] enum E3061
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  address         1    4[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5988 ;;      Params:         0       2       0       0       0       0
  5989 ;;      Locals:         0       1       0       0       0       0
  5990 ;;      Temps:          0       1       0       0       0       0
  5991 ;;      Totals:         0       4       0       0       0       0
  5992 ;;Total ram usage:        4 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    4
  5995 ;; This function calls:
  5996 ;;		_I2C1_PinInit
  5997 ;; This function is called by:
  5998 ;;		_I2C_Init
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _I2C1_Setting
  6004  05E0                     _I2C1_Setting:	
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6008                           ;I2C1_Setting@address stored from wreg
  6009  05E0  0020               	movlb	0	; select bank0
  6010  05E1  00A4               	movwf	I2C1_Setting@address
  6011                           
  6012                           ;I2C1.c: 17: I2C1_PinInit();
  6013  05E2  318F  2723  3185   	fcall	_I2C1_PinInit
  6014                           
  6015                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6016  05E5  0020               	movlb	0	; select bank0
  6017  05E6  0821               	movf	I2C1_Setting@mode,w
  6018  05E7  00A3               	movwf	??_I2C1_Setting
  6019  05E8  0823               	movf	??_I2C1_Setting,w
  6020  05E9  0021               	movlb	1	; select bank1
  6021  05EA  00D0               	movwf	(_I2C1_Config^(0+128)+18)
  6022                           
  6023                           ;I2C1.c: 20: switch(mode)
  6024  05EB  2E14               	goto	l3676
  6025  05EC                     l74:	
  6026                           ;I2C1.c: 21: {
  6027                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6028                           
  6029                           
  6030                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6031  05EC  0024               	movlb	4	; select bank4
  6032  05ED  1595               	bsf	21,3	;volatile
  6033                           
  6034                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6035  05EE  0020               	movlb	0	; select bank0
  6036  05EF  0822               	movf	I2C1_Setting@Speed,w
  6037  05F0  1D03               	btfss	3,2
  6038  05F1  2DF6               	goto	l3654
  6039                           
  6040                           ;I2C1.c: 25: {
  6041                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6042  05F2  0024               	movlb	4	; select bank4
  6043  05F3  1794               	bsf	20,7	;volatile
  6044                           
  6045                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6046  05F4  304F               	movlw	79
  6047  05F5  2E00               	goto	L10
  6048  05F6                     l3654:	
  6049                           ;I2C1.c: 28: }
  6050                           
  6051                           
  6052                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6053  05F6  0020               	movlb	0	; select bank0
  6054  05F7  0322               	decf	I2C1_Setting@Speed,w
  6055  05F8  1D03               	btfss	3,2
  6056  05F9  2E01               	goto	l3660
  6057                           
  6058                           ;I2C1.c: 30: {
  6059                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6060  05FA  307F               	movlw	127
  6061  05FB  00A3               	movwf	??_I2C1_Setting
  6062  05FC  0823               	movf	??_I2C1_Setting,w
  6063  05FD  0024               	movlb	4	; select bank4
  6064  05FE  0594               	andwf	20,f	;volatile
  6065                           
  6066                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6067  05FF  3013               	movlw	19
  6068  0600                     L10:	
  6069  0600  0092               	movwf	18	;volatile
  6070  0601                     l3660:	
  6071                           
  6072                           ;I2C1.c: 33: }
  6073                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6074  0601  0024               	movlb	4	; select bank4
  6075  0602  2E12               	goto	l3672
  6076  0603                     l3662:	
  6077                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6078                           
  6079                           ;I2C1.c: 35: break;
  6080                           
  6081                           
  6082                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6083  0603  0024               	movlb	4	; select bank4
  6084  0604  0194               	clrf	20	;volatile
  6085                           
  6086                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6087  0605  3006               	movlw	6
  6088  0606  0020               	movlb	0	; select bank0
  6089  0607  00A3               	movwf	??_I2C1_Setting
  6090  0608  0823               	movf	??_I2C1_Setting,w
  6091  0609  0024               	movlb	4	; select bank4
  6092  060A  0495               	iorwf	21,f	;volatile
  6093                           
  6094                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6095  060B  1416               	bsf	22,0	;volatile
  6096                           
  6097                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6098  060C  0020               	movlb	0	; select bank0
  6099  060D  3524               	lslf	I2C1_Setting@address,w
  6100  060E  0024               	movlb	4	; select bank4
  6101  060F  0092               	movwf	18	;volatile
  6102                           
  6103                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6104  0610  30FE               	movlw	254
  6105  0611  0093               	movwf	19	;volatile
  6106  0612                     l3672:	
  6107                           
  6108                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6109  0612  1695               	bsf	21,5	;volatile
  6110                           
  6111                           ;I2C1.c: 45: }
  6112                           
  6113                           ;I2C1.c: 44: break;
  6114  0613  2E1D               	goto	l78
  6115  0614                     l3676:	
  6116  0614  0020               	movlb	0	; select bank0
  6117  0615  0821               	movf	I2C1_Setting@mode,w
  6118                           
  6119                           ; Switch size 1, requested type "space"
  6120                           ; Number of cases is 2, Range of values is 0 to 1
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte            7     4 (average)
  6124                           ; direct_byte           10     6 (fixed)
  6125                           ; jumptable            260     6 (fixed)
  6126                           ;	Chosen strategy is simple_byte
  6127  0616  3A00               	xorlw	0	; case 0
  6128  0617  1903               	skipnz
  6129  0618  2DEC               	goto	l74
  6130  0619  3A01               	xorlw	1	; case 1
  6131  061A  1903               	skipnz
  6132  061B  2E03               	goto	l3662
  6133  061C  2E1D               	goto	l78
  6134  061D                     l78:	
  6135                           
  6136                           ;I2C1.c: 46: SSP1IE = 1;
  6137  061D  0021               	movlb	1	; select bank1
  6138  061E  1591               	bsf	17,3	;volatile
  6139                           
  6140                           ;I2C1.c: 47: BCL1IE = 1;
  6141  061F  1592               	bsf	18,3	;volatile
  6142                           
  6143                           ;I2C1.c: 48: SSP1IF = 0;
  6144  0620  0020               	movlb	0	; select bank0
  6145  0621  1191               	bcf	17,3	;volatile
  6146                           
  6147                           ;I2C1.c: 49: BCL1IF = 0;
  6148  0622  1192               	bcf	18,3	;volatile
  6149  0623  0008               	return
  6150  0624                     __end_of_I2C1_Setting:	
  6151                           
  6152                           	psect	text25
  6153  0F23                     __ptext25:	
  6154 ;; *************** function _I2C1_PinInit *****************
  6155 ;; Defined at:
  6156 ;;		line 9 in file "I2C1.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6170 ;;      Params:         0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0
  6172 ;;      Temps:          0       1       0       0       0       0
  6173 ;;      Totals:         0       1       0       0       0       0
  6174 ;;Total ram usage:        1 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    3
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_I2C1_Setting
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           
  6185                           ;psect for function _I2C1_PinInit
  6186  0F23                     _I2C1_PinInit:	
  6187                           
  6188                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6189                           
  6190                           ;incstack = 0
  6191                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6192  0F23  3012               	movlw	18
  6193  0F24  0020               	movlb	0	; select bank0
  6194  0F25  00A0               	movwf	??_I2C1_PinInit
  6195  0F26  0820               	movf	??_I2C1_PinInit,w
  6196  0F27  0021               	movlb	1	; select bank1
  6197  0F28  048D               	iorwf	13,f	;volatile
  6198                           
  6199                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6200  0F29  30ED               	movlw	237
  6201  0F2A  0020               	movlb	0	; select bank0
  6202  0F2B  00A0               	movwf	??_I2C1_PinInit
  6203  0F2C  0820               	movf	??_I2C1_PinInit,w
  6204  0F2D  0023               	movlb	3	; select bank3
  6205  0F2E  058D               	andwf	13,f	;volatile
  6206  0F2F  0008               	return
  6207  0F30                     __end_of_I2C1_PinInit:	
  6208                           
  6209                           	psect	text26
  6210  07F6                     __ptext26:	
  6211 ;; *************** function _Buzzer_MiliSecond *****************
  6212 ;; Defined at:
  6213 ;;		line 38 in file "Buzzer.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  time            2    0[BANK0 ] unsigned int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6227 ;;      Params:         0       2       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0
  6230 ;;      Totals:         0       2       0       0       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    3
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _Buzzer_MiliSecond
  6243  07F6                     _Buzzer_MiliSecond:	
  6244                           
  6245                           ;Buzzer.c: 40: if(count==0)
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  6249  07F6  0878               	movf	_count,w
  6250  07F7  0479               	iorwf	_count+1,w
  6251  07F8  1D03               	btfss	3,2
  6252  07F9  0008               	return
  6253                           
  6254                           ;Buzzer.c: 41: count = time;
  6255  07FA  0020               	movlb	0	; select bank0
  6256  07FB  0821               	movf	Buzzer_MiliSecond@time+1,w
  6257  07FC  00F9               	movwf	_count+1
  6258  07FD  0820               	movf	Buzzer_MiliSecond@time,w
  6259  07FE  00F8               	movwf	_count
  6260  07FF  0008               	return
  6261  0800                     __end_of_Buzzer_MiliSecond:	
  6262                           
  6263                           	psect	text27
  6264  0751                     __ptext27:	
  6265 ;; *************** function _Buzzer_Init *****************
  6266 ;; Defined at:
  6267 ;;		line 11 in file "Buzzer.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6281 ;;      Params:         0       0       0       0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0
  6283 ;;      Temps:          0       1       0       0       0       0
  6284 ;;      Totals:         0       1       0       0       0       0
  6285 ;;Total ram usage:        1 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    3
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _Buzzer_Init
  6297  0751                     _Buzzer_Init:	
  6298                           
  6299                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6303  0751  307F               	movlw	127
  6304  0752  0020               	movlb	0	; select bank0
  6305  0753  00A0               	movwf	??_Buzzer_Init
  6306  0754  0820               	movf	??_Buzzer_Init,w
  6307  0755  0021               	movlb	1	; select bank1
  6308  0756  058C               	andwf	12,f	;volatile
  6309                           
  6310                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6311  0757  307F               	movlw	127
  6312  0758  0020               	movlb	0	; select bank0
  6313  0759  00A0               	movwf	??_Buzzer_Init
  6314  075A  0820               	movf	??_Buzzer_Init,w
  6315  075B  0023               	movlb	3	; select bank3
  6316  075C  058C               	andwf	12,f	;volatile
  6317                           
  6318                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6319  075D  0022               	movlb	2	; select bank2
  6320  075E  159D               	bsf	29,3	;volatile
  6321                           
  6322                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6323  075F  0020               	movlb	0	; select bank0
  6324  0760  081C               	movf	28,w	;volatile
  6325                           
  6326                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6327  0761  149C               	bsf	28,1	;volatile
  6328                           
  6329                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6330  0762  151C               	bsf	28,2	;volatile
  6331                           
  6332                           ;Buzzer.c: 21: TMR2 = 0x00;
  6333  0763  019A               	clrf	26	;volatile
  6334                           
  6335                           ;Buzzer.c: 22: PR2 = 0xFF;
  6336  0764  30FF               	movlw	255
  6337  0765  009B               	movwf	27	;volatile
  6338                           
  6339                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6340  0766  303F               	movlw	63
  6341  0767  00A0               	movwf	??_Buzzer_Init
  6342  0768  0820               	movf	??_Buzzer_Init,w
  6343  0769  0025               	movlb	5	; select bank5
  6344  076A  059A               	andwf	26,f	;volatile
  6345                           
  6346                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6347  076B  300C               	movlw	12
  6348  076C  0020               	movlb	0	; select bank0
  6349  076D  00A0               	movwf	??_Buzzer_Init
  6350  076E  0820               	movf	??_Buzzer_Init,w
  6351  076F  0025               	movlb	5	; select bank5
  6352  0770  049A               	iorwf	26,f	;volatile
  6353                           
  6354                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6355  0771  30F3               	movlw	243
  6356  0772  0020               	movlb	0	; select bank0
  6357  0773  00A0               	movwf	??_Buzzer_Init
  6358  0774  0820               	movf	??_Buzzer_Init,w
  6359  0775  0025               	movlb	5	; select bank5
  6360  0776  059E               	andwf	30,f	;volatile
  6361                           
  6362                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6363  0777  0198               	clrf	24	;volatile
  6364  0778  0008               	return
  6365  0779                     __end_of_Buzzer_Init:	
  6366                           
  6367                           	psect	text28
  6368  0FA5                     __ptext28:	
  6369 ;; *************** function _Basic_Init *****************
  6370 ;; Defined at:
  6371 ;;		line 51 in file "main.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      char 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6385 ;;      Params:         0       0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    3
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_main
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _Basic_Init
  6401  0FA5                     _Basic_Init:	
  6402                           
  6403                           ;main.c: 53: OSCCON = 0xF0;
  6404                           
  6405                           ;incstack = 0
  6406                           ; Regs used in _Basic_Init: [wreg+status,2]
  6407  0FA5  30F0               	movlw	240
  6408  0FA6  0021               	movlb	1	; select bank1
  6409  0FA7  0099               	movwf	25	;volatile
  6410                           
  6411                           ;main.c: 57: TRISA = 0x07;
  6412  0FA8  3007               	movlw	7
  6413  0FA9  008C               	movwf	12	;volatile
  6414                           
  6415                           ;main.c: 58: ANSELA = 0x07;
  6416  0FAA  3007               	movlw	7
  6417  0FAB  0023               	movlb	3	; select bank3
  6418  0FAC  008C               	movwf	12	;volatile
  6419                           
  6420                           ;main.c: 60: TRISB = 0x40;
  6421  0FAD  3040               	movlw	64
  6422  0FAE  0021               	movlb	1	; select bank1
  6423  0FAF  008D               	movwf	13	;volatile
  6424                           
  6425                           ;main.c: 61: ANSELB = 0x00;
  6426  0FB0  0023               	movlb	3	; select bank3
  6427  0FB1  018D               	clrf	13	;volatile
  6428                           
  6429                           ;main.c: 63: APFCON0 = 0x08;
  6430  0FB2  3008               	movlw	8
  6431  0FB3  0022               	movlb	2	; select bank2
  6432  0FB4  009D               	movwf	29	;volatile
  6433                           
  6434                           ;main.c: 64: APFCON1 = 0x00;
  6435  0FB5  019E               	clrf	30	;volatile
  6436                           
  6437                           ;main.c: 66: PORTA = 0x00;
  6438  0FB6  0020               	movlb	0	; select bank0
  6439  0FB7  018C               	clrf	12	;volatile
  6440                           
  6441                           ;main.c: 67: PORTB = 0x00;
  6442  0FB8  018D               	clrf	13	;volatile
  6443  0FB9  0008               	return
  6444  0FBA                     __end_of_Basic_Init:	
  6445                           ;main.c: 69: return 0;
  6446                           ;	Return value of _Basic_Init is never used
  6447                           
  6448                           
  6449                           	psect	intentry
  6450  0004                     __pintentry:	
  6451 ;; *************** function _Handler *****************
  6452 ;; Defined at:
  6453 ;;		line 72 in file "main.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6467 ;;      Params:         0       0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0
  6469 ;;      Temps:          1       0       0       0       0       0
  6470 ;;      Totals:         1       0       0       0       0       0
  6471 ;;Total ram usage:        1 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    2
  6474 ;; This function calls:
  6475 ;;		_Buzzer_Handler
  6476 ;;		_CPSx_Read
  6477 ;;		_I2C_CommonInterrupt
  6478 ;;		_Timer1_Handler
  6479 ;;		_Timer4_Handler
  6480 ;; This function is called by:
  6481 ;;		Interrupt level 1
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485  0004                     _Handler:	
  6486                           
  6487                           ;incstack = 0
  6488  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6489                           
  6490                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6491  0005  3180               	pagesel	$
  6492  0006  0020               	movlb	0	; select bank0
  6493  0007  087F               	movf	127,w
  6494  0008  00F5               	movwf	??_Handler
  6495                           
  6496                           ;main.c: 74: static uint16_t count = 0;
  6497                           ;main.c: 75: if(Timer4_Handler())
  6498  0009  318F  2718  3180   	fcall	_Timer4_Handler
  6499  000C  3A00               	xorlw	0
  6500  000D  1903               	skipnz
  6501  000E  2826               	goto	i1l3506
  6502                           
  6503                           ;main.c: 76: {
  6504                           ;main.c: 77: CPSx_Read();
  6505  000F  3187  2779  3180   	fcall	_CPSx_Read
  6506                           
  6507                           ;main.c: 78: Buzzer_Handler();
  6508  0012  318F  2790  3180   	fcall	_Buzzer_Handler
  6509                           
  6510                           ;main.c: 79: count++;
  6511  0015  3001               	movlw	1
  6512  0016  0021               	movlb	1	; select bank1
  6513  0017  07A9               	addwf	Handler@count^(0+128),f
  6514  0018  3000               	movlw	0
  6515  0019  3DAA               	addwfc	(Handler@count+1)^(0+128),f
  6516                           
  6517                           ;main.c: 80: if(count>1000)
  6518  001A  3003               	movlw	3
  6519  001B  022A               	subwf	(Handler@count+1)^(0+128),w
  6520  001C  30E9               	movlw	233
  6521  001D  1903               	skipnz
  6522  001E  0229               	subwf	Handler@count^(0+128),w
  6523  001F  1C03               	skipc
  6524  0020  2826               	goto	i1l3506
  6525                           
  6526                           ;main.c: 81: {
  6527                           ;main.c: 82: count = 0;
  6528  0021  01A9               	clrf	Handler@count^(0+128)
  6529  0022  01AA               	clrf	(Handler@count+1)^(0+128)
  6530                           
  6531                           ;main.c: 83: LATA6 ^= 1;
  6532  0023  0022               	movlb	2	; select bank2
  6533  0024  3040               	movlw	64
  6534  0025  068C               	xorwf	12,f
  6535  0026                     i1l3506:	
  6536                           
  6537                           ;main.c: 84: }
  6538                           ;main.c: 85: }
  6539                           ;main.c: 87: Timer1_Handler();
  6540  0026  318F  270F  3180   	fcall	_Timer1_Handler
  6541                           
  6542                           ;main.c: 88: I2C_CommonInterrupt();
  6543  0029  318E  26FC         	fcall	_I2C_CommonInterrupt
  6544  002B  0875               	movf	??_Handler,w
  6545  002C  0020               	movlb	0	; select bank0
  6546  002D  00FF               	movwf	127
  6547  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6548  002F  0009               	retfie
  6549  0030                     __end_of_Handler:	
  6550                           
  6551                           	psect	text30
  6552  0F18                     __ptext30:	
  6553 ;; *************** function _Timer4_Handler *****************
  6554 ;; Defined at:
  6555 ;;		line 17 in file "Timer4.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      unsigned char 
  6562 ;; Registers used:
  6563 ;;		wreg
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6569 ;;      Params:         0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_Handler
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _Timer4_Handler
  6584  0F18                     _Timer4_Handler:	
  6585                           
  6586                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _Timer4_Handler: [wreg]
  6590  0F18  0021               	movlb	1	; select bank1
  6591  0F19  1C93               	btfss	19,1	;volatile
  6592  0F1A  2F21               	goto	i1l3322
  6593  0F1B  0020               	movlb	0	; select bank0
  6594  0F1C  1C93               	btfss	19,1	;volatile
  6595  0F1D  2F21               	goto	i1l3322
  6596                           
  6597                           ;Timer4.c: 20: {
  6598                           ;Timer4.c: 21: TMR4IF = 0;
  6599  0F1E  1093               	bcf	19,1	;volatile
  6600                           
  6601                           ;Timer4.c: 22: return 1;
  6602  0F1F  3001               	movlw	1
  6603  0F20  0008               	return
  6604  0F21                     i1l3322:	
  6605                           
  6606                           ;Timer4.c: 23: }
  6607                           ;Timer4.c: 24: return 0;
  6608  0F21  3000               	movlw	0
  6609  0F22  0008               	return
  6610  0F23                     __end_of_Timer4_Handler:	
  6611                           
  6612                           	psect	text31
  6613  0F0F                     __ptext31:	
  6614 ;; *************** function _Timer1_Handler *****************
  6615 ;; Defined at:
  6616 ;;		line 33 in file "Timer1.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		None
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6630 ;;      Params:         0       0       0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0
  6633 ;;      Totals:         0       0       0       0       0       0
  6634 ;;Total ram usage:        0 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_Handler
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function _Timer1_Handler
  6645  0F0F                     _Timer1_Handler:	
  6646                           
  6647                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in _Timer1_Handler: []
  6651  0F0F  0020               	movlb	0	; select bank0
  6652  0F10  1C11               	btfss	17,0	;volatile
  6653  0F11  0008               	return
  6654  0F12  0021               	movlb	1	; select bank1
  6655  0F13  1C11               	btfss	17,0	;volatile
  6656  0F14  0008               	return
  6657                           
  6658                           ;Timer1.c: 36: {
  6659                           ;Timer1.c: 37: TMR1IF = 0;
  6660  0F15  0020               	movlb	0	; select bank0
  6661  0F16  1011               	bcf	17,0	;volatile
  6662  0F17  0008               	return
  6663  0F18                     __end_of_Timer1_Handler:	
  6664                           
  6665                           	psect	text32
  6666  0EFC                     __ptext32:	
  6667 ;; *************** function _I2C_CommonInterrupt *****************
  6668 ;; Defined at:
  6669 ;;		line 58 in file "I2C_Common.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6683 ;;      Params:         0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		_I2C1_Interrupt
  6692 ;;		_I2C2_Interrupt
  6693 ;; This function is called by:
  6694 ;;		_Handler
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _I2C_CommonInterrupt
  6700  0EFC                     _I2C_CommonInterrupt:	
  6701                           
  6702                           ;I2C_Common.c: 60: I2C1_Interrupt();
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6706  0EFC  3184  24F5  318E   	fcall	_I2C1_Interrupt
  6707                           
  6708                           ;I2C_Common.c: 61: I2C2_Interrupt();
  6709  0EFF  3184  24A1         	fcall	_I2C2_Interrupt
  6710  0F01  0008               	return
  6711  0F02                     __end_of_I2C_CommonInterrupt:	
  6712                           
  6713                           	psect	text33
  6714  04A1                     __ptext33:	
  6715 ;; *************** function _I2C2_Interrupt *****************
  6716 ;; Defined at:
  6717 ;;		line 152 in file "I2C2.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6731 ;;      Params:         0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0
  6733 ;;      Temps:          1       0       0       0       0       0
  6734 ;;      Totals:         1       0       0       0       0       0
  6735 ;;Total ram usage:        1 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_I2C_CommonInterrupt
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           
  6745                           ;psect for function _I2C2_Interrupt
  6746  04A1                     _I2C2_Interrupt:	
  6747                           
  6748                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6752  04A1  0020               	movlb	0	; select bank0
  6753  04A2  1C14               	btfss	20,0	;volatile
  6754  04A3  2CED               	goto	i1l2872
  6755  04A4  0021               	movlb	1	; select bank1
  6756  04A5  1C14               	btfss	20,0	;volatile
  6757  04A6  2CED               	goto	i1l2872
  6758                           
  6759                           ;I2C2.c: 155: {
  6760                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  6761  04A7  0024               	movlb	4	; select bank4
  6762  04A8  1E9C               	btfss	28,5	;volatile
  6763  04A9  2CC4               	goto	i1l294
  6764                           
  6765                           ;I2C2.c: 157: {
  6766                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  6767  04AA  1D1C               	btfss	28,2	;volatile
  6768  04AB  2CB7               	goto	i1l2848
  6769                           
  6770                           ;I2C2.c: 159: {
  6771                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  6772  04AC  1B1E               	btfsc	30,6	;volatile
  6773  04AD  2CEB               	goto	i1l2870
  6774  04AE                     i1l2840:	
  6775                           ;I2C2.c: 161: {
  6776                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6777                           
  6778  04AE  081C               	movf	28,w	;volatile
  6779  04AF  3901               	andlw	1
  6780  04B0  00F0               	movwf	??_I2C2_Interrupt
  6781  04B1  0E1D               	swapf	29,w	;volatile
  6782  04B2  3901               	andlw	1
  6783  04B3  0470               	iorwf	??_I2C2_Interrupt,w
  6784  04B4  1D03               	btfss	3,2
  6785  04B5  2CAE               	goto	i1l2840
  6786  04B6  2CD7               	goto	L11
  6787  04B7                     i1l2848:	
  6788                           ;I2C2.c: 166: }
  6789                           ;I2C2.c: 167: }
  6790                           
  6791                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  6792                           
  6793                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  6794                           
  6795                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  6796                           
  6797                           
  6798                           ;I2C2.c: 168: else
  6799                           ;I2C2.c: 169: {
  6800                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  6801  04B7  0819               	movf	25,w	;volatile
  6802  04B8  00F0               	movwf	??_I2C2_Interrupt
  6803  04B9  0021               	movlb	1	; select bank1
  6804  04BA  083C               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  6805  04BB  0086               	movwf	6
  6806  04BC  0187               	clrf	7
  6807  04BD  0870               	movf	??_I2C2_Interrupt,w
  6808  04BE  0081               	movwf	1
  6809                           
  6810                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  6811  04BF  3001               	movlw	1
  6812  04C0  00F0               	movwf	??_I2C2_Interrupt
  6813  04C1  0870               	movf	??_I2C2_Interrupt,w
  6814  04C2  07BC               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  6815  04C3  2CE9               	goto	i1l2868
  6816  04C4                     i1l294:	
  6817                           ;I2C2.c: 173: }
  6818                           ;I2C2.c: 174: }
  6819                           
  6820                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  6821                           
  6822                           
  6823                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  6824  04C4  1A9C               	btfsc	28,5	;volatile
  6825  04C5  2CEB               	goto	i1l2870
  6826                           
  6827                           ;I2C2.c: 176: {
  6828                           ;I2C2.c: 177: SSP2BUF;
  6829  04C6  0819               	movf	25,w	;volatile
  6830                           
  6831                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  6832  04C7  1D1C               	btfss	28,2	;volatile
  6833  04C8  2CE4               	goto	i1l2866
  6834                           
  6835                           ;I2C2.c: 180: {
  6836                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  6837  04C9  30AB               	movlw	(low (_I2C2_Config| 0))& (0+255)
  6838  04CA  00F0               	movwf	??_I2C2_Interrupt
  6839  04CB  0870               	movf	??_I2C2_Interrupt,w
  6840  04CC  0021               	movlb	1	; select bank1
  6841  04CD  00BB               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  6842  04CE                     i1l2860:	
  6843                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6844                           
  6845  04CE  0024               	movlb	4	; select bank4
  6846  04CF  081C               	movf	28,w	;volatile
  6847  04D0  3901               	andlw	1
  6848  04D1  00F0               	movwf	??_I2C2_Interrupt
  6849  04D2  0E1D               	swapf	29,w	;volatile
  6850  04D3  3901               	andlw	1
  6851  04D4  0470               	iorwf	??_I2C2_Interrupt,w
  6852  04D5  1D03               	btfss	3,2
  6853  04D6  2CCE               	goto	i1l2860
  6854  04D7                     L11:	
  6855                           
  6856                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  6857  04D7  0021               	movlb	1	; select bank1
  6858  04D8  083B               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  6859  04D9  0086               	movwf	6
  6860  04DA  0187               	clrf	7
  6861  04DB  0801               	movf	1,w
  6862  04DC  0024               	movlb	4	; select bank4
  6863  04DD  0099               	movwf	25	;volatile
  6864                           
  6865                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  6866  04DE  3001               	movlw	1
  6867  04DF  00F0               	movwf	??_I2C2_Interrupt
  6868  04E0  0870               	movf	??_I2C2_Interrupt,w
  6869  04E1  0021               	movlb	1	; select bank1
  6870  04E2  07BB               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  6871                           
  6872                           ;I2C2.c: 186: }
  6873  04E3  2CE9               	goto	i1l2868
  6874  04E4                     i1l2866:	
  6875                           
  6876                           ;I2C2.c: 187: else
  6877                           ;I2C2.c: 188: {
  6878                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  6879  04E4  30B3               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  6880  04E5  00F0               	movwf	??_I2C2_Interrupt
  6881  04E6  0870               	movf	??_I2C2_Interrupt,w
  6882  04E7  0021               	movlb	1	; select bank1
  6883  04E8  00BC               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  6884  04E9                     i1l2868:	
  6885                           
  6886                           ;I2C2.c: 190: }
  6887                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  6888  04E9  0024               	movlb	4	; select bank4
  6889  04EA  161D               	bsf	29,4	;volatile
  6890  04EB                     i1l2870:	
  6891                           
  6892                           ;I2C2.c: 192: }
  6893                           ;I2C2.c: 193: SSP2IF = 0;
  6894  04EB  0020               	movlb	0	; select bank0
  6895  04EC  1014               	bcf	20,0	;volatile
  6896  04ED                     i1l2872:	
  6897                           
  6898                           ;I2C2.c: 194: }
  6899                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  6900  04ED  0021               	movlb	1	; select bank1
  6901  04EE  1C94               	btfss	20,1	;volatile
  6902  04EF  0008               	return
  6903  04F0  0020               	movlb	0	; select bank0
  6904  04F1  1C94               	btfss	20,1	;volatile
  6905  04F2  0008               	return
  6906                           
  6907                           ;I2C2.c: 197: BCL2IF = 0;
  6908  04F3  1094               	bcf	20,1	;volatile
  6909  04F4  0008               	return
  6910  04F5                     __end_of_I2C2_Interrupt:	
  6911                           
  6912                           	psect	text34
  6913  04F5                     __ptext34:	
  6914 ;; *************** function _I2C1_Interrupt *****************
  6915 ;; Defined at:
  6916 ;;		line 152 in file "I2C1.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      void 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6930 ;;      Params:         0       0       0       0       0       0
  6931 ;;      Locals:         0       0       0       0       0       0
  6932 ;;      Temps:          1       0       0       0       0       0
  6933 ;;      Totals:         1       0       0       0       0       0
  6934 ;;Total ram usage:        1 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_I2C_CommonInterrupt
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function _I2C1_Interrupt
  6945  04F5                     _I2C1_Interrupt:	
  6946                           
  6947                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  6948                           
  6949                           ;incstack = 0
  6950                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6951  04F5  0020               	movlb	0	; select bank0
  6952  04F6  1D91               	btfss	17,3	;volatile
  6953  04F7  2D41               	goto	i1l2822
  6954  04F8  0021               	movlb	1	; select bank1
  6955  04F9  1D91               	btfss	17,3	;volatile
  6956  04FA  2D41               	goto	i1l2822
  6957                           
  6958                           ;I2C1.c: 155: {
  6959                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  6960  04FB  0024               	movlb	4	; select bank4
  6961  04FC  1E94               	btfss	20,5	;volatile
  6962  04FD  2D18               	goto	i1l157
  6963                           
  6964                           ;I2C1.c: 157: {
  6965                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  6966  04FE  1D14               	btfss	20,2	;volatile
  6967  04FF  2D0B               	goto	i1l2798
  6968                           
  6969                           ;I2C1.c: 159: {
  6970                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6971  0500  1B16               	btfsc	22,6	;volatile
  6972  0501  2D3F               	goto	i1l2820
  6973  0502                     i1l2790:	
  6974                           ;I2C1.c: 161: {
  6975                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6976                           
  6977  0502  0814               	movf	20,w	;volatile
  6978  0503  3901               	andlw	1
  6979  0504  00F0               	movwf	??_I2C1_Interrupt
  6980  0505  0E15               	swapf	21,w	;volatile
  6981  0506  3901               	andlw	1
  6982  0507  0470               	iorwf	??_I2C1_Interrupt,w
  6983  0508  1D03               	btfss	3,2
  6984  0509  2D02               	goto	i1l2790
  6985  050A  2D2B               	goto	L12
  6986  050B                     i1l2798:	
  6987                           ;I2C1.c: 166: }
  6988                           ;I2C1.c: 167: }
  6989                           
  6990                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6991                           
  6992                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6993                           
  6994                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6995                           
  6996                           
  6997                           ;I2C1.c: 168: else
  6998                           ;I2C1.c: 169: {
  6999                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7000  050B  0811               	movf	17,w	;volatile
  7001  050C  00F0               	movwf	??_I2C1_Interrupt
  7002  050D  0021               	movlb	1	; select bank1
  7003  050E  084F               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7004  050F  0086               	movwf	6
  7005  0510  0187               	clrf	7
  7006  0511  0870               	movf	??_I2C1_Interrupt,w
  7007  0512  0081               	movwf	1
  7008                           
  7009                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7010  0513  3001               	movlw	1
  7011  0514  00F0               	movwf	??_I2C1_Interrupt
  7012  0515  0870               	movf	??_I2C1_Interrupt,w
  7013  0516  07CF               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7014  0517  2D3D               	goto	i1l2818
  7015  0518                     i1l157:	
  7016                           ;I2C1.c: 173: }
  7017                           ;I2C1.c: 174: }
  7018                           
  7019                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7020                           
  7021                           
  7022                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7023  0518  1A94               	btfsc	20,5	;volatile
  7024  0519  2D3F               	goto	i1l2820
  7025                           
  7026                           ;I2C1.c: 176: {
  7027                           ;I2C1.c: 177: SSP1BUF;
  7028  051A  0811               	movf	17,w	;volatile
  7029                           
  7030                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7031  051B  1D14               	btfss	20,2	;volatile
  7032  051C  2D38               	goto	i1l2816
  7033                           
  7034                           ;I2C1.c: 180: {
  7035                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7036  051D  30BE               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7037  051E  00F0               	movwf	??_I2C1_Interrupt
  7038  051F  0870               	movf	??_I2C1_Interrupt,w
  7039  0520  0021               	movlb	1	; select bank1
  7040  0521  00CE               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7041  0522                     i1l2810:	
  7042                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7043                           
  7044  0522  0024               	movlb	4	; select bank4
  7045  0523  0814               	movf	20,w	;volatile
  7046  0524  3901               	andlw	1
  7047  0525  00F0               	movwf	??_I2C1_Interrupt
  7048  0526  0E15               	swapf	21,w	;volatile
  7049  0527  3901               	andlw	1
  7050  0528  0470               	iorwf	??_I2C1_Interrupt,w
  7051  0529  1D03               	btfss	3,2
  7052  052A  2D22               	goto	i1l2810
  7053  052B                     L12:	
  7054                           
  7055                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7056  052B  0021               	movlb	1	; select bank1
  7057  052C  084E               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7058  052D  0086               	movwf	6
  7059  052E  0187               	clrf	7
  7060  052F  0801               	movf	1,w
  7061  0530  0024               	movlb	4	; select bank4
  7062  0531  0091               	movwf	17	;volatile
  7063                           
  7064                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7065  0532  3001               	movlw	1
  7066  0533  00F0               	movwf	??_I2C1_Interrupt
  7067  0534  0870               	movf	??_I2C1_Interrupt,w
  7068  0535  0021               	movlb	1	; select bank1
  7069  0536  07CE               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7070                           
  7071                           ;I2C1.c: 186: }
  7072  0537  2D3D               	goto	i1l2818
  7073  0538                     i1l2816:	
  7074                           
  7075                           ;I2C1.c: 187: else
  7076                           ;I2C1.c: 188: {
  7077                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7078  0538  30C6               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7079  0539  00F0               	movwf	??_I2C1_Interrupt
  7080  053A  0870               	movf	??_I2C1_Interrupt,w
  7081  053B  0021               	movlb	1	; select bank1
  7082  053C  00CF               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7083  053D                     i1l2818:	
  7084                           
  7085                           ;I2C1.c: 190: }
  7086                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7087  053D  0024               	movlb	4	; select bank4
  7088  053E  1615               	bsf	21,4	;volatile
  7089  053F                     i1l2820:	
  7090                           
  7091                           ;I2C1.c: 192: }
  7092                           ;I2C1.c: 193: SSP1IF = 0;
  7093  053F  0020               	movlb	0	; select bank0
  7094  0540  1191               	bcf	17,3	;volatile
  7095  0541                     i1l2822:	
  7096                           
  7097                           ;I2C1.c: 194: }
  7098                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7099  0541  0021               	movlb	1	; select bank1
  7100  0542  1D92               	btfss	18,3	;volatile
  7101  0543  0008               	return
  7102  0544  0020               	movlb	0	; select bank0
  7103  0545  1D92               	btfss	18,3	;volatile
  7104  0546  0008               	return
  7105                           
  7106                           ;I2C1.c: 197: BCL1IF = 0;
  7107  0547  1192               	bcf	18,3	;volatile
  7108  0548  0008               	return
  7109  0549                     __end_of_I2C1_Interrupt:	
  7110                           
  7111                           	psect	text35
  7112  0779                     __ptext35:	
  7113 ;; *************** function _CPSx_Read *****************
  7114 ;; Defined at:
  7115 ;;		line 29 in file "mTouch.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7129 ;;      Params:         0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0
  7131 ;;      Temps:          1       0       0       0       0       0
  7132 ;;      Totals:         1       0       0       0       0       0
  7133 ;;Total ram usage:        1 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_Handler
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           
  7143                           ;psect for function _CPSx_Read
  7144  0779                     _CPSx_Read:	
  7145                           
  7146                           ;mTouch.c: 31: static uint8_t channel=0;
  7147                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7151  0779  087A               	movf	CPSx_Read@channel,w
  7152  077A  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7153  077B  0086               	movwf	6
  7154  077C  0187               	clrf	7
  7155  077D  0801               	movf	1,w
  7156  077E  00F0               	movwf	??_CPSx_Read
  7157  077F  087A               	movf	CPSx_Read@channel,w
  7158  0780  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7159  0781  0086               	movwf	6
  7160  0782  0187               	clrf	7
  7161  0783  0870               	movf	??_CPSx_Read,w
  7162  0784  0081               	movwf	1
  7163                           
  7164                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  7165  0785  307F               	movlw	127
  7166  0786  00F0               	movwf	??_CPSx_Read
  7167  0787  0870               	movf	??_CPSx_Read,w
  7168  0788  0020               	movlb	0	; select bank0
  7169  0789  059E               	andwf	30,f	;volatile
  7170                           
  7171                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  7172  078A  0815               	movf	21,w	;volatile
  7173  078B  00F0               	movwf	??_CPSx_Read
  7174  078C  087A               	movf	CPSx_Read@channel,w
  7175  078D  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7176  078E  0086               	movwf	6
  7177  078F  0187               	clrf	7
  7178  0790  0870               	movf	??_CPSx_Read,w
  7179  0791  0081               	movwf	1
  7180                           
  7181                           ;mTouch.c: 36: TMR0 = 0x00;
  7182  0792  0195               	clrf	21	;volatile
  7183                           
  7184                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  7185  0793  179E               	bsf	30,7	;volatile
  7186                           
  7187                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  7188  0794  087A               	movf	CPSx_Read@channel,w
  7189  0795  0AFA               	incf	CPSx_Read@channel,f
  7190  0796  00F0               	movwf	??_CPSx_Read
  7191  0797  3003               	movlw	3
  7192  0798  0270               	subwf	??_CPSx_Read,w
  7193  0799  1803               	btfsc	3,0
  7194  079A  01FA               	clrf	CPSx_Read@channel
  7195                           
  7196                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  7197  079B  087A               	movf	CPSx_Read@channel,w
  7198  079C  009F               	movwf	31	;volatile
  7199  079D  0008               	return
  7200  079E                     __end_of_CPSx_Read:	
  7201                           
  7202                           	psect	text36
  7203  0F90                     __ptext36:	
  7204 ;; *************** function _Buzzer_Handler *****************
  7205 ;; Defined at:
  7206 ;;		line 44 in file "Buzzer.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, pclath, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7220 ;;      Params:         0       0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0
  7223 ;;      Totals:         0       0       0       0       0       0
  7224 ;;Total ram usage:        0 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    1
  7227 ;; This function calls:
  7228 ;;		_Buzzer_SetDuty
  7229 ;; This function is called by:
  7230 ;;		_Handler
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _Buzzer_Handler
  7236  0F90                     _Buzzer_Handler:	
  7237                           
  7238                           ;Buzzer.c: 46: if(count>0)
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  7242  0F90  0878               	movf	_count,w
  7243  0F91  0479               	iorwf	_count+1,w
  7244  0F92  1903               	btfsc	3,2
  7245  0F93  2F9F               	goto	i1l3104
  7246                           
  7247                           ;Buzzer.c: 47: {
  7248                           ;Buzzer.c: 48: count--;
  7249  0F94  3001               	movlw	1
  7250  0F95  02F8               	subwf	_count,f
  7251  0F96  3000               	movlw	0
  7252  0F97  3BF9               	subwfb	_count+1,f
  7253                           
  7254                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7255  0F98  30FF               	movlw	255
  7256  0F99  00F0               	movwf	Buzzer_SetDuty@duty
  7257  0F9A  3001               	movlw	1
  7258  0F9B  00F1               	movwf	Buzzer_SetDuty@duty+1
  7259  0F9C  3187  27DA         	fcall	_Buzzer_SetDuty
  7260                           
  7261                           ;Buzzer.c: 50: }
  7262  0F9E  0008               	return
  7263  0F9F                     i1l3104:	
  7264                           
  7265                           ;Buzzer.c: 51: else
  7266                           ;Buzzer.c: 52: {
  7267                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7268  0F9F  3000               	movlw	0
  7269  0FA0  00F0               	movwf	Buzzer_SetDuty@duty
  7270  0FA1  00F1               	movwf	Buzzer_SetDuty@duty+1
  7271  0FA2  3187  27DA         	fcall	_Buzzer_SetDuty
  7272  0FA4  0008               	return
  7273  0FA5                     __end_of_Buzzer_Handler:	
  7274                           
  7275                           	psect	text37
  7276  07DA                     __ptext37:	
  7277 ;; *************** function _Buzzer_SetDuty *****************
  7278 ;; Defined at:
  7279 ;;		line 31 in file "Buzzer.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  duty            2    0[COMMON] unsigned int 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7293 ;;      Params:         2       0       0       0       0       0
  7294 ;;      Locals:         1       0       0       0       0       0
  7295 ;;      Temps:          2       0       0       0       0       0
  7296 ;;      Totals:         5       0       0       0       0       0
  7297 ;;Total ram usage:        5 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_Buzzer_Handler
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           
  7307                           ;psect for function _Buzzer_SetDuty
  7308  07DA                     _Buzzer_SetDuty:	
  7309                           
  7310                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  7311                           
  7312                           ;incstack = 0
  7313                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  7314  07DA  0025               	movlb	5	; select bank5
  7315  07DB  081A               	movf	26,w	;volatile
  7316  07DC  39CF               	andlw	207
  7317  07DD  00F2               	movwf	??_Buzzer_SetDuty
  7318  07DE  0872               	movf	??_Buzzer_SetDuty,w
  7319  07DF  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  7320                           
  7321                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  7322  07E0  0871               	movf	Buzzer_SetDuty@duty+1,w
  7323  07E1  00F3               	movwf	??_Buzzer_SetDuty+1
  7324  07E2  0870               	movf	Buzzer_SetDuty@duty,w
  7325  07E3  00F2               	movwf	??_Buzzer_SetDuty
  7326  07E4  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7327  07E5  0CF2               	rrf	??_Buzzer_SetDuty,f
  7328  07E6  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7329  07E7  0CF2               	rrf	??_Buzzer_SetDuty,f
  7330  07E8  0872               	movf	??_Buzzer_SetDuty,w
  7331  07E9  0098               	movwf	24	;volatile
  7332                           
  7333                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  7334  07EA  0870               	movf	Buzzer_SetDuty@duty,w
  7335  07EB  3903               	andlw	3
  7336  07EC  00F2               	movwf	??_Buzzer_SetDuty
  7337  07ED  3003               	movlw	3
  7338  07EE                     u227_25:	
  7339  07EE  35F2               	lslf	??_Buzzer_SetDuty,f
  7340  07EF  3EFF               	addlw	-1
  7341  07F0  1D03               	skipz
  7342  07F1  2FEE               	goto	u227_25
  7343  07F2  3572               	lslf	??_Buzzer_SetDuty,w
  7344  07F3  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  7345  07F4  009A               	movwf	26	;volatile
  7346  07F5  0008               	return
  7347  07F6                     __end_of_Buzzer_SetDuty:	
  7348  007E                     btemp	set	126	;btemp
  7349  007E                     int$flags	set	126
  7350  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     70      76
    BANK1            80      5      54
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10111
                                              0 BANK1      5     5      0
                         _Basic_Init
                        _Buzzer_Init
                  _Buzzer_MiliSecond
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    6477
                                             62 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5683
                                             14 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _Buzzer_MiliSecond
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      36       8       67.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      8D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May  2 00:56:41 2017

                 __CFG_CP$OFF 0000                            l74 05EC                            l91 032B  
                          l78 061D                I2C2_Transmit@i 0025         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0022                           l100 0354                           l211 05A8  
                         l109 0371                           l215 05D9                           l228 0294  
                         l237 02BD                           l246 02DA                           l338 074E  
                         l620 0049                           l635 00C5                           l653 0160  
                         l676 0217                           l898 07C7                           _GIE 005F  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 0FA5  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0F0F                          l3702 0337  
                        l4510 00D2                          l4502 00BD                          l3720 0393  
                        l3704 033B                          l3706 0362                          l3802 02E0  
                        l3810 02FF                          l3660 0601                          l3740 05B2  
                        l3716 0377                          l3724 0396                          l3804 02F7  
                        l3812 0308                          l3900 071D                          l4444 06C3  
                        l4436 06B3                          l4612 024C                          l4604 022D  
                        l4540 0137                          l4532 0111                          l4524 00ED  
                        l3662 0603                          l3654 05F6                          l3718 038E  
                        l3726 039F                          l3806 02FC                          l3902 0725  
                        l4454 0FBC                          l4606 0236                          l4542 013A  
                        l4526 00FB                          l4518 00E0                          l3672 0612  
                        l3680 030E                          l4616 025E                          l4608 023A  
                        l4560 018F                          l4544 013C                          l4536 0115  
                        l4528 00FF                          l4552 0148                          l3746 05BD  
                        l3762 05D0                          l3682 031C                          l3826 07C1  
                        l4618 0262                          l4570 01B9                          l4562 0198  
                        l4546 013E                          l4538 012A                          l4490 008B  
                        l4482 0077                          l3676 0614                          l3748 05BF  
                        l3692 033F                          l3844 055A                          l4572 01BB  
                        l4564 01A8                          l4548 0143                          l4492 008E  
                        l4468 0062                          l3758 05CE                          l3790 02A4  
                        l3766 0277                          l3854 0588                          l3846 0568  
                        l3870 063B                          l4582 01F5                          l4558 017A  
                        l3792 02CB                          l3768 0285                          l4680 03D6  
                        l3890 0745                          l3778 02A8                          l3858 0593  
                        l3874 0653                          l4586 01FD                          l4498 00B5  
                        l4690 03CE                          l3884 072A                          l3788 02A0  
                        l3868 062D                          l4684 03C1                          l3886 0737  
                        l3894 06FF                          l3878 065E                          l4598 0225  
                        l3896 070C                          STR_1 06EB                          STR_2 06F0  
                        STR_3 06F5                          STR_4 06FA                          STR_5 06D1  
                        STR_6 06DF                          STR_7 06E5                          STR_8 06D8  
                        u4145 0FD7                          u3355 0671                          u3705 07CD  
                        _PEIE 005E                          u3805 0630                          u4525 010F  
                        u3735 055D                          u4535 0123                          u3825 0649  
                        u3755 0569                          u3835 0654                          u3765 057D  
                        u3775 0589                          u3695 07C8                          u4655 024A  
                        u4907 0FE2                          u4675 0270                          u4755 03F5  
                        u4917 066A                          u4765 0410                          u4775 042B  
                        u4857 043B                          u4867 0454                          u4877 0469  
                        u4887 047E                          u4897 0F54         Buzzer_MiliSecond@time 0020  
                        _TMR0 0015                          _TMR1 0016                          _TMR2 001A  
                        _TMR4 0415               ??_I2C1_Transmit 0022                  __CFG_WRT$OFF 0000  
                        _main 03A2              __end_of_I2C_Init 0751                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0022              ??_I2C1_Interrupt 0070  
                        start 0030                 __CFG_IESO$OFF 0000               __end_of_Handler 0030  
               _LCD_WriteData 0667                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
          __size_of_CPSx_Read 0025      __end_of_LCD_DisplayClear 0F5A         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 04A1                 __CFG_PLLEN$ON 0000                   LCD_Put@word 0023  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 059C  
                       _T1CON 0018               __end_of___llmod 0667                         _T2CON 001C  
                       _LATA3 0863                         _LATA4 0864                         _LATA6 0866  
                       _T4CON 0417                         i1l157 0518                         i1l294 04C4  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0021                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _count 0078                 ??_Buzzer_Init 0020  
                       _xputc 06A4                         _xputs 0FBA                         pclath 000A  
                       status 0003                         wtemp0 007E             _Buzzer_MiliSecond 07F6  
             __end_of_xprintf 0F6A                  _I2C_Transmit 06FC            _LCD_CursorPosition 0FCF  
              ?_LCD_WriteData 0070            ?_Buzzer_MiliSecond 0020              ??_DAC_Initialize 0030  
             __initialization 0032                  __end_of_main 0432           ?_LCD_CursorPosition 0023  
         ??_Buzzer_MiliSecond 0022                        ??_main 00D1                     ??_LCD_Put 0024  
            CPSx_Read@channel 007A                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
              _Timer1_Handler 0F0F              ___llmod@dividend 0024          __size_of_mTouch_Init 0013  
                      _CCPR2L 0298          ??_LCD_CursorPosition 0024                        _ANSELA 018C  
                      _ANSELB 018D                        _T1GCON 0019             __end_of_CPSx_Read 079E  
                      ?_xputc 0070                        ?_xputs 0070                        i1l3104 0F9F  
                      i1l3322 0F21                        i1l2810 0522                        i1l3506 0026  
                      i1l2820 053F                        i1l2822 0541                        i1l2816 0538  
                      i1l2840 04AE                        i1l2818 053D                        i1l2860 04CE  
          I2C2_Transmit@i_316 0026                        i1l2790 0502                        i1l2870 04EB  
                      i1l2848 04B7                        i1l2872 04ED                        i1l2866 04E4  
                      i1l2868 04E9                        i1l2798 050B     __end_of_Buzzer_MiliSecond 0800  
                      u227_25 07EE                        _OSCCON 0099            I2C2_Transmit@pData 0020  
              _Timer4_Handler 0F18                        _TMR1IE 0488                        _TMR1IF 0088  
                   ??_Handler 0075                        _TMR4IE 0499                        _TMR4IF 0099  
                      _TMR1ON 00C0                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0               _mTouch_PortInit 0F3D  
               ??_Timer1_Init 0020                 ??_Timer4_Init 0020           __end_of_Buzzer_Init 0779  
                      ___wmul 07BE                     ??___lldiv 0028                     ??___llmod 0028  
                      _outptr 0068              I2C_Transmit@I2Cx 002E                     ?_I2C_Init 0025  
      __end_of_Timer1_Handler 0F18              I2C_Transmit@size 002A        __end_of_Timer4_Handler 0F23  
                      xputc@c 0025                     ??_xprintf 0064       __end_of__initialization 0045  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0020              __end_of_xvprintf 0273  
                  _VoltageReg 0069            Buzzer_SetDuty@duty 0070                __pcstackCOMMON 0070  
         __size_of_Basic_Init 0015           __end_of_Timer1_Init 1000           __end_of_Timer4_Init 0F7D  
               __end_of_xputc 06D1                 __end_of_xputs 0FCF     Buzzer_SetDuty@CCP2CON_Pre 0074  
                  ??_I2C_Init 0028               ?_Timer1_Handler 0070           I2C1_Transmit@result 0027  
     __size_of_Buzzer_Handler 0015               ?_Timer4_Handler 0070       __end_of_mTouch_PortInit 0F4A  
                     ??_xputc 0024                       ??_xputs 0026                    __pbssBANK0 0066  
                  __pbssBANK1 00A0    __size_of_Buzzer_MiliSecond 000A                   _Buzzer_Init 0751  
                  ??_LCD_Init 0024       __size_of_Buzzer_SetDuty 001C                  I2C_Init@I2Cx 002A  
 __end_of_I2C_CommonInterrupt 0F02                  I2C_Init@mode 0026                    __pmaintext 03A2  
                     ?___wmul 0020                    __pintentry 0004                       _CCP2CON 029A  
           ?_LCD_DisplayClear 0070                       _APFCON0 011D                       _APFCON1 011E  
                     _CCPTMRS 029E            ??_LCD_DisplayClear 0023                       _CPSCON0 001E  
                     _CPSCON1 001F                       _LCD_Put 0F08                  _xvprintf$667 0045  
                _xvprintf$668 0049                  _xvprintf$669 004B                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           I2C2_Transmit@result 0027  
                     _Handler 0004         __end_of_I2C1_Transmit 03A2         __end_of_I2C2_Transmit 030B  
                 _Timer1_Init 0FE6                   _Timer4_Init 0F6A                       ___lldiv 0549  
             __size_of___wmul 001C                       ___llmod 0624               __CFG_STVREN$OFF 0000  
                     __ptext1 0F5A                       __ptext2 0049                       __ptext3 0FBA  
                     __ptext4 06A4                       __ptext5 0F08                       __ptext6 07BE  
                     __ptext7 0624                       __ptext8 0549                       __ptext9 0F7D  
                   ?_xvprintf 002E                  ??_Basic_Init 0020                       clrloop0 0F03  
        end_of_initialization 0045              ?_mTouch_PortInit 0070                       _xprintf 0F5A  
               ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070                   _I2C1_Config 00BE  
                   _CPSx_Read 0779                   _I2C2_Config 00AB                 ?_I2C1_Setting 0021  
             ___lldiv@divisor 0020                 ?_I2C2_Setting 0021               ___lldiv@counter 002D  
           I2C_Transmit@pData 0029            __end_of_Basic_Init 0FBA                  __pstringtext 06D1  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                 ??_mTouch_Init 0021  
                  ??_xvprintf 0031       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A  
         I2C1_Setting@address 0024                _Buzzer_Handler 0F90   __size_of_LCD_CursorPosition 0017  
              ??_I2C1_PinInit 0020                ??_I2C2_PinInit 0020                _Buzzer_SetDuty 07DA  
              ??_I2C1_Setting 0023                    ?_CPSx_Read 0070                ??_I2C2_Setting 0023  
           __size_of_LCD_Init 006F                __end_of___wmul 07DA                     _ConfigReg 006B  
            ??_Timer1_Handler 0070       __size_of_DAC_Initialize 0020              ??_Timer4_Handler 0070  
         start_initialization 0032        __end_of_Buzzer_Handler 0FA5          I2C1_Transmit@address 0024  
                   _MemoryReg 00A6        __end_of_Buzzer_SetDuty 07F6                  ?_Buzzer_Init 0070  
         __end_of_mTouch_Init 0F90           I2C2_Setting@address 0024               ___llmod@divisor 0020  
             ___llmod@counter 0029          LCD_CursorPosition@tx 0025          LCD_CursorPosition@ty 0023  
       __end_of_LCD_WriteData 06A4                      ??___wmul 0024             I2C1_Setting@Speed 0022  
                    ?_LCD_Put 0023                   __pbssCOMMON 0076                     ___latbits 0001  
               __pcstackBANK0 0020                 __pcstackBANK1 00D1               ?_Buzzer_Handler 0070  
          I2C1_Transmit@i_172 0026            I2C1_Transmit@pData 0020     __size_of_LCD_DisplayClear 0010  
             ?_Buzzer_SetDuty 0070               I2C_Init@address 0025                      ?_Handler 0070  
                 ??_CPSx_Read 0070                 ?_I2C_Transmit 0028                 I2C_Init@Speed 0027  
                ?_Timer1_Init 0070                  ?_Timer4_Init 0070                      ?___lldiv 0020  
                    ?___llmod 0020                _I2C1_Interrupt 04F5          __end_of_I2C1_PinInit 0F30  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0F3D          __end_of_I2C1_Setting 0624  
                    _I2C_Init 0727          __end_of_I2C2_Setting 05E0                _I2C2_Interrupt 04A1  
                 _mTouch_Init 0F7D             __size_of_xvprintf 022A                      ?_xprintf 005E  
              __size_of_xputc 002D                __size_of_xputs 0015                      _LCD_Init 0432  
              ___wmul@product 0024                      _CPS_Data 00A0                ??_I2C_Transmit 002B  
                   clear_ram0 0F02        __end_of_I2C1_Interrupt 0549                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0024                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
                Handler@count 00A9             ___wmul@multiplier 0020                _DAC_Initialize 079E  
      __end_of_I2C2_Interrupt 04F5        __size_of_I2C1_Transmit 0097                     _xfunc_out 0066  
            __size_of_LCD_Put 0007        __size_of_I2C2_Transmit 0098                   _CPS_PreData 00A3  
            __size_of_Handler 002C          __size_of_Buzzer_Init 0028      __size_of_mTouch_PortInit 000D  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 07BE              __size_of___lldiv 0053  
            __size_of___llmod 0043              I2C1_Setting@mode 0021            LCD_WriteData@point 0022  
             ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0021    __end_of_LCD_CursorPosition 0FE6  
                    __ptext10 0F3D                      __ptext11 0F6A                      __ptext20 030B  
                    __ptext12 0FE6                      __ptext21 0727                      __ptext13 0432  
                    __ptext30 0F18                      __ptext22 059C                      __ptext14 0F4A  
                    __ptext31 0F0F                      __ptext23 0F30                      __ptext15 0FCF  
                    __ptext32 0EFC                      __ptext24 05E0                      __ptext16 0667  
                    __ptext33 04A1                      __ptext25 0F23                      __ptext17 079E  
                    __ptext34 04F5                      __ptext26 07F6                      __ptext18 06FC  
                    __ptext35 0779                      __ptext27 0751                      __ptext19 0273  
                    __ptext36 0F90                      __ptext28 0FA5                      __ptext37 07DA  
                _SSP1CON1bits 0215                  _SSP1CON2bits 0216              _LCD_DisplayClear 0F4A  
                _SSP2CON1bits 021D                  _SSP2CON2bits 021E              __size_of_xprintf 0010  
               __size_of_main 0090                 _I2C1_Transmit 030B                 _I2C2_Transmit 0273  
       __size_of_I2C1_PinInit 000D          __size_of_Timer1_Init 001A                      int$flags 007E  
       __size_of_I2C2_PinInit 000D          __size_of_Timer4_Init 0013           I2C_Transmit@address 0028  
       __size_of_I2C1_Setting 0044               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0076         __size_of_I2C2_Setting 0044                  _SSP2STATbits 021C  
            ??_Buzzer_Handler 0075          __end_of_I2C_Transmit 0727             I2C2_Setting@Speed 0022  
            ??_Buzzer_SetDuty 0072                      _xvprintf 0049                    xprintf@arp 0065  
                  xprintf@fmt 005E                      intlevel1 0000           _I2C_CommonInterrupt 0EFC  
                _I2C1_PinInit 0F23              ___lldiv@dividend 0024                ?_I2C1_Transmit 0020  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0F30                  _I2C1_Setting 05E0  
              ?_I2C2_Transmit 0020                  _I2C2_Setting 059C                   xvprintf@arp 0030  
                 xvprintf@fmt 002E            I2C_Transmit@result 002F             ??_mTouch_PortInit 0020  
            I2C2_Setting@mode 0021          ?_I2C_CommonInterrupt 0070                    _OPTION_REG 0095  
            ___lldiv@quotient 0029                  ?_mTouch_Init 0070        __size_of_LCD_WriteData 003D  
     __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0025                      xputs@str 0027  
                   xvprintf@c 005D                     xvprintf@d 005C                     xvprintf@f 0058  
                   xvprintf@i 005A                     xvprintf@j 0052                     xvprintf@p 004D  
                   xvprintf@r 004E                     xvprintf@s 0035                     xvprintf@v 0054  
                   xvprintf@w 0050       __size_of_Timer4_Handler 000B  
