

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 12:24:20 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 1.41
    65                           ; Generated 25/01/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1827 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0115                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0118                     	;# 
   154  0119                     	;# 
   155  011A                     	;# 
   156  011B                     	;# 
   157  011D                     	;# 
   158  011E                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0194                     	;# 
   168  0195                     	;# 
   169  0196                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021E                     	;# 
   204  021F                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  029E                     	;# 
   222  029E                     	;# 
   223  0311                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0318                     	;# 
   228  0318                     	;# 
   229  0319                     	;# 
   230  031A                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0415                     	;# 
   240  0416                     	;# 
   241  0417                     	;# 
   242  041C                     	;# 
   243  041D                     	;# 
   244  041E                     	;# 
   245  0FE4                     	;# 
   246  0FE5                     	;# 
   247  0FE6                     	;# 
   248  0FE7                     	;# 
   249  0FE8                     	;# 
   250  0FE9                     	;# 
   251  0FEA                     	;# 
   252  0FEB                     	;# 
   253  0FED                     	;# 
   254  0FEE                     	;# 
   255  0FEF                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0113                     	;# 
   307  0114                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  0118                     	;# 
   312  0119                     	;# 
   313  011A                     	;# 
   314  011B                     	;# 
   315  011D                     	;# 
   316  011E                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020C                     	;# 
   340  020D                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0219                     	;# 
   357  021A                     	;# 
   358  021B                     	;# 
   359  021C                     	;# 
   360  021D                     	;# 
   361  021E                     	;# 
   362  021F                     	;# 
   363  0291                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0293                     	;# 
   367  0294                     	;# 
   368  0295                     	;# 
   369  0295                     	;# 
   370  0296                     	;# 
   371  0298                     	;# 
   372  0298                     	;# 
   373  0299                     	;# 
   374  029A                     	;# 
   375  029B                     	;# 
   376  029C                     	;# 
   377  029C                     	;# 
   378  029D                     	;# 
   379  029E                     	;# 
   380  029E                     	;# 
   381  0311                     	;# 
   382  0311                     	;# 
   383  0312                     	;# 
   384  0313                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  0394                     	;# 
   390  0395                     	;# 
   391  0396                     	;# 
   392  039A                     	;# 
   393  039C                     	;# 
   394  039D                     	;# 
   395  039E                     	;# 
   396  039F                     	;# 
   397  0415                     	;# 
   398  0416                     	;# 
   399  0417                     	;# 
   400  041C                     	;# 
   401  041D                     	;# 
   402  041E                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  0111                     	;# 
   463  0112                     	;# 
   464  0113                     	;# 
   465  0114                     	;# 
   466  0115                     	;# 
   467  0116                     	;# 
   468  0117                     	;# 
   469  0118                     	;# 
   470  0119                     	;# 
   471  011A                     	;# 
   472  011B                     	;# 
   473  011D                     	;# 
   474  011E                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0194                     	;# 
   484  0195                     	;# 
   485  0196                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0219                     	;# 
   515  021A                     	;# 
   516  021B                     	;# 
   517  021C                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0294                     	;# 
   526  0295                     	;# 
   527  0295                     	;# 
   528  0296                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  029B                     	;# 
   534  029C                     	;# 
   535  029C                     	;# 
   536  029D                     	;# 
   537  029E                     	;# 
   538  029E                     	;# 
   539  0311                     	;# 
   540  0311                     	;# 
   541  0312                     	;# 
   542  0313                     	;# 
   543  0318                     	;# 
   544  0318                     	;# 
   545  0319                     	;# 
   546  031A                     	;# 
   547  0394                     	;# 
   548  0395                     	;# 
   549  0396                     	;# 
   550  039A                     	;# 
   551  039C                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0014                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001C                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0113                     	;# 
   623  0114                     	;# 
   624  0115                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  0118                     	;# 
   628  0119                     	;# 
   629  011A                     	;# 
   630  011B                     	;# 
   631  011D                     	;# 
   632  011E                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0191                     	;# 
   636  0191                     	;# 
   637  0192                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0194                     	;# 
   642  0195                     	;# 
   643  0196                     	;# 
   644  0199                     	;# 
   645  019A                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019C                     	;# 
   651  019C                     	;# 
   652  019D                     	;# 
   653  019E                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0219                     	;# 
   673  021A                     	;# 
   674  021B                     	;# 
   675  021C                     	;# 
   676  021D                     	;# 
   677  021E                     	;# 
   678  021F                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0295                     	;# 
   685  0295                     	;# 
   686  0296                     	;# 
   687  0298                     	;# 
   688  0298                     	;# 
   689  0299                     	;# 
   690  029A                     	;# 
   691  029B                     	;# 
   692  029C                     	;# 
   693  029C                     	;# 
   694  029D                     	;# 
   695  029E                     	;# 
   696  029E                     	;# 
   697  0311                     	;# 
   698  0311                     	;# 
   699  0312                     	;# 
   700  0313                     	;# 
   701  0318                     	;# 
   702  0318                     	;# 
   703  0319                     	;# 
   704  031A                     	;# 
   705  0394                     	;# 
   706  0395                     	;# 
   707  0396                     	;# 
   708  039A                     	;# 
   709  039C                     	;# 
   710  039D                     	;# 
   711  039E                     	;# 
   712  039F                     	;# 
   713  0415                     	;# 
   714  0416                     	;# 
   715  0417                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  0FE4                     	;# 
   720  0FE5                     	;# 
   721  0FE6                     	;# 
   722  0FE7                     	;# 
   723  0FE8                     	;# 
   724  0FE9                     	;# 
   725  0FEA                     	;# 
   726  0FEB                     	;# 
   727  0FED                     	;# 
   728  0FEE                     	;# 
   729  0FEF                     	;# 
   730  0000                     	;# 
   731  0001                     	;# 
   732  0002                     	;# 
   733  0003                     	;# 
   734  0004                     	;# 
   735  0005                     	;# 
   736  0006                     	;# 
   737  0007                     	;# 
   738  0008                     	;# 
   739  0009                     	;# 
   740  000A                     	;# 
   741  000B                     	;# 
   742  000C                     	;# 
   743  000D                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0013                     	;# 
   747  0014                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0016                     	;# 
   751  0017                     	;# 
   752  0018                     	;# 
   753  0019                     	;# 
   754  001A                     	;# 
   755  001B                     	;# 
   756  001C                     	;# 
   757  001E                     	;# 
   758  001F                     	;# 
   759  008C                     	;# 
   760  008D                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0095                     	;# 
   766  0096                     	;# 
   767  0097                     	;# 
   768  0098                     	;# 
   769  0099                     	;# 
   770  009A                     	;# 
   771  009B                     	;# 
   772  009B                     	;# 
   773  009C                     	;# 
   774  009D                     	;# 
   775  009E                     	;# 
   776  010C                     	;# 
   777  010D                     	;# 
   778  0111                     	;# 
   779  0112                     	;# 
   780  0113                     	;# 
   781  0114                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011A                     	;# 
   788  011B                     	;# 
   789  011D                     	;# 
   790  011E                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  0191                     	;# 
   794  0191                     	;# 
   795  0192                     	;# 
   796  0193                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0194                     	;# 
   800  0195                     	;# 
   801  0196                     	;# 
   802  0199                     	;# 
   803  019A                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019C                     	;# 
   809  019C                     	;# 
   810  019D                     	;# 
   811  019E                     	;# 
   812  019F                     	;# 
   813  020C                     	;# 
   814  020D                     	;# 
   815  0211                     	;# 
   816  0211                     	;# 
   817  0212                     	;# 
   818  0212                     	;# 
   819  0213                     	;# 
   820  0213                     	;# 
   821  0214                     	;# 
   822  0214                     	;# 
   823  0215                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0216                     	;# 
   827  0216                     	;# 
   828  0217                     	;# 
   829  0217                     	;# 
   830  0219                     	;# 
   831  021A                     	;# 
   832  021B                     	;# 
   833  021C                     	;# 
   834  021D                     	;# 
   835  021E                     	;# 
   836  021F                     	;# 
   837  0291                     	;# 
   838  0291                     	;# 
   839  0292                     	;# 
   840  0293                     	;# 
   841  0294                     	;# 
   842  0295                     	;# 
   843  0295                     	;# 
   844  0296                     	;# 
   845  0298                     	;# 
   846  0298                     	;# 
   847  0299                     	;# 
   848  029A                     	;# 
   849  029B                     	;# 
   850  029C                     	;# 
   851  029C                     	;# 
   852  029D                     	;# 
   853  029E                     	;# 
   854  029E                     	;# 
   855  0311                     	;# 
   856  0311                     	;# 
   857  0312                     	;# 
   858  0313                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  0394                     	;# 
   864  0395                     	;# 
   865  0396                     	;# 
   866  039A                     	;# 
   867  039C                     	;# 
   868  039D                     	;# 
   869  039E                     	;# 
   870  039F                     	;# 
   871  0415                     	;# 
   872  0416                     	;# 
   873  0417                     	;# 
   874  041C                     	;# 
   875  041D                     	;# 
   876  041E                     	;# 
   877  0FE4                     	;# 
   878  0FE5                     	;# 
   879  0FE6                     	;# 
   880  0FE7                     	;# 
   881  0FE8                     	;# 
   882  0FE9                     	;# 
   883  0FEA                     	;# 
   884  0FEB                     	;# 
   885  0FED                     	;# 
   886  0FEE                     	;# 
   887  0FEF                     	;# 
   888  0000                     	;# 
   889  0001                     	;# 
   890  0002                     	;# 
   891  0003                     	;# 
   892  0004                     	;# 
   893  0005                     	;# 
   894  0006                     	;# 
   895  0007                     	;# 
   896  0008                     	;# 
   897  0009                     	;# 
   898  000A                     	;# 
   899  000B                     	;# 
   900  000C                     	;# 
   901  000D                     	;# 
   902  0011                     	;# 
   903  0012                     	;# 
   904  0013                     	;# 
   905  0014                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  001E                     	;# 
   916  001F                     	;# 
   917  008C                     	;# 
   918  008D                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0094                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0097                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009A                     	;# 
   929  009B                     	;# 
   930  009B                     	;# 
   931  009C                     	;# 
   932  009D                     	;# 
   933  009E                     	;# 
   934  010C                     	;# 
   935  010D                     	;# 
   936  0111                     	;# 
   937  0112                     	;# 
   938  0113                     	;# 
   939  0114                     	;# 
   940  0115                     	;# 
   941  0116                     	;# 
   942  0117                     	;# 
   943  0118                     	;# 
   944  0119                     	;# 
   945  011A                     	;# 
   946  011B                     	;# 
   947  011D                     	;# 
   948  011E                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0191                     	;# 
   952  0191                     	;# 
   953  0192                     	;# 
   954  0193                     	;# 
   955  0193                     	;# 
   956  0193                     	;# 
   957  0194                     	;# 
   958  0195                     	;# 
   959  0196                     	;# 
   960  0199                     	;# 
   961  019A                     	;# 
   962  019B                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019C                     	;# 
   967  019C                     	;# 
   968  019D                     	;# 
   969  019E                     	;# 
   970  019F                     	;# 
   971  020C                     	;# 
   972  020D                     	;# 
   973  0211                     	;# 
   974  0211                     	;# 
   975  0212                     	;# 
   976  0212                     	;# 
   977  0213                     	;# 
   978  0213                     	;# 
   979  0214                     	;# 
   980  0214                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0216                     	;# 
   985  0216                     	;# 
   986  0217                     	;# 
   987  0217                     	;# 
   988  0219                     	;# 
   989  021A                     	;# 
   990  021B                     	;# 
   991  021C                     	;# 
   992  021D                     	;# 
   993  021E                     	;# 
   994  021F                     	;# 
   995  0291                     	;# 
   996  0291                     	;# 
   997  0292                     	;# 
   998  0293                     	;# 
   999  0294                     	;# 
  1000  0295                     	;# 
  1001  0295                     	;# 
  1002  0296                     	;# 
  1003  0298                     	;# 
  1004  0298                     	;# 
  1005  0299                     	;# 
  1006  029A                     	;# 
  1007  029B                     	;# 
  1008  029C                     	;# 
  1009  029C                     	;# 
  1010  029D                     	;# 
  1011  029E                     	;# 
  1012  029E                     	;# 
  1013  0311                     	;# 
  1014  0311                     	;# 
  1015  0312                     	;# 
  1016  0313                     	;# 
  1017  0318                     	;# 
  1018  0318                     	;# 
  1019  0319                     	;# 
  1020  031A                     	;# 
  1021  0394                     	;# 
  1022  0395                     	;# 
  1023  0396                     	;# 
  1024  039A                     	;# 
  1025  039C                     	;# 
  1026  039D                     	;# 
  1027  039E                     	;# 
  1028  039F                     	;# 
  1029  0415                     	;# 
  1030  0416                     	;# 
  1031  0417                     	;# 
  1032  041C                     	;# 
  1033  041D                     	;# 
  1034  041E                     	;# 
  1035  0FE4                     	;# 
  1036  0FE5                     	;# 
  1037  0FE6                     	;# 
  1038  0FE7                     	;# 
  1039  0FE8                     	;# 
  1040  0FE9                     	;# 
  1041  0FEA                     	;# 
  1042  0FEB                     	;# 
  1043  0FED                     	;# 
  1044  0FEE                     	;# 
  1045  0FEF                     	;# 
  1046  0000                     	;# 
  1047  0001                     	;# 
  1048  0002                     	;# 
  1049  0003                     	;# 
  1050  0004                     	;# 
  1051  0005                     	;# 
  1052  0006                     	;# 
  1053  0007                     	;# 
  1054  0008                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0013                     	;# 
  1063  0014                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001E                     	;# 
  1074  001F                     	;# 
  1075  008C                     	;# 
  1076  008D                     	;# 
  1077  0091                     	;# 
  1078  0092                     	;# 
  1079  0093                     	;# 
  1080  0094                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  0111                     	;# 
  1095  0112                     	;# 
  1096  0113                     	;# 
  1097  0114                     	;# 
  1098  0115                     	;# 
  1099  0116                     	;# 
  1100  0117                     	;# 
  1101  0118                     	;# 
  1102  0119                     	;# 
  1103  011A                     	;# 
  1104  011B                     	;# 
  1105  011D                     	;# 
  1106  011E                     	;# 
  1107  018C                     	;# 
  1108  018D                     	;# 
  1109  0191                     	;# 
  1110  0191                     	;# 
  1111  0192                     	;# 
  1112  0193                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0194                     	;# 
  1116  0195                     	;# 
  1117  0196                     	;# 
  1118  0199                     	;# 
  1119  019A                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019C                     	;# 
  1125  019C                     	;# 
  1126  019D                     	;# 
  1127  019E                     	;# 
  1128  019F                     	;# 
  1129  020C                     	;# 
  1130  020D                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0216                     	;# 
  1143  0216                     	;# 
  1144  0217                     	;# 
  1145  0217                     	;# 
  1146  0219                     	;# 
  1147  021A                     	;# 
  1148  021B                     	;# 
  1149  021C                     	;# 
  1150  021D                     	;# 
  1151  021E                     	;# 
  1152  021F                     	;# 
  1153  0291                     	;# 
  1154  0291                     	;# 
  1155  0292                     	;# 
  1156  0293                     	;# 
  1157  0294                     	;# 
  1158  0295                     	;# 
  1159  0295                     	;# 
  1160  0296                     	;# 
  1161  0298                     	;# 
  1162  0298                     	;# 
  1163  0299                     	;# 
  1164  029A                     	;# 
  1165  029B                     	;# 
  1166  029C                     	;# 
  1167  029C                     	;# 
  1168  029D                     	;# 
  1169  029E                     	;# 
  1170  029E                     	;# 
  1171  0311                     	;# 
  1172  0311                     	;# 
  1173  0312                     	;# 
  1174  0313                     	;# 
  1175  0318                     	;# 
  1176  0318                     	;# 
  1177  0319                     	;# 
  1178  031A                     	;# 
  1179  0394                     	;# 
  1180  0395                     	;# 
  1181  0396                     	;# 
  1182  039A                     	;# 
  1183  039C                     	;# 
  1184  039D                     	;# 
  1185  039E                     	;# 
  1186  039F                     	;# 
  1187  0415                     	;# 
  1188  0416                     	;# 
  1189  0417                     	;# 
  1190  041C                     	;# 
  1191  041D                     	;# 
  1192  041E                     	;# 
  1193  0FE4                     	;# 
  1194  0FE5                     	;# 
  1195  0FE6                     	;# 
  1196  0FE7                     	;# 
  1197  0FE8                     	;# 
  1198  0FE9                     	;# 
  1199  0FEA                     	;# 
  1200  0FEB                     	;# 
  1201  0FED                     	;# 
  1202  0FEE                     	;# 
  1203  0FEF                     	;# 
  1204  0000                     	;# 
  1205  0001                     	;# 
  1206  0002                     	;# 
  1207  0003                     	;# 
  1208  0004                     	;# 
  1209  0005                     	;# 
  1210  0006                     	;# 
  1211  0007                     	;# 
  1212  0008                     	;# 
  1213  0009                     	;# 
  1214  000A                     	;# 
  1215  000B                     	;# 
  1216  000C                     	;# 
  1217  000D                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0013                     	;# 
  1221  0014                     	;# 
  1222  0015                     	;# 
  1223  0016                     	;# 
  1224  0016                     	;# 
  1225  0017                     	;# 
  1226  0018                     	;# 
  1227  0019                     	;# 
  1228  001A                     	;# 
  1229  001B                     	;# 
  1230  001C                     	;# 
  1231  001E                     	;# 
  1232  001F                     	;# 
  1233  008C                     	;# 
  1234  008D                     	;# 
  1235  0091                     	;# 
  1236  0092                     	;# 
  1237  0093                     	;# 
  1238  0094                     	;# 
  1239  0095                     	;# 
  1240  0096                     	;# 
  1241  0097                     	;# 
  1242  0098                     	;# 
  1243  0099                     	;# 
  1244  009A                     	;# 
  1245  009B                     	;# 
  1246  009B                     	;# 
  1247  009C                     	;# 
  1248  009D                     	;# 
  1249  009E                     	;# 
  1250  010C                     	;# 
  1251  010D                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0115                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0118                     	;# 
  1260  0119                     	;# 
  1261  011A                     	;# 
  1262  011B                     	;# 
  1263  011D                     	;# 
  1264  011E                     	;# 
  1265  018C                     	;# 
  1266  018D                     	;# 
  1267  0191                     	;# 
  1268  0191                     	;# 
  1269  0192                     	;# 
  1270  0193                     	;# 
  1271  0193                     	;# 
  1272  0193                     	;# 
  1273  0194                     	;# 
  1274  0195                     	;# 
  1275  0196                     	;# 
  1276  0199                     	;# 
  1277  019A                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019E                     	;# 
  1286  019F                     	;# 
  1287  020C                     	;# 
  1288  020D                     	;# 
  1289  0211                     	;# 
  1290  0211                     	;# 
  1291  0212                     	;# 
  1292  0212                     	;# 
  1293  0213                     	;# 
  1294  0213                     	;# 
  1295  0214                     	;# 
  1296  0214                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0216                     	;# 
  1301  0216                     	;# 
  1302  0217                     	;# 
  1303  0217                     	;# 
  1304  0219                     	;# 
  1305  021A                     	;# 
  1306  021B                     	;# 
  1307  021C                     	;# 
  1308  021D                     	;# 
  1309  021E                     	;# 
  1310  021F                     	;# 
  1311  0291                     	;# 
  1312  0291                     	;# 
  1313  0292                     	;# 
  1314  0293                     	;# 
  1315  0294                     	;# 
  1316  0295                     	;# 
  1317  0295                     	;# 
  1318  0296                     	;# 
  1319  0298                     	;# 
  1320  0298                     	;# 
  1321  0299                     	;# 
  1322  029A                     	;# 
  1323  029B                     	;# 
  1324  029C                     	;# 
  1325  029C                     	;# 
  1326  029D                     	;# 
  1327  029E                     	;# 
  1328  029E                     	;# 
  1329  0311                     	;# 
  1330  0311                     	;# 
  1331  0312                     	;# 
  1332  0313                     	;# 
  1333  0318                     	;# 
  1334  0318                     	;# 
  1335  0319                     	;# 
  1336  031A                     	;# 
  1337  0394                     	;# 
  1338  0395                     	;# 
  1339  0396                     	;# 
  1340  039A                     	;# 
  1341  039C                     	;# 
  1342  039D                     	;# 
  1343  039E                     	;# 
  1344  039F                     	;# 
  1345  0415                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  041C                     	;# 
  1349  041D                     	;# 
  1350  041E                     	;# 
  1351  0FE4                     	;# 
  1352  0FE5                     	;# 
  1353  0FE6                     	;# 
  1354  0FE7                     	;# 
  1355  0FE8                     	;# 
  1356  0FE9                     	;# 
  1357  0FEA                     	;# 
  1358  0FEB                     	;# 
  1359  0FED                     	;# 
  1360  0FEE                     	;# 
  1361  0FEF                     	;# 
  1362  0000                     	;# 
  1363  0001                     	;# 
  1364  0002                     	;# 
  1365  0003                     	;# 
  1366  0004                     	;# 
  1367  0005                     	;# 
  1368  0006                     	;# 
  1369  0007                     	;# 
  1370  0008                     	;# 
  1371  0009                     	;# 
  1372  000A                     	;# 
  1373  000B                     	;# 
  1374  000C                     	;# 
  1375  000D                     	;# 
  1376  0011                     	;# 
  1377  0012                     	;# 
  1378  0013                     	;# 
  1379  0014                     	;# 
  1380  0015                     	;# 
  1381  0016                     	;# 
  1382  0016                     	;# 
  1383  0017                     	;# 
  1384  0018                     	;# 
  1385  0019                     	;# 
  1386  001A                     	;# 
  1387  001B                     	;# 
  1388  001C                     	;# 
  1389  001E                     	;# 
  1390  001F                     	;# 
  1391  008C                     	;# 
  1392  008D                     	;# 
  1393  0091                     	;# 
  1394  0092                     	;# 
  1395  0093                     	;# 
  1396  0094                     	;# 
  1397  0095                     	;# 
  1398  0096                     	;# 
  1399  0097                     	;# 
  1400  0098                     	;# 
  1401  0099                     	;# 
  1402  009A                     	;# 
  1403  009B                     	;# 
  1404  009B                     	;# 
  1405  009C                     	;# 
  1406  009D                     	;# 
  1407  009E                     	;# 
  1408  010C                     	;# 
  1409  010D                     	;# 
  1410  0111                     	;# 
  1411  0112                     	;# 
  1412  0113                     	;# 
  1413  0114                     	;# 
  1414  0115                     	;# 
  1415  0116                     	;# 
  1416  0117                     	;# 
  1417  0118                     	;# 
  1418  0119                     	;# 
  1419  011A                     	;# 
  1420  011B                     	;# 
  1421  011D                     	;# 
  1422  011E                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020C                     	;# 
  1446  020D                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0219                     	;# 
  1463  021A                     	;# 
  1464  021B                     	;# 
  1465  021C                     	;# 
  1466  021D                     	;# 
  1467  021E                     	;# 
  1468  021F                     	;# 
  1469  0291                     	;# 
  1470  0291                     	;# 
  1471  0292                     	;# 
  1472  0293                     	;# 
  1473  0294                     	;# 
  1474  0295                     	;# 
  1475  0295                     	;# 
  1476  0296                     	;# 
  1477  0298                     	;# 
  1478  0298                     	;# 
  1479  0299                     	;# 
  1480  029A                     	;# 
  1481  029B                     	;# 
  1482  029C                     	;# 
  1483  029C                     	;# 
  1484  029D                     	;# 
  1485  029E                     	;# 
  1486  029E                     	;# 
  1487  0311                     	;# 
  1488  0311                     	;# 
  1489  0312                     	;# 
  1490  0313                     	;# 
  1491  0318                     	;# 
  1492  0318                     	;# 
  1493  0319                     	;# 
  1494  031A                     	;# 
  1495  0394                     	;# 
  1496  0395                     	;# 
  1497  0396                     	;# 
  1498  039A                     	;# 
  1499  039C                     	;# 
  1500  039D                     	;# 
  1501  039E                     	;# 
  1502  039F                     	;# 
  1503  0415                     	;# 
  1504  0416                     	;# 
  1505  0417                     	;# 
  1506  041C                     	;# 
  1507  041D                     	;# 
  1508  041E                     	;# 
  1509  0FE4                     	;# 
  1510  0FE5                     	;# 
  1511  0FE6                     	;# 
  1512  0FE7                     	;# 
  1513  0FE8                     	;# 
  1514  0FE9                     	;# 
  1515  0FEA                     	;# 
  1516  0FEB                     	;# 
  1517  0FED                     	;# 
  1518  0FEE                     	;# 
  1519  0FEF                     	;# 
  1520  0000                     	;# 
  1521  0001                     	;# 
  1522  0002                     	;# 
  1523  0003                     	;# 
  1524  0004                     	;# 
  1525  0005                     	;# 
  1526  0006                     	;# 
  1527  0007                     	;# 
  1528  0008                     	;# 
  1529  0009                     	;# 
  1530  000A                     	;# 
  1531  000B                     	;# 
  1532  000C                     	;# 
  1533  000D                     	;# 
  1534  0011                     	;# 
  1535  0012                     	;# 
  1536  0013                     	;# 
  1537  0014                     	;# 
  1538  0015                     	;# 
  1539  0016                     	;# 
  1540  0016                     	;# 
  1541  0017                     	;# 
  1542  0018                     	;# 
  1543  0019                     	;# 
  1544  001A                     	;# 
  1545  001B                     	;# 
  1546  001C                     	;# 
  1547  001E                     	;# 
  1548  001F                     	;# 
  1549  008C                     	;# 
  1550  008D                     	;# 
  1551  0091                     	;# 
  1552  0092                     	;# 
  1553  0093                     	;# 
  1554  0094                     	;# 
  1555  0095                     	;# 
  1556  0096                     	;# 
  1557  0097                     	;# 
  1558  0098                     	;# 
  1559  0099                     	;# 
  1560  009A                     	;# 
  1561  009B                     	;# 
  1562  009B                     	;# 
  1563  009C                     	;# 
  1564  009D                     	;# 
  1565  009E                     	;# 
  1566  010C                     	;# 
  1567  010D                     	;# 
  1568  0111                     	;# 
  1569  0112                     	;# 
  1570  0113                     	;# 
  1571  0114                     	;# 
  1572  0115                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  0118                     	;# 
  1576  0119                     	;# 
  1577  011A                     	;# 
  1578  011B                     	;# 
  1579  011D                     	;# 
  1580  011E                     	;# 
  1581  018C                     	;# 
  1582  018D                     	;# 
  1583  0191                     	;# 
  1584  0191                     	;# 
  1585  0192                     	;# 
  1586  0193                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0194                     	;# 
  1590  0195                     	;# 
  1591  0196                     	;# 
  1592  0199                     	;# 
  1593  019A                     	;# 
  1594  019B                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019C                     	;# 
  1599  019C                     	;# 
  1600  019D                     	;# 
  1601  019E                     	;# 
  1602  019F                     	;# 
  1603  020C                     	;# 
  1604  020D                     	;# 
  1605  0211                     	;# 
  1606  0211                     	;# 
  1607  0212                     	;# 
  1608  0212                     	;# 
  1609  0213                     	;# 
  1610  0213                     	;# 
  1611  0214                     	;# 
  1612  0214                     	;# 
  1613  0215                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0216                     	;# 
  1617  0216                     	;# 
  1618  0217                     	;# 
  1619  0217                     	;# 
  1620  0219                     	;# 
  1621  021A                     	;# 
  1622  021B                     	;# 
  1623  021C                     	;# 
  1624  021D                     	;# 
  1625  021E                     	;# 
  1626  021F                     	;# 
  1627  0291                     	;# 
  1628  0291                     	;# 
  1629  0292                     	;# 
  1630  0293                     	;# 
  1631  0294                     	;# 
  1632  0295                     	;# 
  1633  0295                     	;# 
  1634  0296                     	;# 
  1635  0298                     	;# 
  1636  0298                     	;# 
  1637  0299                     	;# 
  1638  029A                     	;# 
  1639  029B                     	;# 
  1640  029C                     	;# 
  1641  029C                     	;# 
  1642  029D                     	;# 
  1643  029E                     	;# 
  1644  029E                     	;# 
  1645  0311                     	;# 
  1646  0311                     	;# 
  1647  0312                     	;# 
  1648  0313                     	;# 
  1649  0318                     	;# 
  1650  0318                     	;# 
  1651  0319                     	;# 
  1652  031A                     	;# 
  1653  0394                     	;# 
  1654  0395                     	;# 
  1655  0396                     	;# 
  1656  039A                     	;# 
  1657  039C                     	;# 
  1658  039D                     	;# 
  1659  039E                     	;# 
  1660  039F                     	;# 
  1661  0415                     	;# 
  1662  0416                     	;# 
  1663  0417                     	;# 
  1664  041C                     	;# 
  1665  041D                     	;# 
  1666  041E                     	;# 
  1667  0FE4                     	;# 
  1668  0FE5                     	;# 
  1669  0FE6                     	;# 
  1670  0FE7                     	;# 
  1671  0FE8                     	;# 
  1672  0FE9                     	;# 
  1673  0FEA                     	;# 
  1674  0FEB                     	;# 
  1675  0FED                     	;# 
  1676  0FEE                     	;# 
  1677  0FEF                     	;# 
  1678  0000                     	;# 
  1679  0001                     	;# 
  1680  0002                     	;# 
  1681  0003                     	;# 
  1682  0004                     	;# 
  1683  0005                     	;# 
  1684  0006                     	;# 
  1685  0007                     	;# 
  1686  0008                     	;# 
  1687  0009                     	;# 
  1688  000A                     	;# 
  1689  000B                     	;# 
  1690  000C                     	;# 
  1691  000D                     	;# 
  1692  0011                     	;# 
  1693  0012                     	;# 
  1694  0013                     	;# 
  1695  0014                     	;# 
  1696  0015                     	;# 
  1697  0016                     	;# 
  1698  0016                     	;# 
  1699  0017                     	;# 
  1700  0018                     	;# 
  1701  0019                     	;# 
  1702  001A                     	;# 
  1703  001B                     	;# 
  1704  001C                     	;# 
  1705  001E                     	;# 
  1706  001F                     	;# 
  1707  008C                     	;# 
  1708  008D                     	;# 
  1709  0091                     	;# 
  1710  0092                     	;# 
  1711  0093                     	;# 
  1712  0094                     	;# 
  1713  0095                     	;# 
  1714  0096                     	;# 
  1715  0097                     	;# 
  1716  0098                     	;# 
  1717  0099                     	;# 
  1718  009A                     	;# 
  1719  009B                     	;# 
  1720  009B                     	;# 
  1721  009C                     	;# 
  1722  009D                     	;# 
  1723  009E                     	;# 
  1724  010C                     	;# 
  1725  010D                     	;# 
  1726  0111                     	;# 
  1727  0112                     	;# 
  1728  0113                     	;# 
  1729  0114                     	;# 
  1730  0115                     	;# 
  1731  0116                     	;# 
  1732  0117                     	;# 
  1733  0118                     	;# 
  1734  0119                     	;# 
  1735  011A                     	;# 
  1736  011B                     	;# 
  1737  011D                     	;# 
  1738  011E                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  0191                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0193                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0194                     	;# 
  1748  0195                     	;# 
  1749  0196                     	;# 
  1750  0199                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019E                     	;# 
  1760  019F                     	;# 
  1761  020C                     	;# 
  1762  020D                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0216                     	;# 
  1775  0216                     	;# 
  1776  0217                     	;# 
  1777  0217                     	;# 
  1778  0219                     	;# 
  1779  021A                     	;# 
  1780  021B                     	;# 
  1781  021C                     	;# 
  1782  021D                     	;# 
  1783  021E                     	;# 
  1784  021F                     	;# 
  1785  0291                     	;# 
  1786  0291                     	;# 
  1787  0292                     	;# 
  1788  0293                     	;# 
  1789  0294                     	;# 
  1790  0295                     	;# 
  1791  0295                     	;# 
  1792  0296                     	;# 
  1793  0298                     	;# 
  1794  0298                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029B                     	;# 
  1798  029C                     	;# 
  1799  029C                     	;# 
  1800  029D                     	;# 
  1801  029E                     	;# 
  1802  029E                     	;# 
  1803  0311                     	;# 
  1804  0311                     	;# 
  1805  0312                     	;# 
  1806  0313                     	;# 
  1807  0318                     	;# 
  1808  0318                     	;# 
  1809  0319                     	;# 
  1810  031A                     	;# 
  1811  0394                     	;# 
  1812  0395                     	;# 
  1813  0396                     	;# 
  1814  039A                     	;# 
  1815  039C                     	;# 
  1816  039D                     	;# 
  1817  039E                     	;# 
  1818  039F                     	;# 
  1819  0415                     	;# 
  1820  0416                     	;# 
  1821  0417                     	;# 
  1822  041C                     	;# 
  1823  041D                     	;# 
  1824  041E                     	;# 
  1825  0FE4                     	;# 
  1826  0FE5                     	;# 
  1827  0FE6                     	;# 
  1828  0FE7                     	;# 
  1829  0FE8                     	;# 
  1830  0FE9                     	;# 
  1831  0FEA                     	;# 
  1832  0FEB                     	;# 
  1833  0FED                     	;# 
  1834  0FEE                     	;# 
  1835  0FEF                     	;# 
  1836  0000                     	;# 
  1837  0001                     	;# 
  1838  0002                     	;# 
  1839  0003                     	;# 
  1840  0004                     	;# 
  1841  0005                     	;# 
  1842  0006                     	;# 
  1843  0007                     	;# 
  1844  0008                     	;# 
  1845  0009                     	;# 
  1846  000A                     	;# 
  1847  000B                     	;# 
  1848  000C                     	;# 
  1849  000D                     	;# 
  1850  0011                     	;# 
  1851  0012                     	;# 
  1852  0013                     	;# 
  1853  0014                     	;# 
  1854  0015                     	;# 
  1855  0016                     	;# 
  1856  0016                     	;# 
  1857  0017                     	;# 
  1858  0018                     	;# 
  1859  0019                     	;# 
  1860  001A                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  001E                     	;# 
  1864  001F                     	;# 
  1865  008C                     	;# 
  1866  008D                     	;# 
  1867  0091                     	;# 
  1868  0092                     	;# 
  1869  0093                     	;# 
  1870  0094                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0098                     	;# 
  1875  0099                     	;# 
  1876  009A                     	;# 
  1877  009B                     	;# 
  1878  009B                     	;# 
  1879  009C                     	;# 
  1880  009D                     	;# 
  1881  009E                     	;# 
  1882  010C                     	;# 
  1883  010D                     	;# 
  1884  0111                     	;# 
  1885  0112                     	;# 
  1886  0113                     	;# 
  1887  0114                     	;# 
  1888  0115                     	;# 
  1889  0116                     	;# 
  1890  0117                     	;# 
  1891  0118                     	;# 
  1892  0119                     	;# 
  1893  011A                     	;# 
  1894  011B                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  018C                     	;# 
  1898  018D                     	;# 
  1899  0191                     	;# 
  1900  0191                     	;# 
  1901  0192                     	;# 
  1902  0193                     	;# 
  1903  0193                     	;# 
  1904  0193                     	;# 
  1905  0194                     	;# 
  1906  0195                     	;# 
  1907  0196                     	;# 
  1908  0199                     	;# 
  1909  019A                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019C                     	;# 
  1915  019C                     	;# 
  1916  019D                     	;# 
  1917  019E                     	;# 
  1918  019F                     	;# 
  1919  020C                     	;# 
  1920  020D                     	;# 
  1921  0211                     	;# 
  1922  0211                     	;# 
  1923  0212                     	;# 
  1924  0212                     	;# 
  1925  0213                     	;# 
  1926  0213                     	;# 
  1927  0214                     	;# 
  1928  0214                     	;# 
  1929  0215                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0216                     	;# 
  1933  0216                     	;# 
  1934  0217                     	;# 
  1935  0217                     	;# 
  1936  0219                     	;# 
  1937  021A                     	;# 
  1938  021B                     	;# 
  1939  021C                     	;# 
  1940  021D                     	;# 
  1941  021E                     	;# 
  1942  021F                     	;# 
  1943  0291                     	;# 
  1944  0291                     	;# 
  1945  0292                     	;# 
  1946  0293                     	;# 
  1947  0294                     	;# 
  1948  0295                     	;# 
  1949  0295                     	;# 
  1950  0296                     	;# 
  1951  0298                     	;# 
  1952  0298                     	;# 
  1953  0299                     	;# 
  1954  029A                     	;# 
  1955  029B                     	;# 
  1956  029C                     	;# 
  1957  029C                     	;# 
  1958  029D                     	;# 
  1959  029E                     	;# 
  1960  029E                     	;# 
  1961  0311                     	;# 
  1962  0311                     	;# 
  1963  0312                     	;# 
  1964  0313                     	;# 
  1965  0318                     	;# 
  1966  0318                     	;# 
  1967  0319                     	;# 
  1968  031A                     	;# 
  1969  0394                     	;# 
  1970  0395                     	;# 
  1971  0396                     	;# 
  1972  039A                     	;# 
  1973  039C                     	;# 
  1974  039D                     	;# 
  1975  039E                     	;# 
  1976  039F                     	;# 
  1977  0415                     	;# 
  1978  0416                     	;# 
  1979  0417                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  0FE4                     	;# 
  1984  0FE5                     	;# 
  1985  0FE6                     	;# 
  1986  0FE7                     	;# 
  1987  0FE8                     	;# 
  1988  0FE9                     	;# 
  1989  0FEA                     	;# 
  1990  0FEB                     	;# 
  1991  0FED                     	;# 
  1992  0FEE                     	;# 
  1993  0FEF                     	;# 
  1994  0000                     	;# 
  1995  0001                     	;# 
  1996  0002                     	;# 
  1997  0003                     	;# 
  1998  0004                     	;# 
  1999  0005                     	;# 
  2000  0006                     	;# 
  2001  0007                     	;# 
  2002  0008                     	;# 
  2003  0009                     	;# 
  2004  000A                     	;# 
  2005  000B                     	;# 
  2006  000C                     	;# 
  2007  000D                     	;# 
  2008  0011                     	;# 
  2009  0012                     	;# 
  2010  0013                     	;# 
  2011  0014                     	;# 
  2012  0015                     	;# 
  2013  0016                     	;# 
  2014  0016                     	;# 
  2015  0017                     	;# 
  2016  0018                     	;# 
  2017  0019                     	;# 
  2018  001A                     	;# 
  2019  001B                     	;# 
  2020  001C                     	;# 
  2021  001E                     	;# 
  2022  001F                     	;# 
  2023  008C                     	;# 
  2024  008D                     	;# 
  2025  0091                     	;# 
  2026  0092                     	;# 
  2027  0093                     	;# 
  2028  0094                     	;# 
  2029  0095                     	;# 
  2030  0096                     	;# 
  2031  0097                     	;# 
  2032  0098                     	;# 
  2033  0099                     	;# 
  2034  009A                     	;# 
  2035  009B                     	;# 
  2036  009B                     	;# 
  2037  009C                     	;# 
  2038  009D                     	;# 
  2039  009E                     	;# 
  2040  010C                     	;# 
  2041  010D                     	;# 
  2042  0111                     	;# 
  2043  0112                     	;# 
  2044  0113                     	;# 
  2045  0114                     	;# 
  2046  0115                     	;# 
  2047  0116                     	;# 
  2048  0117                     	;# 
  2049  0118                     	;# 
  2050  0119                     	;# 
  2051  011A                     	;# 
  2052  011B                     	;# 
  2053  011D                     	;# 
  2054  011E                     	;# 
  2055  018C                     	;# 
  2056  018D                     	;# 
  2057  0191                     	;# 
  2058  0191                     	;# 
  2059  0192                     	;# 
  2060  0193                     	;# 
  2061  0193                     	;# 
  2062  0193                     	;# 
  2063  0194                     	;# 
  2064  0195                     	;# 
  2065  0196                     	;# 
  2066  0199                     	;# 
  2067  019A                     	;# 
  2068  019B                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019B                     	;# 
  2072  019C                     	;# 
  2073  019C                     	;# 
  2074  019D                     	;# 
  2075  019E                     	;# 
  2076  019F                     	;# 
  2077  020C                     	;# 
  2078  020D                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  0212                     	;# 
  2082  0212                     	;# 
  2083  0213                     	;# 
  2084  0213                     	;# 
  2085  0214                     	;# 
  2086  0214                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0216                     	;# 
  2091  0216                     	;# 
  2092  0217                     	;# 
  2093  0217                     	;# 
  2094  0219                     	;# 
  2095  021A                     	;# 
  2096  021B                     	;# 
  2097  021C                     	;# 
  2098  021D                     	;# 
  2099  021E                     	;# 
  2100  021F                     	;# 
  2101  0291                     	;# 
  2102  0291                     	;# 
  2103  0292                     	;# 
  2104  0293                     	;# 
  2105  0294                     	;# 
  2106  0295                     	;# 
  2107  0295                     	;# 
  2108  0296                     	;# 
  2109  0298                     	;# 
  2110  0298                     	;# 
  2111  0299                     	;# 
  2112  029A                     	;# 
  2113  029B                     	;# 
  2114  029C                     	;# 
  2115  029C                     	;# 
  2116  029D                     	;# 
  2117  029E                     	;# 
  2118  029E                     	;# 
  2119  0311                     	;# 
  2120  0311                     	;# 
  2121  0312                     	;# 
  2122  0313                     	;# 
  2123  0318                     	;# 
  2124  0318                     	;# 
  2125  0319                     	;# 
  2126  031A                     	;# 
  2127  0394                     	;# 
  2128  0395                     	;# 
  2129  0396                     	;# 
  2130  039A                     	;# 
  2131  039C                     	;# 
  2132  039D                     	;# 
  2133  039E                     	;# 
  2134  039F                     	;# 
  2135  0415                     	;# 
  2136  0416                     	;# 
  2137  0417                     	;# 
  2138  041C                     	;# 
  2139  041D                     	;# 
  2140  041E                     	;# 
  2141  0FE4                     	;# 
  2142  0FE5                     	;# 
  2143  0FE6                     	;# 
  2144  0FE7                     	;# 
  2145  0FE8                     	;# 
  2146  0FE9                     	;# 
  2147  0FEA                     	;# 
  2148  0FEB                     	;# 
  2149  0FED                     	;# 
  2150  0FEE                     	;# 
  2151  0FEF                     	;# 
  2152                           
  2153                           	psect	idataBANK1
  2154  0EA2                     __pidataBANK1:	
  2155                           
  2156                           ;initializer for _DAC_VoltageTable
  2157  0EA2  34A5               	retlw	low (STR_5| (0+32768))
  2158  0EA3  3481               	retlw	high (STR_5| (0+32768))
  2159  0EA4  3455               	retlw	low (STR_6| (0+32768))
  2160  0EA5  3481               	retlw	high (STR_6| (0+32768))
  2161  0EA6  34AA               	retlw	low (STR_7| (0+32768))
  2162  0EA7  3481               	retlw	high (STR_7| (0+32768))
  2163  0EA8  345B               	retlw	low (STR_8| (0+32768))
  2164  0EA9  3481               	retlw	high (STR_8| (0+32768))
  2165  0EAA  34AF               	retlw	low (STR_9| (0+32768))
  2166  0EAB  3481               	retlw	high (STR_9| (0+32768))
  2167  0EAC  3461               	retlw	low (STR_10| (0+32768))
  2168  0EAD  3481               	retlw	high (STR_10| (0+32768))
  2169  0EAE  34B4               	retlw	low (STR_11| (0+32768))
  2170  0EAF  3481               	retlw	high (STR_11| (0+32768))
  2171  0EB0  3467               	retlw	low (STR_12| (0+32768))
  2172  0EB1  3481               	retlw	high (STR_12| (0+32768))
  2173  0EB2  34B9               	retlw	low (STR_13| (0+32768))
  2174  0EB3  3481               	retlw	high (STR_13| (0+32768))
  2175  0EB4  346D               	retlw	low (STR_14| (0+32768))
  2176  0EB5  3481               	retlw	high (STR_14| (0+32768))
  2177  0EB6  3496               	retlw	low (STR_15| (0+32768))
  2178  0EB7  3481               	retlw	high (STR_15| (0+32768))
  2179  0EB8  3449               	retlw	low (STR_16| (0+32768))
  2180  0EB9  3481               	retlw	high (STR_16| (0+32768))
  2181  0EBA  349B               	retlw	low (STR_17| (0+32768))
  2182  0EBB  3481               	retlw	high (STR_17| (0+32768))
  2183  0EBC  344F               	retlw	low (STR_18| (0+32768))
  2184  0EBD  3481               	retlw	high (STR_18| (0+32768))
  2185  0EBE  34A0               	retlw	low (STR_19| (0+32768))
  2186  0EBF  3481               	retlw	high (STR_19| (0+32768))
  2187                           
  2188                           	psect	idataBANK2
  2189  0796                     __pidataBANK2:	
  2190                           
  2191                           ;initializer for _H7826_01_Gain
  2192  0796  3473               	retlw	low (STR_35| (0+32768))
  2193  0797  3481               	retlw	high (STR_35| (0+32768))
  2194  0798  3478               	retlw	low (STR_36| (0+32768))
  2195  0799  3481               	retlw	high (STR_36| (0+32768))
  2196  079A  348C               	retlw	low (STR_37| (0+32768))
  2197  079B  3481               	retlw	high (STR_37| (0+32768))
  2198  079C  347D               	retlw	low (STR_38| (0+32768))
  2199  079D  3481               	retlw	high (STR_38| (0+32768))
  2200  079E  342B               	retlw	low (STR_39| (0+32768))
  2201  079F  3481               	retlw	high (STR_39| (0+32768))
  2202  07A0  3431               	retlw	low (STR_40| (0+32768))
  2203  07A1  3481               	retlw	high (STR_40| (0+32768))
  2204  07A2  3437               	retlw	low (STR_41| (0+32768))
  2205  07A3  3481               	retlw	high (STR_41| (0+32768))
  2206  07A4  341F               	retlw	low (STR_42| (0+32768))
  2207  07A5  3481               	retlw	high (STR_42| (0+32768))
  2208  07A6  34DA               	retlw	low (STR_43| (0+32768))
  2209  07A7  3480               	retlw	high (STR_43| (0+32768))
  2210  07A8  3404               	retlw	low (STR_44| (0+32768))
  2211  07A9  3481               	retlw	high (STR_44| (0+32768))
  2212  07AA  34E1               	retlw	low (STR_45| (0+32768))
  2213  07AB  3480               	retlw	high (STR_45| (0+32768))
  2214  07AC  34E8               	retlw	low (STR_46| (0+32768))
  2215  07AD  3480               	retlw	high (STR_46| (0+32768))
  2216  07AE  3412               	retlw	low (STR_47| (0+32768))
  2217  07AF  3481               	retlw	high (STR_47| (0+32768))
  2218  07B0  34CC               	retlw	low (STR_48| (0+32768))
  2219  07B1  3480               	retlw	high (STR_48| (0+32768))
  2220  07B2  34D3               	retlw	low (STR_49| (0+32768))
  2221  07B3  3480               	retlw	high (STR_49| (0+32768))
  2222                           
  2223                           ;initializer for _H7826_Gain
  2224  07B4  3487               	retlw	low (STR_20| (0+32768))
  2225  07B5  3481               	retlw	high (STR_20| (0+32768))
  2226  07B6  3482               	retlw	low (STR_21| (0+32768))
  2227  07B7  3481               	retlw	high (STR_21| (0+32768))
  2228  07B8  3491               	retlw	low (STR_22| (0+32768))
  2229  07B9  3481               	retlw	high (STR_22| (0+32768))
  2230  07BA  3443               	retlw	low (STR_23| (0+32768))
  2231  07BB  3481               	retlw	high (STR_23| (0+32768))
  2232  07BC  3419               	retlw	low (STR_24| (0+32768))
  2233  07BD  3481               	retlw	high (STR_24| (0+32768))
  2234  07BE  3425               	retlw	low (STR_25| (0+32768))
  2235  07BF  3481               	retlw	high (STR_25| (0+32768))
  2236  07C0  343D               	retlw	low (STR_26| (0+32768))
  2237  07C1  3481               	retlw	high (STR_26| (0+32768))
  2238  07C2  34F6               	retlw	low (STR_27| (0+32768))
  2239  07C3  3480               	retlw	high (STR_27| (0+32768))
  2240  07C4  34EF               	retlw	low (STR_28| (0+32768))
  2241  07C5  3480               	retlw	high (STR_28| (0+32768))
  2242  07C6  34FD               	retlw	low (STR_29| (0+32768))
  2243  07C7  3480               	retlw	high (STR_29| (0+32768))
  2244  07C8  34C5               	retlw	low (STR_30| (0+32768))
  2245  07C9  3480               	retlw	high (STR_30| (0+32768))
  2246  07CA  340B               	retlw	low (STR_31| (0+32768))
  2247  07CB  3481               	retlw	high (STR_31| (0+32768))
  2248  07CC  34B5               	retlw	low (STR_32| (0+32768))
  2249  07CD  3480               	retlw	high (STR_32| (0+32768))
  2250  07CE  34AD               	retlw	low (STR_33| (0+32768))
  2251  07CF  3480               	retlw	high (STR_33| (0+32768))
  2252  07D0  34A5               	retlw	low (STR_34| (0+32768))
  2253  07D1  3480               	retlw	high (STR_34| (0+32768))
  2254                           
  2255                           	psect	stringtext
  2256  005E                     __pstringtext:	
  2257  005E                     _DAC_DataTable:	
  2258  005E  3499               	retlw	153
  2259  005F  3401               	retlw	1
  2260  0060  34C2               	retlw	194
  2261  0061  3401               	retlw	1
  2262  0062  34EB               	retlw	235
  2263  0063  3401               	retlw	1
  2264  0064  3414               	retlw	20
  2265  0065  3402               	retlw	2
  2266  0066  343D               	retlw	61
  2267  0067  3402               	retlw	2
  2268  0068  3466               	retlw	102
  2269  0069  3402               	retlw	2
  2270  006A  348F               	retlw	143
  2271  006B  3402               	retlw	2
  2272  006C  34B8               	retlw	184
  2273  006D  3402               	retlw	2
  2274  006E  34E1               	retlw	225
  2275  006F  3402               	retlw	2
  2276  0070  340A               	retlw	10
  2277  0071  3403               	retlw	3
  2278  0072  3433               	retlw	51
  2279  0073  3403               	retlw	3
  2280  0074  345B               	retlw	91
  2281  0075  3403               	retlw	3
  2282  0076  3484               	retlw	132
  2283  0077  3403               	retlw	3
  2284  0078  34AD               	retlw	173
  2285  0079  3403               	retlw	3
  2286  007A  34D6               	retlw	214
  2287  007B  3403               	retlw	3
  2288  007C                     __end_of_DAC_DataTable:	
  2289  007C                     _dpowers:	
  2290  007C  3401               	retlw	1
  2291  007D  3400               	retlw	0
  2292  007E  340A               	retlw	10
  2293  007F  3400               	retlw	0
  2294  0080  3464               	retlw	100
  2295  0081  3400               	retlw	0
  2296  0082  34E8               	retlw	232
  2297  0083  3403               	retlw	3
  2298  0084  3410               	retlw	16
  2299  0085  3427               	retlw	39
  2300  0086                     __end_of_dpowers:	
  2301  0016                     _TMR1	set	22
  2302  000C                     _PORTA	set	12
  2303  001F                     _CPSCON1	set	31
  2304  001E                     _CPSCON0	set	30
  2305  0015                     _TMR0	set	21
  2306  0019                     _T1GCON	set	25
  2307  0018                     _T1CON	set	24
  2308  000D                     _PORTB	set	13
  2309  001B                     _PR2	set	27
  2310  001A                     _TMR2	set	26
  2311  001C                     _T2CON	set	28
  2312  009B                     _TMR6IF	set	155
  2313  0099                     _TMR4IF	set	153
  2314  0088                     _TMR1IF	set	136
  2315  00C0                     _TMR1ON	set	192
  2316  005F                     _GIE	set	95
  2317  005E                     _PEIE	set	94
  2318  00A1                     _BCL2IF	set	161
  2319  00A0                     _SSP2IF	set	160
  2320  0093                     _BCL1IF	set	147
  2321  008B                     _SSP1IF	set	139
  2322  0099                     _OSCCON	set	153
  2323  0095                     _OPTION_REG	set	149
  2324  008D                     _TRISB	set	141
  2325  008C                     _TRISA	set	140
  2326  049B                     _TMR6IE	set	1179
  2327  0499                     _TMR4IE	set	1177
  2328  0488                     _TMR1IE	set	1160
  2329  04A1                     _BCL2IE	set	1185
  2330  04A0                     _SSP2IE	set	1184
  2331  0493                     _BCL1IE	set	1171
  2332  048B                     _SSP1IE	set	1163
  2333  011E                     _APFCON1	set	286
  2334  011D                     _APFCON0	set	285
  2335  0866                     _LATA6	set	2150
  2336  0863                     _LATA3	set	2147
  2337  0864                     _LATA4	set	2148
  2338  018D                     _ANSELB	set	397
  2339  018C                     _ANSELA	set	396
  2340  020D                     _WPUB	set	525
  2341  021C                     _SSP2STATbits	set	540
  2342  0219                     _SSP2BUF	set	537
  2343  021E                     _SSP2CON2	set	542
  2344  021B                     _SSP2MSK	set	539
  2345  021E                     _SSP2CON2bits	set	542
  2346  021D                     _SSP2CON1bits	set	541
  2347  021A                     _SSP2ADD	set	538
  2348  021C                     _SSP2STAT	set	540
  2349  021D                     _SSP2CON1	set	541
  2350  0214                     _SSP1STATbits	set	532
  2351  0211                     _SSP1BUF	set	529
  2352  0216                     _SSP1CON2	set	534
  2353  0213                     _SSP1MSK	set	531
  2354  0216                     _SSP1CON2bits	set	534
  2355  0215                     _SSP1CON1bits	set	533
  2356  0212                     _SSP1ADD	set	530
  2357  0214                     _SSP1STAT	set	532
  2358  0215                     _SSP1CON1	set	533
  2359  0298                     _CCPR2L	set	664
  2360  029E                     _CCPTMRS	set	670
  2361  029A                     _CCP2CON	set	666
  2362  041E                     _T6CON	set	1054
  2363  041C                     _TMR6	set	1052
  2364  041D                     _PR6	set	1053
  2365  0417                     _T4CON	set	1047
  2366  0415                     _TMR4	set	1045
  2367  0416                     _PR4	set	1046
  2368  0086                     STR_2:	
  2369  0086  3453               	retlw	83	;'S'
  2370  0087  3445               	retlw	69	;'E'
  2371  0088  344C               	retlw	76	;'L'
  2372  0089  3445               	retlw	69	;'E'
  2373  008A  3443               	retlw	67	;'C'
  2374  008B  3454               	retlw	84	;'T'
  2375  008C  3446               	retlw	70	;'F'
  2376  008D  3455               	retlw	85	;'U'
  2377  008E  344E               	retlw	78	;'N'
  2378  008F  3443               	retlw	67	;'C'
  2379  0090  3400               	retlw	0
  2380  0091                     STR_4:	
  2381  0091  3450               	retlw	80	;'P'
  2382  0092  344D               	retlw	77	;'M'
  2383  0093  3454               	retlw	84	;'T'
  2384  0094  3444               	retlw	68	;'D'
  2385  0095  3445               	retlw	69	;'E'
  2386  0096  3456               	retlw	86	;'V'
  2387  0097  3449               	retlw	73	;'I'
  2388  0098  3443               	retlw	67	;'C'
  2389  0099  3445               	retlw	69	;'E'
  2390  009A  3400               	retlw	0
  2391  009B                     STR_1:	
  2392  009B  3425               	retlw	37	;'%'
  2393  009C  3435               	retlw	53	;'5'
  2394  009D  3475               	retlw	117	;'u'
  2395  009E  346C               	retlw	108	;'l'
  2396  009F  3420               	retlw	32	;' '
  2397  00A0  3425               	retlw	37	;'%'
  2398  00A1  3437               	retlw	55	;'7'
  2399  00A2  3475               	retlw	117	;'u'
  2400  00A3  346C               	retlw	108	;'l'
  2401  00A4  3400               	retlw	0
  2402  00A5                     STR_34:	
  2403  00A5  3432               	retlw	50	;'2'
  2404  00A6  3437               	retlw	55	;'7'
  2405  00A7  3437               	retlw	55	;'7'
  2406  00A8  3434               	retlw	52	;'4'
  2407  00A9  3435               	retlw	53	;'5'
  2408  00AA  3436               	retlw	54	;'6'
  2409  00AB  3432               	retlw	50	;'2'
  2410  00AC  3400               	retlw	0
  2411  00AD                     STR_33:	
  2412  00AD  3431               	retlw	49	;'1'
  2413  00AE  3439               	retlw	57	;'9'
  2414  00AF  3434               	retlw	52	;'4'
  2415  00B0  3430               	retlw	48	;'0'
  2416  00B1  3436               	retlw	54	;'6'
  2417  00B2  3437               	retlw	55	;'7'
  2418  00B3  3433               	retlw	51	;'3'
  2419  00B4  3400               	retlw	0
  2420  00B5                     STR_32:	
  2421  00B5  3431               	retlw	49	;'1'
  2422  00B6  3433               	retlw	51	;'3'
  2423  00B7  3433               	retlw	51	;'3'
  2424  00B8  3436               	retlw	54	;'6'
  2425  00B9  3430               	retlw	48	;'0'
  2426  00BA  3430               	retlw	48	;'0'
  2427  00BB  3436               	retlw	54	;'6'
  2428  00BC  3400               	retlw	0
  2429  00BD                     STR_3:	
  2430  00BD  3441               	retlw	65	;'A'
  2431  00BE  3444               	retlw	68	;'D'
  2432  00BF  344A               	retlw	74	;'J'
  2433  00C0  3447               	retlw	71	;'G'
  2434  00C1  3441               	retlw	65	;'A'
  2435  00C2  3449               	retlw	73	;'I'
  2436  00C3  344E               	retlw	78	;'N'
  2437  00C4  3400               	retlw	0
  2438  00C5                     STR_30:	
  2439  00C5  3436               	retlw	54	;'6'
  2440  00C6  3430               	retlw	48	;'0'
  2441  00C7  3430               	retlw	48	;'0'
  2442  00C8  3430               	retlw	48	;'0'
  2443  00C9  3430               	retlw	48	;'0'
  2444  00CA  3430               	retlw	48	;'0'
  2445  00CB  3400               	retlw	0
  2446  00CC                     STR_48:	
  2447  00CC  3437               	retlw	55	;'7'
  2448  00CD  3430               	retlw	48	;'0'
  2449  00CE  3430               	retlw	48	;'0'
  2450  00CF  3438               	retlw	56	;'8'
  2451  00D0  3439               	retlw	57	;'9'
  2452  00D1  3430               	retlw	48	;'0'
  2453  00D2  3400               	retlw	0
  2454  00D3                     STR_49:	
  2455  00D3  3439               	retlw	57	;'9'
  2456  00D4  3436               	retlw	54	;'6'
  2457  00D5  3438               	retlw	56	;'8'
  2458  00D6  3434               	retlw	52	;'4'
  2459  00D7  3437               	retlw	55	;'7'
  2460  00D8  3432               	retlw	50	;'2'
  2461  00D9  3400               	retlw	0
  2462  00DA                     STR_43:	
  2463  00DA  3431               	retlw	49	;'1'
  2464  00DB  3430               	retlw	48	;'0'
  2465  00DC  3438               	retlw	56	;'8'
  2466  00DD  3438               	retlw	56	;'8'
  2467  00DE  3434               	retlw	52	;'4'
  2468  00DF  3433               	retlw	51	;'3'
  2469  00E0  3400               	retlw	0
  2470  00E1                     STR_45:	
  2471  00E1  3432               	retlw	50	;'2'
  2472  00E2  3434               	retlw	52	;'4'
  2473  00E3  3432               	retlw	50	;'2'
  2474  00E4  3433               	retlw	51	;'3'
  2475  00E5  3436               	retlw	54	;'6'
  2476  00E6  3434               	retlw	52	;'4'
  2477  00E7  3400               	retlw	0
  2478  00E8                     STR_46:	
  2479  00E8  3433               	retlw	51	;'3'
  2480  00E9  3435               	retlw	53	;'5'
  2481  00EA  3431               	retlw	49	;'1'
  2482  00EB  3431               	retlw	49	;'1'
  2483  00EC  3432               	retlw	50	;'2'
  2484  00ED  3437               	retlw	55	;'7'
  2485  00EE  3400               	retlw	0
  2486  00EF                     STR_28:	
  2487  00EF  3432               	retlw	50	;'2'
  2488  00F0  3434               	retlw	52	;'4'
  2489  00F1  3437               	retlw	55	;'7'
  2490  00F2  3436               	retlw	54	;'6'
  2491  00F3  3434               	retlw	52	;'4'
  2492  00F4  3437               	retlw	55	;'7'
  2493  00F5  3400               	retlw	0
  2494  00F6                     STR_27:	
  2495  00F6  3431               	retlw	49	;'1'
  2496  00F7  3435               	retlw	53	;'5'
  2497  00F8  3433               	retlw	51	;'3'
  2498  00F9  3432               	retlw	50	;'2'
  2499  00FA  3432               	retlw	50	;'2'
  2500  00FB  3438               	retlw	56	;'8'
  2501  00FC  3400               	retlw	0
  2502  00FD                     STR_29:	
  2503  00FD  3433               	retlw	51	;'3'
  2504  00FE  3438               	retlw	56	;'8'
  2505  00FF  3439               	retlw	57	;'9'
  2506  0100  3439               	retlw	57	;'9'
  2507  0101  3438               	retlw	56	;'8'
  2508  0102  3438               	retlw	56	;'8'
  2509  0103  3400               	retlw	0
  2510  0104                     STR_44:	
  2511  0104  3431               	retlw	49	;'1'
  2512  0105  3436               	retlw	54	;'6'
  2513  0106  3434               	retlw	52	;'4'
  2514  0107  3431               	retlw	49	;'1'
  2515  0108  3433               	retlw	51	;'3'
  2516  0109  3439               	retlw	57	;'9'
  2517  010A  3400               	retlw	0
  2518  010B                     STR_31:	
  2519  010B  3439               	retlw	57	;'9'
  2520  010C  3430               	retlw	48	;'0'
  2521  010D  3433               	retlw	51	;'3'
  2522  010E  3438               	retlw	56	;'8'
  2523  010F  3439               	retlw	57	;'9'
  2524  0110  3439               	retlw	57	;'9'
  2525  0111  3400               	retlw	0
  2526  0112                     STR_47:	
  2527  0112  3434               	retlw	52	;'4'
  2528  0113  3439               	retlw	57	;'9'
  2529  0114  3439               	retlw	57	;'9'
  2530  0115  3439               	retlw	57	;'9'
  2531  0116  3439               	retlw	57	;'9'
  2532  0117  3439               	retlw	57	;'9'
  2533  0118  3400               	retlw	0
  2534  0119                     STR_24:	
  2535  0119  3433               	retlw	51	;'3'
  2536  011A  3430               	retlw	48	;'0'
  2537  011B  3430               	retlw	48	;'0'
  2538  011C  3430               	retlw	48	;'0'
  2539  011D  3430               	retlw	48	;'0'
  2540  011E  3400               	retlw	0
  2541  011F                     STR_42:	
  2542  011F  3437               	retlw	55	;'7'
  2543  0120  3430               	retlw	48	;'0'
  2544  0121  3435               	retlw	53	;'5'
  2545  0122  3430               	retlw	48	;'0'
  2546  0123  3430               	retlw	48	;'0'
  2547  0124  3400               	retlw	0
  2548  0125                     STR_25:	
  2549  0125  3435               	retlw	53	;'5'
  2550  0126  3433               	retlw	51	;'3'
  2551  0127  3435               	retlw	53	;'5'
  2552  0128  3435               	retlw	53	;'5'
  2553  0129  3433               	retlw	51	;'3'
  2554  012A  3400               	retlw	0
  2555  012B                     STR_39:	
  2556  012B  3431               	retlw	49	;'1'
  2557  012C  3436               	retlw	54	;'6'
  2558  012D  3431               	retlw	49	;'1'
  2559  012E  3432               	retlw	50	;'2'
  2560  012F  3435               	retlw	53	;'5'
  2561  0130  3400               	retlw	0
  2562  0131                     STR_40:	
  2563  0131  3432               	retlw	50	;'2'
  2564  0132  3437               	retlw	55	;'7'
  2565  0133  3432               	retlw	50	;'2'
  2566  0134  3433               	retlw	51	;'3'
  2567  0135  3438               	retlw	56	;'8'
  2568  0136  3400               	retlw	0
  2569  0137                     STR_41:	
  2570  0137  3434               	retlw	52	;'4'
  2571  0138  3434               	retlw	52	;'4'
  2572  0139  3434               	retlw	52	;'4'
  2573  013A  3437               	retlw	55	;'7'
  2574  013B  3438               	retlw	56	;'8'
  2575  013C  3400               	retlw	0
  2576  013D                     STR_26:	
  2577  013D  3439               	retlw	57	;'9'
  2578  013E  3432               	retlw	50	;'2'
  2579  013F  3430               	retlw	48	;'0'
  2580  0140  3438               	retlw	56	;'8'
  2581  0141  3438               	retlw	56	;'8'
  2582  0142  3400               	retlw	0
  2583  0143                     STR_23:	
  2584  0143  3431               	retlw	49	;'1'
  2585  0144  3436               	retlw	54	;'6'
  2586  0145  3430               	retlw	48	;'0'
  2587  0146  3439               	retlw	57	;'9'
  2588  0147  3439               	retlw	57	;'9'
  2589  0148  3400               	retlw	0
  2590  0149                     STR_16:	
  2591  0149  3431               	retlw	49	;'1'
  2592  014A  342E               	retlw	46	;'.'
  2593  014B  3430               	retlw	48	;'0'
  2594  014C  3435               	retlw	53	;'5'
  2595  014D  3456               	retlw	86	;'V'
  2596  014E  3400               	retlw	0
  2597  014F                     STR_18:	
  2598  014F  3431               	retlw	49	;'1'
  2599  0150  342E               	retlw	46	;'.'
  2600  0151  3431               	retlw	49	;'1'
  2601  0152  3435               	retlw	53	;'5'
  2602  0153  3456               	retlw	86	;'V'
  2603  0154  3400               	retlw	0
  2604  0155                     STR_6:	
  2605  0155  3430               	retlw	48	;'0'
  2606  0156  342E               	retlw	46	;'.'
  2607  0157  3435               	retlw	53	;'5'
  2608  0158  3435               	retlw	53	;'5'
  2609  0159  3456               	retlw	86	;'V'
  2610  015A  3400               	retlw	0
  2611  015B                     STR_8:	
  2612  015B  3430               	retlw	48	;'0'
  2613  015C  342E               	retlw	46	;'.'
  2614  015D  3436               	retlw	54	;'6'
  2615  015E  3435               	retlw	53	;'5'
  2616  015F  3456               	retlw	86	;'V'
  2617  0160  3400               	retlw	0
  2618  0161                     STR_10:	
  2619  0161  3430               	retlw	48	;'0'
  2620  0162  342E               	retlw	46	;'.'
  2621  0163  3437               	retlw	55	;'7'
  2622  0164  3435               	retlw	53	;'5'
  2623  0165  3456               	retlw	86	;'V'
  2624  0166  3400               	retlw	0
  2625  0167                     STR_12:	
  2626  0167  3430               	retlw	48	;'0'
  2627  0168  342E               	retlw	46	;'.'
  2628  0169  3438               	retlw	56	;'8'
  2629  016A  3435               	retlw	53	;'5'
  2630  016B  3456               	retlw	86	;'V'
  2631  016C  3400               	retlw	0
  2632  016D                     STR_14:	
  2633  016D  3430               	retlw	48	;'0'
  2634  016E  342E               	retlw	46	;'.'
  2635  016F  3439               	retlw	57	;'9'
  2636  0170  3435               	retlw	53	;'5'
  2637  0171  3456               	retlw	86	;'V'
  2638  0172  3400               	retlw	0
  2639  0173                     STR_35:	
  2640  0173  3431               	retlw	49	;'1'
  2641  0174  3432               	retlw	50	;'2'
  2642  0175  3435               	retlw	53	;'5'
  2643  0176  3430               	retlw	48	;'0'
  2644  0177  3400               	retlw	0
  2645  0178                     STR_36:	
  2646  0178  3432               	retlw	50	;'2'
  2647  0179  3435               	retlw	53	;'5'
  2648  017A  3438               	retlw	56	;'8'
  2649  017B  3430               	retlw	48	;'0'
  2650  017C  3400               	retlw	0
  2651  017D                     STR_38:	
  2652  017D  3439               	retlw	57	;'9'
  2653  017E  3431               	retlw	49	;'1'
  2654  017F  3438               	retlw	56	;'8'
  2655  0180  3432               	retlw	50	;'2'
  2656  0181  3400               	retlw	0
  2657  0182                     STR_21:	
  2658  0182  3433               	retlw	51	;'3'
  2659  0183  3439               	retlw	57	;'9'
  2660  0184  3435               	retlw	53	;'5'
  2661  0185  3437               	retlw	55	;'7'
  2662  0186  3400               	retlw	0
  2663  0187                     STR_20:	
  2664  0187  3431               	retlw	49	;'1'
  2665  0188  3437               	retlw	55	;'7'
  2666  0189  3437               	retlw	55	;'7'
  2667  018A  3437               	retlw	55	;'7'
  2668  018B  3400               	retlw	0
  2669  018C                     STR_37:	
  2670  018C  3434               	retlw	52	;'4'
  2671  018D  3439               	retlw	57	;'9'
  2672  018E  3439               	retlw	57	;'9'
  2673  018F  3438               	retlw	56	;'8'
  2674  0190  3400               	retlw	0
  2675  0191                     STR_22:	
  2676  0191  3438               	retlw	56	;'8'
  2677  0192  3432               	retlw	50	;'2'
  2678  0193  3431               	retlw	49	;'1'
  2679  0194  3439               	retlw	57	;'9'
  2680  0195  3400               	retlw	0
  2681  0196                     STR_15:	
  2682  0196  3431               	retlw	49	;'1'
  2683  0197  342E               	retlw	46	;'.'
  2684  0198  3430               	retlw	48	;'0'
  2685  0199  3456               	retlw	86	;'V'
  2686  019A  3400               	retlw	0
  2687  019B                     STR_17:	
  2688  019B  3431               	retlw	49	;'1'
  2689  019C  342E               	retlw	46	;'.'
  2690  019D  3431               	retlw	49	;'1'
  2691  019E  3456               	retlw	86	;'V'
  2692  019F  3400               	retlw	0
  2693  01A0                     STR_19:	
  2694  01A0  3431               	retlw	49	;'1'
  2695  01A1  342E               	retlw	46	;'.'
  2696  01A2  3432               	retlw	50	;'2'
  2697  01A3  3456               	retlw	86	;'V'
  2698  01A4  3400               	retlw	0
  2699  01A5                     STR_5:	
  2700  01A5  3430               	retlw	48	;'0'
  2701  01A6  342E               	retlw	46	;'.'
  2702  01A7  3435               	retlw	53	;'5'
  2703  01A8  3456               	retlw	86	;'V'
  2704  01A9  3400               	retlw	0
  2705  01AA                     STR_7:	
  2706  01AA  3430               	retlw	48	;'0'
  2707  01AB  342E               	retlw	46	;'.'
  2708  01AC  3436               	retlw	54	;'6'
  2709  01AD  3456               	retlw	86	;'V'
  2710  01AE  3400               	retlw	0
  2711  01AF                     STR_9:	
  2712  01AF  3430               	retlw	48	;'0'
  2713  01B0  342E               	retlw	46	;'.'
  2714  01B1  3437               	retlw	55	;'7'
  2715  01B2  3456               	retlw	86	;'V'
  2716  01B3  3400               	retlw	0
  2717  01B4                     STR_11:	
  2718  01B4  3430               	retlw	48	;'0'
  2719  01B5  342E               	retlw	46	;'.'
  2720  01B6  3438               	retlw	56	;'8'
  2721  01B7  3456               	retlw	86	;'V'
  2722  01B8  3400               	retlw	0
  2723  01B9                     STR_13:	
  2724  01B9  3430               	retlw	48	;'0'
  2725  01BA  342E               	retlw	46	;'.'
  2726  01BB  3439               	retlw	57	;'9'
  2727  01BC  3456               	retlw	86	;'V'
  2728  01BD  3400               	retlw	0
  2729                           
  2730                           ; #config settings
  2731  0000                     
  2732                           	psect	cinit
  2733  0033                     start_initialization:	
  2734  0033                     __initialization:	
  2735                           
  2736                           ; Initialize objects allocated to BANK1
  2737  0033  30A2               	movlw	low __pidataBANK1
  2738  0034  0084               	movwf	4
  2739  0035  308E               	movlw	(high __pidataBANK1)| (0+128)
  2740  0036  0085               	movwf	5
  2741  0037  30C6               	movlw	low __pdataBANK1
  2742  0038  0086               	movwf	6
  2743  0039  3000               	movlw	high __pdataBANK1
  2744  003A  0087               	movwf	7
  2745  003B  301E               	movlw	30
  2746  003C  318D  2565  3180   	fcall	init_ram
  2747                           
  2748                           ; Initialize objects allocated to BANK2
  2749  003F  3096               	movlw	low __pidataBANK2
  2750  0040  0084               	movwf	4
  2751  0041  3087               	movlw	(high __pidataBANK2)| (0+128)
  2752  0042  0085               	movwf	5
  2753  0043  3020               	movlw	low __pdataBANK2
  2754  0044  0086               	movwf	6
  2755  0045  3001               	movlw	high __pdataBANK2
  2756  0046  0087               	movwf	7
  2757  0047  303C               	movlw	60
  2758  0048  318D  2565  3180   	fcall	init_ram
  2759                           
  2760                           ; Clear objects allocated to BANK0
  2761  004B  3020               	movlw	low __pbssBANK0
  2762  004C  0084               	movwf	4
  2763  004D  3000               	movlw	high __pbssBANK0
  2764  004E  0085               	movwf	5
  2765  004F  3027               	movlw	39
  2766  0050  318D  255F  3180   	fcall	clear_ram0
  2767                           
  2768                           ; Clear objects allocated to BANK1
  2769  0053  30A0               	movlw	low __pbssBANK1
  2770  0054  0084               	movwf	4
  2771  0055  3000               	movlw	high __pbssBANK1
  2772  0056  0085               	movwf	5
  2773  0057  3026               	movlw	38
  2774  0058  318D  255F         	fcall	clear_ram0
  2775  005A                     end_of_initialization:	
  2776                           ;End of C runtime variable initialization code
  2777                           
  2778  005A                     __end_of__initialization:	
  2779  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2780  005B  0020               	movlb	0
  2781  005C  3184  2C9B         	ljmp	_main	;jump to C main() function
  2782                           
  2783                           	psect	bssBANK0
  2784  0020                     __pbssBANK0:	
  2785  0020                     _cnts:	
  2786  0020                     	ds	14
  2787  002E                     _tcnt:	
  2788  002E                     	ds	6
  2789  0034                     _mTouch_Interval:	
  2790  0034                     	ds	3
  2791  0037                     _CPS_Data:	
  2792  0037                     	ds	3
  2793  003A                     _CPS_PreData:	
  2794  003A                     	ds	3
  2795  003D                     _mode:	
  2796  003D                     	ds	2
  2797  003F                     Timer1_DetectAssignCount@PreviousTimer1:	
  2798  003F                     	ds	2
  2799  0041                     _count:	
  2800  0041                     	ds	2
  2801  0043                     CPSx_Read@channel:	
  2802  0043                     	ds	1
  2803  0044                     _VoltageReg:	
  2804  0044                     	ds	2
  2805  0046                     _ConfigReg:	
  2806  0046                     	ds	1
  2807                           
  2808                           	psect	bssBANK1
  2809  00A0                     __pbssBANK1:	
  2810  00A0                     _I2C2_Config:	
  2811  00A0                     	ds	19
  2812  00B3                     _I2C1_Config:	
  2813  00B3                     	ds	19
  2814                           
  2815                           	psect	dataBANK1
  2816  00C6                     __pdataBANK1:	
  2817  00C6                     _DAC_VoltageTable:	
  2818  00C6                     	ds	30
  2819                           
  2820                           	psect	dataBANK2
  2821  0120                     __pdataBANK2:	
  2822  0120                     _H7826_01_Gain:	
  2823  0120                     	ds	30
  2824  013E                     _H7826_Gain:	
  2825  013E                     	ds	30
  2826                           
  2827                           	psect	inittext
  2828  0D65                     init_ram:	
  2829  0D65  00FE               	movwf	126
  2830  0D66                     initloop:	
  2831  0D66  0012               	moviw fsr0++
  2832  0D67  001E               	movwi fsr1++
  2833  0D68  0BFE               	decfsz	126,f
  2834  0D69  2D66               	goto	initloop
  2835  0D6A  3400               	retlw	0
  2836                           
  2837                           	psect	clrtext
  2838  0D5F                     clear_ram0:	
  2839                           ;	Called with FSR0 containing the base address, and
  2840                           ;	WREG with the size to clear
  2841                           
  2842  0D5F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2843  0D60                     clrloop0:	
  2844  0D60  0180               	clrf	0	;clear RAM location pointed to by FSR
  2845  0D61  3101               	addfsr 0,1
  2846  0D62  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2847  0D63  2D60               	goto	clrloop0	;have we reached the end yet?
  2848  0D64  3400               	retlw	0	;all done for this memory range, return
  2849                           
  2850                           	psect	cstackCOMMON
  2851  0070                     __pcstackCOMMON:	
  2852  0070                     ?_isdigit:	
  2853  0070                     ?_LCD_DisplayClear:	
  2854                           ; 1 bit 
  2855                           
  2856  0070                     ?_Timer1_ClearRecord:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_Basic_Init:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ?_mTouch_Read:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_mTouch_IntervalDecrement:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ??_mTouch_IntervalDecrement:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_Buzzer_Init:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ?_Buzzer_SetDuty:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_Buzzer_Handler:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_I2C1_PinInit:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ?_I2C1_Interrupt:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ??_I2C1_Interrupt:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_I2C2_PinInit:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_I2C2_Interrupt:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ??_I2C2_Interrupt:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_I2C_CommonInterrupt:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_LCD_WriteData:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_LCD_Init:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_putch:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_LCD_CursorHome:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_DAC_Initialize:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_Timer1_Init:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_Timer1_StartCount:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_Timer1_Count200us:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ??_Timer1_Count200us:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_Timer1_DetectAssignCount:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_Timer4_Init:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_Timer4_CheckFlag:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ??_Timer4_CheckFlag:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_Timer6_Init:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_Timer6_CheckFlag:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ??_Timer6_CheckFlag:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_mTouch_PortInit:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_mTouch_Init:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_CPSx_Read:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ??_CPSx_Read:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_main:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_Handler:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?___lldiv:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     Buzzer_SetDuty@duty:	
  2971                           ; 4 bytes @ 0x0
  2972                           
  2973  0070                     ___lldiv@divisor:	
  2974                           ; 2 bytes @ 0x0
  2975                           
  2976                           
  2977                           ; 4 bytes @ 0x0
  2978  0070                     	ds	1
  2979  0071                     ??_I2C_CommonInterrupt:	
  2980                           
  2981                           ; 1 bytes @ 0x1
  2982  0071                     	ds	1
  2983  0072                     ??_Buzzer_SetDuty:	
  2984                           
  2985                           ; 1 bytes @ 0x2
  2986  0072                     	ds	2
  2987  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2988  0074                     ___lldiv@dividend:	
  2989                           ; 1 bytes @ 0x4
  2990                           
  2991                           
  2992                           ; 4 bytes @ 0x4
  2993  0074                     	ds	1
  2994  0075                     ??_Buzzer_Handler:	
  2995                           
  2996                           ; 1 bytes @ 0x5
  2997  0075                     	ds	3
  2998  0078                     ??___lldiv:	
  2999                           
  3000                           ; 1 bytes @ 0x8
  3001  0078                     	ds	1
  3002  0079                     ___lldiv@quotient:	
  3003                           
  3004                           ; 4 bytes @ 0x9
  3005  0079                     	ds	4
  3006  007D                     ___lldiv@counter:	
  3007                           
  3008                           ; 1 bytes @ 0xD
  3009  007D                     	ds	1
  3010  007E                     ??_Timer1_DetectAssignCount:	
  3011                           
  3012                           	psect	cstackBANK0
  3013  0047                     __pcstackBANK0:	
  3014                           ; 1 bytes @ 0xE
  3015                           
  3016  0047                     ??_Handler:	
  3017                           
  3018                           ; 1 bytes @ 0x0
  3019  0047                     	ds	1
  3020  0048                     ??_Timer1_ClearRecord:	
  3021  0048                     ??_Basic_Init:	
  3022                           ; 1 bytes @ 0x1
  3023                           
  3024  0048                     ??_isdigit:	
  3025                           ; 1 bytes @ 0x1
  3026                           
  3027  0048                     ??_Buzzer_Init:	
  3028                           ; 1 bytes @ 0x1
  3029                           
  3030  0048                     ?_Buzzer_MiliSecond:	
  3031                           ; 1 bytes @ 0x1
  3032                           
  3033  0048                     ??_I2C1_PinInit:	
  3034                           ; 1 bytes @ 0x1
  3035                           
  3036  0048                     ?_I2C1_Transmit:	
  3037                           ; 1 bytes @ 0x1
  3038                           
  3039  0048                     ??_I2C2_PinInit:	
  3040                           ; 1 bytes @ 0x1
  3041                           
  3042  0048                     ?_I2C2_Transmit:	
  3043                           ; 1 bytes @ 0x1
  3044                           
  3045  0048                     ??_LCD_WriteData:	
  3046                           ; 1 bytes @ 0x1
  3047                           
  3048  0048                     ??_Timer1_Init:	
  3049                           ; 1 bytes @ 0x1
  3050                           
  3051  0048                     ??_Timer1_StartCount:	
  3052                           ; 1 bytes @ 0x1
  3053                           
  3054  0048                     ??_Timer4_Init:	
  3055                           ; 1 bytes @ 0x1
  3056                           
  3057  0048                     ??_Timer6_Init:	
  3058                           ; 1 bytes @ 0x1
  3059                           
  3060  0048                     ??_mTouch_PortInit:	
  3061                           ; 1 bytes @ 0x1
  3062                           
  3063  0048                     ?_Timer1_GetCPM:	
  3064                           ; 1 bytes @ 0x1
  3065                           
  3066  0048                     ?___wmul:	
  3067                           ; 2 bytes @ 0x1
  3068                           
  3069  0048                     ?___lwdiv:	
  3070                           ; 2 bytes @ 0x1
  3071                           
  3072  0048                     ?_Timer1_GetCountSum:	
  3073                           ; 2 bytes @ 0x1
  3074                           
  3075  0048                     I2C1_Transmit@pData:	
  3076                           ; 4 bytes @ 0x1
  3077                           
  3078  0048                     I2C2_Transmit@pData:	
  3079                           ; 1 bytes @ 0x1
  3080                           
  3081  0048                     _isdigit$936:	
  3082                           ; 1 bytes @ 0x1
  3083                           
  3084  0048                     Buzzer_MiliSecond@time:	
  3085                           ; 1 bytes @ 0x1
  3086                           
  3087  0048                     ___wmul@multiplier:	
  3088                           ; 2 bytes @ 0x1
  3089                           
  3090  0048                     ___lwdiv@divisor:	
  3091                           ; 2 bytes @ 0x1
  3092                           
  3093                           
  3094                           ; 2 bytes @ 0x1
  3095  0048                     	ds	1
  3096  0049                     ?_I2C1_Setting:	
  3097  0049                     ?_I2C2_Setting:	
  3098                           ; 1 bytes @ 0x2
  3099                           
  3100  0049                     ??_mTouch_Init:	
  3101                           ; 1 bytes @ 0x2
  3102                           
  3103  0049                     I2C1_Setting@mode:	
  3104                           ; 1 bytes @ 0x2
  3105                           
  3106  0049                     I2C1_Transmit@size:	
  3107                           ; 1 bytes @ 0x2
  3108                           
  3109  0049                     I2C2_Setting@mode:	
  3110                           ; 1 bytes @ 0x2
  3111                           
  3112  0049                     I2C2_Transmit@size:	
  3113                           ; 1 bytes @ 0x2
  3114                           
  3115  0049                     isdigit@c:	
  3116                           ; 1 bytes @ 0x2
  3117                           
  3118                           
  3119                           ; 1 bytes @ 0x2
  3120  0049                     	ds	1
  3121  004A                     ??_mTouch_Read:	
  3122  004A                     ??_Buzzer_MiliSecond:	
  3123                           ; 1 bytes @ 0x3
  3124                           
  3125  004A                     ??_I2C1_Transmit:	
  3126                           ; 1 bytes @ 0x3
  3127                           
  3128  004A                     ??_I2C2_Transmit:	
  3129                           ; 1 bytes @ 0x3
  3130                           
  3131  004A                     ??_Timer1_GetCPM:	
  3132                           ; 1 bytes @ 0x3
  3133                           
  3134  004A                     I2C1_Setting@Speed:	
  3135                           ; 1 bytes @ 0x3
  3136                           
  3137  004A                     I2C2_Setting@Speed:	
  3138                           ; 1 bytes @ 0x3
  3139                           
  3140  004A                     LCD_WriteData@point:	
  3141                           ; 1 bytes @ 0x3
  3142                           
  3143  004A                     ___wmul@multiplicand:	
  3144                           ; 1 bytes @ 0x3
  3145                           
  3146  004A                     ___lwdiv@dividend:	
  3147                           ; 2 bytes @ 0x3
  3148                           
  3149                           
  3150                           ; 2 bytes @ 0x3
  3151  004A                     	ds	1
  3152  004B                     ??_LCD_DisplayClear:	
  3153  004B                     ??_I2C1_Setting:	
  3154                           ; 1 bytes @ 0x4
  3155                           
  3156  004B                     ??_I2C2_Setting:	
  3157                           ; 1 bytes @ 0x4
  3158                           
  3159  004B                     ??_putch:	
  3160                           ; 1 bytes @ 0x4
  3161                           
  3162  004B                     ??_LCD_CursorHome:	
  3163                           ; 1 bytes @ 0x4
  3164                           
  3165  004B                     putch@c:	
  3166                           ; 1 bytes @ 0x4
  3167                           
  3168                           
  3169                           ; 1 bytes @ 0x4
  3170  004B                     	ds	1
  3171  004C                     ??_LCD_Init:	
  3172  004C                     ??_Timer1_GetCountSum:	
  3173                           ; 1 bytes @ 0x5
  3174                           
  3175  004C                     ??___wmul:	
  3176                           ; 1 bytes @ 0x5
  3177                           
  3178  004C                     ??___lwdiv:	
  3179                           ; 1 bytes @ 0x5
  3180                           
  3181  004C                     I2C1_Setting@address:	
  3182                           ; 1 bytes @ 0x5
  3183                           
  3184  004C                     I2C1_Transmit@address:	
  3185                           ; 1 bytes @ 0x5
  3186                           
  3187  004C                     I2C2_Setting@address:	
  3188                           ; 1 bytes @ 0x5
  3189                           
  3190  004C                     I2C2_Transmit@address:	
  3191                           ; 1 bytes @ 0x5
  3192                           
  3193  004C                     ___wmul@product:	
  3194                           ; 1 bytes @ 0x5
  3195                           
  3196                           
  3197                           ; 2 bytes @ 0x5
  3198  004C                     	ds	1
  3199  004D                     ?_I2C_Init:	
  3200  004D                     I2C1_Transmit@i:	
  3201                           ; 1 bytes @ 0x6
  3202                           
  3203  004D                     I2C2_Transmit@i:	
  3204                           ; 1 bytes @ 0x6
  3205                           
  3206  004D                     I2C_Init@address:	
  3207                           ; 1 bytes @ 0x6
  3208                           
  3209  004D                     ___lwdiv@quotient:	
  3210                           ; 1 bytes @ 0x6
  3211                           
  3212                           
  3213                           ; 2 bytes @ 0x6
  3214  004D                     	ds	1
  3215  004E                     I2C1_Transmit@i_172:	
  3216  004E                     I2C2_Transmit@i_316:	
  3217                           ; 1 bytes @ 0x7
  3218                           
  3219  004E                     I2C_Init@mode:	
  3220                           ; 1 bytes @ 0x7
  3221                           
  3222                           
  3223                           ; 1 bytes @ 0x7
  3224  004E                     	ds	1
  3225  004F                     I2C1_Transmit@result:	
  3226  004F                     I2C2_Transmit@result:	
  3227                           ; 1 bytes @ 0x8
  3228                           
  3229  004F                     I2C_Init@Speed:	
  3230                           ; 1 bytes @ 0x8
  3231                           
  3232  004F                     mTouch_Read@chan:	
  3233                           ; 1 bytes @ 0x8
  3234                           
  3235  004F                     ___lwdiv@counter:	
  3236                           ; 1 bytes @ 0x8
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x8
  3240  004F                     	ds	1
  3241  0050                     ??_I2C_Init:	
  3242  0050                     ?_I2C_Transmit:	
  3243                           ; 1 bytes @ 0x9
  3244                           
  3245  0050                     ?___lwmod:	
  3246                           ; 1 bytes @ 0x9
  3247                           
  3248  0050                     I2C_Transmit@address:	
  3249                           ; 2 bytes @ 0x9
  3250                           
  3251  0050                     ___lwmod@divisor:	
  3252                           ; 1 bytes @ 0x9
  3253                           
  3254                           
  3255                           ; 2 bytes @ 0x9
  3256  0050                     	ds	1
  3257  0051                     I2C_Transmit@pData:	
  3258                           
  3259                           ; 1 bytes @ 0xA
  3260  0051                     	ds	1
  3261  0052                     I2C_Init@I2Cx:	
  3262  0052                     I2C_Transmit@size:	
  3263                           ; 1 bytes @ 0xB
  3264                           
  3265  0052                     ___lwmod@dividend:	
  3266                           ; 1 bytes @ 0xB
  3267                           
  3268                           
  3269                           ; 2 bytes @ 0xB
  3270  0052                     	ds	1
  3271  0053                     ??_I2C_Transmit:	
  3272                           
  3273                           ; 1 bytes @ 0xC
  3274  0053                     	ds	1
  3275  0054                     ??___lwmod:	
  3276                           
  3277                           ; 1 bytes @ 0xD
  3278  0054                     	ds	1
  3279  0055                     ___lwmod@counter:	
  3280                           
  3281                           ; 1 bytes @ 0xE
  3282  0055                     	ds	1
  3283  0056                     ?_printf:	
  3284  0056                     I2C_Transmit@I2Cx:	
  3285                           ; 2 bytes @ 0xF
  3286                           
  3287  0056                     printf@f:	
  3288                           ; 1 bytes @ 0xF
  3289                           
  3290                           
  3291                           ; 2 bytes @ 0xF
  3292  0056                     	ds	1
  3293  0057                     I2C_Transmit@result:	
  3294                           
  3295                           ; 1 bytes @ 0x10
  3296  0057                     	ds	1
  3297  0058                     ??_DAC_Initialize:	
  3298                           
  3299                           ; 1 bytes @ 0x11
  3300  0058                     	ds	6
  3301  005E                     ??_printf:	
  3302                           
  3303                           ; 1 bytes @ 0x17
  3304  005E                     	ds	4
  3305  0062                     printf@flag:	
  3306                           
  3307                           ; 1 bytes @ 0x1B
  3308  0062                     	ds	1
  3309  0063                     printf@ap:	
  3310                           
  3311                           ; 1 bytes @ 0x1C
  3312  0063                     	ds	1
  3313  0064                     printf@val:	
  3314                           
  3315                           ; 2 bytes @ 0x1D
  3316  0064                     	ds	2
  3317  0066                     printf@prec:	
  3318                           
  3319                           ; 1 bytes @ 0x1F
  3320  0066                     	ds	1
  3321  0067                     printf@width:	
  3322                           
  3323                           ; 2 bytes @ 0x20
  3324  0067                     	ds	2
  3325  0069                     printf@c:	
  3326                           
  3327                           ; 1 bytes @ 0x22
  3328  0069                     	ds	1
  3329  006A                     ??_main:	
  3330                           
  3331                           ; 1 bytes @ 0x23
  3332  006A                     	ds	1
  3333                           
  3334                           	psect	maintext
  3335  049B                     __pmaintext:	
  3336 ;;
  3337 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3338 ;;
  3339 ;; *************** function _main *****************
  3340 ;; Defined at:
  3341 ;;		line 18 in file "main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      char 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : B1F/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3355 ;;      Params:         0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0
  3357 ;;      Temps:          0       1       0       0       0       0
  3358 ;;      Totals:         0       1       0       0       0       0
  3359 ;;Total ram usage:        1 bytes
  3360 ;; Hardware stack levels required when called:    7
  3361 ;; This function calls:
  3362 ;;		_Basic_Init
  3363 ;;		_Buzzer_Init
  3364 ;;		_DAC_Initialize
  3365 ;;		_LCD_CursorHome
  3366 ;;		_LCD_Init
  3367 ;;		_Timer1_GetCPM
  3368 ;;		_Timer1_GetCountSum
  3369 ;;		_Timer1_Init
  3370 ;;		_Timer1_StartCount
  3371 ;;		_Timer4_Init
  3372 ;;		_Timer6_Init
  3373 ;;		_mTouch_Init
  3374 ;;		_mTouch_Read
  3375 ;;		_printf
  3376 ;; This function is called by:
  3377 ;;		Startup code after reset
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _main
  3383  049B                     _main:	
  3384                           
  3385                           ;main.c: 20: Basic_Init();
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3389  049B  318E  261D  3184   	fcall	_Basic_Init
  3390                           
  3391                           ;main.c: 21: LATA6 = 1;
  3392  049E  0022               	movlb	2	; select bank2
  3393  049F  170C               	bsf	12,6	;volatile
  3394                           
  3395                           ;main.c: 22: Buzzer_Init();
  3396  04A0  318F  2726  3184   	fcall	_Buzzer_Init
  3397                           
  3398                           ;main.c: 23: LCD_Init();
  3399  04A3  3185  2524  3184   	fcall	_LCD_Init
  3400                           
  3401                           ;main.c: 24: Timer1_Init();
  3402  04A6  318E  26E0  3184   	fcall	_Timer1_Init
  3403                           
  3404                           ;main.c: 25: mTouch_Init();
  3405  04A9  318E  2641  3184   	fcall	_mTouch_Init
  3406                           
  3407                           ;main.c: 26: Timer4_Init();
  3408  04AC  318D  25CF  3184   	fcall	_Timer4_Init
  3409                           
  3410                           ;main.c: 27: Timer6_Init();
  3411  04AF  318E  262E  3184   	fcall	_Timer6_Init
  3412                           
  3413                           ;main.c: 28: DAC_Initialize();
  3414  04B2  318E  26C0  3184   	fcall	_DAC_Initialize
  3415                           
  3416                           ;main.c: 30: Timer1_StartCount();
  3417  04B5  318D  254E  3184   	fcall	_Timer1_StartCount
  3418                           
  3419                           ;main.c: 32: mode.ModeNum = 0;
  3420  04B8  0020               	movlb	0	; select bank0
  3421  04B9  01BE               	clrf	_mode+1
  3422  04BA                     l3247:	
  3423                           ;main.c: 34: while(1)
  3424                           
  3425                           
  3426                           ;main.c: 35: {
  3427                           ;main.c: 36: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3428  04BA  3002               	movlw	2
  3429  04BB  3186  268D  3184   	fcall	_mTouch_Read
  3430  04BE  3A00               	xorlw	0
  3431  04BF  1903               	skipnz
  3432  04C0  2CCB               	goto	l3253
  3433  04C1  3003               	movlw	3
  3434  04C2  0020               	movlb	0	; select bank0
  3435  04C3  023E               	subwf	_mode+1,w
  3436  04C4  1803               	skipnc
  3437  04C5  2CCB               	goto	l3253
  3438                           
  3439                           ;main.c: 37: mode.ModeNum++;
  3440  04C6  3001               	movlw	1
  3441  04C7  00EA               	movwf	??_main
  3442  04C8  086A               	movf	??_main,w
  3443  04C9  07BE               	addwf	_mode+1,f
  3444  04CA  2CD8               	goto	l3259
  3445  04CB                     l3253:	
  3446                           
  3447                           ;main.c: 38: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3448  04CB  3001               	movlw	1
  3449  04CC  3186  268D  3184   	fcall	_mTouch_Read
  3450  04CF  3A00               	xorlw	0
  3451  04D0  1903               	skipnz
  3452  04D1  2CD8               	goto	l3259
  3453  04D2  0020               	movlb	0	; select bank0
  3454  04D3  083E               	movf	_mode+1,w
  3455  04D4  1903               	btfsc	3,2
  3456  04D5  2CD8               	goto	l3259
  3457                           
  3458                           ;main.c: 39: mode.ModeNum--;
  3459  04D6  3001               	movlw	1
  3460  04D7  02BE               	subwf	_mode+1,f
  3461  04D8                     l3259:	
  3462                           
  3463                           ;main.c: 41: LCD_CursorHome();
  3464  04D8  318D  25EC  3184   	fcall	_LCD_CursorHome
  3465                           
  3466                           ;main.c: 42: switch(mode.ModeNum)
  3467  04DB  2D14               	goto	l3271
  3468  04DC                     l3261:	
  3469                           ;main.c: 43: {
  3470                           ;main.c: 44: case COUNT:
  3471                           
  3472                           
  3473                           ;main.c: 45: printf("%5ul %7ul", Timer1_GetCPM(),Timer1_GetCountSum());
  3474  04DC  309B               	movlw	low (STR_1| (0+32768))
  3475  04DD  0020               	movlb	0	; select bank0
  3476  04DE  00D6               	movwf	printf@f
  3477  04DF  3080               	movlw	high (STR_1| (0+32768))
  3478  04E0  00D7               	movwf	printf@f+1
  3479  04E1  318D  2559  3184   	fcall	_Timer1_GetCPM
  3480  04E4  0020               	movlb	0	; select bank0
  3481  04E5  0849               	movf	?_Timer1_GetCPM+1,w
  3482  04E6  00D9               	movwf	?_printf+3
  3483  04E7  0848               	movf	?_Timer1_GetCPM,w
  3484  04E8  00D8               	movwf	?_printf+2
  3485  04E9  318D  257E  3184   	fcall	_Timer1_GetCountSum
  3486  04EC  0020               	movlb	0	; select bank0
  3487  04ED  084B               	movf	?_Timer1_GetCountSum+3,w
  3488  04EE  00DD               	movwf	?_printf+7
  3489  04EF  084A               	movf	?_Timer1_GetCountSum+2,w
  3490  04F0  00DC               	movwf	?_printf+6
  3491  04F1  0849               	movf	?_Timer1_GetCountSum+1,w
  3492  04F2  00DB               	movwf	?_printf+5
  3493  04F3  0848               	movf	?_Timer1_GetCountSum,w
  3494  04F4  00DA               	movwf	?_printf+4
  3495  04F5  3181  21BE  3184   	fcall	_printf
  3496                           
  3497                           ;main.c: 46: break;
  3498  04F8  2CBA               	goto	l3247
  3499  04F9                     l3263:	
  3500                           ;main.c: 47: case SELECTFUNC:
  3501                           
  3502                           
  3503                           ;main.c: 48: printf("SELECTFUNC");
  3504  04F9  3086               	movlw	low (STR_2| (0+32768))
  3505  04FA  0020               	movlb	0	; select bank0
  3506  04FB  00D6               	movwf	printf@f
  3507  04FC  3080               	movlw	high (STR_2| (0+32768))
  3508  04FD  00D7               	movwf	printf@f+1
  3509  04FE  3181  21BE  3184   	fcall	_printf
  3510                           
  3511                           ;main.c: 49: break;
  3512  0501  2CBA               	goto	l3247
  3513  0502                     l3265:	
  3514                           ;main.c: 50: case ADJGAIN:
  3515                           
  3516                           
  3517                           ;main.c: 51: printf("ADJGAIN");
  3518  0502  30BD               	movlw	low (STR_3| (0+32768))
  3519  0503  0020               	movlb	0	; select bank0
  3520  0504  00D6               	movwf	printf@f
  3521  0505  3080               	movlw	high (STR_3| (0+32768))
  3522  0506  00D7               	movwf	printf@f+1
  3523  0507  3181  21BE  3184   	fcall	_printf
  3524                           
  3525                           ;main.c: 52: break;
  3526  050A  2CBA               	goto	l3247
  3527  050B                     l3267:	
  3528                           ;main.c: 53: case PMTDEVICE:
  3529                           
  3530                           
  3531                           ;main.c: 54: printf("PMTDEVICE");
  3532  050B  3091               	movlw	low (STR_4| (0+32768))
  3533  050C  0020               	movlb	0	; select bank0
  3534  050D  00D6               	movwf	printf@f
  3535  050E  3080               	movlw	high (STR_4| (0+32768))
  3536  050F  00D7               	movwf	printf@f+1
  3537  0510  3181  21BE  3184   	fcall	_printf
  3538                           
  3539                           ;main.c: 56: }
  3540                           
  3541                           ;main.c: 55: break;
  3542  0513  2CBA               	goto	l3247
  3543  0514                     l3271:	
  3544  0514  0020               	movlb	0	; select bank0
  3545  0515  083E               	movf	_mode+1,w
  3546                           
  3547                           ; Switch size 1, requested type "space"
  3548                           ; Number of cases is 4, Range of values is 0 to 3
  3549                           ; switch strategies available:
  3550                           ; Name         Instructions Cycles
  3551                           ; simple_byte           13     7 (average)
  3552                           ; direct_byte           14     6 (fixed)
  3553                           ; jumptable            260     6 (fixed)
  3554                           ;	Chosen strategy is simple_byte
  3555  0516  3A00               	xorlw	0	; case 0
  3556  0517  1903               	skipnz
  3557  0518  2CDC               	goto	l3261
  3558  0519  3A01               	xorlw	1	; case 1
  3559  051A  1903               	skipnz
  3560  051B  2CF9               	goto	l3263
  3561  051C  3A03               	xorlw	3	; case 2
  3562  051D  1903               	skipnz
  3563  051E  2D02               	goto	l3265
  3564  051F  3A01               	xorlw	1	; case 3
  3565  0520  1903               	skipnz
  3566  0521  2D0B               	goto	l3267
  3567  0522  2CBA               	goto	l3247
  3568  0523  2CBA               	goto	l3247
  3569  0524                     __end_of_main:	
  3570                           ;main.c: 57: }
  3571                           ;main.c: 59: return 0;
  3572                           ;	Return value of _main is never used
  3573                           
  3574                           
  3575                           	psect	text1
  3576  01BE                     __ptext1:	
  3577 ;; *************** function _printf *****************
  3578 ;; Defined at:
  3579 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  3582 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(10), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  tmpval          4    0        struct .
  3585 ;;  width           2   32[BANK0 ] int 
  3586 ;;  val             2   29[BANK0 ] unsigned int 
  3587 ;;  cp              2    0        PTR const unsigned char 
  3588 ;;  len             2    0        unsigned int 
  3589 ;;  c               1   34[BANK0 ] char 
  3590 ;;  prec            1   31[BANK0 ] char 
  3591 ;;  ap              1   28[BANK0 ] PTR void [1]
  3592 ;;		 -> ?_printf(2), 
  3593 ;;  flag            1   27[BANK0 ] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2   15[BANK0 ] int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3603 ;;      Params:         0       8       0       0       0       0
  3604 ;;      Locals:         0       8       0       0       0       0
  3605 ;;      Temps:          0       4       0       0       0       0
  3606 ;;      Totals:         0      20       0       0       0       0
  3607 ;;Total ram usage:       20 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    5
  3610 ;; This function calls:
  3611 ;;		___lwdiv
  3612 ;;		___lwmod
  3613 ;;		___wmul
  3614 ;;		_isdigit
  3615 ;;		_putch
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _printf
  3623  01BE                     _printf:	
  3624                           
  3625                           ;doprnt.c: 466: va_list ap;
  3626                           ;doprnt.c: 499: signed char c;
  3627                           ;doprnt.c: 501: int width;
  3628                           ;doprnt.c: 506: signed char prec;
  3629                           ;doprnt.c: 508: unsigned char flag;
  3630                           ;doprnt.c: 523: union {
  3631                           ;doprnt.c: 524: unsigned long vd;
  3632                           ;doprnt.c: 525: double integ;
  3633                           ;doprnt.c: 526: } tmpval;
  3634                           ;doprnt.c: 528: unsigned int val;
  3635                           ;doprnt.c: 529: unsigned len;
  3636                           ;doprnt.c: 530: const char * cp;
  3637                           ;doprnt.c: 533: *ap = __va_start();
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3641  01BE  3058               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3642  01BF  0020               	movlb	0	; select bank0
  3643  01C0  00DE               	movwf	??_printf
  3644  01C1  085E               	movf	??_printf,w
  3645  01C2  00E3               	movwf	printf@ap
  3646  01C3                     l3175:	
  3647                           ;doprnt.c: 536: while(c = *f++) {
  3648                           
  3649  01C3  0020               	movlb	0	; select bank0
  3650  01C4  0857               	movf	printf@f+1,w
  3651  01C5  00DF               	movwf	??_printf+1
  3652  01C6  0856               	movf	printf@f,w
  3653  01C7  00DE               	movwf	??_printf
  3654  01C8  0AD6               	incf	printf@f,f
  3655  01C9  1903               	skipnz
  3656  01CA  0AD7               	incf	printf@f+1,f
  3657  01CB  085E               	movf	??_printf,w
  3658  01CC  0084               	movwf	4
  3659  01CD  085F               	movf	??_printf+1,w
  3660  01CE  0085               	movwf	5
  3661  01CF  0800               	movf	0,w	;code access
  3662  01D0  00E0               	movwf	??_printf+2
  3663  01D1  0860               	movf	??_printf+2,w
  3664  01D2  00E9               	movwf	printf@c
  3665  01D3  0869               	movf	printf@c,w
  3666  01D4  1903               	btfsc	3,2
  3667  01D5  0008               	return
  3668                           
  3669                           ;doprnt.c: 538: if(c != '%')
  3670  01D6  3025               	movlw	37
  3671  01D7  0669               	xorwf	printf@c,w
  3672  01D8  1903               	btfsc	3,2
  3673  01D9  29DF               	goto	l3119
  3674                           
  3675                           ;doprnt.c: 540: {
  3676                           ;doprnt.c: 541: (putch(c) );
  3677  01DA  0869               	movf	printf@c,w
  3678  01DB  318D  256B  3181   	fcall	_putch
  3679                           
  3680                           ;doprnt.c: 542: continue;
  3681  01DE  29C3               	goto	l3175
  3682  01DF                     l3119:	
  3683                           
  3684                           ;doprnt.c: 543: }
  3685                           ;doprnt.c: 546: width = 0;
  3686  01DF  0020               	movlb	0	; select bank0
  3687  01E0  01E7               	clrf	printf@width
  3688  01E1  01E8               	clrf	printf@width+1
  3689                           
  3690                           ;doprnt.c: 548: flag = 0;
  3691  01E2  01E2               	clrf	printf@flag
  3692                           
  3693                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3694  01E3  0856               	movf	printf@f,w
  3695  01E4  0084               	movwf	4
  3696  01E5  0857               	movf	printf@f+1,w
  3697  01E6  0085               	movwf	5
  3698  01E7  0800               	movf	0,w	;code access
  3699  01E8  318D  25DD  3181   	fcall	_isdigit
  3700  01EB  1C03               	btfss	3,0
  3701  01EC  2A25               	goto	l3137
  3702                           
  3703                           ;doprnt.c: 598: width = 0;
  3704  01ED  0020               	movlb	0	; select bank0
  3705  01EE  01E7               	clrf	printf@width
  3706  01EF  01E8               	clrf	printf@width+1
  3707  01F0                     l3125:	
  3708                           ;doprnt.c: 599: do {
  3709                           
  3710                           
  3711                           ;doprnt.c: 600: width *= 10;
  3712  01F0  300A               	movlw	10
  3713  01F1  0020               	movlb	0	; select bank0
  3714  01F2  00C8               	movwf	___wmul@multiplier
  3715  01F3  3000               	movlw	0
  3716  01F4  00C9               	movwf	___wmul@multiplier+1
  3717  01F5  0868               	movf	printf@width+1,w
  3718  01F6  00CB               	movwf	___wmul@multiplicand+1
  3719  01F7  0867               	movf	printf@width,w
  3720  01F8  00CA               	movwf	___wmul@multiplicand
  3721  01F9  318E  2686  3181   	fcall	___wmul
  3722  01FC  0020               	movlb	0	; select bank0
  3723  01FD  0849               	movf	?___wmul+1,w
  3724  01FE  00E8               	movwf	printf@width+1
  3725  01FF  0848               	movf	?___wmul,w
  3726  0200  00E7               	movwf	printf@width
  3727                           
  3728                           ;doprnt.c: 601: width += *f++ - '0';
  3729  0201  0856               	movf	printf@f,w
  3730  0202  0084               	movwf	4
  3731  0203  0857               	movf	printf@f+1,w
  3732  0204  0085               	movwf	5
  3733  0205  0800               	movf	0,w	;code access
  3734  0206  3ED0               	addlw	208
  3735  0207  00DE               	movwf	??_printf
  3736  0208  30FF               	movlw	255
  3737  0209  1803               	skipnc
  3738  020A  3000               	movlw	0
  3739  020B  00DF               	movwf	??_printf+1
  3740  020C  085E               	movf	??_printf,w
  3741  020D  07E7               	addwf	printf@width,f
  3742  020E  085F               	movf	??_printf+1,w
  3743  020F  3DE8               	addwfc	printf@width+1,f
  3744  0210  3001               	movlw	1
  3745  0211  07D6               	addwf	printf@f,f
  3746  0212  3000               	movlw	0
  3747  0213  3DD7               	addwfc	printf@f+1,f
  3748                           
  3749                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3750  0214  0856               	movf	printf@f,w
  3751  0215  0084               	movwf	4
  3752  0216  0857               	movf	printf@f+1,w
  3753  0217  0085               	movwf	5
  3754  0218  0800               	movf	0,w	;code access
  3755  0219  318D  25DD  3181   	fcall	_isdigit
  3756  021C  1C03               	btfss	3,0
  3757  021D  2A25               	goto	l3137
  3758  021E  29F0               	goto	l3125
  3759  021F                     l3133:	
  3760                           ;doprnt.c: 817: case 'u':
  3761                           
  3762                           ;doprnt.c: 813: continue;
  3763                           
  3764                           ;doprnt.c: 802: default:
  3765                           
  3766                           ;doprnt.c: 638: goto alldone;
  3767                           
  3768                           ;doprnt.c: 637: case 0:
  3769                           
  3770                           ;doprnt.c: 608: }
  3771                           ;doprnt.c: 635: switch(c = *f++) {
  3772                           
  3773                           
  3774                           ;doprnt.c: 818: flag |= 0xC0;
  3775  021F  30C0               	movlw	192
  3776  0220  0020               	movlb	0	; select bank0
  3777  0221  00DE               	movwf	??_printf
  3778  0222  085E               	movf	??_printf,w
  3779  0223  04E2               	iorwf	printf@flag,f
  3780                           
  3781                           ;doprnt.c: 822: }
  3782                           
  3783                           ;doprnt.c: 819: break;
  3784  0224  2A3A               	goto	l3139
  3785  0225                     l3137:	
  3786  0225  0020               	movlb	0	; select bank0
  3787  0226  0857               	movf	printf@f+1,w
  3788  0227  00DF               	movwf	??_printf+1
  3789  0228  0856               	movf	printf@f,w
  3790  0229  00DE               	movwf	??_printf
  3791  022A  0AD6               	incf	printf@f,f
  3792  022B  1903               	skipnz
  3793  022C  0AD7               	incf	printf@f+1,f
  3794  022D  085E               	movf	??_printf,w
  3795  022E  0084               	movwf	4
  3796  022F  085F               	movf	??_printf+1,w
  3797  0230  0085               	movwf	5
  3798  0231  0800               	movf	0,w	;code access
  3799  0232  00E9               	movwf	printf@c
  3800                           
  3801                           ; Switch size 1, requested type "space"
  3802                           ; Number of cases is 2, Range of values is 0 to 117
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte            7     4 (average)
  3806                           ; direct_byte          242     6 (fixed)
  3807                           ; jumptable            260     6 (fixed)
  3808                           ;	Chosen strategy is simple_byte
  3809  0233  3A00               	xorlw	0	; case 0
  3810  0234  1903               	skipnz
  3811  0235  2AD3               	goto	l713
  3812  0236  3A75               	xorlw	117	; case 117
  3813  0237  1903               	skipnz
  3814  0238  2A1F               	goto	l3133
  3815  0239  29C3               	goto	l3175
  3816  023A                     l3139:	
  3817                           
  3818                           ;doprnt.c: 1273: {
  3819                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3820  023A  0863               	movf	printf@ap,w
  3821  023B  0086               	movwf	6
  3822  023C  0187               	clrf	7
  3823  023D  3F40               	moviw [0]fsr1
  3824  023E  00E4               	movwf	printf@val
  3825  023F  3F41               	moviw [1]fsr1
  3826  0240  00E5               	movwf	printf@val+1
  3827  0241  3002               	movlw	2
  3828  0242  00DE               	movwf	??_printf
  3829  0243  085E               	movf	??_printf,w
  3830  0244  07E3               	addwf	printf@ap,f
  3831                           
  3832                           ;doprnt.c: 1287: }
  3833                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3834  0245  01E9               	clrf	printf@c
  3835  0246  0AE9               	incf	printf@c,f
  3836  0247  3005               	movlw	5
  3837  0248  0669               	xorwf	printf@c,w
  3838  0249  1903               	btfsc	3,2
  3839  024A  2A6A               	goto	l3155
  3840  024B                     l3149:	
  3841                           
  3842                           ;doprnt.c: 1306: if(val < dpowers[c])
  3843  024B  0869               	movf	printf@c,w
  3844  024C  00DE               	movwf	??_printf
  3845  024D  01DF               	clrf	??_printf+1
  3846  024E  35DE               	lslf	??_printf,f
  3847  024F  0DDF               	rlf	??_printf+1,f
  3848  0250  307C               	movlw	low (_dpowers| (0+32768))
  3849  0251  075E               	addwf	??_printf,w
  3850  0252  0084               	movwf	4
  3851  0253  3080               	movlw	high (_dpowers| (0+32768))
  3852  0254  3D5F               	addwfc	??_printf+1,w
  3853  0255  0085               	movwf	5
  3854  0256  3F00               	moviw [0]fsr0
  3855  0257  00E0               	movwf	??_printf+2
  3856  0258  3F01               	moviw [1]fsr0
  3857  0259  00E1               	movwf	??_printf+3
  3858  025A  0861               	movf	??_printf+3,w
  3859  025B  0265               	subwf	printf@val+1,w
  3860  025C  1D03               	skipz
  3861  025D  2A60               	goto	u2715
  3862  025E  0860               	movf	??_printf+2,w
  3863  025F  0264               	subwf	printf@val,w
  3864  0260                     u2715:	
  3865  0260  1C03               	btfss	3,0
  3866  0261  2A6A               	goto	l3155
  3867                           
  3868                           ;doprnt.c: 1307: break;
  3869  0262  3001               	movlw	1
  3870  0263  00DE               	movwf	??_printf
  3871  0264  085E               	movf	??_printf,w
  3872  0265  07E9               	addwf	printf@c,f
  3873  0266  3005               	movlw	5
  3874  0267  0669               	xorwf	printf@c,w
  3875  0268  1D03               	btfss	3,2
  3876  0269  2A4B               	goto	l3149
  3877  026A                     l3155:	
  3878                           
  3879                           ;doprnt.c: 1381: if(width > c)
  3880  026A  0869               	movf	printf@c,w
  3881  026B  00DE               	movwf	??_printf
  3882  026C  01DF               	clrf	??_printf+1
  3883  026D  1BDE               	btfsc	??_printf,7
  3884  026E  03DF               	decf	??_printf+1,f
  3885  026F  085F               	movf	??_printf+1,w
  3886  0270  3A80               	xorlw	128
  3887  0271  00E0               	movwf	??_printf+2
  3888  0272  0868               	movf	printf@width+1,w
  3889  0273  3A80               	xorlw	128
  3890  0274  0260               	subwf	??_printf+2,w
  3891  0275  1D03               	skipz
  3892  0276  2A79               	goto	u2735
  3893  0277  0867               	movf	printf@width,w
  3894  0278  025E               	subwf	??_printf,w
  3895  0279                     u2735:	
  3896  0279  1803               	skipnc
  3897  027A  2A86               	goto	l3159
  3898                           
  3899                           ;doprnt.c: 1382: width -= c;
  3900  027B  0020               	movlb	0	; select bank0
  3901  027C  0869               	movf	printf@c,w
  3902  027D  00DE               	movwf	??_printf
  3903  027E  01DF               	clrf	??_printf+1
  3904  027F  1BDE               	btfsc	??_printf,7
  3905  0280  03DF               	decf	??_printf+1,f
  3906  0281  085E               	movf	??_printf,w
  3907  0282  02E7               	subwf	printf@width,f
  3908  0283  085F               	movf	??_printf+1,w
  3909  0284  3BE8               	subwfb	printf@width+1,f
  3910  0285  2A89               	goto	l3161
  3911  0286                     l3159:	
  3912                           
  3913                           ;doprnt.c: 1383: else
  3914                           ;doprnt.c: 1384: width = 0;
  3915  0286  0020               	movlb	0	; select bank0
  3916  0287  01E7               	clrf	printf@width
  3917  0288  01E8               	clrf	printf@width+1
  3918  0289                     l3161:	
  3919                           
  3920                           ;doprnt.c: 1422: {
  3921                           ;doprnt.c: 1424: if(width
  3922                           ;doprnt.c: 1428: )
  3923  0289  0867               	movf	printf@width,w
  3924  028A  0468               	iorwf	printf@width+1,w
  3925  028B  1903               	btfsc	3,2
  3926  028C  2A9A               	goto	l3167
  3927  028D                     l3163:	
  3928                           ;doprnt.c: 1429: do
  3929                           
  3930                           
  3931                           ;doprnt.c: 1430: (putch(' ') );
  3932  028D  3020               	movlw	32
  3933  028E  318D  256B  3181   	fcall	_putch
  3934                           
  3935                           ;doprnt.c: 1431: while(--width);
  3936  0291  30FF               	movlw	255
  3937  0292  0020               	movlb	0	; select bank0
  3938  0293  07E7               	addwf	printf@width,f
  3939  0294  30FF               	movlw	255
  3940  0295  3DE8               	addwfc	printf@width+1,f
  3941  0296  0867               	movf	printf@width,w
  3942  0297  0468               	iorwf	printf@width+1,w
  3943  0298  1D03               	btfss	3,2
  3944  0299  2A8D               	goto	l3163
  3945  029A                     l3167:	
  3946                           
  3947                           ;doprnt.c: 1469: }
  3948                           ;doprnt.c: 1472: prec = c;
  3949  029A  0869               	movf	printf@c,w
  3950  029B  00DE               	movwf	??_printf
  3951  029C  085E               	movf	??_printf,w
  3952  029D  00E6               	movwf	printf@prec
  3953  029E                     l3173:	
  3954                           ;doprnt.c: 1474: while(prec--) {
  3955                           
  3956  029E  30FF               	movlw	255
  3957  029F  0020               	movlb	0	; select bank0
  3958  02A0  00DE               	movwf	??_printf
  3959  02A1  085E               	movf	??_printf,w
  3960  02A2  07E6               	addwf	printf@prec,f
  3961  02A3  0A66               	incf	printf@prec,w
  3962  02A4  1903               	btfsc	3,2
  3963  02A5  29C3               	goto	l3175
  3964                           
  3965                           ;doprnt.c: 1478: {
  3966                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3967  02A6  300A               	movlw	10
  3968  02A7  00D0               	movwf	___lwmod@divisor
  3969  02A8  3000               	movlw	0
  3970  02A9  00D1               	movwf	___lwmod@divisor+1
  3971  02AA  0866               	movf	printf@prec,w
  3972  02AB  00DE               	movwf	??_printf
  3973  02AC  01DF               	clrf	??_printf+1
  3974  02AD  35DE               	lslf	??_printf,f
  3975  02AE  0DDF               	rlf	??_printf+1,f
  3976  02AF  307C               	movlw	low (_dpowers| (0+32768))
  3977  02B0  075E               	addwf	??_printf,w
  3978  02B1  0084               	movwf	4
  3979  02B2  3080               	movlw	high (_dpowers| (0+32768))
  3980  02B3  3D5F               	addwfc	??_printf+1,w
  3981  02B4  0085               	movwf	5
  3982  02B5  3F00               	moviw [0]fsr0
  3983  02B6  00C8               	movwf	___lwdiv@divisor
  3984  02B7  3F01               	moviw [1]fsr0
  3985  02B8  00C9               	movwf	___lwdiv@divisor+1
  3986  02B9  0865               	movf	printf@val+1,w
  3987  02BA  00CB               	movwf	___lwdiv@dividend+1
  3988  02BB  0864               	movf	printf@val,w
  3989  02BC  00CA               	movwf	___lwdiv@dividend
  3990  02BD  318F  27CB  3181   	fcall	___lwdiv
  3991  02C0  0020               	movlb	0	; select bank0
  3992  02C1  0849               	movf	?___lwdiv+1,w
  3993  02C2  00D3               	movwf	___lwmod@dividend+1
  3994  02C3  0848               	movf	?___lwdiv,w
  3995  02C4  00D2               	movwf	___lwmod@dividend
  3996  02C5  3187  27D2  3181   	fcall	___lwmod
  3997  02C8  0020               	movlb	0	; select bank0
  3998  02C9  0850               	movf	?___lwmod,w
  3999  02CA  3E30               	addlw	48
  4000  02CB  00E0               	movwf	??_printf+2
  4001  02CC  0860               	movf	??_printf+2,w
  4002  02CD  00E9               	movwf	printf@c
  4003                           
  4004                           ;doprnt.c: 1523: }
  4005                           ;doprnt.c: 1524: (putch(c) );
  4006  02CE  0869               	movf	printf@c,w
  4007  02CF  318D  256B  3181   	fcall	_putch
  4008  02D2  2A9E               	goto	l3173
  4009  02D3                     l713:	
  4010                           ;doprnt.c: 1540: return 0;
  4011                           ;	Return value of _printf is never used
  4012                           
  4013                           ;doprnt.c: 1525: }
  4014                           ;doprnt.c: 1533: }
  4015                           ;doprnt.c: 1535: alldone:
  4016                           
  4017  02D3  0008               	return
  4018  02D4                     __end_of_printf:	
  4019                           
  4020                           	psect	text2
  4021  0D6B                     __ptext2:	
  4022 ;; *************** function _putch *****************
  4023 ;; Defined at:
  4024 ;;		line 64 in file "LCD.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  c               1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  c               1    4[BANK0 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4038 ;;      Params:         0       0       0       0       0       0
  4039 ;;      Locals:         0       1       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0
  4041 ;;      Totals:         0       1       0       0       0       0
  4042 ;;Total ram usage:        1 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    4
  4045 ;; This function calls:
  4046 ;;		_LCD_WriteData
  4047 ;; This function is called by:
  4048 ;;		_printf
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _putch
  4054  0D6B                     _putch:	
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4058                           ;putch@c stored from wreg
  4059  0D6B  0020               	movlb	0	; select bank0
  4060  0D6C  00CB               	movwf	putch@c
  4061                           
  4062                           ;LCD.c: 66: LATA3 = 1;
  4063  0D6D  0022               	movlb	2	; select bank2
  4064  0D6E  158C               	bsf	12,3	;volatile
  4065                           
  4066                           ;LCD.c: 67: LCD_WriteData(c);
  4067  0D6F  0020               	movlb	0	; select bank0
  4068  0D70  084B               	movf	putch@c,w
  4069  0D71  3187  2759         	fcall	_LCD_WriteData
  4070  0D73  0008               	return
  4071  0D74                     __end_of_putch:	
  4072                           
  4073                           	psect	text3
  4074  0DDD                     __ptext3:	
  4075 ;; *************** function _isdigit *****************
  4076 ;; Defined at:
  4077 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  c               1    wreg     unsigned char 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  c               1    2[BANK0 ] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;		None               void
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4091 ;;      Params:         0       0       0       0       0       0
  4092 ;;      Locals:         0       2       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0
  4094 ;;      Totals:         0       2       0       0       0       0
  4095 ;;Total ram usage:        2 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    3
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_printf
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function _isdigit
  4107  0DDD                     _isdigit:	
  4108                           
  4109                           ;incstack = 0
  4110                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4111                           ;isdigit@c stored from wreg
  4112  0DDD  0020               	movlb	0	; select bank0
  4113  0DDE  00C9               	movwf	isdigit@c
  4114  0DDF  01C8               	clrf	_isdigit$936
  4115  0DE0  303A               	movlw	58
  4116  0DE1  0249               	subwf	isdigit@c,w
  4117  0DE2  1803               	skipnc
  4118  0DE3  2DEA               	goto	l2639
  4119  0DE4  3030               	movlw	48
  4120  0DE5  0249               	subwf	isdigit@c,w
  4121  0DE6  1C03               	skipc
  4122  0DE7  2DEA               	goto	l2639
  4123  0DE8  01C8               	clrf	_isdigit$936
  4124  0DE9  0AC8               	incf	_isdigit$936,f
  4125  0DEA                     l2639:	
  4126  0DEA  0C48               	rrf	_isdigit$936,w
  4127  0DEB  0008               	return
  4128  0DEC                     __end_of_isdigit:	
  4129                           
  4130                           	psect	text4
  4131  0E86                     __ptext4:	
  4132 ;; *************** function ___wmul *****************
  4133 ;; Defined at:
  4134 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  multiplier      2    1[BANK0 ] unsigned int 
  4137 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  product         2    5[BANK0 ] unsigned int 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    1[BANK0 ] unsigned int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4149 ;;      Params:         0       4       0       0       0       0
  4150 ;;      Locals:         0       2       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0
  4152 ;;      Totals:         0       6       0       0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    3
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_printf
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function ___wmul
  4165  0E86                     ___wmul:	
  4166                           
  4167                           ;incstack = 0
  4168                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4169  0E86  0020               	movlb	0	; select bank0
  4170  0E87  01CC               	clrf	___wmul@product
  4171  0E88  01CD               	clrf	___wmul@product+1
  4172  0E89                     l2645:	
  4173  0E89  1C48               	btfss	___wmul@multiplier,0
  4174  0E8A  2E8F               	goto	l838
  4175  0E8B  084A               	movf	___wmul@multiplicand,w
  4176  0E8C  07CC               	addwf	___wmul@product,f
  4177  0E8D  084B               	movf	___wmul@multiplicand+1,w
  4178  0E8E  3DCD               	addwfc	___wmul@product+1,f
  4179  0E8F                     l838:	
  4180  0E8F  3001               	movlw	1
  4181  0E90                     u2075:	
  4182  0E90  35CA               	lslf	___wmul@multiplicand,f
  4183  0E91  0DCB               	rlf	___wmul@multiplicand+1,f
  4184  0E92  0B89               	decfsz	9,f
  4185  0E93  2E90               	goto	u2075
  4186  0E94  3001               	movlw	1
  4187  0E95                     u2085:	
  4188  0E95  36C9               	lsrf	___wmul@multiplier+1,f
  4189  0E96  0CC8               	rrf	___wmul@multiplier,f
  4190  0E97  0B89               	decfsz	9,f
  4191  0E98  2E95               	goto	u2085
  4192  0E99  0848               	movf	___wmul@multiplier,w
  4193  0E9A  0449               	iorwf	___wmul@multiplier+1,w
  4194  0E9B  1D03               	btfss	3,2
  4195  0E9C  2E89               	goto	l2645
  4196  0E9D  084D               	movf	___wmul@product+1,w
  4197  0E9E  00C9               	movwf	?___wmul+1
  4198  0E9F  084C               	movf	___wmul@product,w
  4199  0EA0  00C8               	movwf	?___wmul
  4200  0EA1  0008               	return
  4201  0EA2                     __end_of___wmul:	
  4202                           
  4203                           	psect	text5
  4204  07D2                     __ptext5:	
  4205 ;; *************** function ___lwmod *****************
  4206 ;; Defined at:
  4207 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  divisor         2    9[BANK0 ] unsigned int 
  4210 ;;  dividend        2   11[BANK0 ] unsigned int 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  counter         1   14[BANK0 ] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2    9[BANK0 ] unsigned int 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4222 ;;      Params:         0       4       0       0       0       0
  4223 ;;      Locals:         0       1       0       0       0       0
  4224 ;;      Temps:          0       1       0       0       0       0
  4225 ;;      Totals:         0       6       0       0       0       0
  4226 ;;Total ram usage:        6 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    3
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_printf
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function ___lwmod
  4238  07D2                     ___lwmod:	
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4242  07D2  0020               	movlb	0	; select bank0
  4243  07D3  0850               	movf	___lwmod@divisor,w
  4244  07D4  0451               	iorwf	___lwmod@divisor+1,w
  4245  07D5  1903               	btfsc	3,2
  4246  07D6  2FFA               	goto	l2725
  4247  07D7  01D5               	clrf	___lwmod@counter
  4248  07D8  0AD5               	incf	___lwmod@counter,f
  4249  07D9                     l2715:	
  4250  07D9  1BD1               	btfsc	___lwmod@divisor+1,7
  4251  07DA  2FE5               	goto	l2717
  4252  07DB  3001               	movlw	1
  4253  07DC                     u2255:	
  4254  07DC  35D0               	lslf	___lwmod@divisor,f
  4255  07DD  0DD1               	rlf	___lwmod@divisor+1,f
  4256  07DE  0B89               	decfsz	9,f
  4257  07DF  2FDC               	goto	u2255
  4258  07E0  3001               	movlw	1
  4259  07E1  00D4               	movwf	??___lwmod
  4260  07E2  0854               	movf	??___lwmod,w
  4261  07E3  07D5               	addwf	___lwmod@counter,f
  4262  07E4  2FD9               	goto	l2715
  4263  07E5                     l2717:	
  4264  07E5  0851               	movf	___lwmod@divisor+1,w
  4265  07E6  0253               	subwf	___lwmod@dividend+1,w
  4266  07E7  1D03               	skipz
  4267  07E8  2FEB               	goto	u2275
  4268  07E9  0850               	movf	___lwmod@divisor,w
  4269  07EA  0252               	subwf	___lwmod@dividend,w
  4270  07EB                     u2275:	
  4271  07EB  1C03               	skipc
  4272  07EC  2FF1               	goto	l2721
  4273  07ED  0850               	movf	___lwmod@divisor,w
  4274  07EE  02D2               	subwf	___lwmod@dividend,f
  4275  07EF  0851               	movf	___lwmod@divisor+1,w
  4276  07F0  3BD3               	subwfb	___lwmod@dividend+1,f
  4277  07F1                     l2721:	
  4278  07F1  3001               	movlw	1
  4279  07F2                     u2285:	
  4280  07F2  36D1               	lsrf	___lwmod@divisor+1,f
  4281  07F3  0CD0               	rrf	___lwmod@divisor,f
  4282  07F4  0B89               	decfsz	9,f
  4283  07F5  2FF2               	goto	u2285
  4284  07F6  3001               	movlw	1
  4285  07F7  02D5               	subwf	___lwmod@counter,f
  4286  07F8  1D03               	btfss	3,2
  4287  07F9  2FE5               	goto	l2717
  4288  07FA                     l2725:	
  4289  07FA  0853               	movf	___lwmod@dividend+1,w
  4290  07FB  00D1               	movwf	?___lwmod+1
  4291  07FC  0852               	movf	___lwmod@dividend,w
  4292  07FD  00D0               	movwf	?___lwmod
  4293  07FE  0008               	return
  4294  07FF                     __end_of___lwmod:	
  4295                           
  4296                           	psect	text6
  4297  0FCB                     __ptext6:	
  4298 ;; *************** function ___lwdiv *****************
  4299 ;; Defined at:
  4300 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  divisor         2    1[BANK0 ] unsigned int 
  4303 ;;  dividend        2    3[BANK0 ] unsigned int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  quotient        2    6[BANK0 ] unsigned int 
  4306 ;;  counter         1    8[BANK0 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  2    1[BANK0 ] unsigned int 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4316 ;;      Params:         0       4       0       0       0       0
  4317 ;;      Locals:         0       3       0       0       0       0
  4318 ;;      Temps:          0       1       0       0       0       0
  4319 ;;      Totals:         0       8       0       0       0       0
  4320 ;;Total ram usage:        8 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    3
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_printf
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function ___lwdiv
  4332  0FCB                     ___lwdiv:	
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4336  0FCB  0020               	movlb	0	; select bank0
  4337  0FCC  01CD               	clrf	___lwdiv@quotient
  4338  0FCD  01CE               	clrf	___lwdiv@quotient+1
  4339  0FCE  0848               	movf	___lwdiv@divisor,w
  4340  0FCF  0449               	iorwf	___lwdiv@divisor+1,w
  4341  0FD0  1903               	btfsc	3,2
  4342  0FD1  2FFB               	goto	l2703
  4343  0FD2  01CF               	clrf	___lwdiv@counter
  4344  0FD3  0ACF               	incf	___lwdiv@counter,f
  4345  0FD4                     l2691:	
  4346  0FD4  1BC9               	btfsc	___lwdiv@divisor+1,7
  4347  0FD5  2FE0               	goto	l2693
  4348  0FD6  3001               	movlw	1
  4349  0FD7                     u2185:	
  4350  0FD7  35C8               	lslf	___lwdiv@divisor,f
  4351  0FD8  0DC9               	rlf	___lwdiv@divisor+1,f
  4352  0FD9  0B89               	decfsz	9,f
  4353  0FDA  2FD7               	goto	u2185
  4354  0FDB  3001               	movlw	1
  4355  0FDC  00CC               	movwf	??___lwdiv
  4356  0FDD  084C               	movf	??___lwdiv,w
  4357  0FDE  07CF               	addwf	___lwdiv@counter,f
  4358  0FDF  2FD4               	goto	l2691
  4359  0FE0                     l2693:	
  4360  0FE0  3001               	movlw	1
  4361  0FE1                     u2205:	
  4362  0FE1  35CD               	lslf	___lwdiv@quotient,f
  4363  0FE2  0DCE               	rlf	___lwdiv@quotient+1,f
  4364  0FE3  0B89               	decfsz	9,f
  4365  0FE4  2FE1               	goto	u2205
  4366  0FE5  0849               	movf	___lwdiv@divisor+1,w
  4367  0FE6  024B               	subwf	___lwdiv@dividend+1,w
  4368  0FE7  1D03               	skipz
  4369  0FE8  2FEB               	goto	u2215
  4370  0FE9  0848               	movf	___lwdiv@divisor,w
  4371  0FEA  024A               	subwf	___lwdiv@dividend,w
  4372  0FEB                     u2215:	
  4373  0FEB  1C03               	skipc
  4374  0FEC  2FF2               	goto	l2699
  4375  0FED  0848               	movf	___lwdiv@divisor,w
  4376  0FEE  02CA               	subwf	___lwdiv@dividend,f
  4377  0FEF  0849               	movf	___lwdiv@divisor+1,w
  4378  0FF0  3BCB               	subwfb	___lwdiv@dividend+1,f
  4379  0FF1  144D               	bsf	___lwdiv@quotient,0
  4380  0FF2                     l2699:	
  4381  0FF2  3001               	movlw	1
  4382  0FF3                     u2225:	
  4383  0FF3  36C9               	lsrf	___lwdiv@divisor+1,f
  4384  0FF4  0CC8               	rrf	___lwdiv@divisor,f
  4385  0FF5  0B89               	decfsz	9,f
  4386  0FF6  2FF3               	goto	u2225
  4387  0FF7  3001               	movlw	1
  4388  0FF8  02CF               	subwf	___lwdiv@counter,f
  4389  0FF9  1D03               	btfss	3,2
  4390  0FFA  2FE0               	goto	l2693
  4391  0FFB                     l2703:	
  4392  0FFB  084E               	movf	___lwdiv@quotient+1,w
  4393  0FFC  00C9               	movwf	?___lwdiv+1
  4394  0FFD  084D               	movf	___lwdiv@quotient,w
  4395  0FFE  00C8               	movwf	?___lwdiv
  4396  0FFF  0008               	return
  4397  1000                     __end_of___lwdiv:	
  4398                           
  4399                           	psect	text7
  4400  068D                     __ptext7:	
  4401 ;; *************** function _mTouch_Read *****************
  4402 ;; Defined at:
  4403 ;;		line 111 in file "main.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  chan            1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  chan            1    8[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      unsigned char 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4417 ;;      Params:         0       0       0       0       0       0
  4418 ;;      Locals:         0       1       0       0       0       0
  4419 ;;      Temps:          0       5       0       0       0       0
  4420 ;;      Totals:         0       6       0       0       0       0
  4421 ;;Total ram usage:        6 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    4
  4424 ;; This function calls:
  4425 ;;		_Buzzer_MiliSecond
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _mTouch_Read
  4433  068D                     _mTouch_Read:	
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4437                           ;mTouch_Read@chan stored from wreg
  4438  068D  0020               	movlb	0	; select bank0
  4439  068E  00CF               	movwf	mTouch_Read@chan
  4440                           
  4441                           ;main.c: 113: if(chan>2)return 0;
  4442  068F  3003               	movlw	3
  4443  0690  024F               	subwf	mTouch_Read@chan,w
  4444  0691  1C03               	skipc
  4445  0692  2E95               	goto	l3097
  4446  0693  3000               	movlw	0
  4447  0694  0008               	return
  4448  0695                     l3097:	
  4449                           
  4450                           ;main.c: 115: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4451  0695  084F               	movf	mTouch_Read@chan,w
  4452  0696  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  4453  0697  0086               	movwf	6
  4454  0698  0187               	clrf	7
  4455  0699  0801               	movf	1,w
  4456  069A  00CA               	movwf	??_mTouch_Read
  4457  069B  01CB               	clrf	??_mTouch_Read+1
  4458  069C  09CA               	comf	??_mTouch_Read,f
  4459  069D  09CB               	comf	??_mTouch_Read+1,f
  4460  069E  0ACA               	incf	??_mTouch_Read,f
  4461  069F  1903               	skipnz
  4462  06A0  0ACB               	incf	??_mTouch_Read+1,f
  4463  06A1  084F               	movf	mTouch_Read@chan,w
  4464  06A2  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4465  06A3  0086               	movwf	6
  4466  06A4  0187               	clrf	7
  4467  06A5  0801               	movf	1,w
  4468  06A6  074A               	addwf	??_mTouch_Read,w
  4469  06A7  00CC               	movwf	??_mTouch_Read+2
  4470  06A8  084B               	movf	??_mTouch_Read+1,w
  4471  06A9  1803               	skipnc
  4472  06AA  0A4B               	incf	??_mTouch_Read+1,w
  4473  06AB  00CD               	movwf	??_mTouch_Read+3
  4474  06AC  084D               	movf	??_mTouch_Read+3,w
  4475  06AD  3A80               	xorlw	128
  4476  06AE  00CE               	movwf	??_mTouch_Read+4
  4477  06AF  3080               	movlw	128
  4478  06B0  024E               	subwf	??_mTouch_Read+4,w
  4479  06B1  1D03               	skipz
  4480  06B2  2EB5               	goto	u2655
  4481  06B3  30C9               	movlw	201
  4482  06B4  024C               	subwf	??_mTouch_Read+2,w
  4483  06B5                     u2655:	
  4484  06B5  1C03               	skipc
  4485  06B6  2ECF               	goto	l3109
  4486  06B7  0020               	movlb	0	; select bank0
  4487  06B8  084F               	movf	mTouch_Read@chan,w
  4488  06B9  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4489  06BA  0086               	movwf	6
  4490  06BB  0187               	clrf	7
  4491  06BC  0801               	movf	1,w
  4492  06BD  1D03               	btfss	3,2
  4493  06BE  2ECF               	goto	l3109
  4494                           
  4495                           ;main.c: 116: {
  4496                           ;main.c: 117: mTouch_Interval[chan] = 100;
  4497  06BF  3064               	movlw	100
  4498  06C0  00CA               	movwf	??_mTouch_Read
  4499  06C1  084F               	movf	mTouch_Read@chan,w
  4500  06C2  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4501  06C3  0086               	movwf	6
  4502  06C4  0187               	clrf	7
  4503  06C5  084A               	movf	??_mTouch_Read,w
  4504  06C6  0081               	movwf	1
  4505                           
  4506                           ;main.c: 118: Buzzer_MiliSecond(100);
  4507  06C7  3064               	movlw	100
  4508  06C8  00C8               	movwf	Buzzer_MiliSecond@time
  4509  06C9  3000               	movlw	0
  4510  06CA  00C9               	movwf	Buzzer_MiliSecond@time+1
  4511  06CB  318D  2588         	fcall	_Buzzer_MiliSecond
  4512                           
  4513                           ;main.c: 119: return 1;
  4514  06CD  3001               	movlw	1
  4515  06CE  0008               	return
  4516  06CF                     l3109:	
  4517                           
  4518                           ;main.c: 120: }
  4519                           ;main.c: 121: return 0;
  4520  06CF  3000               	movlw	0
  4521  06D0  0008               	return
  4522  06D1                     __end_of_mTouch_Read:	
  4523                           
  4524                           	psect	text8
  4525  0D88                     __ptext8:	
  4526 ;; *************** function _Buzzer_MiliSecond *****************
  4527 ;; Defined at:
  4528 ;;		line 38 in file "Buzzer.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  time            2    1[BANK0 ] unsigned int 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4542 ;;      Params:         0       2       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0
  4545 ;;      Totals:         0       2       0       0       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    3
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_mTouch_Read
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _Buzzer_MiliSecond
  4558  0D88                     _Buzzer_MiliSecond:	
  4559                           
  4560                           ;Buzzer.c: 40: if(count==0)
  4561                           
  4562                           ;incstack = 0
  4563                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4564  0D88  0020               	movlb	0	; select bank0
  4565  0D89  0841               	movf	_count,w
  4566  0D8A  0442               	iorwf	_count+1,w
  4567  0D8B  1D03               	btfss	3,2
  4568  0D8C  0008               	return
  4569                           
  4570                           ;Buzzer.c: 41: count = time;
  4571  0D8D  0849               	movf	Buzzer_MiliSecond@time+1,w
  4572  0D8E  00C2               	movwf	_count+1
  4573  0D8F  0848               	movf	Buzzer_MiliSecond@time,w
  4574  0D90  00C1               	movwf	_count
  4575  0D91  0008               	return
  4576  0D92                     __end_of_Buzzer_MiliSecond:	
  4577                           
  4578                           	psect	text9
  4579  0E41                     __ptext9:	
  4580 ;; *************** function _mTouch_Init *****************
  4581 ;; Defined at:
  4582 ;;		line 12 in file "mTouch.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, pclath, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4596 ;;      Params:         0       0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0
  4598 ;;      Temps:          0       1       0       0       0       0
  4599 ;;      Totals:         0       1       0       0       0       0
  4600 ;;Total ram usage:        1 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    4
  4603 ;; This function calls:
  4604 ;;		_mTouch_PortInit
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _mTouch_Init
  4612  0E41                     _mTouch_Init:	
  4613                           
  4614                           ;mTouch.c: 14: mTouch_PortInit();
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4618  0E41  318D  25C2         	fcall	_mTouch_PortInit
  4619                           
  4620                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4621  0E43  0021               	movlb	1	; select bank1
  4622  0E44  0815               	movf	21,w	;volatile
  4623                           
  4624                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4625  0E45  1595               	bsf	21,3	;volatile
  4626                           
  4627                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4628  0E46  1695               	bsf	21,5	;volatile
  4629                           
  4630                           ;mTouch.c: 20: TMR0 = 0x00;
  4631  0E47  0020               	movlb	0	; select bank0
  4632  0E48  0195               	clrf	21	;volatile
  4633                           
  4634                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4635  0E49  141E               	bsf	30,0	;volatile
  4636                           
  4637                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4638  0E4A  300C               	movlw	12
  4639  0E4B  00C9               	movwf	??_mTouch_Init
  4640  0E4C  0849               	movf	??_mTouch_Init,w
  4641  0E4D  049E               	iorwf	30,f	;volatile
  4642                           
  4643                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4644  0E4E  307F               	movlw	127
  4645  0E4F  00C9               	movwf	??_mTouch_Init
  4646  0E50  0849               	movf	??_mTouch_Init,w
  4647  0E51  059E               	andwf	30,f	;volatile
  4648                           
  4649                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4650  0E52  019F               	clrf	31	;volatile
  4651  0E53  0008               	return
  4652  0E54                     __end_of_mTouch_Init:	
  4653                           
  4654                           	psect	text10
  4655  0DC2                     __ptext10:	
  4656 ;; *************** function _mTouch_PortInit *****************
  4657 ;; Defined at:
  4658 ;;		line 6 in file "mTouch.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4672 ;;      Params:         0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0
  4674 ;;      Temps:          0       1       0       0       0       0
  4675 ;;      Totals:         0       1       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    3
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_mTouch_Init
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _mTouch_PortInit
  4688  0DC2                     _mTouch_PortInit:	
  4689                           
  4690                           ;mTouch.c: 8: TRISA |= (0x07);
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4694  0DC2  3007               	movlw	7
  4695  0DC3  0020               	movlb	0	; select bank0
  4696  0DC4  00C8               	movwf	??_mTouch_PortInit
  4697  0DC5  0848               	movf	??_mTouch_PortInit,w
  4698  0DC6  0021               	movlb	1	; select bank1
  4699  0DC7  048C               	iorwf	12,f	;volatile
  4700                           
  4701                           ;mTouch.c: 9: ANSELA |= (0x07);
  4702  0DC8  3007               	movlw	7
  4703  0DC9  0020               	movlb	0	; select bank0
  4704  0DCA  00C8               	movwf	??_mTouch_PortInit
  4705  0DCB  0848               	movf	??_mTouch_PortInit,w
  4706  0DCC  0023               	movlb	3	; select bank3
  4707  0DCD  048C               	iorwf	12,f	;volatile
  4708  0DCE  0008               	return
  4709  0DCF                     __end_of_mTouch_PortInit:	
  4710                           
  4711                           	psect	text11
  4712  0E2E                     __ptext11:	
  4713 ;; *************** function _Timer6_Init *****************
  4714 ;; Defined at:
  4715 ;;		line 3 in file "Timer6.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4729 ;;      Params:         0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0
  4731 ;;      Temps:          0       1       0       0       0       0
  4732 ;;      Totals:         0       1       0       0       0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    3
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function _Timer6_Init
  4745  0E2E                     _Timer6_Init:	
  4746                           
  4747                           ;Timer6.c: 5: PR6 = 0x7D;
  4748                           
  4749                           ;incstack = 0
  4750                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4751  0E2E  307D               	movlw	125
  4752  0E2F  0028               	movlb	8	; select bank8
  4753  0E30  009D               	movwf	29	;volatile
  4754                           
  4755                           ;Timer6.c: 6: TMR6 = 0x00;
  4756  0E31  019C               	clrf	28	;volatile
  4757                           
  4758                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4759  0E32  3003               	movlw	3
  4760  0E33  0020               	movlb	0	; select bank0
  4761  0E34  00C8               	movwf	??_Timer6_Init
  4762  0E35  0848               	movf	??_Timer6_Init,w
  4763  0E36  0028               	movlb	8	; select bank8
  4764  0E37  049E               	iorwf	30,f	;volatile
  4765                           
  4766                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4767  0E38  081E               	movf	30,w	;volatile
  4768                           
  4769                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4770  0E39  151E               	bsf	30,2	;volatile
  4771                           
  4772                           ;Timer6.c: 11: TMR6IF = 0;
  4773  0E3A  0020               	movlb	0	; select bank0
  4774  0E3B  1193               	bcf	19,3	;volatile
  4775                           
  4776                           ;Timer6.c: 12: TMR6IE = 1;
  4777  0E3C  0021               	movlb	1	; select bank1
  4778  0E3D  1593               	bsf	19,3	;volatile
  4779                           
  4780                           ;Timer6.c: 13: PEIE = 1;
  4781  0E3E  170B               	bsf	11,6	;volatile
  4782                           
  4783                           ;Timer6.c: 14: GIE = 1;
  4784  0E3F  178B               	bsf	11,7	;volatile
  4785  0E40  0008               	return
  4786  0E41                     __end_of_Timer6_Init:	
  4787                           
  4788                           	psect	text12
  4789  0DCF                     __ptext12:	
  4790 ;; *************** function _Timer4_Init *****************
  4791 ;; Defined at:
  4792 ;;		line 3 in file "Timer4.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4806 ;;      Params:         0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    3
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _Timer4_Init
  4822  0DCF                     _Timer4_Init:	
  4823                           
  4824                           ;Timer4.c: 5: PR4 = 0x64;
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _Timer4_Init: [wreg+status,2]
  4828  0DCF  3064               	movlw	100
  4829  0DD0  0028               	movlb	8	; select bank8
  4830  0DD1  0096               	movwf	22	;volatile
  4831                           
  4832                           ;Timer4.c: 6: TMR4 = 0x00;
  4833  0DD2  0195               	clrf	21	;volatile
  4834                           
  4835                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  4836  0DD3  1497               	bsf	23,1	;volatile
  4837                           
  4838                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4839  0DD4  0817               	movf	23,w	;volatile
  4840                           
  4841                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4842  0DD5  1517               	bsf	23,2	;volatile
  4843                           
  4844                           ;Timer4.c: 11: TMR4IF = 0;
  4845  0DD6  0020               	movlb	0	; select bank0
  4846  0DD7  1093               	bcf	19,1	;volatile
  4847                           
  4848                           ;Timer4.c: 12: TMR4IE = 1;
  4849  0DD8  0021               	movlb	1	; select bank1
  4850  0DD9  1493               	bsf	19,1	;volatile
  4851                           
  4852                           ;Timer4.c: 13: PEIE = 1;
  4853  0DDA  170B               	bsf	11,6	;volatile
  4854                           
  4855                           ;Timer4.c: 14: GIE = 1;
  4856  0DDB  178B               	bsf	11,7	;volatile
  4857  0DDC  0008               	return
  4858  0DDD                     __end_of_Timer4_Init:	
  4859                           
  4860                           	psect	text13
  4861  0D4E                     __ptext13:	
  4862 ;; *************** function _Timer1_StartCount *****************
  4863 ;; Defined at:
  4864 ;;		line 31 in file "Timer1.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4878 ;;      Params:         0       0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    4
  4885 ;; This function calls:
  4886 ;;		_Timer1_ClearRecord
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _Timer1_StartCount
  4894  0D4E                     _Timer1_StartCount:	
  4895                           
  4896                           ;Timer1.c: 33: Timer1_ClearRecord();
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4900  0D4E  318F  274E         	fcall	_Timer1_ClearRecord
  4901                           
  4902                           ;Timer1.c: 34: TMR1ON = 1;
  4903  0D50  0020               	movlb	0	; select bank0
  4904  0D51  1418               	bsf	24,0	;volatile
  4905  0D52  0008               	return
  4906  0D53                     __end_of_Timer1_StartCount:	
  4907                           
  4908                           	psect	text14
  4909  0F4E                     __ptext14:	
  4910 ;; *************** function _Timer1_ClearRecord *****************
  4911 ;; Defined at:
  4912 ;;		line 42 in file "Timer1.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4926 ;;      Params:         0       0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    3
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_Timer1_StartCount
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function _Timer1_ClearRecord
  4942  0F4E                     _Timer1_ClearRecord:	
  4943                           
  4944                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in _Timer1_ClearRecord: [wreg]
  4948  0F4E  0020               	movlb	0	; select bank0
  4949  0F4F  1018               	bcf	24,0	;volatile
  4950  0F50  30FF               	movlw	255
  4951  0F51  0097               	movwf	23	;volatile
  4952  0F52  30F5               	movlw	245
  4953  0F53  0096               	movwf	22	;volatile
  4954  0F54  1418               	bsf	24,0	;volatile
  4955                           
  4956                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  4957  0F55  3000               	movlw	0
  4958  0F56  00A3               	movwf	_cnts+3
  4959  0F57  3000               	movlw	0
  4960  0F58  00A2               	movwf	_cnts+2
  4961  0F59  3000               	movlw	0
  4962  0F5A  00A1               	movwf	_cnts+1
  4963  0F5B  3000               	movlw	0
  4964  0F5C  00A0               	movwf	_cnts
  4965                           
  4966                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  4967  0F5D  3000               	movlw	0
  4968  0F5E  00A7               	movwf	_cnts+7
  4969  0F5F  3000               	movlw	0
  4970  0F60  00A6               	movwf	_cnts+6
  4971  0F61  3000               	movlw	0
  4972  0F62  00A5               	movwf	_cnts+5
  4973  0F63  3000               	movlw	0
  4974  0F64  00A4               	movwf	_cnts+4
  4975                           
  4976                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  4977  0F65  3000               	movlw	0
  4978  0F66  00AD               	movwf	_cnts+13
  4979  0F67  3000               	movlw	0
  4980  0F68  00AC               	movwf	_cnts+12
  4981  0F69  3000               	movlw	0
  4982  0F6A  00AB               	movwf	_cnts+11
  4983  0F6B  3000               	movlw	0
  4984  0F6C  00AA               	movwf	_cnts+10
  4985                           
  4986                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  4987  0F6D  3000               	movlw	0
  4988  0F6E  00B1               	movwf	_tcnt+3
  4989  0F6F  3000               	movlw	0
  4990  0F70  00B0               	movwf	_tcnt+2
  4991  0F71  3000               	movlw	0
  4992  0F72  00AF               	movwf	_tcnt+1
  4993  0F73  3000               	movlw	0
  4994  0F74  00AE               	movwf	_tcnt
  4995  0F75  0008               	return
  4996  0F76                     __end_of_Timer1_ClearRecord:	
  4997                           
  4998                           	psect	text15
  4999  0EE0                     __ptext15:	
  5000 ;; *************** function _Timer1_Init *****************
  5001 ;; Defined at:
  5002 ;;		line 6 in file "Timer1.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5016 ;;      Params:         0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0
  5018 ;;      Temps:          0       1       0       0       0       0
  5019 ;;      Totals:         0       1       0       0       0       0
  5020 ;;Total ram usage:        1 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    3
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_main
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _Timer1_Init
  5032  0EE0                     _Timer1_Init:	
  5033                           
  5034                           ;Timer1.c: 8: TRISB |= (1<<6);
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5038  0EE0  0021               	movlb	1	; select bank1
  5039  0EE1  170D               	bsf	13,6	;volatile
  5040                           
  5041                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5042  0EE2  30BF               	movlw	191
  5043  0EE3  0020               	movlb	0	; select bank0
  5044  0EE4  00C8               	movwf	??_Timer1_Init
  5045  0EE5  0848               	movf	??_Timer1_Init,w
  5046  0EE6  0023               	movlb	3	; select bank3
  5047  0EE7  058D               	andwf	13,f	;volatile
  5048                           
  5049                           ;Timer1.c: 10: WPUB |= (1<<6);
  5050  0EE8  0024               	movlb	4	; select bank4
  5051  0EE9  170D               	bsf	13,6	;volatile
  5052                           
  5053                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  5054  0EEA  0020               	movlb	0	; select bank0
  5055  0EEB  1518               	bsf	24,2	;volatile
  5056                           
  5057                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  5058  0EEC  30F7               	movlw	247
  5059  0EED  00C8               	movwf	??_Timer1_Init
  5060  0EEE  0848               	movf	??_Timer1_Init,w
  5061  0EEF  0598               	andwf	24,f	;volatile
  5062                           
  5063                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  5064  0EF0  0818               	movf	24,w	;volatile
  5065                           
  5066                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  5067  0EF1  1798               	bsf	24,7	;volatile
  5068                           
  5069                           ;Timer1.c: 17: T1GCON = 0x00;
  5070  0EF2  0199               	clrf	25	;volatile
  5071                           
  5072                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  5073  0EF3  1018               	bcf	24,0	;volatile
  5074  0EF4  30FF               	movlw	255
  5075  0EF5  0097               	movwf	23	;volatile
  5076  0EF6  30F5               	movlw	245
  5077  0EF7  0096               	movwf	22	;volatile
  5078  0EF8  1418               	bsf	24,0	;volatile
  5079                           
  5080                           ;Timer1.c: 21: TMR1IF = 0;
  5081  0EF9  1011               	bcf	17,0	;volatile
  5082                           
  5083                           ;Timer1.c: 22: TMR1IE = 1;
  5084  0EFA  0021               	movlb	1	; select bank1
  5085  0EFB  1411               	bsf	17,0	;volatile
  5086                           
  5087                           ;Timer1.c: 23: PEIE = 1;
  5088  0EFC  170B               	bsf	11,6	;volatile
  5089                           
  5090                           ;Timer1.c: 24: GIE = 1;
  5091  0EFD  178B               	bsf	11,7	;volatile
  5092                           
  5093                           ;Timer1.c: 26: TMR1ON = 0;
  5094  0EFE  0020               	movlb	0	; select bank0
  5095  0EFF  1018               	bcf	24,0	;volatile
  5096  0F00  0008               	return
  5097  0F01                     __end_of_Timer1_Init:	
  5098                           
  5099                           	psect	text16
  5100  0D7E                     __ptext16:	
  5101 ;; *************** function _Timer1_GetCountSum *****************
  5102 ;; Defined at:
  5103 ;;		line 51 in file "Timer1.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  4    1[BANK0 ] unsigned long 
  5110 ;; Registers used:
  5111 ;;		wreg
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5117 ;;      Params:         0       4       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0
  5120 ;;      Totals:         0       4       0       0       0       0
  5121 ;;Total ram usage:        4 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    3
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _Timer1_GetCountSum
  5133  0D7E                     _Timer1_GetCountSum:	
  5134                           
  5135                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5139  0D7E  0020               	movlb	0	; select bank0
  5140  0D7F  0823               	movf	_cnts+3,w
  5141  0D80  00CB               	movwf	?_Timer1_GetCountSum+3
  5142  0D81  0822               	movf	_cnts+2,w
  5143  0D82  00CA               	movwf	?_Timer1_GetCountSum+2
  5144  0D83  0821               	movf	_cnts+1,w
  5145  0D84  00C9               	movwf	?_Timer1_GetCountSum+1
  5146  0D85  0820               	movf	_cnts,w
  5147  0D86  00C8               	movwf	?_Timer1_GetCountSum
  5148  0D87  0008               	return
  5149  0D88                     __end_of_Timer1_GetCountSum:	
  5150                           
  5151                           	psect	text17
  5152  0D59                     __ptext17:	
  5153 ;; *************** function _Timer1_GetCPM *****************
  5154 ;; Defined at:
  5155 ;;		line 56 in file "Timer1.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2    1[BANK0 ] unsigned int 
  5162 ;; Registers used:
  5163 ;;		wreg
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5169 ;;      Params:         0       2       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0
  5172 ;;      Totals:         0       2       0       0       0       0
  5173 ;;Total ram usage:        2 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    3
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function _Timer1_GetCPM
  5185  0D59                     _Timer1_GetCPM:	
  5186                           
  5187                           ;Timer1.c: 58: return cnts.AverageCPM;
  5188                           
  5189                           ;incstack = 0
  5190                           ; Regs used in _Timer1_GetCPM: [wreg]
  5191  0D59  0020               	movlb	0	; select bank0
  5192  0D5A  0829               	movf	_cnts+9,w
  5193  0D5B  00C9               	movwf	?_Timer1_GetCPM+1
  5194  0D5C  0828               	movf	_cnts+8,w
  5195  0D5D  00C8               	movwf	?_Timer1_GetCPM
  5196  0D5E  0008               	return
  5197  0D5F                     __end_of_Timer1_GetCPM:	
  5198                           
  5199                           	psect	text18
  5200  0524                     __ptext18:	
  5201 ;; *************** function _LCD_Init *****************
  5202 ;; Defined at:
  5203 ;;		line 28 in file "LCD.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, pclath, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5217 ;;      Params:         0       0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0
  5219 ;;      Temps:          0       2       0       0       0       0
  5220 ;;      Totals:         0       2       0       0       0       0
  5221 ;;Total ram usage:        2 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    5
  5224 ;; This function calls:
  5225 ;;		_LCD_DisplayClear
  5226 ;;		_LCD_WriteData
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _LCD_Init
  5234  0524                     _LCD_Init:	
  5235                           
  5236                           ;LCD.c: 30: LATA3 = 0;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5240  0524  0022               	movlb	2	; select bank2
  5241  0525  118C               	bcf	12,3	;volatile
  5242                           
  5243                           ;LCD.c: 31: LATA4 = 0;
  5244  0526  120C               	bcf	12,4	;volatile
  5245                           
  5246                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5247  0527  3002               	movlw	2
  5248  0528  0020               	movlb	0	; select bank0
  5249  0529  00CD               	movwf	??_LCD_Init+1
  5250  052A  3038               	movlw	56
  5251  052B  00CC               	movwf	??_LCD_Init
  5252  052C  30AD               	movlw	173
  5253  052D                     u2937:	
  5254  052D  0B89               	decfsz	9,f
  5255  052E  2D2D               	goto	u2937
  5256  052F  0BCC               	decfsz	??_LCD_Init,f
  5257  0530  2D2D               	goto	u2937
  5258  0531  0BCD               	decfsz	??_LCD_Init+1,f
  5259  0532  2D2D               	goto	u2937
  5260                           
  5261                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5262  0533  3003               	movlw	3
  5263  0534  0020               	movlb	0	; select bank0
  5264  0535  008D               	movwf	13	;volatile
  5265                           
  5266                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5267  0536  0022               	movlb	2	; select bank2
  5268  0537  160C               	bsf	12,4	;volatile
  5269  0538  3200               	nop2	;2 cycle nop
  5270  0539  3200               	nop2	;2 cycle nop
  5271  053A  3200               	nop2	;2 cycle nop
  5272  053B  3200               	nop2	;2 cycle nop
  5273  053C  0022               	movlb	2	; select bank2
  5274  053D  120C               	bcf	12,4	;volatile
  5275  053E  3200               	nop2	;2 cycle nop
  5276  053F  3200               	nop2	;2 cycle nop
  5277  0540  3200               	nop2	;2 cycle nop
  5278  0541  3200               	nop2	;2 cycle nop
  5279                           
  5280                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5281  0542  3034               	movlw	52
  5282  0543  0020               	movlb	0	; select bank0
  5283  0544  00CC               	movwf	??_LCD_Init
  5284  0545  30F1               	movlw	241
  5285  0546                     u2947:	
  5286  0546  0B89               	decfsz	9,f
  5287  0547  2D46               	goto	u2947
  5288  0548  0BCC               	decfsz	??_LCD_Init,f
  5289  0549  2D46               	goto	u2947
  5290  054A  3200               	nop2
  5291                           
  5292                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5293  054B  0022               	movlb	2	; select bank2
  5294  054C  160C               	bsf	12,4	;volatile
  5295  054D  3200               	nop2	;2 cycle nop
  5296  054E  3200               	nop2	;2 cycle nop
  5297  054F  3200               	nop2	;2 cycle nop
  5298  0550  3200               	nop2	;2 cycle nop
  5299  0551  0022               	movlb	2	; select bank2
  5300  0552  120C               	bcf	12,4	;volatile
  5301  0553  3200               	nop2	;2 cycle nop
  5302  0554  3200               	nop2	;2 cycle nop
  5303  0555  3200               	nop2	;2 cycle nop
  5304  0556  3200               	nop2	;2 cycle nop
  5305                           
  5306                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5307  0557  3005               	movlw	5
  5308  0558  0020               	movlb	0	; select bank0
  5309  0559  00CC               	movwf	??_LCD_Init
  5310  055A  3026               	movlw	38
  5311  055B                     u2957:	
  5312  055B  0B89               	decfsz	9,f
  5313  055C  2D5B               	goto	u2957
  5314  055D  0BCC               	decfsz	??_LCD_Init,f
  5315  055E  2D5B               	goto	u2957
  5316  055F  0000               	nop
  5317                           
  5318                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5319  0560  0022               	movlb	2	; select bank2
  5320  0561  160C               	bsf	12,4	;volatile
  5321  0562  3200               	nop2	;2 cycle nop
  5322  0563  3200               	nop2	;2 cycle nop
  5323  0564  3200               	nop2	;2 cycle nop
  5324  0565  3200               	nop2	;2 cycle nop
  5325  0566  0022               	movlb	2	; select bank2
  5326  0567  120C               	bcf	12,4	;volatile
  5327  0568  3200               	nop2	;2 cycle nop
  5328  0569  3200               	nop2	;2 cycle nop
  5329  056A  3200               	nop2	;2 cycle nop
  5330  056B  3200               	nop2	;2 cycle nop
  5331                           
  5332                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5333  056C  3005               	movlw	5
  5334  056D  0020               	movlb	0	; select bank0
  5335  056E  00CC               	movwf	??_LCD_Init
  5336  056F  3026               	movlw	38
  5337  0570                     u2967:	
  5338  0570  0B89               	decfsz	9,f
  5339  0571  2D70               	goto	u2967
  5340  0572  0BCC               	decfsz	??_LCD_Init,f
  5341  0573  2D70               	goto	u2967
  5342  0574  0000               	nop
  5343                           
  5344                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5345  0575  3002               	movlw	2
  5346  0576  0020               	movlb	0	; select bank0
  5347  0577  008D               	movwf	13	;volatile
  5348                           
  5349                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5350  0578  0022               	movlb	2	; select bank2
  5351  0579  160C               	bsf	12,4	;volatile
  5352  057A  3200               	nop2	;2 cycle nop
  5353  057B  3200               	nop2	;2 cycle nop
  5354  057C  3200               	nop2	;2 cycle nop
  5355  057D  3200               	nop2	;2 cycle nop
  5356  057E  0022               	movlb	2	; select bank2
  5357  057F  120C               	bcf	12,4	;volatile
  5358  0580  3200               	nop2	;2 cycle nop
  5359  0581  3200               	nop2	;2 cycle nop
  5360  0582  3200               	nop2	;2 cycle nop
  5361  0583  3200               	nop2	;2 cycle nop
  5362                           
  5363                           ;LCD.c: 44: LCD_WriteData(0x28);
  5364  0584  3028               	movlw	40
  5365  0585  3187  2759  3185   	fcall	_LCD_WriteData
  5366                           
  5367                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5368  0588  300C               	movlw	12
  5369  0589  3187  2759  3185   	fcall	_LCD_WriteData
  5370                           
  5371                           ;LCD.c: 46: LCD_DisplayClear();
  5372  058C  318D  25FC  3185   	fcall	_LCD_DisplayClear
  5373                           
  5374                           ;LCD.c: 47: LCD_WriteData(0x06);
  5375  058F  3006               	movlw	6
  5376  0590  3187  2759         	fcall	_LCD_WriteData
  5377  0592  0008               	return
  5378  0593                     __end_of_LCD_Init:	
  5379                           
  5380                           	psect	text19
  5381  0DFC                     __ptext19:	
  5382 ;; *************** function _LCD_DisplayClear *****************
  5383 ;; Defined at:
  5384 ;;		line 73 in file "LCD.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5398 ;;      Params:         0       0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0
  5400 ;;      Temps:          0       1       0       0       0       0
  5401 ;;      Totals:         0       1       0       0       0       0
  5402 ;;Total ram usage:        1 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    4
  5405 ;; This function calls:
  5406 ;;		_LCD_WriteData
  5407 ;; This function is called by:
  5408 ;;		_LCD_Init
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _LCD_DisplayClear
  5414  0DFC                     _LCD_DisplayClear:	
  5415                           
  5416                           ;LCD.c: 75: LATA3 = 0;
  5417                           
  5418                           ;incstack = 0
  5419                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5420  0DFC  0022               	movlb	2	; select bank2
  5421  0DFD  118C               	bcf	12,3	;volatile
  5422                           
  5423                           ;LCD.c: 76: LCD_WriteData(0x01);
  5424  0DFE  3001               	movlw	1
  5425  0DFF  3187  2759  318D   	fcall	_LCD_WriteData
  5426                           
  5427                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5428  0E02  3015               	movlw	21
  5429  0E03  0020               	movlb	0	; select bank0
  5430  0E04  00CB               	movwf	??_LCD_DisplayClear
  5431  0E05  30C6               	movlw	198
  5432  0E06                     u2977:	
  5433  0E06  0B89               	decfsz	9,f
  5434  0E07  2E06               	goto	u2977
  5435  0E08  0BCB               	decfsz	??_LCD_DisplayClear,f
  5436  0E09  2E06               	goto	u2977
  5437  0E0A  0000               	nop
  5438  0E0B  0008               	return
  5439  0E0C                     __end_of_LCD_DisplayClear:	
  5440                           
  5441                           	psect	text20
  5442  0DEC                     __ptext20:	
  5443 ;; *************** function _LCD_CursorHome *****************
  5444 ;; Defined at:
  5445 ;;		line 84 in file "LCD.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5459 ;;      Params:         0       0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0
  5461 ;;      Temps:          0       1       0       0       0       0
  5462 ;;      Totals:         0       1       0       0       0       0
  5463 ;;Total ram usage:        1 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    4
  5466 ;; This function calls:
  5467 ;;		_LCD_WriteData
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _LCD_CursorHome
  5475  0DEC                     _LCD_CursorHome:	
  5476                           
  5477                           ;LCD.c: 86: LATA3 = 0;
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5481  0DEC  0022               	movlb	2	; select bank2
  5482  0DED  118C               	bcf	12,3	;volatile
  5483                           
  5484                           ;LCD.c: 87: LCD_WriteData(0x02);
  5485  0DEE  3002               	movlw	2
  5486  0DEF  3187  2759  318D   	fcall	_LCD_WriteData
  5487                           
  5488                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5489  0DF2  3015               	movlw	21
  5490  0DF3  0020               	movlb	0	; select bank0
  5491  0DF4  00CB               	movwf	??_LCD_CursorHome
  5492  0DF5  30C6               	movlw	198
  5493  0DF6                     u2987:	
  5494  0DF6  0B89               	decfsz	9,f
  5495  0DF7  2DF6               	goto	u2987
  5496  0DF8  0BCB               	decfsz	??_LCD_CursorHome,f
  5497  0DF9  2DF6               	goto	u2987
  5498  0DFA  0000               	nop
  5499  0DFB  0008               	return
  5500  0DFC                     __end_of_LCD_CursorHome:	
  5501                           
  5502                           	psect	text21
  5503  0759                     __ptext21:	
  5504 ;; *************** function _LCD_WriteData *****************
  5505 ;; Defined at:
  5506 ;;		line 15 in file "LCD.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  point           1    wreg     char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  point           1    3[BANK0 ] char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5520 ;;      Params:         0       0       0       0       0       0
  5521 ;;      Locals:         0       1       0       0       0       0
  5522 ;;      Temps:          0       2       0       0       0       0
  5523 ;;      Totals:         0       3       0       0       0       0
  5524 ;;Total ram usage:        3 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    3
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_LCD_Init
  5531 ;;		_putch
  5532 ;;		_LCD_DisplayClear
  5533 ;;		_LCD_CursorHome
  5534 ;;		_LCD_Put
  5535 ;;		_LCD_CursorPosition
  5536 ;;		_LCD_CursorShift
  5537 ;;		_LCD_DispShift
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _LCD_WriteData
  5543  0759                     _LCD_WriteData:	
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5547                           ;LCD_WriteData@point stored from wreg
  5548  0759  0020               	movlb	0	; select bank0
  5549  075A  00CA               	movwf	LCD_WriteData@point
  5550                           
  5551                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5552  075B  30D5               	movlw	213
  5553  075C                     u2997:	
  5554  075C  0B89               	decfsz	9,f
  5555  075D  2F5C               	goto	u2997
  5556  075E  0000               	nop
  5557                           
  5558                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5559  075F  0020               	movlb	0	; select bank0
  5560  0760  084A               	movf	LCD_WriteData@point,w
  5561  0761  00C8               	movwf	??_LCD_WriteData
  5562  0762  3004               	movlw	4
  5563  0763                     u1795:	
  5564  0763  1003               	clrc
  5565  0764  1BC8               	btfsc	??_LCD_WriteData,7
  5566  0765  1403               	setc
  5567  0766  0CC8               	rrf	??_LCD_WriteData,f
  5568  0767  0B89               	decfsz	9,f
  5569  0768  2F63               	goto	u1795
  5570  0769  3003               	movlw	3
  5571  076A  0548               	andwf	??_LCD_WriteData,w
  5572  076B  00C9               	movwf	??_LCD_WriteData+1
  5573  076C  0E4A               	swapf	LCD_WriteData@point,w
  5574  076D  390F               	andlw	15
  5575  076E  1989               	btfsc	9,3
  5576  076F  38F0               	iorlw	240
  5577  0770  390C               	andlw	12
  5578  0771  0709               	addwf	9,w
  5579  0772  0449               	iorwf	??_LCD_WriteData+1,w
  5580  0773  008D               	movwf	13	;volatile
  5581                           
  5582                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5583  0774  0022               	movlb	2	; select bank2
  5584  0775  160C               	bsf	12,4	;volatile
  5585  0776  3200               	nop2	;2 cycle nop
  5586  0777  3200               	nop2	;2 cycle nop
  5587  0778  3200               	nop2	;2 cycle nop
  5588  0779  3200               	nop2	;2 cycle nop
  5589  077A  0022               	movlb	2	; select bank2
  5590  077B  120C               	bcf	12,4	;volatile
  5591  077C  3200               	nop2	;2 cycle nop
  5592  077D  3200               	nop2	;2 cycle nop
  5593  077E  3200               	nop2	;2 cycle nop
  5594  077F  3200               	nop2	;2 cycle nop
  5595                           
  5596                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5597  0780  3003               	movlw	3
  5598  0781  0020               	movlb	0	; select bank0
  5599  0782  054A               	andwf	LCD_WriteData@point,w
  5600  0783  00C8               	movwf	??_LCD_WriteData
  5601  0784  084A               	movf	LCD_WriteData@point,w
  5602  0785  390C               	andlw	12
  5603  0786  0709               	addwf	9,w
  5604  0787  0448               	iorwf	??_LCD_WriteData,w
  5605  0788  008D               	movwf	13	;volatile
  5606                           
  5607                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5608  0789  0022               	movlb	2	; select bank2
  5609  078A  160C               	bsf	12,4	;volatile
  5610  078B  3200               	nop2	;2 cycle nop
  5611  078C  3200               	nop2	;2 cycle nop
  5612  078D  3200               	nop2	;2 cycle nop
  5613  078E  3200               	nop2	;2 cycle nop
  5614  078F  0022               	movlb	2	; select bank2
  5615  0790  120C               	bcf	12,4	;volatile
  5616  0791  3200               	nop2	;2 cycle nop
  5617  0792  3200               	nop2	;2 cycle nop
  5618  0793  3200               	nop2	;2 cycle nop
  5619  0794  3200               	nop2	;2 cycle nop
  5620  0795  0008               	return
  5621  0796                     __end_of_LCD_WriteData:	
  5622                           
  5623                           	psect	text22
  5624  0EC0                     __ptext22:	
  5625 ;; *************** function _DAC_Initialize *****************
  5626 ;; Defined at:
  5627 ;;		line 14 in file "MCP4726.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5641 ;;      Params:         0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0
  5643 ;;      Temps:          0       2       0       0       0       0
  5644 ;;      Totals:         0       2       0       0       0       0
  5645 ;;Total ram usage:        2 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    6
  5648 ;; This function calls:
  5649 ;;		_I2C_Init
  5650 ;;		_I2C_Transmit
  5651 ;; This function is called by:
  5652 ;;		_main
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _DAC_Initialize
  5658  0EC0                     _DAC_Initialize:	
  5659                           
  5660                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5664  0EC0  0020               	movlb	0	; select bank0
  5665  0EC1  01CD               	clrf	I2C_Init@address
  5666  0EC2  01CE               	clrf	I2C_Init@mode
  5667  0EC3  01CF               	clrf	I2C_Init@Speed
  5668  0EC4  3001               	movlw	1
  5669  0EC5  318F  2776  318E   	fcall	_I2C_Init
  5670                           
  5671                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5672  0EC8  0020               	movlb	0	; select bank0
  5673  0EC9  0846               	movf	_ConfigReg,w
  5674  0ECA  391F               	andlw	-225
  5675  0ECB  3880               	iorlw	128
  5676  0ECC  00C6               	movwf	_ConfigReg
  5677                           
  5678                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5679  0ECD  1046               	bcf	_ConfigReg,0
  5680                           
  5681                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5682  0ECE  30F9               	movlw	-7
  5683  0ECF  05C6               	andwf	_ConfigReg,f
  5684                           
  5685                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5686  0ED0  30E7               	movlw	-25
  5687  0ED1  05C6               	andwf	_ConfigReg,f
  5688                           
  5689                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5690  0ED2  3060               	movlw	96
  5691  0ED3  00D8               	movwf	??_DAC_Initialize
  5692  0ED4  0858               	movf	??_DAC_Initialize,w
  5693  0ED5  00D0               	movwf	I2C_Transmit@address
  5694  0ED6  3046               	movlw	(low (_ConfigReg| 0))& (0+255)
  5695  0ED7  00D9               	movwf	??_DAC_Initialize+1
  5696  0ED8  0859               	movf	??_DAC_Initialize+1,w
  5697  0ED9  00D1               	movwf	I2C_Transmit@pData
  5698  0EDA  01D2               	clrf	I2C_Transmit@size
  5699  0EDB  0AD2               	incf	I2C_Transmit@size,f
  5700  0EDC  3001               	movlw	1
  5701  0EDD  318F  27A0         	fcall	_I2C_Transmit
  5702  0EDF  0008               	return
  5703  0EE0                     __end_of_DAC_Initialize:	
  5704                           
  5705                           	psect	text23
  5706  0FA0                     __ptext23:	
  5707 ;; *************** function _I2C_Transmit *****************
  5708 ;; Defined at:
  5709 ;;		line 23 in file "I2C_Common.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  I2Cx            1    wreg     enum E3178
  5712 ;;  address         1    9[BANK0 ] unsigned char 
  5713 ;;  pData           1   10[BANK0 ] PTR unsigned char 
  5714 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5715 ;;  size            1   11[BANK0 ] unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  I2Cx            1   15[BANK0 ] enum E3178
  5718 ;;  result          1   16[BANK0 ] char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      char 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5728 ;;      Params:         0       3       0       0       0       0
  5729 ;;      Locals:         0       2       0       0       0       0
  5730 ;;      Temps:          0       3       0       0       0       0
  5731 ;;      Totals:         0       8       0       0       0       0
  5732 ;;Total ram usage:        8 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    4
  5735 ;; This function calls:
  5736 ;;		_I2C1_Transmit
  5737 ;;		_I2C2_Transmit
  5738 ;; This function is called by:
  5739 ;;		_DAC_Initialize
  5740 ;;		_DAC_WriteVoltage
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function _I2C_Transmit
  5746  0FA0                     _I2C_Transmit:	
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5750                           ;I2C_Transmit@I2Cx stored from wreg
  5751  0FA0  0020               	movlb	0	; select bank0
  5752  0FA1  00D6               	movwf	I2C_Transmit@I2Cx
  5753                           
  5754                           ;I2C_Common.c: 25: int8_t result;
  5755                           ;I2C_Common.c: 27: switch(I2Cx)
  5756  0FA2  2FC1               	goto	l2609
  5757  0FA3                     l2603:	
  5758                           ;I2C_Common.c: 28: {
  5759                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5760                           
  5761                           
  5762                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5763  0FA3  0851               	movf	I2C_Transmit@pData,w
  5764  0FA4  00D3               	movwf	??_I2C_Transmit
  5765  0FA5  0853               	movf	??_I2C_Transmit,w
  5766  0FA6  00C8               	movwf	I2C1_Transmit@pData
  5767  0FA7  0852               	movf	I2C_Transmit@size,w
  5768  0FA8  00D4               	movwf	??_I2C_Transmit+1
  5769  0FA9  0854               	movf	??_I2C_Transmit+1,w
  5770  0FAA  00C9               	movwf	I2C1_Transmit@size
  5771  0FAB  0850               	movf	I2C_Transmit@address,w
  5772  0FAC  3184  2404  318F   	fcall	_I2C1_Transmit
  5773  0FAF  2FBC               	goto	L1
  5774  0FB0                     l2605:	
  5775                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5776                           
  5777                           ;I2C_Common.c: 31: break;
  5778                           
  5779                           
  5780                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5781  0FB0  0851               	movf	I2C_Transmit@pData,w
  5782  0FB1  00D3               	movwf	??_I2C_Transmit
  5783  0FB2  0853               	movf	??_I2C_Transmit,w
  5784  0FB3  00C8               	movwf	I2C2_Transmit@pData
  5785  0FB4  0852               	movf	I2C_Transmit@size,w
  5786  0FB5  00D4               	movwf	??_I2C_Transmit+1
  5787  0FB6  0854               	movf	??_I2C_Transmit+1,w
  5788  0FB7  00C9               	movwf	I2C2_Transmit@size
  5789  0FB8  0850               	movf	I2C_Transmit@address,w
  5790  0FB9  3182  22D4  318F   	fcall	_I2C2_Transmit
  5791  0FBC                     L1:	
  5792  0FBC  0020               	movlb	0	; select bank0
  5793  0FBD  00D5               	movwf	??_I2C_Transmit+2
  5794  0FBE  0855               	movf	??_I2C_Transmit+2,w
  5795  0FBF  00D7               	movwf	I2C_Transmit@result
  5796                           
  5797                           ;I2C_Common.c: 36: }
  5798                           
  5799                           ;I2C_Common.c: 35: break;
  5800  0FC0  2FC9               	goto	l2611
  5801  0FC1                     l2609:	
  5802  0FC1  0856               	movf	I2C_Transmit@I2Cx,w
  5803                           
  5804                           ; Switch size 1, requested type "space"
  5805                           ; Number of cases is 2, Range of values is 0 to 1
  5806                           ; switch strategies available:
  5807                           ; Name         Instructions Cycles
  5808                           ; simple_byte            7     4 (average)
  5809                           ; direct_byte           10     6 (fixed)
  5810                           ; jumptable            260     6 (fixed)
  5811                           ;	Chosen strategy is simple_byte
  5812  0FC2  3A00               	xorlw	0	; case 0
  5813  0FC3  1903               	skipnz
  5814  0FC4  2FA3               	goto	l2603
  5815  0FC5  3A01               	xorlw	1	; case 1
  5816  0FC6  1903               	skipnz
  5817  0FC7  2FB0               	goto	l2605
  5818  0FC8  2FC9               	goto	l2611
  5819  0FC9                     l2611:	
  5820                           
  5821                           ;I2C_Common.c: 37: return result;
  5822  0FC9  0857               	movf	I2C_Transmit@result,w
  5823  0FCA  0008               	return
  5824  0FCB                     __end_of_I2C_Transmit:	
  5825                           
  5826                           	psect	text24
  5827  02D4                     __ptext24:	
  5828 ;; *************** function _I2C2_Transmit *****************
  5829 ;; Defined at:
  5830 ;;		line 52 in file "I2C2.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  address         1    wreg     unsigned char 
  5833 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  5834 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5835 ;;  size            1    2[BANK0 ] unsigned char 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  address         1    5[BANK0 ] unsigned char 
  5838 ;;  i               1    7[BANK0 ] unsigned char 
  5839 ;;  i               1    6[BANK0 ] unsigned char 
  5840 ;;  result          1    8[BANK0 ] char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      char 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5850 ;;      Params:         0       2       0       0       0       0
  5851 ;;      Locals:         0       4       0       0       0       0
  5852 ;;      Temps:          0       2       0       0       0       0
  5853 ;;      Totals:         0       8       0       0       0       0
  5854 ;;Total ram usage:        8 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    3
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_I2C_Transmit
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _I2C2_Transmit
  5866  02D4                     _I2C2_Transmit:	
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5870                           ;I2C2_Transmit@address stored from wreg
  5871  02D4  0020               	movlb	0	; select bank0
  5872  02D5  00CC               	movwf	I2C2_Transmit@address
  5873                           
  5874                           ;I2C2.c: 54: int8_t result = 0;
  5875  02D6  01CF               	clrf	I2C2_Transmit@result
  5876                           
  5877                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5878  02D7  2B60               	goto	l2453
  5879  02D8                     l2409:	
  5880                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5881                           
  5882                           ;I2C2.c: 57: {
  5883                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5884                           
  5885  02D8  3005               	movlw	5
  5886  02D9  0024               	movlb	4	; select bank4
  5887  02DA  051C               	andwf	28,w	;volatile
  5888  02DB  0020               	movlb	0	; select bank0
  5889  02DC  00CA               	movwf	??_I2C2_Transmit
  5890  02DD  0024               	movlb	4	; select bank4
  5891  02DE  081E               	movf	30,w	;volatile
  5892  02DF  391F               	andlw	31
  5893  02E0  0020               	movlb	0	; select bank0
  5894  02E1  044A               	iorwf	??_I2C2_Transmit,w
  5895  02E2  1D03               	btfss	3,2
  5896  02E3  2AD8               	goto	l2409
  5897                           
  5898                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5899  02E4  0024               	movlb	4	; select bank4
  5900  02E5  141E               	bsf	30,0	;volatile
  5901  02E6                     l2411:	
  5902                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5903                           
  5904  02E6  3005               	movlw	5
  5905  02E7  0024               	movlb	4	; select bank4
  5906  02E8  051C               	andwf	28,w	;volatile
  5907  02E9  0020               	movlb	0	; select bank0
  5908  02EA  00CA               	movwf	??_I2C2_Transmit
  5909  02EB  0024               	movlb	4	; select bank4
  5910  02EC  081E               	movf	30,w	;volatile
  5911  02ED  391F               	andlw	31
  5912  02EE  0020               	movlb	0	; select bank0
  5913  02EF  044A               	iorwf	??_I2C2_Transmit,w
  5914  02F0  1D03               	btfss	3,2
  5915  02F1  2AE6               	goto	l2411
  5916                           
  5917                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5918  02F2  354C               	lslf	I2C2_Transmit@address,w
  5919  02F3  0024               	movlb	4	; select bank4
  5920  02F4  0099               	movwf	25	;volatile
  5921  02F5                     l228:	
  5922                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5923                           
  5924  02F5  191C               	btfsc	28,2	;volatile
  5925  02F6  2AF5               	goto	l228
  5926                           
  5927                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5928  02F7  3000               	movlw	0
  5929  02F8  1B1E               	btfsc	30,6	;volatile
  5930  02F9  3001               	movlw	1
  5931  02FA  0020               	movlb	0	; select bank0
  5932  02FB  00CF               	movwf	I2C2_Transmit@result
  5933                           
  5934                           ;I2C2.c: 67: if (!result)
  5935  02FC  084F               	movf	I2C2_Transmit@result,w
  5936  02FD  1D03               	btfss	3,2
  5937  02FE  2B2C               	goto	l2435
  5938                           
  5939                           ;I2C2.c: 68: {
  5940                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5941  02FF  01CD               	clrf	I2C2_Transmit@i
  5942  0300  2B05               	goto	l2433
  5943  0301                     l2431:	
  5944                           ;I2C2.c: 79: break;
  5945                           
  5946  0301  3001               	movlw	1
  5947  0302  00CA               	movwf	??_I2C2_Transmit
  5948  0303  084A               	movf	??_I2C2_Transmit,w
  5949  0304  07CD               	addwf	I2C2_Transmit@i,f
  5950  0305                     l2433:	
  5951  0305  0849               	movf	I2C2_Transmit@size,w
  5952  0306  024D               	subwf	I2C2_Transmit@i,w
  5953  0307  1803               	btfsc	3,0
  5954  0308  2B2C               	goto	l2435
  5955  0309                     l2421:	
  5956                           ;I2C2.c: 70: {
  5957                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5958                           
  5959  0309  3005               	movlw	5
  5960  030A  0024               	movlb	4	; select bank4
  5961  030B  051C               	andwf	28,w	;volatile
  5962  030C  0020               	movlb	0	; select bank0
  5963  030D  00CA               	movwf	??_I2C2_Transmit
  5964  030E  0024               	movlb	4	; select bank4
  5965  030F  081E               	movf	30,w	;volatile
  5966  0310  391F               	andlw	31
  5967  0311  0020               	movlb	0	; select bank0
  5968  0312  044A               	iorwf	??_I2C2_Transmit,w
  5969  0313  1D03               	btfss	3,2
  5970  0314  2B09               	goto	l2421
  5971                           
  5972                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5973  0315  084D               	movf	I2C2_Transmit@i,w
  5974  0316  0748               	addwf	I2C2_Transmit@pData,w
  5975  0317  00CA               	movwf	??_I2C2_Transmit
  5976  0318  084A               	movf	??_I2C2_Transmit,w
  5977  0319  0086               	movwf	6
  5978  031A  0187               	clrf	7
  5979  031B  0801               	movf	1,w
  5980  031C  0024               	movlb	4	; select bank4
  5981  031D  0099               	movwf	25	;volatile
  5982  031E                     l237:	
  5983                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5984                           
  5985  031E  191C               	btfsc	28,2	;volatile
  5986  031F  2B1E               	goto	l237
  5987                           
  5988                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5989  0320  3000               	movlw	0
  5990  0321  1B1E               	btfsc	30,6	;volatile
  5991  0322  3001               	movlw	1
  5992  0323  0020               	movlb	0	; select bank0
  5993  0324  00CF               	movwf	I2C2_Transmit@result
  5994                           
  5995                           ;I2C2.c: 76: if (result)
  5996  0325  084F               	movf	I2C2_Transmit@result,w
  5997  0326  1903               	btfsc	3,2
  5998  0327  2B01               	goto	l2431
  5999                           
  6000                           ;I2C2.c: 77: {
  6001                           ;I2C2.c: 78: result = 2;
  6002  0328  3002               	movlw	2
  6003  0329  00CA               	movwf	??_I2C2_Transmit
  6004  032A  084A               	movf	??_I2C2_Transmit,w
  6005  032B  00CF               	movwf	I2C2_Transmit@result
  6006  032C                     l2435:	
  6007                           ;I2C2.c: 80: }
  6008                           ;I2C2.c: 81: }
  6009                           ;I2C2.c: 82: }
  6010                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6011                           
  6012  032C  3005               	movlw	5
  6013  032D  0024               	movlb	4	; select bank4
  6014  032E  051C               	andwf	28,w	;volatile
  6015  032F  0020               	movlb	0	; select bank0
  6016  0330  00CA               	movwf	??_I2C2_Transmit
  6017  0331  0024               	movlb	4	; select bank4
  6018  0332  081E               	movf	30,w	;volatile
  6019  0333  391F               	andlw	31
  6020  0334  0020               	movlb	0	; select bank0
  6021  0335  044A               	iorwf	??_I2C2_Transmit,w
  6022  0336  1D03               	btfss	3,2
  6023  0337  2B2C               	goto	l2435
  6024                           
  6025                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6026  0338  0024               	movlb	4	; select bank4
  6027  0339  151E               	bsf	30,2	;volatile
  6028                           
  6029                           ;I2C2.c: 86: break;
  6030  033A  2B69               	goto	l2455
  6031  033B                     l246:	
  6032                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6033                           
  6034                           
  6035                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6036  033B  0024               	movlb	4	; select bank4
  6037  033C  1D9C               	btfss	28,3	;volatile
  6038  033D  1E1C               	btfss	28,4	;volatile
  6039  033E  2B5D               	goto	l2449
  6040                           
  6041                           ;I2C2.c: 90: {
  6042                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6043  033F  0020               	movlb	0	; select bank0
  6044  0340  01CE               	clrf	I2C2_Transmit@i_316
  6045  0341                     l2445:	
  6046  0341  0849               	movf	I2C2_Transmit@size,w
  6047  0342  024E               	subwf	I2C2_Transmit@i_316,w
  6048  0343  1803               	btfsc	3,0
  6049  0344  2B58               	goto	l2447
  6050                           
  6051                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6052  0345  084E               	movf	I2C2_Transmit@i_316,w
  6053  0346  0748               	addwf	I2C2_Transmit@pData,w
  6054  0347  00CA               	movwf	??_I2C2_Transmit
  6055  0348  084A               	movf	??_I2C2_Transmit,w
  6056  0349  0086               	movwf	6
  6057  034A  0187               	clrf	7
  6058  034B  0801               	movf	1,w
  6059  034C  00CB               	movwf	??_I2C2_Transmit+1
  6060  034D  084E               	movf	I2C2_Transmit@i_316,w
  6061  034E  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6062  034F  0086               	movwf	6
  6063  0350  0187               	clrf	7
  6064  0351  084B               	movf	??_I2C2_Transmit+1,w
  6065  0352  0081               	movwf	1
  6066  0353  3001               	movlw	1
  6067  0354  00CA               	movwf	??_I2C2_Transmit
  6068  0355  084A               	movf	??_I2C2_Transmit,w
  6069  0356  07CE               	addwf	I2C2_Transmit@i_316,f
  6070  0357  2B41               	goto	l2445
  6071  0358                     l2447:	
  6072                           
  6073                           ;I2C2.c: 93: result = size;
  6074  0358  0849               	movf	I2C2_Transmit@size,w
  6075  0359  00CA               	movwf	??_I2C2_Transmit
  6076  035A  084A               	movf	??_I2C2_Transmit,w
  6077  035B  00CF               	movwf	I2C2_Transmit@result
  6078                           
  6079                           ;I2C2.c: 94: }
  6080  035C  2B69               	goto	l2455
  6081  035D                     l2449:	
  6082                           
  6083                           ;I2C2.c: 95: else
  6084                           ;I2C2.c: 96: result = 0;
  6085  035D  0020               	movlb	0	; select bank0
  6086  035E  01CF               	clrf	I2C2_Transmit@result
  6087                           
  6088                           ;I2C2.c: 98: }
  6089                           
  6090                           ;I2C2.c: 97: break;
  6091  035F  2B69               	goto	l2455
  6092  0360                     l2453:	
  6093  0360  0021               	movlb	1	; select bank1
  6094  0361  0832               	movf	(_I2C2_Config^(0+128)+18),w
  6095                           
  6096                           ; Switch size 1, requested type "space"
  6097                           ; Number of cases is 2, Range of values is 0 to 1
  6098                           ; switch strategies available:
  6099                           ; Name         Instructions Cycles
  6100                           ; simple_byte            7     4 (average)
  6101                           ; direct_byte           10     6 (fixed)
  6102                           ; jumptable            260     6 (fixed)
  6103                           ;	Chosen strategy is simple_byte
  6104  0362  3A00               	xorlw	0	; case 0
  6105  0363  1903               	skipnz
  6106  0364  2AD8               	goto	l2409
  6107  0365  3A01               	xorlw	1	; case 1
  6108  0366  1903               	skipnz
  6109  0367  2B3B               	goto	l246
  6110  0368  2B69               	goto	l2455
  6111  0369                     l2455:	
  6112                           
  6113                           ;I2C2.c: 100: return result;
  6114  0369  0020               	movlb	0	; select bank0
  6115  036A  084F               	movf	I2C2_Transmit@result,w
  6116  036B  0008               	return
  6117  036C                     __end_of_I2C2_Transmit:	
  6118                           
  6119                           	psect	text25
  6120  0404                     __ptext25:	
  6121 ;; *************** function _I2C1_Transmit *****************
  6122 ;; Defined at:
  6123 ;;		line 52 in file "I2C1.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  address         1    wreg     unsigned char 
  6126 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  6127 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6128 ;;  size            1    2[BANK0 ] unsigned char 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  address         1    5[BANK0 ] unsigned char 
  6131 ;;  i               1    7[BANK0 ] unsigned char 
  6132 ;;  i               1    6[BANK0 ] unsigned char 
  6133 ;;  result          1    8[BANK0 ] char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      char 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6143 ;;      Params:         0       2       0       0       0       0
  6144 ;;      Locals:         0       4       0       0       0       0
  6145 ;;      Temps:          0       2       0       0       0       0
  6146 ;;      Totals:         0       8       0       0       0       0
  6147 ;;Total ram usage:        8 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    3
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_I2C_Transmit
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function _I2C1_Transmit
  6159  0404                     _I2C1_Transmit:	
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6163                           ;I2C1_Transmit@address stored from wreg
  6164  0404  0020               	movlb	0	; select bank0
  6165  0405  00CC               	movwf	I2C1_Transmit@address
  6166                           
  6167                           ;I2C1.c: 54: int8_t result;
  6168                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6169  0406  2C8F               	goto	l2367
  6170  0407                     l2323:	
  6171                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6172                           
  6173                           ;I2C1.c: 57: {
  6174                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6175                           
  6176  0407  3005               	movlw	5
  6177  0408  0024               	movlb	4	; select bank4
  6178  0409  0514               	andwf	20,w	;volatile
  6179  040A  0020               	movlb	0	; select bank0
  6180  040B  00CA               	movwf	??_I2C1_Transmit
  6181  040C  0024               	movlb	4	; select bank4
  6182  040D  0816               	movf	22,w	;volatile
  6183  040E  391F               	andlw	31
  6184  040F  0020               	movlb	0	; select bank0
  6185  0410  044A               	iorwf	??_I2C1_Transmit,w
  6186  0411  1D03               	btfss	3,2
  6187  0412  2C07               	goto	l2323
  6188                           
  6189                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6190  0413  0024               	movlb	4	; select bank4
  6191  0414  1416               	bsf	22,0	;volatile
  6192  0415                     l2325:	
  6193                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6194                           
  6195  0415  3005               	movlw	5
  6196  0416  0024               	movlb	4	; select bank4
  6197  0417  0514               	andwf	20,w	;volatile
  6198  0418  0020               	movlb	0	; select bank0
  6199  0419  00CA               	movwf	??_I2C1_Transmit
  6200  041A  0024               	movlb	4	; select bank4
  6201  041B  0816               	movf	22,w	;volatile
  6202  041C  391F               	andlw	31
  6203  041D  0020               	movlb	0	; select bank0
  6204  041E  044A               	iorwf	??_I2C1_Transmit,w
  6205  041F  1D03               	btfss	3,2
  6206  0420  2C15               	goto	l2325
  6207                           
  6208                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6209  0421  354C               	lslf	I2C1_Transmit@address,w
  6210  0422  0024               	movlb	4	; select bank4
  6211  0423  0091               	movwf	17	;volatile
  6212  0424                     l91:	
  6213                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6214                           
  6215  0424  1914               	btfsc	20,2	;volatile
  6216  0425  2C24               	goto	l91
  6217                           
  6218                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6219  0426  3000               	movlw	0
  6220  0427  1B16               	btfsc	22,6	;volatile
  6221  0428  3001               	movlw	1
  6222  0429  0020               	movlb	0	; select bank0
  6223  042A  00CF               	movwf	I2C1_Transmit@result
  6224                           
  6225                           ;I2C1.c: 67: if (!result)
  6226  042B  084F               	movf	I2C1_Transmit@result,w
  6227  042C  1D03               	btfss	3,2
  6228  042D  2C5B               	goto	l2349
  6229                           
  6230                           ;I2C1.c: 68: {
  6231                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6232  042E  01CD               	clrf	I2C1_Transmit@i
  6233  042F  2C34               	goto	l2347
  6234  0430                     l2345:	
  6235                           ;I2C1.c: 79: break;
  6236                           
  6237  0430  3001               	movlw	1
  6238  0431  00CA               	movwf	??_I2C1_Transmit
  6239  0432  084A               	movf	??_I2C1_Transmit,w
  6240  0433  07CD               	addwf	I2C1_Transmit@i,f
  6241  0434                     l2347:	
  6242  0434  0849               	movf	I2C1_Transmit@size,w
  6243  0435  024D               	subwf	I2C1_Transmit@i,w
  6244  0436  1803               	btfsc	3,0
  6245  0437  2C5B               	goto	l2349
  6246  0438                     l2335:	
  6247                           ;I2C1.c: 70: {
  6248                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6249                           
  6250  0438  3005               	movlw	5
  6251  0439  0024               	movlb	4	; select bank4
  6252  043A  0514               	andwf	20,w	;volatile
  6253  043B  0020               	movlb	0	; select bank0
  6254  043C  00CA               	movwf	??_I2C1_Transmit
  6255  043D  0024               	movlb	4	; select bank4
  6256  043E  0816               	movf	22,w	;volatile
  6257  043F  391F               	andlw	31
  6258  0440  0020               	movlb	0	; select bank0
  6259  0441  044A               	iorwf	??_I2C1_Transmit,w
  6260  0442  1D03               	btfss	3,2
  6261  0443  2C38               	goto	l2335
  6262                           
  6263                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6264  0444  084D               	movf	I2C1_Transmit@i,w
  6265  0445  0748               	addwf	I2C1_Transmit@pData,w
  6266  0446  00CA               	movwf	??_I2C1_Transmit
  6267  0447  084A               	movf	??_I2C1_Transmit,w
  6268  0448  0086               	movwf	6
  6269  0449  0187               	clrf	7
  6270  044A  0801               	movf	1,w
  6271  044B  0024               	movlb	4	; select bank4
  6272  044C  0091               	movwf	17	;volatile
  6273  044D                     l100:	
  6274                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6275                           
  6276  044D  1914               	btfsc	20,2	;volatile
  6277  044E  2C4D               	goto	l100
  6278                           
  6279                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6280  044F  3000               	movlw	0
  6281  0450  1B16               	btfsc	22,6	;volatile
  6282  0451  3001               	movlw	1
  6283  0452  0020               	movlb	0	; select bank0
  6284  0453  00CF               	movwf	I2C1_Transmit@result
  6285                           
  6286                           ;I2C1.c: 76: if (result)
  6287  0454  084F               	movf	I2C1_Transmit@result,w
  6288  0455  1903               	btfsc	3,2
  6289  0456  2C30               	goto	l2345
  6290                           
  6291                           ;I2C1.c: 77: {
  6292                           ;I2C1.c: 78: result = 2;
  6293  0457  3002               	movlw	2
  6294  0458  00CA               	movwf	??_I2C1_Transmit
  6295  0459  084A               	movf	??_I2C1_Transmit,w
  6296  045A  00CF               	movwf	I2C1_Transmit@result
  6297  045B                     l2349:	
  6298                           ;I2C1.c: 80: }
  6299                           ;I2C1.c: 81: }
  6300                           ;I2C1.c: 82: }
  6301                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6302                           
  6303  045B  3005               	movlw	5
  6304  045C  0024               	movlb	4	; select bank4
  6305  045D  0514               	andwf	20,w	;volatile
  6306  045E  0020               	movlb	0	; select bank0
  6307  045F  00CA               	movwf	??_I2C1_Transmit
  6308  0460  0024               	movlb	4	; select bank4
  6309  0461  0816               	movf	22,w	;volatile
  6310  0462  391F               	andlw	31
  6311  0463  0020               	movlb	0	; select bank0
  6312  0464  044A               	iorwf	??_I2C1_Transmit,w
  6313  0465  1D03               	btfss	3,2
  6314  0466  2C5B               	goto	l2349
  6315                           
  6316                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6317  0467  0024               	movlb	4	; select bank4
  6318  0468  1516               	bsf	22,2	;volatile
  6319                           
  6320                           ;I2C1.c: 86: break;
  6321  0469  2C98               	goto	l2369
  6322  046A                     l109:	
  6323                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6324                           
  6325                           
  6326                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6327  046A  0024               	movlb	4	; select bank4
  6328  046B  1D94               	btfss	20,3	;volatile
  6329  046C  1E14               	btfss	20,4	;volatile
  6330  046D  2C8C               	goto	l2363
  6331                           
  6332                           ;I2C1.c: 90: {
  6333                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6334  046E  0020               	movlb	0	; select bank0
  6335  046F  01CE               	clrf	I2C1_Transmit@i_172
  6336  0470                     l2359:	
  6337  0470  0849               	movf	I2C1_Transmit@size,w
  6338  0471  024E               	subwf	I2C1_Transmit@i_172,w
  6339  0472  1803               	btfsc	3,0
  6340  0473  2C87               	goto	l2361
  6341                           
  6342                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6343  0474  084E               	movf	I2C1_Transmit@i_172,w
  6344  0475  0748               	addwf	I2C1_Transmit@pData,w
  6345  0476  00CA               	movwf	??_I2C1_Transmit
  6346  0477  084A               	movf	??_I2C1_Transmit,w
  6347  0478  0086               	movwf	6
  6348  0479  0187               	clrf	7
  6349  047A  0801               	movf	1,w
  6350  047B  00CB               	movwf	??_I2C1_Transmit+1
  6351  047C  084E               	movf	I2C1_Transmit@i_172,w
  6352  047D  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6353  047E  0086               	movwf	6
  6354  047F  0187               	clrf	7
  6355  0480  084B               	movf	??_I2C1_Transmit+1,w
  6356  0481  0081               	movwf	1
  6357  0482  3001               	movlw	1
  6358  0483  00CA               	movwf	??_I2C1_Transmit
  6359  0484  084A               	movf	??_I2C1_Transmit,w
  6360  0485  07CE               	addwf	I2C1_Transmit@i_172,f
  6361  0486  2C70               	goto	l2359
  6362  0487                     l2361:	
  6363                           
  6364                           ;I2C1.c: 93: result = size;
  6365  0487  0849               	movf	I2C1_Transmit@size,w
  6366  0488  00CA               	movwf	??_I2C1_Transmit
  6367  0489  084A               	movf	??_I2C1_Transmit,w
  6368  048A  00CF               	movwf	I2C1_Transmit@result
  6369                           
  6370                           ;I2C1.c: 94: }
  6371  048B  2C98               	goto	l2369
  6372  048C                     l2363:	
  6373                           
  6374                           ;I2C1.c: 95: else
  6375                           ;I2C1.c: 96: result = 0;
  6376  048C  0020               	movlb	0	; select bank0
  6377  048D  01CF               	clrf	I2C1_Transmit@result
  6378                           
  6379                           ;I2C1.c: 98: }
  6380                           
  6381                           ;I2C1.c: 97: break;
  6382  048E  2C98               	goto	l2369
  6383  048F                     l2367:	
  6384  048F  0021               	movlb	1	; select bank1
  6385  0490  0845               	movf	(_I2C1_Config^(0+128)+18),w
  6386                           
  6387                           ; Switch size 1, requested type "space"
  6388                           ; Number of cases is 2, Range of values is 0 to 1
  6389                           ; switch strategies available:
  6390                           ; Name         Instructions Cycles
  6391                           ; simple_byte            7     4 (average)
  6392                           ; direct_byte           10     6 (fixed)
  6393                           ; jumptable            260     6 (fixed)
  6394                           ;	Chosen strategy is simple_byte
  6395  0491  3A00               	xorlw	0	; case 0
  6396  0492  1903               	skipnz
  6397  0493  2C07               	goto	l2323
  6398  0494  3A01               	xorlw	1	; case 1
  6399  0495  1903               	skipnz
  6400  0496  2C6A               	goto	l109
  6401  0497  2C98               	goto	l2369
  6402  0498                     l2369:	
  6403                           
  6404                           ;I2C1.c: 100: return result;
  6405  0498  0020               	movlb	0	; select bank0
  6406  0499  084F               	movf	I2C1_Transmit@result,w
  6407  049A  0008               	return
  6408  049B                     __end_of_I2C1_Transmit:	
  6409                           
  6410                           	psect	text26
  6411  0F76                     __ptext26:	
  6412 ;; *************** function _I2C_Init *****************
  6413 ;; Defined at:
  6414 ;;		line 6 in file "I2C_Common.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  I2Cx            1    wreg     enum E3178
  6417 ;;  address         1    6[BANK0 ] unsigned char 
  6418 ;;  mode            1    7[BANK0 ] enum E3169
  6419 ;;  Speed           1    8[BANK0 ] enum E3173
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  I2Cx            1   11[BANK0 ] enum E3178
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6431 ;;      Params:         0       3       0       0       0       0
  6432 ;;      Locals:         0       1       0       0       0       0
  6433 ;;      Temps:          0       2       0       0       0       0
  6434 ;;      Totals:         0       6       0       0       0       0
  6435 ;;Total ram usage:        6 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    5
  6438 ;; This function calls:
  6439 ;;		_I2C1_Setting
  6440 ;;		_I2C2_Setting
  6441 ;; This function is called by:
  6442 ;;		_DAC_Initialize
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           
  6447                           ;psect for function _I2C_Init
  6448  0F76                     _I2C_Init:	
  6449                           
  6450                           ;incstack = 0
  6451                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6452                           ;I2C_Init@I2Cx stored from wreg
  6453  0F76  0020               	movlb	0	; select bank0
  6454  0F77  00D2               	movwf	I2C_Init@I2Cx
  6455                           
  6456                           ;I2C_Common.c: 8: switch(I2Cx)
  6457  0F78  2F94               	goto	l2599
  6458  0F79                     l2593:	
  6459                           ;I2C_Common.c: 9: {
  6460                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6461                           
  6462                           
  6463                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6464  0F79  084E               	movf	I2C_Init@mode,w
  6465  0F7A  00D0               	movwf	??_I2C_Init
  6466  0F7B  0850               	movf	??_I2C_Init,w
  6467  0F7C  00C9               	movwf	I2C1_Setting@mode
  6468  0F7D  084F               	movf	I2C_Init@Speed,w
  6469  0F7E  00D1               	movwf	??_I2C_Init+1
  6470  0F7F  0851               	movf	??_I2C_Init+1,w
  6471  0F80  00CA               	movwf	I2C1_Setting@Speed
  6472  0F81  084D               	movf	I2C_Init@address,w
  6473  0F82  3187  2715  318F   	fcall	_I2C1_Setting
  6474                           
  6475                           ;I2C_Common.c: 12: break;
  6476  0F85  2F9D               	goto	l338
  6477  0F86                     l2595:	
  6478                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6479                           
  6480                           
  6481                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6482  0F86  0020               	movlb	0	; select bank0
  6483  0F87  084E               	movf	I2C_Init@mode,w
  6484  0F88  00D0               	movwf	??_I2C_Init
  6485  0F89  0850               	movf	??_I2C_Init,w
  6486  0F8A  00C9               	movwf	I2C2_Setting@mode
  6487  0F8B  084F               	movf	I2C_Init@Speed,w
  6488  0F8C  00D1               	movwf	??_I2C_Init+1
  6489  0F8D  0851               	movf	??_I2C_Init+1,w
  6490  0F8E  00CA               	movwf	I2C2_Setting@Speed
  6491  0F8F  084D               	movf	I2C_Init@address,w
  6492  0F90  3186  26D1  318F   	fcall	_I2C2_Setting
  6493                           
  6494                           ;I2C_Common.c: 17: }
  6495                           
  6496                           ;I2C_Common.c: 16: break;
  6497  0F93  2F9D               	goto	l338
  6498  0F94                     l2599:	
  6499  0F94  0020               	movlb	0	; select bank0
  6500  0F95  0852               	movf	I2C_Init@I2Cx,w
  6501                           
  6502                           ; Switch size 1, requested type "space"
  6503                           ; Number of cases is 2, Range of values is 0 to 1
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte            7     4 (average)
  6507                           ; direct_byte           10     6 (fixed)
  6508                           ; jumptable            260     6 (fixed)
  6509                           ;	Chosen strategy is simple_byte
  6510  0F96  3A00               	xorlw	0	; case 0
  6511  0F97  1903               	skipnz
  6512  0F98  2F79               	goto	l2593
  6513  0F99  3A01               	xorlw	1	; case 1
  6514  0F9A  1903               	skipnz
  6515  0F9B  2F86               	goto	l2595
  6516  0F9C  2F9D               	goto	l338
  6517  0F9D                     l338:	
  6518                           
  6519                           ;I2C_Common.c: 19: PEIE = 1;
  6520  0F9D  170B               	bsf	11,6	;volatile
  6521                           
  6522                           ;I2C_Common.c: 20: GIE = 1;
  6523  0F9E  178B               	bsf	11,7	;volatile
  6524  0F9F  0008               	return
  6525  0FA0                     __end_of_I2C_Init:	
  6526                           
  6527                           	psect	text27
  6528  06D1                     __ptext27:	
  6529 ;; *************** function _I2C2_Setting *****************
  6530 ;; Defined at:
  6531 ;;		line 15 in file "I2C2.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  address         1    wreg     unsigned char 
  6534 ;;  mode            1    2[BANK0 ] enum E3169
  6535 ;;  Speed           1    3[BANK0 ] enum E3173
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  address         1    5[BANK0 ] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6547 ;;      Params:         0       2       0       0       0       0
  6548 ;;      Locals:         0       1       0       0       0       0
  6549 ;;      Temps:          0       1       0       0       0       0
  6550 ;;      Totals:         0       4       0       0       0       0
  6551 ;;Total ram usage:        4 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    4
  6554 ;; This function calls:
  6555 ;;		_I2C2_PinInit
  6556 ;; This function is called by:
  6557 ;;		_I2C_Init
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _I2C2_Setting
  6563  06D1                     _I2C2_Setting:	
  6564                           
  6565                           ;incstack = 0
  6566                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6567                           ;I2C2_Setting@address stored from wreg
  6568  06D1  0020               	movlb	0	; select bank0
  6569  06D2  00CC               	movwf	I2C2_Setting@address
  6570                           
  6571                           ;I2C2.c: 17: I2C2_PinInit();
  6572  06D3  318D  25B5  3186   	fcall	_I2C2_PinInit
  6573                           
  6574                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6575  06D6  0020               	movlb	0	; select bank0
  6576  06D7  0849               	movf	I2C2_Setting@mode,w
  6577  06D8  00CB               	movwf	??_I2C2_Setting
  6578  06D9  084B               	movf	??_I2C2_Setting,w
  6579  06DA  0021               	movlb	1	; select bank1
  6580  06DB  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  6581                           
  6582                           ;I2C2.c: 20: switch(mode)
  6583  06DC  2F05               	goto	l2405
  6584  06DD                     l211:	
  6585                           ;I2C2.c: 21: {
  6586                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6587                           
  6588                           
  6589                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6590  06DD  0024               	movlb	4	; select bank4
  6591  06DE  159D               	bsf	29,3	;volatile
  6592                           
  6593                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6594  06DF  0020               	movlb	0	; select bank0
  6595  06E0  084A               	movf	I2C2_Setting@Speed,w
  6596  06E1  1D03               	btfss	3,2
  6597  06E2  2EE7               	goto	l2383
  6598                           
  6599                           ;I2C2.c: 25: {
  6600                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6601  06E3  0024               	movlb	4	; select bank4
  6602  06E4  179C               	bsf	28,7	;volatile
  6603                           
  6604                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6605  06E5  304F               	movlw	79
  6606  06E6  2EF1               	goto	L2
  6607  06E7                     l2383:	
  6608                           ;I2C2.c: 28: }
  6609                           
  6610                           
  6611                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6612  06E7  0020               	movlb	0	; select bank0
  6613  06E8  034A               	decf	I2C2_Setting@Speed,w
  6614  06E9  1D03               	btfss	3,2
  6615  06EA  2EF2               	goto	l2389
  6616                           
  6617                           ;I2C2.c: 30: {
  6618                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6619  06EB  307F               	movlw	127
  6620  06EC  00CB               	movwf	??_I2C2_Setting
  6621  06ED  084B               	movf	??_I2C2_Setting,w
  6622  06EE  0024               	movlb	4	; select bank4
  6623  06EF  059C               	andwf	28,f	;volatile
  6624                           
  6625                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6626  06F0  3013               	movlw	19
  6627  06F1                     L2:	
  6628  06F1  009A               	movwf	26	;volatile
  6629  06F2                     l2389:	
  6630                           
  6631                           ;I2C2.c: 33: }
  6632                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6633  06F2  0024               	movlb	4	; select bank4
  6634  06F3  2F03               	goto	l2401
  6635  06F4                     l2391:	
  6636                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6637                           
  6638                           ;I2C2.c: 35: break;
  6639                           
  6640                           
  6641                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6642  06F4  0024               	movlb	4	; select bank4
  6643  06F5  019C               	clrf	28	;volatile
  6644                           
  6645                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6646  06F6  3006               	movlw	6
  6647  06F7  0020               	movlb	0	; select bank0
  6648  06F8  00CB               	movwf	??_I2C2_Setting
  6649  06F9  084B               	movf	??_I2C2_Setting,w
  6650  06FA  0024               	movlb	4	; select bank4
  6651  06FB  049D               	iorwf	29,f	;volatile
  6652                           
  6653                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6654  06FC  141E               	bsf	30,0	;volatile
  6655                           
  6656                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6657  06FD  0020               	movlb	0	; select bank0
  6658  06FE  354C               	lslf	I2C2_Setting@address,w
  6659  06FF  0024               	movlb	4	; select bank4
  6660  0700  009A               	movwf	26	;volatile
  6661                           
  6662                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6663  0701  30FE               	movlw	254
  6664  0702  009B               	movwf	27	;volatile
  6665  0703                     l2401:	
  6666                           
  6667                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6668  0703  169D               	bsf	29,5	;volatile
  6669                           
  6670                           ;I2C2.c: 45: }
  6671                           
  6672                           ;I2C2.c: 44: break;
  6673  0704  2F0E               	goto	l215
  6674  0705                     l2405:	
  6675  0705  0020               	movlb	0	; select bank0
  6676  0706  0849               	movf	I2C2_Setting@mode,w
  6677                           
  6678                           ; Switch size 1, requested type "space"
  6679                           ; Number of cases is 2, Range of values is 0 to 1
  6680                           ; switch strategies available:
  6681                           ; Name         Instructions Cycles
  6682                           ; simple_byte            7     4 (average)
  6683                           ; direct_byte           10     6 (fixed)
  6684                           ; jumptable            260     6 (fixed)
  6685                           ;	Chosen strategy is simple_byte
  6686  0707  3A00               	xorlw	0	; case 0
  6687  0708  1903               	skipnz
  6688  0709  2EDD               	goto	l211
  6689  070A  3A01               	xorlw	1	; case 1
  6690  070B  1903               	skipnz
  6691  070C  2EF4               	goto	l2391
  6692  070D  2F0E               	goto	l215
  6693  070E                     l215:	
  6694                           
  6695                           ;I2C2.c: 46: SSP2IE = 1;
  6696  070E  0021               	movlb	1	; select bank1
  6697  070F  1414               	bsf	20,0	;volatile
  6698                           
  6699                           ;I2C2.c: 47: BCL2IE = 1;
  6700  0710  1494               	bsf	20,1	;volatile
  6701                           
  6702                           ;I2C2.c: 48: SSP2IF = 0;
  6703  0711  0020               	movlb	0	; select bank0
  6704  0712  1014               	bcf	20,0	;volatile
  6705                           
  6706                           ;I2C2.c: 49: BCL2IF = 0;
  6707  0713  1094               	bcf	20,1	;volatile
  6708  0714  0008               	return
  6709  0715                     __end_of_I2C2_Setting:	
  6710                           
  6711                           	psect	text28
  6712  0DB5                     __ptext28:	
  6713 ;; *************** function _I2C2_PinInit *****************
  6714 ;; Defined at:
  6715 ;;		line 9 in file "I2C2.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;		None
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6729 ;;      Params:         0       0       0       0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0
  6731 ;;      Temps:          0       1       0       0       0       0
  6732 ;;      Totals:         0       1       0       0       0       0
  6733 ;;Total ram usage:        1 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    3
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_I2C2_Setting
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _I2C2_PinInit
  6745  0DB5                     _I2C2_PinInit:	
  6746                           
  6747                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6748                           
  6749                           ;incstack = 0
  6750                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6751  0DB5  3024               	movlw	36
  6752  0DB6  0020               	movlb	0	; select bank0
  6753  0DB7  00C8               	movwf	??_I2C2_PinInit
  6754  0DB8  0848               	movf	??_I2C2_PinInit,w
  6755  0DB9  0021               	movlb	1	; select bank1
  6756  0DBA  048D               	iorwf	13,f	;volatile
  6757                           
  6758                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6759  0DBB  30DB               	movlw	219
  6760  0DBC  0020               	movlb	0	; select bank0
  6761  0DBD  00C8               	movwf	??_I2C2_PinInit
  6762  0DBE  0848               	movf	??_I2C2_PinInit,w
  6763  0DBF  0023               	movlb	3	; select bank3
  6764  0DC0  058D               	andwf	13,f	;volatile
  6765  0DC1  0008               	return
  6766  0DC2                     __end_of_I2C2_PinInit:	
  6767                           
  6768                           	psect	text29
  6769  0715                     __ptext29:	
  6770 ;; *************** function _I2C1_Setting *****************
  6771 ;; Defined at:
  6772 ;;		line 15 in file "I2C1.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  address         1    wreg     unsigned char 
  6775 ;;  mode            1    2[BANK0 ] enum E3169
  6776 ;;  Speed           1    3[BANK0 ] enum E3173
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  address         1    5[BANK0 ] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6788 ;;      Params:         0       2       0       0       0       0
  6789 ;;      Locals:         0       1       0       0       0       0
  6790 ;;      Temps:          0       1       0       0       0       0
  6791 ;;      Totals:         0       4       0       0       0       0
  6792 ;;Total ram usage:        4 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    4
  6795 ;; This function calls:
  6796 ;;		_I2C1_PinInit
  6797 ;; This function is called by:
  6798 ;;		_I2C_Init
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _I2C1_Setting
  6804  0715                     _I2C1_Setting:	
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6808                           ;I2C1_Setting@address stored from wreg
  6809  0715  0020               	movlb	0	; select bank0
  6810  0716  00CC               	movwf	I2C1_Setting@address
  6811                           
  6812                           ;I2C1.c: 17: I2C1_PinInit();
  6813  0717  318D  25A8  3187   	fcall	_I2C1_PinInit
  6814                           
  6815                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6816  071A  0020               	movlb	0	; select bank0
  6817  071B  0849               	movf	I2C1_Setting@mode,w
  6818  071C  00CB               	movwf	??_I2C1_Setting
  6819  071D  084B               	movf	??_I2C1_Setting,w
  6820  071E  0021               	movlb	1	; select bank1
  6821  071F  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  6822                           
  6823                           ;I2C1.c: 20: switch(mode)
  6824  0720  2F49               	goto	l2319
  6825  0721                     l74:	
  6826                           ;I2C1.c: 21: {
  6827                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6828                           
  6829                           
  6830                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6831  0721  0024               	movlb	4	; select bank4
  6832  0722  1595               	bsf	21,3	;volatile
  6833                           
  6834                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6835  0723  0020               	movlb	0	; select bank0
  6836  0724  084A               	movf	I2C1_Setting@Speed,w
  6837  0725  1D03               	btfss	3,2
  6838  0726  2F2B               	goto	l2297
  6839                           
  6840                           ;I2C1.c: 25: {
  6841                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6842  0727  0024               	movlb	4	; select bank4
  6843  0728  1794               	bsf	20,7	;volatile
  6844                           
  6845                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6846  0729  304F               	movlw	79
  6847  072A  2F35               	goto	L3
  6848  072B                     l2297:	
  6849                           ;I2C1.c: 28: }
  6850                           
  6851                           
  6852                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6853  072B  0020               	movlb	0	; select bank0
  6854  072C  034A               	decf	I2C1_Setting@Speed,w
  6855  072D  1D03               	btfss	3,2
  6856  072E  2F36               	goto	l2303
  6857                           
  6858                           ;I2C1.c: 30: {
  6859                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6860  072F  307F               	movlw	127
  6861  0730  00CB               	movwf	??_I2C1_Setting
  6862  0731  084B               	movf	??_I2C1_Setting,w
  6863  0732  0024               	movlb	4	; select bank4
  6864  0733  0594               	andwf	20,f	;volatile
  6865                           
  6866                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6867  0734  3013               	movlw	19
  6868  0735                     L3:	
  6869  0735  0092               	movwf	18	;volatile
  6870  0736                     l2303:	
  6871                           
  6872                           ;I2C1.c: 33: }
  6873                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6874  0736  0024               	movlb	4	; select bank4
  6875  0737  2F47               	goto	l2315
  6876  0738                     l2305:	
  6877                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6878                           
  6879                           ;I2C1.c: 35: break;
  6880                           
  6881                           
  6882                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6883  0738  0024               	movlb	4	; select bank4
  6884  0739  0194               	clrf	20	;volatile
  6885                           
  6886                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6887  073A  3006               	movlw	6
  6888  073B  0020               	movlb	0	; select bank0
  6889  073C  00CB               	movwf	??_I2C1_Setting
  6890  073D  084B               	movf	??_I2C1_Setting,w
  6891  073E  0024               	movlb	4	; select bank4
  6892  073F  0495               	iorwf	21,f	;volatile
  6893                           
  6894                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6895  0740  1416               	bsf	22,0	;volatile
  6896                           
  6897                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6898  0741  0020               	movlb	0	; select bank0
  6899  0742  354C               	lslf	I2C1_Setting@address,w
  6900  0743  0024               	movlb	4	; select bank4
  6901  0744  0092               	movwf	18	;volatile
  6902                           
  6903                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6904  0745  30FE               	movlw	254
  6905  0746  0093               	movwf	19	;volatile
  6906  0747                     l2315:	
  6907                           
  6908                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6909  0747  1695               	bsf	21,5	;volatile
  6910                           
  6911                           ;I2C1.c: 45: }
  6912                           
  6913                           ;I2C1.c: 44: break;
  6914  0748  2F52               	goto	l78
  6915  0749                     l2319:	
  6916  0749  0020               	movlb	0	; select bank0
  6917  074A  0849               	movf	I2C1_Setting@mode,w
  6918                           
  6919                           ; Switch size 1, requested type "space"
  6920                           ; Number of cases is 2, Range of values is 0 to 1
  6921                           ; switch strategies available:
  6922                           ; Name         Instructions Cycles
  6923                           ; simple_byte            7     4 (average)
  6924                           ; direct_byte           10     6 (fixed)
  6925                           ; jumptable            260     6 (fixed)
  6926                           ;	Chosen strategy is simple_byte
  6927  074B  3A00               	xorlw	0	; case 0
  6928  074C  1903               	skipnz
  6929  074D  2F21               	goto	l74
  6930  074E  3A01               	xorlw	1	; case 1
  6931  074F  1903               	skipnz
  6932  0750  2F38               	goto	l2305
  6933  0751  2F52               	goto	l78
  6934  0752                     l78:	
  6935                           
  6936                           ;I2C1.c: 46: SSP1IE = 1;
  6937  0752  0021               	movlb	1	; select bank1
  6938  0753  1591               	bsf	17,3	;volatile
  6939                           
  6940                           ;I2C1.c: 47: BCL1IE = 1;
  6941  0754  1592               	bsf	18,3	;volatile
  6942                           
  6943                           ;I2C1.c: 48: SSP1IF = 0;
  6944  0755  0020               	movlb	0	; select bank0
  6945  0756  1191               	bcf	17,3	;volatile
  6946                           
  6947                           ;I2C1.c: 49: BCL1IF = 0;
  6948  0757  1192               	bcf	18,3	;volatile
  6949  0758  0008               	return
  6950  0759                     __end_of_I2C1_Setting:	
  6951                           
  6952                           	psect	text30
  6953  0DA8                     __ptext30:	
  6954 ;; *************** function _I2C1_PinInit *****************
  6955 ;; Defined at:
  6956 ;;		line 9 in file "I2C1.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6970 ;;      Params:         0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0
  6972 ;;      Temps:          0       1       0       0       0       0
  6973 ;;      Totals:         0       1       0       0       0       0
  6974 ;;Total ram usage:        1 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    3
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_I2C1_Setting
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           
  6985                           ;psect for function _I2C1_PinInit
  6986  0DA8                     _I2C1_PinInit:	
  6987                           
  6988                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6992  0DA8  3012               	movlw	18
  6993  0DA9  0020               	movlb	0	; select bank0
  6994  0DAA  00C8               	movwf	??_I2C1_PinInit
  6995  0DAB  0848               	movf	??_I2C1_PinInit,w
  6996  0DAC  0021               	movlb	1	; select bank1
  6997  0DAD  048D               	iorwf	13,f	;volatile
  6998                           
  6999                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  7000  0DAE  30ED               	movlw	237
  7001  0DAF  0020               	movlb	0	; select bank0
  7002  0DB0  00C8               	movwf	??_I2C1_PinInit
  7003  0DB1  0848               	movf	??_I2C1_PinInit,w
  7004  0DB2  0023               	movlb	3	; select bank3
  7005  0DB3  058D               	andwf	13,f	;volatile
  7006  0DB4  0008               	return
  7007  0DB5                     __end_of_I2C1_PinInit:	
  7008                           
  7009                           	psect	text31
  7010  0F26                     __ptext31:	
  7011 ;; *************** function _Buzzer_Init *****************
  7012 ;; Defined at:
  7013 ;;		line 11 in file "Buzzer.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7027 ;;      Params:         0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0
  7029 ;;      Temps:          0       1       0       0       0       0
  7030 ;;      Totals:         0       1       0       0       0       0
  7031 ;;Total ram usage:        1 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    3
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function _Buzzer_Init
  7043  0F26                     _Buzzer_Init:	
  7044                           
  7045                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7046                           
  7047                           ;incstack = 0
  7048                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7049  0F26  307F               	movlw	127
  7050  0F27  0020               	movlb	0	; select bank0
  7051  0F28  00C8               	movwf	??_Buzzer_Init
  7052  0F29  0848               	movf	??_Buzzer_Init,w
  7053  0F2A  0021               	movlb	1	; select bank1
  7054  0F2B  058C               	andwf	12,f	;volatile
  7055                           
  7056                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7057  0F2C  307F               	movlw	127
  7058  0F2D  0020               	movlb	0	; select bank0
  7059  0F2E  00C8               	movwf	??_Buzzer_Init
  7060  0F2F  0848               	movf	??_Buzzer_Init,w
  7061  0F30  0023               	movlb	3	; select bank3
  7062  0F31  058C               	andwf	12,f	;volatile
  7063                           
  7064                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7065  0F32  0022               	movlb	2	; select bank2
  7066  0F33  159D               	bsf	29,3	;volatile
  7067                           
  7068                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7069  0F34  0020               	movlb	0	; select bank0
  7070  0F35  081C               	movf	28,w	;volatile
  7071                           
  7072                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7073  0F36  149C               	bsf	28,1	;volatile
  7074                           
  7075                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7076  0F37  151C               	bsf	28,2	;volatile
  7077                           
  7078                           ;Buzzer.c: 21: TMR2 = 0x00;
  7079  0F38  019A               	clrf	26	;volatile
  7080                           
  7081                           ;Buzzer.c: 22: PR2 = 0xFF;
  7082  0F39  30FF               	movlw	255
  7083  0F3A  009B               	movwf	27	;volatile
  7084                           
  7085                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7086  0F3B  303F               	movlw	63
  7087  0F3C  00C8               	movwf	??_Buzzer_Init
  7088  0F3D  0848               	movf	??_Buzzer_Init,w
  7089  0F3E  0025               	movlb	5	; select bank5
  7090  0F3F  059A               	andwf	26,f	;volatile
  7091                           
  7092                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7093  0F40  300C               	movlw	12
  7094  0F41  0020               	movlb	0	; select bank0
  7095  0F42  00C8               	movwf	??_Buzzer_Init
  7096  0F43  0848               	movf	??_Buzzer_Init,w
  7097  0F44  0025               	movlb	5	; select bank5
  7098  0F45  049A               	iorwf	26,f	;volatile
  7099                           
  7100                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7101  0F46  30F3               	movlw	243
  7102  0F47  0020               	movlb	0	; select bank0
  7103  0F48  00C8               	movwf	??_Buzzer_Init
  7104  0F49  0848               	movf	??_Buzzer_Init,w
  7105  0F4A  0025               	movlb	5	; select bank5
  7106  0F4B  059E               	andwf	30,f	;volatile
  7107                           
  7108                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7109  0F4C  0198               	clrf	24	;volatile
  7110  0F4D  0008               	return
  7111  0F4E                     __end_of_Buzzer_Init:	
  7112                           
  7113                           	psect	text32
  7114  0E1D                     __ptext32:	
  7115 ;; *************** function _Basic_Init *****************
  7116 ;; Defined at:
  7117 ;;		line 62 in file "main.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      char 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7131 ;;      Params:         0       0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    3
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function _Basic_Init
  7147  0E1D                     _Basic_Init:	
  7148                           
  7149                           ;main.c: 64: OSCCON = 0xF0;
  7150                           
  7151                           ;incstack = 0
  7152                           ; Regs used in _Basic_Init: [wreg+status,2]
  7153  0E1D  30F0               	movlw	240
  7154  0E1E  0021               	movlb	1	; select bank1
  7155  0E1F  0099               	movwf	25	;volatile
  7156                           
  7157                           ;main.c: 68: TRISA = 0x00;
  7158  0E20  018C               	clrf	12	;volatile
  7159                           
  7160                           ;main.c: 69: ANSELA = 0x00;
  7161  0E21  0023               	movlb	3	; select bank3
  7162  0E22  018C               	clrf	12	;volatile
  7163                           
  7164                           ;main.c: 71: TRISB = 0x00;
  7165  0E23  0021               	movlb	1	; select bank1
  7166  0E24  018D               	clrf	13	;volatile
  7167                           
  7168                           ;main.c: 72: ANSELB = 0x00;
  7169  0E25  0023               	movlb	3	; select bank3
  7170  0E26  018D               	clrf	13	;volatile
  7171                           
  7172                           ;main.c: 74: APFCON0 = 0x00;
  7173  0E27  0022               	movlb	2	; select bank2
  7174  0E28  019D               	clrf	29	;volatile
  7175                           
  7176                           ;main.c: 75: APFCON1 = 0x00;
  7177  0E29  019E               	clrf	30	;volatile
  7178                           
  7179                           ;main.c: 77: PORTA = 0x00;
  7180  0E2A  0020               	movlb	0	; select bank0
  7181  0E2B  018C               	clrf	12	;volatile
  7182                           
  7183                           ;main.c: 78: PORTB = 0x00;
  7184  0E2C  018D               	clrf	13	;volatile
  7185  0E2D  0008               	return
  7186  0E2E                     __end_of_Basic_Init:	
  7187                           ;main.c: 80: return 0;
  7188                           ;	Return value of _Basic_Init is never used
  7189                           
  7190                           
  7191                           	psect	intentry
  7192  0004                     __pintentry:	
  7193 ;; *************** function _Handler *****************
  7194 ;; Defined at:
  7195 ;;		line 83 in file "main.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7209 ;;      Params:         0       0       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0
  7211 ;;      Temps:          0       1       0       0       0       0
  7212 ;;      Totals:         0       1       0       0       0       0
  7213 ;;Total ram usage:        1 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    2
  7216 ;; This function calls:
  7217 ;;		_Buzzer_Handler
  7218 ;;		_CPSx_Read
  7219 ;;		_I2C_CommonInterrupt
  7220 ;;		_Timer1_Count200us
  7221 ;;		_Timer1_DetectAssignCount
  7222 ;;		_Timer4_CheckFlag
  7223 ;;		_Timer6_CheckFlag
  7224 ;;		_mTouch_IntervalDecrement
  7225 ;; This function is called by:
  7226 ;;		Interrupt level 1
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230  0004                     _Handler:	
  7231                           
  7232                           ;incstack = 0
  7233  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7234                           
  7235                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7236  0005  3180               	pagesel	$
  7237  0006  0020               	movlb	0	; select bank0
  7238  0007  087F               	movf	127,w
  7239  0008  00C7               	movwf	??_Handler
  7240                           
  7241                           ;main.c: 85: if(Timer4_CheckFlag())
  7242  0009  318D  2592  3180   	fcall	_Timer4_CheckFlag
  7243  000C  3A00               	xorlw	0
  7244  000D  1903               	skipnz
  7245  000E  2812               	goto	i1l3277
  7246                           
  7247                           ;main.c: 86: Timer1_Count200us();
  7248  000F  318D  2574  3180   	fcall	_Timer1_Count200us
  7249  0012                     i1l3277:	
  7250                           
  7251                           ;main.c: 88: if(Timer1_DetectAssignCount())
  7252  0012  3183  236C  3180   	fcall	_Timer1_DetectAssignCount
  7253  0015  3A00               	xorlw	0
  7254  0016  1903               	skipnz
  7255  0017  281B               	goto	i1l3281
  7256                           
  7257                           ;main.c: 89: LATA6 = !LATA6;
  7258  0018  3040               	movlw	64
  7259  0019  0022               	movlb	2	; select bank2
  7260  001A  068C               	xorwf	12,f
  7261  001B                     i1l3281:	
  7262                           
  7263                           ;main.c: 91: if(Timer6_CheckFlag())
  7264  001B  318D  259D  3180   	fcall	_Timer6_CheckFlag
  7265  001E  3A00               	xorlw	0
  7266  001F  1903               	skipnz
  7267  0020  282A               	goto	i1l656
  7268                           
  7269                           ;main.c: 92: {
  7270                           ;main.c: 93: CPSx_Read();
  7271  0021  318F  2701  3180   	fcall	_CPSx_Read
  7272                           
  7273                           ;main.c: 94: mTouch_IntervalDecrement();
  7274  0024  318E  260C  3180   	fcall	_mTouch_IntervalDecrement
  7275                           
  7276                           ;main.c: 96: Buzzer_Handler();
  7277  0027  318E  2654  3180   	fcall	_Buzzer_Handler
  7278  002A                     i1l656:	
  7279                           
  7280                           ;main.c: 97: }
  7281                           ;main.c: 98: I2C_CommonInterrupt();
  7282  002A  318D  2553         	fcall	_I2C_CommonInterrupt
  7283  002C  0020               	movlb	0	; select bank0
  7284  002D  0847               	movf	??_Handler,w
  7285  002E  00FF               	movwf	127
  7286  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7287  0030  0009               	retfie
  7288  0031                     __end_of_Handler:	
  7289                           
  7290                           	psect	text34
  7291  0E0C                     __ptext34:	
  7292 ;; *************** function _mTouch_IntervalDecrement *****************
  7293 ;; Defined at:
  7294 ;;		line 101 in file "main.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7308 ;;      Params:         0       0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0
  7311 ;;      Totals:         0       0       0       0       0       0
  7312 ;;Total ram usage:        0 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_Handler
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _mTouch_IntervalDecrement
  7323  0E0C                     _mTouch_IntervalDecrement:	
  7324                           
  7325                           ;main.c: 103: if(mTouch_Interval[0]>0)
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7329  0E0C  0020               	movlb	0	; select bank0
  7330  0E0D  0834               	movf	_mTouch_Interval,w
  7331  0E0E  1903               	btfsc	3,2
  7332  0E0F  2E12               	goto	i1l660
  7333                           
  7334                           ;main.c: 104: mTouch_Interval[0]--;
  7335  0E10  3001               	movlw	1
  7336  0E11  02B4               	subwf	_mTouch_Interval,f
  7337  0E12                     i1l660:	
  7338                           
  7339                           ;main.c: 105: if(mTouch_Interval[1]>0)
  7340  0E12  0835               	movf	_mTouch_Interval+1,w
  7341  0E13  1903               	btfsc	3,2
  7342  0E14  2E17               	goto	i1l661
  7343                           
  7344                           ;main.c: 106: mTouch_Interval[1]--;
  7345  0E15  3001               	movlw	1
  7346  0E16  02B5               	subwf	_mTouch_Interval+1,f
  7347  0E17                     i1l661:	
  7348                           
  7349                           ;main.c: 107: if(mTouch_Interval[2]>0)
  7350  0E17  0836               	movf	_mTouch_Interval+2,w
  7351  0E18  1903               	btfsc	3,2
  7352  0E19  0008               	return
  7353                           
  7354                           ;main.c: 108: mTouch_Interval[2]--;
  7355  0E1A  3001               	movlw	1
  7356  0E1B  02B6               	subwf	_mTouch_Interval+2,f
  7357  0E1C  0008               	return
  7358  0E1D                     __end_of_mTouch_IntervalDecrement:	
  7359                           
  7360                           	psect	text35
  7361  0D9D                     __ptext35:	
  7362 ;; *************** function _Timer6_CheckFlag *****************
  7363 ;; Defined at:
  7364 ;;		line 17 in file "Timer6.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7378 ;;      Params:         0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0
  7381 ;;      Totals:         0       0       0       0       0       0
  7382 ;;Total ram usage:        0 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_Handler
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           
  7392                           ;psect for function _Timer6_CheckFlag
  7393  0D9D                     _Timer6_CheckFlag:	
  7394                           
  7395                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _Timer6_CheckFlag: [wreg]
  7399  0D9D  0021               	movlb	1	; select bank1
  7400  0D9E  1D93               	btfss	19,3	;volatile
  7401  0D9F  2DA6               	goto	i1l2001
  7402  0DA0  0020               	movlb	0	; select bank0
  7403  0DA1  1D93               	btfss	19,3	;volatile
  7404  0DA2  2DA6               	goto	i1l2001
  7405                           
  7406                           ;Timer6.c: 20: {
  7407                           ;Timer6.c: 21: TMR6IF = 0;
  7408  0DA3  1193               	bcf	19,3	;volatile
  7409                           
  7410                           ;Timer6.c: 22: return 1;
  7411  0DA4  3001               	movlw	1
  7412  0DA5  0008               	return
  7413  0DA6                     i1l2001:	
  7414                           
  7415                           ;Timer6.c: 23: }
  7416                           ;Timer6.c: 24: return 0;
  7417  0DA6  3000               	movlw	0
  7418  0DA7  0008               	return
  7419  0DA8                     __end_of_Timer6_CheckFlag:	
  7420                           
  7421                           	psect	text36
  7422  0D92                     __ptext36:	
  7423 ;; *************** function _Timer4_CheckFlag *****************
  7424 ;; Defined at:
  7425 ;;		line 17 in file "Timer4.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      unsigned char 
  7432 ;; Registers used:
  7433 ;;		wreg
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7439 ;;      Params:         0       0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0
  7442 ;;      Totals:         0       0       0       0       0       0
  7443 ;;Total ram usage:        0 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_Handler
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _Timer4_CheckFlag
  7454  0D92                     _Timer4_CheckFlag:	
  7455                           
  7456                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7457                           
  7458                           ;incstack = 0
  7459                           ; Regs used in _Timer4_CheckFlag: [wreg]
  7460  0D92  0021               	movlb	1	; select bank1
  7461  0D93  1C93               	btfss	19,1	;volatile
  7462  0D94  2D9B               	goto	i1l1969
  7463  0D95  0020               	movlb	0	; select bank0
  7464  0D96  1C93               	btfss	19,1	;volatile
  7465  0D97  2D9B               	goto	i1l1969
  7466                           
  7467                           ;Timer4.c: 20: {
  7468                           ;Timer4.c: 21: TMR4IF = 0;
  7469  0D98  1093               	bcf	19,1	;volatile
  7470                           
  7471                           ;Timer4.c: 22: return 1;
  7472  0D99  3001               	movlw	1
  7473  0D9A  0008               	return
  7474  0D9B                     i1l1969:	
  7475                           
  7476                           ;Timer4.c: 23: }
  7477                           ;Timer4.c: 24: return 0;
  7478  0D9B  3000               	movlw	0
  7479  0D9C  0008               	return
  7480  0D9D                     __end_of_Timer4_CheckFlag:	
  7481                           
  7482                           	psect	text37
  7483  036C                     __ptext37:	
  7484 ;; *************** function _Timer1_DetectAssignCount *****************
  7485 ;; Defined at:
  7486 ;;		line 67 in file "Timer1.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      unsigned char 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7500 ;;      Params:         0       0       0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    1
  7507 ;; This function calls:
  7508 ;;		___lldiv
  7509 ;; This function is called by:
  7510 ;;		_Handler
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _Timer1_DetectAssignCount
  7516  036C                     _Timer1_DetectAssignCount:	
  7517                           
  7518                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  7519                           ;Timer1.c: 71: if((tcnt.Delta_t>50000)&&((uint16_t)TMR1==PreviousTimer1))
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7523  036C  0020               	movlb	0	; select bank0
  7524  036D  0831               	movf	_tcnt+3,w
  7525  036E  1D03               	btfss	3,2
  7526  036F  2B79               	goto	i1l2963
  7527  0370  0830               	movf	_tcnt+2,w
  7528  0371  1D03               	btfss	3,2
  7529  0372  2B79               	goto	i1l2963
  7530  0373  3051               	movlw	81
  7531  0374  022E               	subwf	_tcnt,w
  7532  0375  30C3               	movlw	195
  7533  0376  3B2F               	subwfb	_tcnt+1,w
  7534  0377  1C03               	btfss	3,0
  7535  0378  2B89               	goto	i1l468
  7536  0379                     i1l2963:	
  7537  0379  0840               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  7538  037A  0617               	xorwf	23,w	;volatile
  7539  037B  1D03               	skipz
  7540  037C  2B7F               	goto	u258_25
  7541  037D  083F               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  7542  037E  0616               	xorwf	22,w	;volatile
  7543  037F                     u258_25:	
  7544  037F  1D03               	skipz
  7545  0380  2B89               	goto	i1l468
  7546                           
  7547                           ;Timer1.c: 72: cnts.SigmaCPM = 0;
  7548  0381  3000               	movlw	0
  7549  0382  00A7               	movwf	_cnts+7
  7550  0383  3000               	movlw	0
  7551  0384  00A6               	movwf	_cnts+6
  7552  0385  3000               	movlw	0
  7553  0386  00A5               	movwf	_cnts+5
  7554  0387  3000               	movlw	0
  7555  0388  00A4               	movwf	_cnts+4
  7556  0389                     i1l468:	
  7557                           
  7558                           ;Timer1.c: 73: PreviousTimer1 = (uint16_t)TMR1;
  7559  0389  0817               	movf	23,w	;volatile
  7560  038A  00C0               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  7561  038B  0816               	movf	22,w	;volatile
  7562  038C  00BF               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  7563                           
  7564                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  7565  038D  3001               	movlw	1
  7566  038E  07B2               	addwf	_tcnt+4,f
  7567  038F  3000               	movlw	0
  7568  0390  3DB3               	addwfc	_tcnt+5,f
  7569                           
  7570                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  7571  0391  3013               	movlw	19
  7572  0392  0233               	subwf	_tcnt+5,w
  7573  0393  3089               	movlw	137
  7574  0394  1903               	skipnz
  7575  0395  0232               	subwf	_tcnt+4,w
  7576  0396  1C03               	skipc
  7577  0397  2BC0               	goto	i1l2973
  7578  0398  082D               	movf	_cnts+13,w
  7579  0399  042C               	iorwf	_cnts+12,w
  7580  039A  042B               	iorwf	_cnts+11,w
  7581  039B  042A               	iorwf	_cnts+10,w
  7582  039C  1903               	skipnz
  7583  039D  2BC0               	goto	i1l2973
  7584                           
  7585                           ;Timer1.c: 77: {
  7586                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  7587  039E  01B2               	clrf	_tcnt+4
  7588  039F  01B3               	clrf	_tcnt+5
  7589                           
  7590                           ;Timer1.c: 79: cnts.AverageCPM = cnts.SigmaCPM/cnts.Num_of_Detect;
  7591  03A0  300A               	movlw	10
  7592  03A1  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7593  03A2  0086               	movwf	6
  7594  03A3  0187               	clrf	7
  7595  03A4  3F40               	moviw [0]fsr1
  7596  03A5  00F0               	movwf	___lldiv@divisor
  7597  03A6  3F41               	moviw [1]fsr1
  7598  03A7  00F1               	movwf	___lldiv@divisor+1
  7599  03A8  3F42               	moviw [2]fsr1
  7600  03A9  00F2               	movwf	___lldiv@divisor+2
  7601  03AA  3F43               	moviw [3]fsr1
  7602  03AB  00F3               	movwf	___lldiv@divisor+3
  7603  03AC  3004               	movlw	4
  7604  03AD  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7605  03AE  0086               	movwf	6
  7606  03AF  0187               	clrf	7
  7607  03B0  3F40               	moviw [0]fsr1
  7608  03B1  00F4               	movwf	___lldiv@dividend
  7609  03B2  3F41               	moviw [1]fsr1
  7610  03B3  00F5               	movwf	___lldiv@dividend+1
  7611  03B4  3F42               	moviw [2]fsr1
  7612  03B5  00F6               	movwf	___lldiv@dividend+2
  7613  03B6  3F43               	moviw [3]fsr1
  7614  03B7  00F7               	movwf	___lldiv@dividend+3
  7615  03B8  3186  263B  3183   	fcall	___lldiv
  7616  03BB  0871               	movf	?___lldiv+1,w
  7617  03BC  0020               	movlb	0	; select bank0
  7618  03BD  00A9               	movwf	_cnts+9
  7619  03BE  0870               	movf	?___lldiv,w
  7620  03BF  00A8               	movwf	_cnts+8
  7621  03C0                     i1l2973:	
  7622                           
  7623                           ;Timer1.c: 80: }
  7624                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  7625  03C0  1C11               	btfss	17,0	;volatile
  7626  03C1  2C02               	goto	i1l2997
  7627  03C2  0021               	movlb	1	; select bank1
  7628  03C3  1C11               	btfss	17,0	;volatile
  7629  03C4  2C02               	goto	i1l2997
  7630                           
  7631                           ;Timer1.c: 83: {
  7632                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 10UL;
  7633  03C5  300A               	movlw	10
  7634  03C6  0020               	movlb	0	; select bank0
  7635  03C7  07A0               	addwf	_cnts,f
  7636  03C8  3000               	movlw	0
  7637  03C9  3DA1               	addwfc	_cnts+1,f
  7638  03CA  3000               	movlw	0
  7639  03CB  3DA2               	addwfc	_cnts+2,f
  7640  03CC  3000               	movlw	0
  7641  03CD  3DA3               	addwfc	_cnts+3,f
  7642                           
  7643                           ;Timer1.c: 86: cnts.SigmaCPM += (uint32_t)((10UL * 12000UL) / tcnt.Delta_t);
  7644  03CE  0831               	movf	_tcnt+3,w
  7645  03CF  00F3               	movwf	___lldiv@divisor+3
  7646  03D0  0830               	movf	_tcnt+2,w
  7647  03D1  00F2               	movwf	___lldiv@divisor+2
  7648  03D2  082F               	movf	_tcnt+1,w
  7649  03D3  00F1               	movwf	___lldiv@divisor+1
  7650  03D4  082E               	movf	_tcnt,w
  7651  03D5  00F0               	movwf	___lldiv@divisor
  7652  03D6  3000               	movlw	0
  7653  03D7  00F7               	movwf	___lldiv@dividend+3
  7654  03D8  3001               	movlw	1
  7655  03D9  00F6               	movwf	___lldiv@dividend+2
  7656  03DA  30D4               	movlw	212
  7657  03DB  00F5               	movwf	___lldiv@dividend+1
  7658  03DC  30C0               	movlw	192
  7659  03DD  00F4               	movwf	___lldiv@dividend
  7660  03DE  3186  263B         	fcall	___lldiv
  7661  03E0  0870               	movf	?___lldiv,w
  7662  03E1  0020               	movlb	0	; select bank0
  7663  03E2  07A4               	addwf	_cnts+4,f
  7664  03E3  0871               	movf	?___lldiv+1,w
  7665  03E4  3DA5               	addwfc	_cnts+5,f
  7666  03E5  0872               	movf	?___lldiv+2,w
  7667  03E6  3DA6               	addwfc	_cnts+6,f
  7668  03E7  0873               	movf	?___lldiv+3,w
  7669  03E8  3DA7               	addwfc	_cnts+7,f
  7670                           
  7671                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  7672  03E9  3001               	movlw	1
  7673  03EA  07AA               	addwf	_cnts+10,f
  7674  03EB  3000               	movlw	0
  7675  03EC  3DAB               	addwfc	_cnts+11,f
  7676  03ED  3000               	movlw	0
  7677  03EE  3DAC               	addwfc	_cnts+12,f
  7678  03EF  3000               	movlw	0
  7679  03F0  3DAD               	addwfc	_cnts+13,f
  7680                           
  7681                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  7682  03F1  3000               	movlw	0
  7683  03F2  00B1               	movwf	_tcnt+3
  7684  03F3  3000               	movlw	0
  7685  03F4  00B0               	movwf	_tcnt+2
  7686  03F5  3000               	movlw	0
  7687  03F6  00AF               	movwf	_tcnt+1
  7688  03F7  3000               	movlw	0
  7689  03F8  00AE               	movwf	_tcnt
  7690                           
  7691                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1; };
  7692  03F9  1018               	bcf	24,0	;volatile
  7693  03FA  30FF               	movlw	255
  7694  03FB  0097               	movwf	23	;volatile
  7695  03FC  30F5               	movlw	245
  7696  03FD  0096               	movwf	22	;volatile
  7697  03FE  1418               	bsf	24,0	;volatile
  7698                           
  7699                           ;Timer1.c: 91: TMR1IF = 0;
  7700  03FF  1011               	bcf	17,0	;volatile
  7701                           
  7702                           ;Timer1.c: 92: return 1;
  7703  0400  3001               	movlw	1
  7704  0401  0008               	return
  7705  0402                     i1l2997:	
  7706                           
  7707                           ;Timer1.c: 93: }
  7708                           ;Timer1.c: 94: return 0;
  7709  0402  3000               	movlw	0
  7710  0403  0008               	return
  7711  0404                     __end_of_Timer1_DetectAssignCount:	
  7712                           
  7713                           	psect	text38
  7714  063B                     __ptext38:	
  7715 ;; *************** function ___lldiv *****************
  7716 ;; Defined at:
  7717 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  divisor         4    0[COMMON] unsigned long 
  7720 ;;  dividend        4    4[COMMON] unsigned long 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  quotient        4    9[COMMON] unsigned long 
  7723 ;;  counter         1   13[COMMON] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  4    0[COMMON] unsigned long 
  7726 ;; Registers used:
  7727 ;;		wreg, status,2, status,0
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7733 ;;      Params:         8       0       0       0       0       0
  7734 ;;      Locals:         5       0       0       0       0       0
  7735 ;;      Temps:          1       0       0       0       0       0
  7736 ;;      Totals:        14       0       0       0       0       0
  7737 ;;Total ram usage:       14 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_Timer1_DetectAssignCount
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           
  7747                           ;psect for function ___lldiv
  7748  063B                     ___lldiv:	
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7752  063B  3000               	movlw	0
  7753  063C  00FC               	movwf	___lldiv@quotient+3
  7754  063D  3000               	movlw	0
  7755  063E  00FB               	movwf	___lldiv@quotient+2
  7756  063F  3000               	movlw	0
  7757  0640  00FA               	movwf	___lldiv@quotient+1
  7758  0641  3000               	movlw	0
  7759  0642  00F9               	movwf	___lldiv@quotient
  7760  0643  0873               	movf	___lldiv@divisor+3,w
  7761  0644  0472               	iorwf	___lldiv@divisor+2,w
  7762  0645  0471               	iorwf	___lldiv@divisor+1,w
  7763  0646  0470               	iorwf	___lldiv@divisor,w
  7764  0647  1903               	skipnz
  7765  0648  2E84               	goto	i1l2677
  7766  0649  01FD               	clrf	___lldiv@counter
  7767  064A  0AFD               	incf	___lldiv@counter,f
  7768  064B                     i1l2663:	
  7769  064B  1BF3               	btfsc	___lldiv@divisor+3,7
  7770  064C  2E59               	goto	i1l2665
  7771  064D  3001               	movlw	1
  7772  064E                     u211_25:	
  7773  064E  35F0               	lslf	___lldiv@divisor,f
  7774  064F  0DF1               	rlf	___lldiv@divisor+1,f
  7775  0650  0DF2               	rlf	___lldiv@divisor+2,f
  7776  0651  0DF3               	rlf	___lldiv@divisor+3,f
  7777  0652  0B89               	decfsz	9,f
  7778  0653  2E4E               	goto	u211_25
  7779  0654  3001               	movlw	1
  7780  0655  00F8               	movwf	??___lldiv
  7781  0656  0878               	movf	??___lldiv,w
  7782  0657  07FD               	addwf	___lldiv@counter,f
  7783  0658  2E4B               	goto	i1l2663
  7784  0659                     i1l2665:	
  7785  0659  3001               	movlw	1
  7786  065A                     u213_25:	
  7787  065A  35F9               	lslf	___lldiv@quotient,f
  7788  065B  0DFA               	rlf	___lldiv@quotient+1,f
  7789  065C  0DFB               	rlf	___lldiv@quotient+2,f
  7790  065D  0DFC               	rlf	___lldiv@quotient+3,f
  7791  065E  0B89               	decfsz	9,f
  7792  065F  2E5A               	goto	u213_25
  7793  0660  0873               	movf	___lldiv@divisor+3,w
  7794  0661  0277               	subwf	___lldiv@dividend+3,w
  7795  0662  1D03               	skipz
  7796  0663  2E6E               	goto	u214_25
  7797  0664  0872               	movf	___lldiv@divisor+2,w
  7798  0665  0276               	subwf	___lldiv@dividend+2,w
  7799  0666  1D03               	skipz
  7800  0667  2E6E               	goto	u214_25
  7801  0668  0871               	movf	___lldiv@divisor+1,w
  7802  0669  0275               	subwf	___lldiv@dividend+1,w
  7803  066A  1D03               	skipz
  7804  066B  2E6E               	goto	u214_25
  7805  066C  0870               	movf	___lldiv@divisor,w
  7806  066D  0274               	subwf	___lldiv@dividend,w
  7807  066E                     u214_25:	
  7808  066E  1C03               	skipc
  7809  066F  2E79               	goto	i1l2673
  7810  0670  0870               	movf	___lldiv@divisor,w
  7811  0671  02F4               	subwf	___lldiv@dividend,f
  7812  0672  0871               	movf	___lldiv@divisor+1,w
  7813  0673  3BF5               	subwfb	___lldiv@dividend+1,f
  7814  0674  0872               	movf	___lldiv@divisor+2,w
  7815  0675  3BF6               	subwfb	___lldiv@dividend+2,f
  7816  0676  0873               	movf	___lldiv@divisor+3,w
  7817  0677  3BF7               	subwfb	___lldiv@dividend+3,f
  7818  0678  1479               	bsf	___lldiv@quotient,0
  7819  0679                     i1l2673:	
  7820  0679  3001               	movlw	1
  7821  067A                     u215_25:	
  7822  067A  36F3               	lsrf	___lldiv@divisor+3,f
  7823  067B  0CF2               	rrf	___lldiv@divisor+2,f
  7824  067C  0CF1               	rrf	___lldiv@divisor+1,f
  7825  067D  0CF0               	rrf	___lldiv@divisor,f
  7826  067E  0B89               	decfsz	9,f
  7827  067F  2E7A               	goto	u215_25
  7828  0680  3001               	movlw	1
  7829  0681  02FD               	subwf	___lldiv@counter,f
  7830  0682  1D03               	btfss	3,2
  7831  0683  2E59               	goto	i1l2665
  7832  0684                     i1l2677:	
  7833  0684  087C               	movf	___lldiv@quotient+3,w
  7834  0685  00F3               	movwf	?___lldiv+3
  7835  0686  087B               	movf	___lldiv@quotient+2,w
  7836  0687  00F2               	movwf	?___lldiv+2
  7837  0688  087A               	movf	___lldiv@quotient+1,w
  7838  0689  00F1               	movwf	?___lldiv+1
  7839  068A  0879               	movf	___lldiv@quotient,w
  7840  068B  00F0               	movwf	?___lldiv
  7841  068C  0008               	return
  7842  068D                     __end_of___lldiv:	
  7843                           
  7844                           	psect	text39
  7845  0D74                     __ptext39:	
  7846 ;; *************** function _Timer1_Count200us *****************
  7847 ;; Defined at:
  7848 ;;		line 62 in file "Timer1.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7862 ;;      Params:         0       0       0       0       0       0
  7863 ;;      Locals:         0       0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0
  7865 ;;      Totals:         0       0       0       0       0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_Handler
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function _Timer1_Count200us
  7877  0D74                     _Timer1_Count200us:	
  7878                           
  7879                           ;Timer1.c: 64: tcnt.Delta_t++;
  7880                           
  7881                           ;incstack = 0
  7882                           ; Regs used in _Timer1_Count200us: [wreg]
  7883  0D74  3001               	movlw	1
  7884  0D75  0020               	movlb	0	; select bank0
  7885  0D76  07AE               	addwf	_tcnt,f
  7886  0D77  3000               	movlw	0
  7887  0D78  3DAF               	addwfc	_tcnt+1,f
  7888  0D79  3000               	movlw	0
  7889  0D7A  3DB0               	addwfc	_tcnt+2,f
  7890  0D7B  3000               	movlw	0
  7891  0D7C  3DB1               	addwfc	_tcnt+3,f
  7892  0D7D  0008               	return
  7893  0D7E                     __end_of_Timer1_Count200us:	
  7894                           
  7895                           	psect	text40
  7896  0D53                     __ptext40:	
  7897 ;; *************** function _I2C_CommonInterrupt *****************
  7898 ;; Defined at:
  7899 ;;		line 58 in file "I2C_Common.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;		None
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;		None
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7913 ;;      Params:         0       0       0       0       0       0
  7914 ;;      Locals:         0       0       0       0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0
  7916 ;;      Totals:         0       0       0       0       0       0
  7917 ;;Total ram usage:        0 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; Hardware stack levels required when called:    1
  7920 ;; This function calls:
  7921 ;;		_I2C1_Interrupt
  7922 ;;		_I2C2_Interrupt
  7923 ;; This function is called by:
  7924 ;;		_Handler
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           
  7929                           ;psect for function _I2C_CommonInterrupt
  7930  0D53                     _I2C_CommonInterrupt:	
  7931                           
  7932                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7933                           
  7934                           ;incstack = 0
  7935                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7936  0D53  3185  25E7  318D   	fcall	_I2C1_Interrupt
  7937                           
  7938                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7939  0D56  3185  2593         	fcall	_I2C2_Interrupt
  7940  0D58  0008               	return
  7941  0D59                     __end_of_I2C_CommonInterrupt:	
  7942                           
  7943                           	psect	text41
  7944  0593                     __ptext41:	
  7945 ;; *************** function _I2C2_Interrupt *****************
  7946 ;; Defined at:
  7947 ;;		line 152 in file "I2C2.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;		None
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;		None
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7961 ;;      Params:         0       0       0       0       0       0
  7962 ;;      Locals:         0       0       0       0       0       0
  7963 ;;      Temps:          1       0       0       0       0       0
  7964 ;;      Totals:         1       0       0       0       0       0
  7965 ;;Total ram usage:        1 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; This function calls:
  7968 ;;		Nothing
  7969 ;; This function is called by:
  7970 ;;		_I2C_CommonInterrupt
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           
  7975                           ;psect for function _I2C2_Interrupt
  7976  0593                     _I2C2_Interrupt:	
  7977                           
  7978                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7979                           
  7980                           ;incstack = 0
  7981                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7982  0593  0020               	movlb	0	; select bank0
  7983  0594  1C14               	btfss	20,0	;volatile
  7984  0595  2DDF               	goto	i1l2585
  7985  0596  0021               	movlb	1	; select bank1
  7986  0597  1C14               	btfss	20,0	;volatile
  7987  0598  2DDF               	goto	i1l2585
  7988                           
  7989                           ;I2C2.c: 155: {
  7990                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7991  0599  0024               	movlb	4	; select bank4
  7992  059A  1E9C               	btfss	28,5	;volatile
  7993  059B  2DB6               	goto	i1l294
  7994                           
  7995                           ;I2C2.c: 157: {
  7996                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7997  059C  1D1C               	btfss	28,2	;volatile
  7998  059D  2DA9               	goto	i1l2561
  7999                           
  8000                           ;I2C2.c: 159: {
  8001                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8002  059E  1B1E               	btfsc	30,6	;volatile
  8003  059F  2DDD               	goto	i1l2583
  8004  05A0                     i1l2553:	
  8005                           ;I2C2.c: 161: {
  8006                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8007                           
  8008  05A0  081C               	movf	28,w	;volatile
  8009  05A1  3901               	andlw	1
  8010  05A2  00F0               	movwf	??_I2C2_Interrupt
  8011  05A3  0E1D               	swapf	29,w	;volatile
  8012  05A4  3901               	andlw	1
  8013  05A5  0470               	iorwf	??_I2C2_Interrupt,w
  8014  05A6  1D03               	btfss	3,2
  8015  05A7  2DA0               	goto	i1l2553
  8016  05A8  2DC9               	goto	L4
  8017  05A9                     i1l2561:	
  8018                           ;I2C2.c: 166: }
  8019                           ;I2C2.c: 167: }
  8020                           
  8021                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8022                           
  8023                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8024                           
  8025                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8026                           
  8027                           
  8028                           ;I2C2.c: 168: else
  8029                           ;I2C2.c: 169: {
  8030                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8031  05A9  0819               	movf	25,w	;volatile
  8032  05AA  00F0               	movwf	??_I2C2_Interrupt
  8033  05AB  0021               	movlb	1	; select bank1
  8034  05AC  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8035  05AD  0086               	movwf	6
  8036  05AE  0187               	clrf	7
  8037  05AF  0870               	movf	??_I2C2_Interrupt,w
  8038  05B0  0081               	movwf	1
  8039                           
  8040                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8041  05B1  3001               	movlw	1
  8042  05B2  00F0               	movwf	??_I2C2_Interrupt
  8043  05B3  0870               	movf	??_I2C2_Interrupt,w
  8044  05B4  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8045  05B5  2DDB               	goto	i1l2581
  8046  05B6                     i1l294:	
  8047                           ;I2C2.c: 173: }
  8048                           ;I2C2.c: 174: }
  8049                           
  8050                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8051                           
  8052                           
  8053                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8054  05B6  1A9C               	btfsc	28,5	;volatile
  8055  05B7  2DDD               	goto	i1l2583
  8056                           
  8057                           ;I2C2.c: 176: {
  8058                           ;I2C2.c: 177: SSP2BUF;
  8059  05B8  0819               	movf	25,w	;volatile
  8060                           
  8061                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8062  05B9  1D1C               	btfss	28,2	;volatile
  8063  05BA  2DD6               	goto	i1l2579
  8064                           
  8065                           ;I2C2.c: 180: {
  8066                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8067  05BB  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8068  05BC  00F0               	movwf	??_I2C2_Interrupt
  8069  05BD  0870               	movf	??_I2C2_Interrupt,w
  8070  05BE  0021               	movlb	1	; select bank1
  8071  05BF  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8072  05C0                     i1l2573:	
  8073                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8074                           
  8075  05C0  0024               	movlb	4	; select bank4
  8076  05C1  081C               	movf	28,w	;volatile
  8077  05C2  3901               	andlw	1
  8078  05C3  00F0               	movwf	??_I2C2_Interrupt
  8079  05C4  0E1D               	swapf	29,w	;volatile
  8080  05C5  3901               	andlw	1
  8081  05C6  0470               	iorwf	??_I2C2_Interrupt,w
  8082  05C7  1D03               	btfss	3,2
  8083  05C8  2DC0               	goto	i1l2573
  8084  05C9                     L4:	
  8085                           
  8086                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8087  05C9  0021               	movlb	1	; select bank1
  8088  05CA  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8089  05CB  0086               	movwf	6
  8090  05CC  0187               	clrf	7
  8091  05CD  0801               	movf	1,w
  8092  05CE  0024               	movlb	4	; select bank4
  8093  05CF  0099               	movwf	25	;volatile
  8094                           
  8095                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8096  05D0  3001               	movlw	1
  8097  05D1  00F0               	movwf	??_I2C2_Interrupt
  8098  05D2  0870               	movf	??_I2C2_Interrupt,w
  8099  05D3  0021               	movlb	1	; select bank1
  8100  05D4  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8101                           
  8102                           ;I2C2.c: 186: }
  8103  05D5  2DDB               	goto	i1l2581
  8104  05D6                     i1l2579:	
  8105                           
  8106                           ;I2C2.c: 187: else
  8107                           ;I2C2.c: 188: {
  8108                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8109  05D6  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8110  05D7  00F0               	movwf	??_I2C2_Interrupt
  8111  05D8  0870               	movf	??_I2C2_Interrupt,w
  8112  05D9  0021               	movlb	1	; select bank1
  8113  05DA  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8114  05DB                     i1l2581:	
  8115                           
  8116                           ;I2C2.c: 190: }
  8117                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8118  05DB  0024               	movlb	4	; select bank4
  8119  05DC  161D               	bsf	29,4	;volatile
  8120  05DD                     i1l2583:	
  8121                           
  8122                           ;I2C2.c: 192: }
  8123                           ;I2C2.c: 193: SSP2IF = 0;
  8124  05DD  0020               	movlb	0	; select bank0
  8125  05DE  1014               	bcf	20,0	;volatile
  8126  05DF                     i1l2585:	
  8127                           
  8128                           ;I2C2.c: 194: }
  8129                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8130  05DF  0021               	movlb	1	; select bank1
  8131  05E0  1C94               	btfss	20,1	;volatile
  8132  05E1  0008               	return
  8133  05E2  0020               	movlb	0	; select bank0
  8134  05E3  1C94               	btfss	20,1	;volatile
  8135  05E4  0008               	return
  8136                           
  8137                           ;I2C2.c: 197: BCL2IF = 0;
  8138  05E5  1094               	bcf	20,1	;volatile
  8139  05E6  0008               	return
  8140  05E7                     __end_of_I2C2_Interrupt:	
  8141                           
  8142                           	psect	text42
  8143  05E7                     __ptext42:	
  8144 ;; *************** function _I2C1_Interrupt *****************
  8145 ;; Defined at:
  8146 ;;		line 152 in file "I2C1.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      void 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8160 ;;      Params:         0       0       0       0       0       0
  8161 ;;      Locals:         0       0       0       0       0       0
  8162 ;;      Temps:          1       0       0       0       0       0
  8163 ;;      Totals:         1       0       0       0       0       0
  8164 ;;Total ram usage:        1 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_I2C_CommonInterrupt
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           
  8174                           ;psect for function _I2C1_Interrupt
  8175  05E7                     _I2C1_Interrupt:	
  8176                           
  8177                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8181  05E7  0020               	movlb	0	; select bank0
  8182  05E8  1D91               	btfss	17,3	;volatile
  8183  05E9  2E33               	goto	i1l2535
  8184  05EA  0021               	movlb	1	; select bank1
  8185  05EB  1D91               	btfss	17,3	;volatile
  8186  05EC  2E33               	goto	i1l2535
  8187                           
  8188                           ;I2C1.c: 155: {
  8189                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  8190  05ED  0024               	movlb	4	; select bank4
  8191  05EE  1E94               	btfss	20,5	;volatile
  8192  05EF  2E0A               	goto	i1l157
  8193                           
  8194                           ;I2C1.c: 157: {
  8195                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  8196  05F0  1D14               	btfss	20,2	;volatile
  8197  05F1  2DFD               	goto	i1l2511
  8198                           
  8199                           ;I2C1.c: 159: {
  8200                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  8201  05F2  1B16               	btfsc	22,6	;volatile
  8202  05F3  2E31               	goto	i1l2533
  8203  05F4                     i1l2503:	
  8204                           ;I2C1.c: 161: {
  8205                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8206                           
  8207  05F4  0814               	movf	20,w	;volatile
  8208  05F5  3901               	andlw	1
  8209  05F6  00F0               	movwf	??_I2C1_Interrupt
  8210  05F7  0E15               	swapf	21,w	;volatile
  8211  05F8  3901               	andlw	1
  8212  05F9  0470               	iorwf	??_I2C1_Interrupt,w
  8213  05FA  1D03               	btfss	3,2
  8214  05FB  2DF4               	goto	i1l2503
  8215  05FC  2E1D               	goto	L5
  8216  05FD                     i1l2511:	
  8217                           ;I2C1.c: 166: }
  8218                           ;I2C1.c: 167: }
  8219                           
  8220                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  8221                           
  8222                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  8223                           
  8224                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  8225                           
  8226                           
  8227                           ;I2C1.c: 168: else
  8228                           ;I2C1.c: 169: {
  8229                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  8230  05FD  0811               	movf	17,w	;volatile
  8231  05FE  00F0               	movwf	??_I2C1_Interrupt
  8232  05FF  0021               	movlb	1	; select bank1
  8233  0600  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  8234  0601  0086               	movwf	6
  8235  0602  0187               	clrf	7
  8236  0603  0870               	movf	??_I2C1_Interrupt,w
  8237  0604  0081               	movwf	1
  8238                           
  8239                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  8240  0605  3001               	movlw	1
  8241  0606  00F0               	movwf	??_I2C1_Interrupt
  8242  0607  0870               	movf	??_I2C1_Interrupt,w
  8243  0608  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  8244  0609  2E2F               	goto	i1l2531
  8245  060A                     i1l157:	
  8246                           ;I2C1.c: 173: }
  8247                           ;I2C1.c: 174: }
  8248                           
  8249                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  8250                           
  8251                           
  8252                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  8253  060A  1A94               	btfsc	20,5	;volatile
  8254  060B  2E31               	goto	i1l2533
  8255                           
  8256                           ;I2C1.c: 176: {
  8257                           ;I2C1.c: 177: SSP1BUF;
  8258  060C  0811               	movf	17,w	;volatile
  8259                           
  8260                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  8261  060D  1D14               	btfss	20,2	;volatile
  8262  060E  2E2A               	goto	i1l2529
  8263                           
  8264                           ;I2C1.c: 180: {
  8265                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  8266  060F  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  8267  0610  00F0               	movwf	??_I2C1_Interrupt
  8268  0611  0870               	movf	??_I2C1_Interrupt,w
  8269  0612  0021               	movlb	1	; select bank1
  8270  0613  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  8271  0614                     i1l2523:	
  8272                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8273                           
  8274  0614  0024               	movlb	4	; select bank4
  8275  0615  0814               	movf	20,w	;volatile
  8276  0616  3901               	andlw	1
  8277  0617  00F0               	movwf	??_I2C1_Interrupt
  8278  0618  0E15               	swapf	21,w	;volatile
  8279  0619  3901               	andlw	1
  8280  061A  0470               	iorwf	??_I2C1_Interrupt,w
  8281  061B  1D03               	btfss	3,2
  8282  061C  2E14               	goto	i1l2523
  8283  061D                     L5:	
  8284                           
  8285                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  8286  061D  0021               	movlb	1	; select bank1
  8287  061E  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  8288  061F  0086               	movwf	6
  8289  0620  0187               	clrf	7
  8290  0621  0801               	movf	1,w
  8291  0622  0024               	movlb	4	; select bank4
  8292  0623  0091               	movwf	17	;volatile
  8293                           
  8294                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  8295  0624  3001               	movlw	1
  8296  0625  00F0               	movwf	??_I2C1_Interrupt
  8297  0626  0870               	movf	??_I2C1_Interrupt,w
  8298  0627  0021               	movlb	1	; select bank1
  8299  0628  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  8300                           
  8301                           ;I2C1.c: 186: }
  8302  0629  2E2F               	goto	i1l2531
  8303  062A                     i1l2529:	
  8304                           
  8305                           ;I2C1.c: 187: else
  8306                           ;I2C1.c: 188: {
  8307                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  8308  062A  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  8309  062B  00F0               	movwf	??_I2C1_Interrupt
  8310  062C  0870               	movf	??_I2C1_Interrupt,w
  8311  062D  0021               	movlb	1	; select bank1
  8312  062E  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  8313  062F                     i1l2531:	
  8314                           
  8315                           ;I2C1.c: 190: }
  8316                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  8317  062F  0024               	movlb	4	; select bank4
  8318  0630  1615               	bsf	21,4	;volatile
  8319  0631                     i1l2533:	
  8320                           
  8321                           ;I2C1.c: 192: }
  8322                           ;I2C1.c: 193: SSP1IF = 0;
  8323  0631  0020               	movlb	0	; select bank0
  8324  0632  1191               	bcf	17,3	;volatile
  8325  0633                     i1l2535:	
  8326                           
  8327                           ;I2C1.c: 194: }
  8328                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  8329  0633  0021               	movlb	1	; select bank1
  8330  0634  1D92               	btfss	18,3	;volatile
  8331  0635  0008               	return
  8332  0636  0020               	movlb	0	; select bank0
  8333  0637  1D92               	btfss	18,3	;volatile
  8334  0638  0008               	return
  8335                           
  8336                           ;I2C1.c: 197: BCL1IF = 0;
  8337  0639  1192               	bcf	18,3	;volatile
  8338  063A  0008               	return
  8339  063B                     __end_of_I2C1_Interrupt:	
  8340                           
  8341                           	psect	text43
  8342  0F01                     __ptext43:	
  8343 ;; *************** function _CPSx_Read *****************
  8344 ;; Defined at:
  8345 ;;		line 29 in file "mTouch.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;		None
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8359 ;;      Params:         0       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0
  8361 ;;      Temps:          1       0       0       0       0       0
  8362 ;;      Totals:         1       0       0       0       0       0
  8363 ;;Total ram usage:        1 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_Handler
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function _CPSx_Read
  8374  0F01                     _CPSx_Read:	
  8375                           
  8376                           ;mTouch.c: 31: static uint8_t channel=0;
  8377                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8381  0F01  0020               	movlb	0	; select bank0
  8382  0F02  0843               	movf	CPSx_Read@channel,w
  8383  0F03  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  8384  0F04  0086               	movwf	6
  8385  0F05  0187               	clrf	7
  8386  0F06  0801               	movf	1,w
  8387  0F07  00F0               	movwf	??_CPSx_Read
  8388  0F08  0843               	movf	CPSx_Read@channel,w
  8389  0F09  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  8390  0F0A  0086               	movwf	6
  8391  0F0B  0187               	clrf	7
  8392  0F0C  0870               	movf	??_CPSx_Read,w
  8393  0F0D  0081               	movwf	1
  8394                           
  8395                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  8396  0F0E  307F               	movlw	127
  8397  0F0F  00F0               	movwf	??_CPSx_Read
  8398  0F10  0870               	movf	??_CPSx_Read,w
  8399  0F11  059E               	andwf	30,f	;volatile
  8400                           
  8401                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  8402  0F12  0815               	movf	21,w	;volatile
  8403  0F13  00F0               	movwf	??_CPSx_Read
  8404  0F14  0843               	movf	CPSx_Read@channel,w
  8405  0F15  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  8406  0F16  0086               	movwf	6
  8407  0F17  0187               	clrf	7
  8408  0F18  0870               	movf	??_CPSx_Read,w
  8409  0F19  0081               	movwf	1
  8410                           
  8411                           ;mTouch.c: 37: TMR0 = 0x00;
  8412  0F1A  0195               	clrf	21	;volatile
  8413                           
  8414                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  8415  0F1B  179E               	bsf	30,7	;volatile
  8416                           
  8417                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  8418  0F1C  0843               	movf	CPSx_Read@channel,w
  8419  0F1D  0AC3               	incf	CPSx_Read@channel,f
  8420  0F1E  00F0               	movwf	??_CPSx_Read
  8421  0F1F  3003               	movlw	3
  8422  0F20  0270               	subwf	??_CPSx_Read,w
  8423  0F21  1803               	btfsc	3,0
  8424  0F22  01C3               	clrf	CPSx_Read@channel
  8425                           
  8426                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  8427  0F23  0843               	movf	CPSx_Read@channel,w
  8428  0F24  009F               	movwf	31	;volatile
  8429  0F25  0008               	return
  8430  0F26                     __end_of_CPSx_Read:	
  8431                           
  8432                           	psect	text44
  8433  0E54                     __ptext44:	
  8434 ;; *************** function _Buzzer_Handler *****************
  8435 ;; Defined at:
  8436 ;;		line 44 in file "Buzzer.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0, pclath, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8450 ;;      Params:         0       0       0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0
  8453 ;;      Totals:         0       0       0       0       0       0
  8454 ;;Total ram usage:        0 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    1
  8457 ;; This function calls:
  8458 ;;		_Buzzer_SetDuty
  8459 ;; This function is called by:
  8460 ;;		_Handler
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           
  8465                           ;psect for function _Buzzer_Handler
  8466  0E54                     _Buzzer_Handler:	
  8467                           
  8468                           ;Buzzer.c: 46: if(count>0)
  8469                           
  8470                           ;incstack = 0
  8471                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  8472  0E54  0020               	movlb	0	; select bank0
  8473  0E55  0841               	movf	_count,w
  8474  0E56  0442               	iorwf	_count+1,w
  8475  0E57  1903               	btfsc	3,2
  8476  0E58  2E64               	goto	i1l2755
  8477                           
  8478                           ;Buzzer.c: 47: {
  8479                           ;Buzzer.c: 48: count--;
  8480  0E59  3001               	movlw	1
  8481  0E5A  02C1               	subwf	_count,f
  8482  0E5B  3000               	movlw	0
  8483  0E5C  3BC2               	subwfb	_count+1,f
  8484                           
  8485                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8486  0E5D  30FF               	movlw	255
  8487  0E5E  00F0               	movwf	Buzzer_SetDuty@duty
  8488  0E5F  3001               	movlw	1
  8489  0E60  00F1               	movwf	Buzzer_SetDuty@duty+1
  8490  0E61  318E  266A         	fcall	_Buzzer_SetDuty
  8491                           
  8492                           ;Buzzer.c: 50: }
  8493  0E63  0008               	return
  8494  0E64                     i1l2755:	
  8495                           
  8496                           ;Buzzer.c: 51: else
  8497                           ;Buzzer.c: 52: {
  8498                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8499  0E64  3000               	movlw	0
  8500  0E65  00F0               	movwf	Buzzer_SetDuty@duty
  8501  0E66  00F1               	movwf	Buzzer_SetDuty@duty+1
  8502  0E67  318E  266A         	fcall	_Buzzer_SetDuty
  8503  0E69  0008               	return
  8504  0E6A                     __end_of_Buzzer_Handler:	
  8505                           
  8506                           	psect	text45
  8507  0E6A                     __ptext45:	
  8508 ;; *************** function _Buzzer_SetDuty *****************
  8509 ;; Defined at:
  8510 ;;		line 31 in file "Buzzer.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  duty            2    0[COMMON] unsigned int 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8524 ;;      Params:         2       0       0       0       0       0
  8525 ;;      Locals:         1       0       0       0       0       0
  8526 ;;      Temps:          2       0       0       0       0       0
  8527 ;;      Totals:         5       0       0       0       0       0
  8528 ;;Total ram usage:        5 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_Buzzer_Handler
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           
  8538                           ;psect for function _Buzzer_SetDuty
  8539  0E6A                     _Buzzer_SetDuty:	
  8540                           
  8541                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8542                           
  8543                           ;incstack = 0
  8544                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8545  0E6A  0025               	movlb	5	; select bank5
  8546  0E6B  081A               	movf	26,w	;volatile
  8547  0E6C  39CF               	andlw	207
  8548  0E6D  00F2               	movwf	??_Buzzer_SetDuty
  8549  0E6E  0872               	movf	??_Buzzer_SetDuty,w
  8550  0E6F  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8551                           
  8552                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8553  0E70  0871               	movf	Buzzer_SetDuty@duty+1,w
  8554  0E71  00F3               	movwf	??_Buzzer_SetDuty+1
  8555  0E72  0870               	movf	Buzzer_SetDuty@duty,w
  8556  0E73  00F2               	movwf	??_Buzzer_SetDuty
  8557  0E74  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8558  0E75  0CF2               	rrf	??_Buzzer_SetDuty,f
  8559  0E76  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8560  0E77  0CF2               	rrf	??_Buzzer_SetDuty,f
  8561  0E78  0872               	movf	??_Buzzer_SetDuty,w
  8562  0E79  0098               	movwf	24	;volatile
  8563                           
  8564                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8565  0E7A  0870               	movf	Buzzer_SetDuty@duty,w
  8566  0E7B  3903               	andlw	3
  8567  0E7C  00F2               	movwf	??_Buzzer_SetDuty
  8568  0E7D  3003               	movlw	3
  8569  0E7E                     u180_25:	
  8570  0E7E  35F2               	lslf	??_Buzzer_SetDuty,f
  8571  0E7F  3EFF               	addlw	-1
  8572  0E80  1D03               	skipz
  8573  0E81  2E7E               	goto	u180_25
  8574  0E82  3572               	lslf	??_Buzzer_SetDuty,w
  8575  0E83  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8576  0E84  009A               	movwf	26	;volatile
  8577  0E85  0008               	return
  8578  0E86                     __end_of_Buzzer_SetDuty:	
  8579  007E                     btemp	set	126	;btemp
  8580  007E                     int$flags	set	126
  8581  007E                     wtemp0	set	126


Data Sizes:
    Strings     312
    Constant    40
    Data        90
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      75
    BANK1            80      0      68
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4490
                                             35 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                        _Timer6_Init
                        _mTouch_Init
                        _mTouch_Read
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    20      8    1755
                                             15 BANK0     20    12      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     196
                                              3 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2      86
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2275
                                             17 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1453
                                              9 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     445
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     822
                                              6 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     613
                                              0 BANK0      1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                   _Timer4_CheckFlag
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0     418
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _Timer6_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_CheckFlag
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 12:24:20 2017

                        _LCD_CursorHome 0DEC                             __CFG_CP$OFF 0000  
                                    l74 0721                                      l91 0424  
                                    l78 0752                          I2C2_Transmit@i 004D  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 004A  
                                   l100 044D                                     l211 06DD  
                                   l109 046A                                     l215 070E  
                                   l228 02F5                                     l237 031E  
                                   l246 033B                                     l338 0F9D  
                                   l713 02D3                                     l838 0E8F  
                                   _GIE 005F                                     _PR2 001B  
                                   _PR4 0416                            __CFG_CPD$OFF 0000  
                                   _PR6 041D                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 0E1D  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 007E  
                                  l2303 0736                                    l2305 0738  
                                  l2401 0703                                    l2315 0747  
                                  l2323 0407                                    l2411 02E6  
                                  l2405 0705                                    l2325 0415  
                                  l2421 0309                                    l3109 06CF  
                                  l3133 021F                                    l3125 01F0  
                                  l2319 0749                                    l2335 0438  
                                  l2431 0301                                    l3119 01DF  
                                  l2361 0487                                    l2345 0430  
                                  l2433 0305                                    l2409 02D8  
                                  l3161 0289                                    l3137 0225  
                                  l2363 048C                                    l2347 0434  
                                  l2435 032C                                    l2611 0FC9  
                                  l2603 0FA3                                    l3163 028D  
                                  l3155 026A                                    l3139 023A  
                                  l2349 045B                                    l2445 0341  
                                  l2453 0360                                    l2605 0FB0  
                                  l3173 029E                                    l3149 024B  
                                  l3261 04DC                                    l3253 04CB  
                                  l2391 06F4                                    l2383 06E7  
                                  l2359 0470                                    l2367 048F  
                                  l2447 0358                                    l2455 0369  
                                  l2703 0FFB                                    l3167 029A  
                                  l3159 0286                                    l3175 01C3  
                                  l3263 04F9                                    l3271 0514  
                                  l3247 04BA                                    l2297 072B  
                                  l2369 0498                                    l2449 035D  
                                  l2609 0FC1                                    l3097 0695  
                                  l2721 07F1                                    l3265 0502  
                                  l2715 07D9                                    l3267 050B  
                                  l3259 04D8                                    l2389 06F2  
                                  l2717 07E5                                    l2725 07FA  
                                  l2645 0E89                                    l2639 0DEA  
                                  l2593 0F79                                    l2595 0F86  
                                  l2691 0FD4                                    l2693 0FE0  
                                  l2599 0F94                                    l2699 0FF2  
                                  STR_1 009B                                    STR_2 0086  
                                  STR_3 00BD                                    STR_4 0091  
                                  STR_5 01A5                                    STR_6 0155  
                                  STR_7 01AA                                    STR_8 015B  
                                  STR_9 01AF                                    u2205 0FE1  
                                  u2215 0FEB                                    u2225 0FF3  
                                  u2075 0E90                                    u2085 0E95  
                                  u2255 07DC                                    u2185 0FD7  
                                  u2275 07EB                                    u2285 07F2  
                                  u2715 0260                                    u2655 06B5  
                                  u2735 0279                                    u1795 0763  
                                  _PEIE 005E                                    u2937 052D  
                                  u2947 0546                                    u2957 055B  
                                  u2967 0570                                    u2977 0E06  
                                  u2987 0DF6                                    u2997 075C  
                 Buzzer_MiliSecond@time 0048                                    _TMR0 0015  
                                  _TMR1 0016                                    _TMR2 001A  
                                  _TMR4 0415                                    _TMR6 041C  
                                  _WPUB 020D                         ??_I2C1_Transmit 004A  
                          __CFG_WRT$OFF 0000                                    _cnts 0020  
                                  _main 049B                                    _mode 003D  
                      __end_of_I2C_Init 0FA0                                    _tcnt 002E  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                       ??_I2C2_Transmit 004A                        ??_I2C1_Interrupt 0070  
                                  start 0031                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0031                  __end_of_LCD_CursorHome 0DFC  
                         _LCD_WriteData 0759                           __CFG_MCLRE$ON 0000  
                      ??_I2C2_Interrupt 0070                      __size_of_CPSx_Read 0025  
              __end_of_LCD_DisplayClear 0E0C                   __size_of_I2C_Transmit 002B  
                      __end_of_LCD_Init 0593                           __CFG_PLLEN$ON 0000  
                                 ?_main 0070                                   STR_10 0161  
                                 STR_11 01B4                                   STR_20 0187  
                                 STR_12 0167                                   STR_21 0182  
                                 STR_13 01B9                                   STR_30 00C5  
                                 STR_22 0191                                   STR_14 016D  
                                 STR_31 010B                                   STR_23 0143  
                                 STR_15 0196                                   STR_32 00B5  
                                 STR_24 0119                                   STR_40 0131  
                                 STR_16 0149                                   STR_33 00AD  
                                 STR_25 0125                                   STR_41 0137  
                                 STR_17 019B                           __CFG_WDTE$OFF 0000  
                                 STR_34 00A5                                   STR_26 013D  
                                 STR_42 011F                                   STR_18 014F  
                                 STR_27 00F6                                   STR_43 00DA  
                                 STR_35 0173                                   STR_19 01A0  
                                 STR_28 00EF                                   STR_44 0104  
                                 STR_36 0178                                   STR_29 00FD  
                                 STR_45 00E1                                   STR_37 018C  
                                 STR_46 00E8                                   STR_38 017D  
                                 STR_47 0112                                   STR_39 012B  
                                 STR_48 00CC                                   STR_49 00D3  
                       __end_of___lldiv 068D                                   _T1CON 0018  
                                 _T2CON 001C                                   _LATA3 0863  
                                 _LATA4 0864                                   _LATA6 0866  
                                 _T4CON 0417                                   _T6CON 041E  
                       __end_of___lwdiv 1000             __size_of_Timer1_ClearRecord 0028  
                                 i1l157 060A                         __end_of___lwmod 07FF  
                                 i1l294 05B6                                   i1l468 0389  
                                 i1l660 0E12                                   i1l661 0E17  
                                 i1l656 002A                                   _PORTA 000C  
                                 _PORTB 000D                                   _TRISA 008C  
                                 _TRISB 008D                       I2C2_Transmit@size 0049  
                         __CFG_PWRTE$ON 0000                          __CFG_FCMEN$OFF 0000  
                       __end_of_dpowers 0086                                   _count 0041  
                       __end_of_isdigit 0DEC                                   _putch 0D6B  
                         ??_Buzzer_Init 0048                   __end_of_Timer1_GetCPM 0D5F  
           __size_of_Timer1_GetCountSum 000A                                   status 0003  
                                 wtemp0 007E                       _Buzzer_MiliSecond 0D88  
                          _I2C_Transmit 0FA0                          ?_LCD_WriteData 0070  
                    ?_Buzzer_MiliSecond 0048                        ??_DAC_Initialize 0058  
                       ?_LCD_CursorHome 0070                         __initialization 0033  
                          __end_of_main 0524                     ??_Buzzer_MiliSecond 004A  
                                ??_main 006A                        CPSx_Read@channel 0043  
                           ?_Basic_Init 0070                                  _BCL1IE 0493  
                                _BCL1IF 0093                                  _BCL2IE 04A1  
                                _BCL2IF 00A1                    __size_of_mTouch_Init 0013  
                  __size_of_mTouch_Read 0044                                  _CCPR2L 0298  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                     __end_of_CPSx_Read 0F26                                  i1l2001 0DA6  
                                i1l2503 05F4                                  i1l2511 05FD  
                                i1l2531 062F                                  i1l2523 0614  
                                i1l2533 0631                                  i1l2535 0633  
                                i1l2529 062A                                  i1l2553 05A0  
                                i1l2561 05A9                                  i1l3281 001B  
                                i1l2581 05DB                                  i1l2573 05C0  
                                i1l3277 0012                                  i1l2583 05DD  
                                i1l2663 064B                                  i1l2585 05DF  
                                i1l2673 0679                                  i1l2665 0659  
                                i1l2755 0E64                                  i1l2579 05D6  
                    I2C2_Transmit@i_316 004E                                  u211_25 064E  
                                i1l2677 0684                                  i1l1969 0D9B  
                                i1l2963 0379                                  i1l2973 03C0  
                       _mTouch_Interval 0034                                  u213_25 065A  
                                i1l2997 0402                                  u214_25 066E  
                                u215_25 067A               __end_of_Buzzer_MiliSecond 0D92  
                                u180_25 0E7E                                  u258_25 037F  
                                _OSCCON 0099                      I2C2_Transmit@pData 0048  
                                _TMR1IE 0488                                  _TMR1IF 0088  
                             ??_Handler 0047                                  _TMR4IE 0499  
                                _TMR4IF 0099                                  _TMR6IE 049B  
                                _TMR1ON 00C0                                  _TMR6IF 009B  
                                _SSP1IE 048B                                  _SSP1IF 008B  
                                _SSP2IE 04A0                                  _SSP2IF 00A0  
              _mTouch_IntervalDecrement 0E0C                         _mTouch_PortInit 0DC2  
                         ??_Timer1_Init 0048                           ??_Timer4_Init 0048  
                   __end_of_Buzzer_Init 0F4E                           ??_Timer6_Init 0048  
                                ___wmul 0E86                               ??___lldiv 0078  
                             ??___lwdiv 004C                               ??___lwmod 0054  
                                _printf 01BE                       ?_Timer4_CheckFlag 0070  
                      I2C_Transmit@I2Cx 0056                               ??_isdigit 0048  
                             ?_I2C_Init 004D                      ??_Timer4_CheckFlag 0070  
                                putch@c 004B                        I2C_Transmit@size 0052  
               __end_of__initialization 005A                               ?_LCD_Init 0070  
                       ??_LCD_WriteData 0048                       ?_Timer6_CheckFlag 0070  
                            _VoltageReg 0044                      ??_Timer6_CheckFlag 0070  
                    Buzzer_SetDuty@duty 0070                          __pcstackCOMMON 0070  
                   __size_of_Basic_Init 0011                            __pidataBANK1 0EA2  
                          __pidataBANK2 0796                           __end_of_putch 0D74  
                   __end_of_Timer1_Init 0F01                     __end_of_Timer4_Init 0DDD  
                   __end_of_Timer6_Init 0E41               Buzzer_SetDuty@CCP2CON_Pre 0074  
                            ??_I2C_Init 0050                     I2C1_Transmit@result 004F  
                               ??_putch 004B                 __size_of_Buzzer_Handler 0016  
               __end_of_mTouch_PortInit 0DCF                              __pbssBANK0 0020  
                            __pbssBANK1 00A0              __size_of_Buzzer_MiliSecond 000A  
                           _Buzzer_Init 0F26                              ??_LCD_Init 004C  
               __size_of_Buzzer_SetDuty 001C                           _DAC_DataTable 005E  
                          I2C_Init@I2Cx 0052             __end_of_I2C_CommonInterrupt 0D59  
                          I2C_Init@mode 004E                              __pmaintext 049B  
                               ?___wmul 0048                              __pintentry 0004  
                               _CCP2CON 029A                       ?_LCD_DisplayClear 0070  
                               _APFCON0 011D                                 _APFCON1 011E  
                               _CCPTMRS 029E                                 ?_printf 0056  
                    ??_LCD_DisplayClear 004B                                 _CPSCON0 001E  
                               _CPSCON1 001F                                 _SSP1ADD 0212  
                               _SSP2ADD 021A                                 _SSP1BUF 0211  
                               _SSP2BUF 0219                                 _SSP1MSK 0213  
                               _SSP2MSK 021B                     I2C2_Transmit@result 004F  
                      ??_LCD_CursorHome 004B                                 _Handler 0004  
                 __end_of_I2C1_Transmit 049B                       _Timer1_Count200us 0D74  
                 __end_of_I2C2_Transmit 036C                             _Timer1_Init 0EE0  
                           _Timer4_Init 0DCF                             _Timer6_Init 0E2E  
                    ?_Timer1_Count200us 0070       __size_of_Timer1_DetectAssignCount 0098  
             ?_Timer1_DetectAssignCount 0070                                 ___lldiv 063B  
                       __size_of___wmul 001C                                 ___lwdiv 0FCB  
                               ___lwmod 07D2                         __CFG_STVREN$OFF 0000  
            __end_of_Timer1_ClearRecord 0F76                                 __ptext1 01BE  
                               __ptext2 0D6B                                 __ptext3 0DDD  
                               __ptext4 0E86                                 __ptext5 07D2  
                               __ptext6 0FCB                                 __ptext7 068D  
                               __ptext8 0D88                                 __ptext9 0E41  
                   ??_Timer1_Count200us 0070                         __size_of_printf 0116  
                       mTouch_Read@chan 004F                                 _dpowers 007C  
                               _isdigit 0DDD                            ??_Basic_Init 0048  
            ??_mTouch_IntervalDecrement 0070                                 clrloop0 0D60  
            __end_of_Timer1_GetCountSum 0D88                    end_of_initialization 005A  
                      ?_mTouch_PortInit 0070                           ?_I2C1_PinInit 0070  
                               init_ram 0D65                                 initloop 0D66  
             __end_of_Timer1_Count200us 0D7E                           ?_I2C2_PinInit 0070  
                           _I2C1_Config 00B3                               _CPSx_Read 0F01  
                           _I2C2_Config 00A0                           ?_I2C1_Setting 0049  
                       ___lldiv@divisor 0070                           ?_I2C2_Setting 0049  
                       ___lldiv@counter 007D                       I2C_Transmit@pData 0051  
                               printf@c 0069                                 printf@f 0056  
                    __end_of_Basic_Init 0E2E                        _DAC_VoltageTable 00C6  
                          __pstringtext 005E                 __size_of_I2C1_Interrupt 0054  
                __size_of_Timer1_GetCPM 0006                        __CFG_FOSC$INTOSC 0000  
                         ??_mTouch_Init 0049                           ??_mTouch_Read 004A  
               __size_of_I2C2_Interrupt 0054                       __size_of_I2C_Init 002A  
                   I2C1_Setting@address 004C                          _Buzzer_Handler 0E54  
                        ??_I2C1_PinInit 0048               __size_of_Timer4_CheckFlag 000B  
                        ??_I2C2_PinInit 0048                          _Buzzer_SetDuty 0E6A  
                        ??_I2C1_Setting 004B                             printf@width 0067  
                            ?_CPSx_Read 0070                          ??_I2C2_Setting 004B  
                         _H7826_01_Gain 0120                       __size_of_LCD_Init 006F  
                     _Timer1_StartCount 0D4E                      ?_Timer1_StartCount 0070  
                        __end_of___wmul 0EA2                               _ConfigReg 0046  
             __size_of_Timer6_CheckFlag 000B                     ??_Timer1_StartCount 0048  
               __size_of_DAC_Initialize 0020                          __end_of_printf 02D4  
                   start_initialization 0033                  __end_of_Buzzer_Handler 0E6A  
                  I2C1_Transmit@address 004C                  __end_of_Buzzer_SetDuty 0E86  
                          ?_Buzzer_Init 0070                     __end_of_mTouch_Init 0E54  
                   __end_of_mTouch_Read 06D1                           _Timer1_GetCPM 0D59  
                   I2C2_Setting@address 004C              __size_of_Timer1_Count200us 000A  
             __end_of_Timer1_StartCount 0D53                   __end_of_LCD_WriteData 0796  
                              ??___wmul 004C                             __pdataBANK1 00C6  
                           __pdataBANK2 0120                                ??_printf 005E  
                     I2C1_Setting@Speed 004A                               ___latbits 0001  
                         __pcstackBANK0 0047        __end_of_mTouch_IntervalDecrement 0E1D  
                       ?_Buzzer_Handler 0070                      I2C1_Transmit@i_172 004E  
                    I2C1_Transmit@pData 0048               __size_of_LCD_DisplayClear 0010  
                       ?_Buzzer_SetDuty 0070                          ?_Timer1_GetCPM 0048  
      __end_of_Timer1_DetectAssignCount 0404                         I2C_Init@address 004D  
                              ?_Handler 0070                             ??_CPSx_Read 0070  
                         ?_I2C_Transmit 0050                           I2C_Init@Speed 004F  
                          ?_Timer1_Init 0070                        ___lwdiv@dividend 004A  
                          ?_Timer4_Init 0070                            ?_Timer6_Init 0070  
                              ?___lldiv 0070                                ?___lwdiv 0048  
                              ?___lwmod 0050                          _I2C1_Interrupt 05E7  
                  __end_of_I2C1_PinInit 0DB5            __size_of_I2C_CommonInterrupt 0006  
                  __end_of_I2C2_PinInit 0DC2                    __end_of_I2C1_Setting 0759  
Timer1_DetectAssignCount@PreviousTimer1 003F                                ?_isdigit 0070  
                              _I2C_Init 0F76                    __end_of_I2C2_Setting 0715  
                        _I2C2_Interrupt 0593                              _H7826_Gain 013E  
                           _mTouch_Init 0E41                             _mTouch_Read 068D  
                      ___lwdiv@quotient 004D                      _Timer1_ClearRecord 0F4E  
                        __size_of_putch 0009                        _Timer4_CheckFlag 0D92  
                              _LCD_Init 0524                          ___wmul@product 004C  
                              _CPS_Data 0037                          ??_I2C_Transmit 0053  
                   ?_Timer1_ClearRecord 0070              __size_of_Timer1_StartCount 0005  
                             clear_ram0 0D5F                      _Timer1_GetCountSum 0D7E  
                __end_of_I2C1_Interrupt 063B                                _SSP1CON1 0215  
                              _SSP1CON2 0216                    I2C2_Transmit@address 004C  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP1STAT 0214                                _SSP2STAT 021C  
                   ?_Timer1_GetCountSum 0048                        _Timer6_CheckFlag 0D9D  
                     ___wmul@multiplier 0048                          _DAC_Initialize 0EC0  
                  ??_Timer1_ClearRecord 0048                  __end_of_I2C2_Interrupt 05E7  
                            printf@flag 0062                              printf@prec 0066  
                __size_of_I2C1_Transmit 0097                  __size_of_I2C2_Transmit 0098  
                       ??_Timer1_GetCPM 004A                             _CPS_PreData 003A  
                  ??_Timer1_GetCountSum 004C                        __size_of_Handler 002D  
                  __size_of_Buzzer_Init 0028                _Timer1_DetectAssignCount 036C  
              __size_of_mTouch_PortInit 000D       __size_of_mTouch_IntervalDecrement 0011  
             ?_mTouch_IntervalDecrement 0070                         ?_I2C1_Interrupt 0070  
               __size_of_LCD_CursorHome 0010                  __end_of_DAC_Initialize 0EE0  
                      __size_of___lldiv 0052                        __size_of___lwdiv 0035  
                      I2C1_Setting@mode 0049                        __size_of___lwmod 002D  
                    LCD_WriteData@point 004A                             _isdigit$936 0048  
                       ?_I2C2_Interrupt 0070                       I2C1_Transmit@size 0049  
                      __size_of_isdigit 000F                         ___lwdiv@divisor 0048  
                       ___lwdiv@counter 004F                                __ptext10 0DC2  
                              __ptext11 0E2E                                __ptext20 0DEC  
                              __ptext12 0DCF                                __ptext21 0759  
                              __ptext13 0D4E                                __ptext30 0DA8  
                              __ptext22 0EC0                                __ptext14 0F4E  
                              __ptext31 0F26                                __ptext23 0FA0  
                              __ptext15 0EE0                                __ptext40 0D53  
                              __ptext32 0E1D                                __ptext24 02D4  
                              __ptext16 0D7E                                __ptext41 0593  
                              __ptext25 0404                                __ptext17 0D59  
                              __ptext42 05E7                                __ptext34 0E0C  
                              __ptext26 0F76                                __ptext18 0524  
                              __ptext43 0F01                                __ptext35 0D9D  
                              __ptext27 06D1                                __ptext19 0DFC  
                              __ptext44 0E54                                __ptext36 0D92  
                              __ptext28 0DB5                                __ptext45 0E6A  
                              __ptext37 036C                                __ptext29 0715  
                              __ptext38 063B                                __ptext39 0D74  
                          _SSP1CON1bits 0215                            _SSP1CON2bits 0216  
                      _LCD_DisplayClear 0DFC                            _SSP2CON1bits 021D  
                          _SSP2CON2bits 021E                   __end_of_DAC_DataTable 007C  
                         __size_of_main 0089                           _I2C1_Transmit 0404  
                         _I2C2_Transmit 02D4                   __size_of_I2C1_PinInit 000D  
                  __size_of_Timer1_Init 0021                                int$flags 007E  
                 __size_of_I2C2_PinInit 000D                    __size_of_Timer4_Init 000E  
                   I2C_Transmit@address 0050                    __size_of_Timer6_Init 0013  
                 __size_of_I2C1_Setting 0044                         ?_DAC_Initialize 0070  
                             printf@val 0064                            _SSP1STATbits 0214  
                 __size_of_I2C2_Setting 0044                            _SSP2STATbits 021C  
                      ??_Buzzer_Handler 0075                    __end_of_I2C_Transmit 0FCB  
                     I2C2_Setting@Speed 004A                        ??_Buzzer_SetDuty 0072  
                              isdigit@c 0049                                intlevel1 0000  
                      ___lwmod@dividend 0052                     _I2C_CommonInterrupt 0D53  
                          _I2C1_PinInit 0DA8                        ___lldiv@dividend 0074  
                        ?_I2C1_Transmit 0048                       __CFG_CLKOUTEN$OFF 0000  
                          _I2C2_PinInit 0DB5                            _I2C1_Setting 0715  
                        ?_I2C2_Transmit 0048                            _I2C2_Setting 06D1  
                              printf@ap 0063                      I2C_Transmit@result 0057  
                     ??_mTouch_PortInit 0048                        I2C2_Setting@mode 0049  
                  ?_I2C_CommonInterrupt 0070                __end_of_Timer4_CheckFlag 0D9D  
                            _OPTION_REG 0095                        ___lldiv@quotient 0079  
                       ___lwmod@divisor 0050                         ___lwmod@counter 0055  
                          ?_mTouch_Init 0070                            ?_mTouch_Read 0070  
                __size_of_LCD_WriteData 003D                          I2C1_Transmit@i 004D  
              __end_of_Timer6_CheckFlag 0DA8  
