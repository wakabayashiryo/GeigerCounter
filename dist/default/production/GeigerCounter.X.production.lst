

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 11:43:12 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1827 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0219                     	;# 
   168  021A                     	;# 
   169  021B                     	;# 
   170  021C                     	;# 
   171  021D                     	;# 
   172  021E                     	;# 
   173  021F                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029B                     	;# 
   187  029C                     	;# 
   188  029C                     	;# 
   189  029D                     	;# 
   190  029E                     	;# 
   191  029E                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0318                     	;# 
   197  0318                     	;# 
   198  0319                     	;# 
   199  031A                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0113                     	;# 
   276  0114                     	;# 
   277  0115                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0118                     	;# 
   281  0119                     	;# 
   282  011A                     	;# 
   283  011B                     	;# 
   284  011D                     	;# 
   285  011E                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0191                     	;# 
   289  0191                     	;# 
   290  0192                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0199                     	;# 
   298  019A                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  019C                     	;# 
   305  019D                     	;# 
   306  019E                     	;# 
   307  019F                     	;# 
   308  020C                     	;# 
   309  020D                     	;# 
   310  0211                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0212                     	;# 
   314  0213                     	;# 
   315  0213                     	;# 
   316  0214                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  0219                     	;# 
   326  021A                     	;# 
   327  021B                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021E                     	;# 
   331  021F                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  029B                     	;# 
   345  029C                     	;# 
   346  029C                     	;# 
   347  029D                     	;# 
   348  029E                     	;# 
   349  029E                     	;# 
   350  0311                     	;# 
   351  0311                     	;# 
   352  0312                     	;# 
   353  0313                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  039A                     	;# 
   362  039C                     	;# 
   363  039D                     	;# 
   364  039E                     	;# 
   365  039F                     	;# 
   366  0415                     	;# 
   367  0416                     	;# 
   368  0417                     	;# 
   369  041C                     	;# 
   370  041D                     	;# 
   371  041E                     	;# 
   372  0FE4                     	;# 
   373  0FE5                     	;# 
   374  0FE6                     	;# 
   375  0FE7                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEB                     	;# 
   380  0FED                     	;# 
   381  0FEE                     	;# 
   382  0FEF                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  0111                     	;# 
   432  0112                     	;# 
   433  0113                     	;# 
   434  0114                     	;# 
   435  0115                     	;# 
   436  0116                     	;# 
   437  0117                     	;# 
   438  0118                     	;# 
   439  0119                     	;# 
   440  011A                     	;# 
   441  011B                     	;# 
   442  011D                     	;# 
   443  011E                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0191                     	;# 
   447  0191                     	;# 
   448  0192                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0193                     	;# 
   452  0194                     	;# 
   453  0195                     	;# 
   454  0196                     	;# 
   455  0199                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  020C                     	;# 
   467  020D                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  0212                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  0219                     	;# 
   484  021A                     	;# 
   485  021B                     	;# 
   486  021C                     	;# 
   487  021D                     	;# 
   488  021E                     	;# 
   489  021F                     	;# 
   490  0291                     	;# 
   491  0291                     	;# 
   492  0292                     	;# 
   493  0293                     	;# 
   494  0294                     	;# 
   495  0295                     	;# 
   496  0295                     	;# 
   497  0296                     	;# 
   498  0298                     	;# 
   499  0298                     	;# 
   500  0299                     	;# 
   501  029A                     	;# 
   502  029B                     	;# 
   503  029C                     	;# 
   504  029C                     	;# 
   505  029D                     	;# 
   506  029E                     	;# 
   507  029E                     	;# 
   508  0311                     	;# 
   509  0311                     	;# 
   510  0312                     	;# 
   511  0313                     	;# 
   512  0318                     	;# 
   513  0318                     	;# 
   514  0319                     	;# 
   515  031A                     	;# 
   516  0394                     	;# 
   517  0395                     	;# 
   518  0396                     	;# 
   519  039A                     	;# 
   520  039C                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0013                     	;# 
   558  0014                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  010C                     	;# 
   588  010D                     	;# 
   589  0111                     	;# 
   590  0112                     	;# 
   591  0113                     	;# 
   592  0114                     	;# 
   593  0115                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  0118                     	;# 
   597  0119                     	;# 
   598  011A                     	;# 
   599  011B                     	;# 
   600  011D                     	;# 
   601  011E                     	;# 
   602  018C                     	;# 
   603  018D                     	;# 
   604  0191                     	;# 
   605  0191                     	;# 
   606  0192                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0199                     	;# 
   614  019A                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019E                     	;# 
   623  019F                     	;# 
   624  020C                     	;# 
   625  020D                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  0219                     	;# 
   642  021A                     	;# 
   643  021B                     	;# 
   644  021C                     	;# 
   645  021D                     	;# 
   646  021E                     	;# 
   647  021F                     	;# 
   648  0291                     	;# 
   649  0291                     	;# 
   650  0292                     	;# 
   651  0293                     	;# 
   652  0294                     	;# 
   653  0295                     	;# 
   654  0295                     	;# 
   655  0296                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029B                     	;# 
   661  029C                     	;# 
   662  029C                     	;# 
   663  029D                     	;# 
   664  029E                     	;# 
   665  029E                     	;# 
   666  0311                     	;# 
   667  0311                     	;# 
   668  0312                     	;# 
   669  0313                     	;# 
   670  0318                     	;# 
   671  0318                     	;# 
   672  0319                     	;# 
   673  031A                     	;# 
   674  0394                     	;# 
   675  0395                     	;# 
   676  0396                     	;# 
   677  039A                     	;# 
   678  039C                     	;# 
   679  039D                     	;# 
   680  039E                     	;# 
   681  039F                     	;# 
   682  0415                     	;# 
   683  0416                     	;# 
   684  0417                     	;# 
   685  041C                     	;# 
   686  041D                     	;# 
   687  041E                     	;# 
   688  0FE4                     	;# 
   689  0FE5                     	;# 
   690  0FE6                     	;# 
   691  0FE7                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEB                     	;# 
   696  0FED                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699                           
   700                           	psect	stringtext
   701  037A                     __pstringtext:	
   702  037A                     _dpowers:	
   703  037A  3401               	retlw	1
   704  037B  3400               	retlw	0
   705  037C  340A               	retlw	10
   706  037D  3400               	retlw	0
   707  037E  3464               	retlw	100
   708  037F  3400               	retlw	0
   709  0380  34E8               	retlw	232
   710  0381  3403               	retlw	3
   711  0382  3410               	retlw	16
   712  0383  3427               	retlw	39
   713  0384                     __end_of_dpowers:	
   714  0016                     _TMR1	set	22
   715  000C                     _PORTA	set	12
   716  0019                     _T1GCON	set	25
   717  0018                     _T1CON	set	24
   718  000D                     _PORTB	set	13
   719  0099                     _TMR4IF	set	153
   720  005F                     _GIE	set	95
   721  005E                     _PEIE	set	94
   722  0088                     _TMR1IF	set	136
   723  00C0                     _TMR1ON	set	192
   724  0063                     _RA3	set	99
   725  0064                     _RA4	set	100
   726  008C                     _TRISA	set	140
   727  0099                     _OSCCON	set	153
   728  008D                     _TRISB	set	141
   729  0499                     _TMR4IE	set	1177
   730  0488                     _TMR1IE	set	1160
   731  011E                     _APFCON1	set	286
   732  011D                     _APFCON0	set	285
   733  0866                     _LATA6	set	2150
   734  018C                     _ANSELA	set	396
   735  018D                     _ANSELB	set	397
   736  020D                     _WPUB	set	525
   737  0417                     _T4CON	set	1047
   738  0415                     _TMR4	set	1045
   739  0416                     _PR4	set	1046
   740  0384                     STR_1:	
   741  0384  3425               	retlw	37	;'%'
   742  0385  3475               	retlw	117	;'u'
   743  0386  346C               	retlw	108	;'l'
   744  0387  3420               	retlw	32	;' '
   745  0388  3425               	retlw	37	;'%'
   746  0389  3464               	retlw	100	;'d'
   747  038A  3400               	retlw	0
   748                           
   749                           ; #config settings
   750  0000                     
   751                           	psect	cinit
   752  0022                     start_initialization:	
   753  0022                     __initialization:	
   754                           
   755                           ; Clear objects allocated to BANK0
   756  0022  3041               	movlw	low __pbssBANK0
   757  0023  0084               	movwf	4
   758  0024  3000               	movlw	high __pbssBANK0
   759  0025  0085               	movwf	5
   760  0026  3016               	movlw	22
   761  0027  3183  23DF         	fcall	clear_ram0
   762  0029                     end_of_initialization:	
   763                           ;End of C runtime variable initialization code
   764                           
   765  0029                     __end_of__initialization:	
   766  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   767  002A  0020               	movlb	0
   768  002B  3182  2AC0         	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssBANK0
   771  0041                     __pbssBANK0:	
   772  0041                     _cnts:	
   773  0041                     	ds	14
   774  004F                     _tcnt:	
   775  004F                     	ds	6
   776  0055                     Timer1_DetectAssignCount@PreviousTimer1:	
   777  0055                     	ds	2
   778                           
   779                           	psect	clrtext
   780  03DF                     clear_ram0:	
   781                           ;	Called with FSR0 containing the base address, and
   782                           ;	WREG with the size to clear
   783                           
   784  03DF  0064               	clrwdt	;clear the watchdog before getting into this loop
   785  03E0                     clrloop0:	
   786  03E0  0180               	clrf	0	;clear RAM location pointed to by FSR
   787  03E1  3101               	addfsr 0,1
   788  03E2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   789  03E3  2BE0               	goto	clrloop0	;have we reached the end yet?
   790  03E4  3400               	retlw	0	;all done for this memory range, return
   791                           
   792                           	psect	cstackCOMMON
   793  0070                     __pcstackCOMMON:	
   794  0070                     ?_LCD_DisplayClear:	
   795  0070                     ?_Timer1_ClearRecord:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_Basic_Init:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_LCD_WriteData:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_LCD_Init:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_putch:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_LCD_CursorHome:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_Timer1_Init:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_Timer1_StartCount:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_Timer1_Count200us:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ??_Timer1_Count200us:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_Timer1_DetectAssignCount:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_Timer4_Init:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Timer4_CheckFlag:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ??_Timer4_CheckFlag:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_main:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_Handler:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?___lldiv:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ___lldiv@divisor:	
   847                           ; 4 bytes @ 0x0
   848                           
   849                           
   850                           ; 4 bytes @ 0x0
   851  0070                     	ds	4
   852  0074                     ___lldiv@dividend:	
   853                           
   854                           ; 4 bytes @ 0x4
   855  0074                     	ds	4
   856  0078                     ??___lldiv:	
   857                           
   858                           ; 1 bytes @ 0x8
   859  0078                     	ds	1
   860  0079                     ___lldiv@quotient:	
   861                           
   862                           ; 4 bytes @ 0x9
   863  0079                     	ds	4
   864  007D                     ___lldiv@counter:	
   865                           
   866                           ; 1 bytes @ 0xD
   867  007D                     	ds	1
   868  007E                     ??_Timer1_DetectAssignCount:	
   869                           
   870                           	psect	cstackBANK0
   871  0020                     __pcstackBANK0:	
   872                           ; 1 bytes @ 0xE
   873                           
   874  0020                     ??_Handler:	
   875                           
   876                           ; 1 bytes @ 0x0
   877  0020                     	ds	1
   878  0021                     ??_Timer1_ClearRecord:	
   879  0021                     ??_Basic_Init:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  0021                     ??_LCD_WriteData:	
   883                           ; 1 bytes @ 0x1
   884                           
   885  0021                     ??_Timer1_Init:	
   886                           ; 1 bytes @ 0x1
   887                           
   888  0021                     ??_Timer1_StartCount:	
   889                           ; 1 bytes @ 0x1
   890                           
   891  0021                     ??_Timer4_Init:	
   892                           ; 1 bytes @ 0x1
   893                           
   894  0021                     ?_Timer1_GetCPM:	
   895                           ; 1 bytes @ 0x1
   896                           
   897  0021                     ?___lwdiv:	
   898                           ; 2 bytes @ 0x1
   899                           
   900  0021                     ?_Timer1_GetCountSum:	
   901                           ; 2 bytes @ 0x1
   902                           
   903  0021                     ___lwdiv@divisor:	
   904                           ; 4 bytes @ 0x1
   905                           
   906                           
   907                           ; 2 bytes @ 0x1
   908  0021                     	ds	2
   909  0023                     ??_Timer1_GetCPM:	
   910  0023                     LCD_WriteData@point:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0023                     ___lwdiv@dividend:	
   914                           ; 1 bytes @ 0x3
   915                           
   916                           
   917                           ; 2 bytes @ 0x3
   918  0023                     	ds	1
   919  0024                     ??_LCD_DisplayClear:	
   920  0024                     ??_putch:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0024                     ??_LCD_CursorHome:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0024                     putch@c:	
   927                           ; 1 bytes @ 0x4
   928                           
   929                           
   930                           ; 1 bytes @ 0x4
   931  0024                     	ds	1
   932  0025                     ??_LCD_Init:	
   933  0025                     ??_Timer1_GetCountSum:	
   934                           ; 1 bytes @ 0x5
   935                           
   936  0025                     ??___lwdiv:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 1 bytes @ 0x5
   941  0025                     	ds	1
   942  0026                     ___lwdiv@quotient:	
   943                           
   944                           ; 2 bytes @ 0x6
   945  0026                     	ds	2
   946  0028                     ___lwdiv@counter:	
   947                           
   948                           ; 1 bytes @ 0x8
   949  0028                     	ds	1
   950  0029                     ?___lwmod:	
   951  0029                     ___lwmod@divisor:	
   952                           ; 2 bytes @ 0x9
   953                           
   954                           
   955                           ; 2 bytes @ 0x9
   956  0029                     	ds	2
   957  002B                     ___lwmod@dividend:	
   958                           
   959                           ; 2 bytes @ 0xB
   960  002B                     	ds	2
   961  002D                     ??___lwmod:	
   962                           
   963                           ; 1 bytes @ 0xD
   964  002D                     	ds	1
   965  002E                     ___lwmod@counter:	
   966                           
   967                           ; 1 bytes @ 0xE
   968  002E                     	ds	1
   969  002F                     ?_printf:	
   970  002F                     printf@f:	
   971                           ; 2 bytes @ 0xF
   972                           
   973                           
   974                           ; 2 bytes @ 0xF
   975  002F                     	ds	8
   976  0037                     ??_printf:	
   977                           
   978                           ; 1 bytes @ 0x17
   979  0037                     	ds	4
   980  003B                     printf@prec:	
   981                           
   982                           ; 1 bytes @ 0x1B
   983  003B                     	ds	1
   984  003C                     printf@ap:	
   985                           
   986                           ; 1 bytes @ 0x1C
   987  003C                     	ds	1
   988  003D                     printf@flag:	
   989                           
   990                           ; 1 bytes @ 0x1D
   991  003D                     	ds	1
   992  003E                     printf@val:	
   993                           
   994                           ; 2 bytes @ 0x1E
   995  003E                     	ds	2
   996  0040                     printf@c:	
   997                           
   998                           ; 1 bytes @ 0x20
   999  0040                     	ds	1
  1000  0041                     ??_main:	
  1001                           
  1002                           	psect	maintext
  1003  02C0                     __pmaintext:	
  1004                           ; 1 bytes @ 0x21
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 13 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : B1F/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1024 ;;      Params:         0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels required when called:    6
  1030 ;; This function calls:
  1031 ;;		_Basic_Init
  1032 ;;		_LCD_CursorHome
  1033 ;;		_LCD_Init
  1034 ;;		_Timer1_GetCPM
  1035 ;;		_Timer1_GetCountSum
  1036 ;;		_Timer1_Init
  1037 ;;		_Timer1_StartCount
  1038 ;;		_Timer4_Init
  1039 ;;		_printf
  1040 ;; This function is called by:
  1041 ;;		Startup code after reset
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _main
  1047  02C0                     _main:	
  1048                           
  1049                           ;main.c: 15: Basic_Init();
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1053  02C0  3183  2365  3182   	fcall	_Basic_Init
  1054                           
  1055                           ;main.c: 17: LCD_Init();
  1056  02C3  3181  2191  3182   	fcall	_LCD_Init
  1057                           
  1058                           ;main.c: 18: Timer1_Init();
  1059  02C6  3183  2344  3182   	fcall	_Timer1_Init
  1060                           
  1061                           ;main.c: 19: Timer4_Init();
  1062  02C9  3183  23AB  3182   	fcall	_Timer4_Init
  1063                           
  1064                           ;main.c: 21: Timer1_StartCount();
  1065  02CC  3183  23EB  3182   	fcall	_Timer1_StartCount
  1066  02CF                     l168:	
  1067                           ;main.c: 23: while(1)
  1068                           
  1069                           
  1070                           ;main.c: 24: {
  1071                           ;main.c: 25: LCD_CursorHome();
  1072  02CF  3183  239B  3182   	fcall	_LCD_CursorHome
  1073                           
  1074                           ;main.c: 26: printf("%ul %d", Timer1_GetCPM(),Timer1_GetCountSum());
  1075  02D2  3084               	movlw	low (STR_1| (0+32768))
  1076  02D3  0020               	movlb	0	; select bank0
  1077  02D4  00AF               	movwf	printf@f
  1078  02D5  3083               	movlw	high (STR_1| (0+32768))
  1079  02D6  00B0               	movwf	printf@f+1
  1080  02D7  3183  23E5  3182   	fcall	_Timer1_GetCPM
  1081  02DA  0020               	movlb	0	; select bank0
  1082  02DB  0822               	movf	?_Timer1_GetCPM+1,w
  1083  02DC  00B2               	movwf	?_printf+3
  1084  02DD  0821               	movf	?_Timer1_GetCPM,w
  1085  02DE  00B1               	movwf	?_printf+2
  1086  02DF  3183  23C4  3182   	fcall	_Timer1_GetCountSum
  1087  02E2  0020               	movlb	0	; select bank0
  1088  02E3  0824               	movf	?_Timer1_GetCountSum+3,w
  1089  02E4  00B6               	movwf	?_printf+7
  1090  02E5  0823               	movf	?_Timer1_GetCountSum+2,w
  1091  02E6  00B5               	movwf	?_printf+6
  1092  02E7  0822               	movf	?_Timer1_GetCountSum+1,w
  1093  02E8  00B4               	movwf	?_printf+5
  1094  02E9  0821               	movf	?_Timer1_GetCountSum,w
  1095  02EA  00B3               	movwf	?_printf+4
  1096  02EB  3180  202D  3182   	fcall	_printf
  1097  02EE  2ACF               	goto	l168
  1098  02EF                     __end_of_main:	
  1099                           ;main.c: 27: }
  1100                           ;main.c: 29: return 0;
  1101                           ;	Return value of _main is never used
  1102                           
  1103                           
  1104                           	psect	text1
  1105  002D                     __ptext1:	
  1106 ;; *************** function _printf *****************
  1107 ;; Defined at:
  1108 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  1111 ;;		 -> STR_1(7), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  tmpval          4    0        struct .
  1114 ;;  val             2   30[BANK0 ] unsigned int 
  1115 ;;  cp              2    0        PTR const unsigned char 
  1116 ;;  len             2    0        unsigned int 
  1117 ;;  c               1   32[BANK0 ] char 
  1118 ;;  flag            1   29[BANK0 ] unsigned char 
  1119 ;;  ap              1   28[BANK0 ] PTR void [1]
  1120 ;;		 -> ?_printf(2), 
  1121 ;;  prec            1   27[BANK0 ] char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  2   15[BANK0 ] int 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1131 ;;      Params:         0       8       0       0       0       0
  1132 ;;      Locals:         0       6       0       0       0       0
  1133 ;;      Temps:          0       4       0       0       0       0
  1134 ;;      Totals:         0      18       0       0       0       0
  1135 ;;Total ram usage:       18 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    5
  1138 ;; This function calls:
  1139 ;;		___lwdiv
  1140 ;;		___lwmod
  1141 ;;		_putch
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _printf
  1149  002D                     _printf:	
  1150                           
  1151                           ;doprnt.c: 466: va_list ap;
  1152                           ;doprnt.c: 499: signed char c;
  1153                           ;doprnt.c: 506: signed char prec;
  1154                           ;doprnt.c: 508: unsigned char flag;
  1155                           ;doprnt.c: 523: union {
  1156                           ;doprnt.c: 524: unsigned long vd;
  1157                           ;doprnt.c: 525: double integ;
  1158                           ;doprnt.c: 526: } tmpval;
  1159                           ;doprnt.c: 528: unsigned int val;
  1160                           ;doprnt.c: 529: unsigned len;
  1161                           ;doprnt.c: 530: const char * cp;
  1162                           ;doprnt.c: 533: *ap = __va_start();
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1166  002D  3031               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1167  002E  0020               	movlb	0	; select bank0
  1168  002F  00B7               	movwf	??_printf
  1169  0030  0837               	movf	??_printf,w
  1170  0031  00BC               	movwf	printf@ap
  1171  0032                     l1372:	
  1172                           ;doprnt.c: 536: while(c = *f++) {
  1173                           
  1174  0032  0020               	movlb	0	; select bank0
  1175  0033  0830               	movf	printf@f+1,w
  1176  0034  00B8               	movwf	??_printf+1
  1177  0035  082F               	movf	printf@f,w
  1178  0036  00B7               	movwf	??_printf
  1179  0037  0AAF               	incf	printf@f,f
  1180  0038  1903               	skipnz
  1181  0039  0AB0               	incf	printf@f+1,f
  1182  003A  0837               	movf	??_printf,w
  1183  003B  0084               	movwf	4
  1184  003C  0838               	movf	??_printf+1,w
  1185  003D  0085               	movwf	5
  1186  003E  0800               	movf	0,w	;code access
  1187  003F  00B9               	movwf	??_printf+2
  1188  0040  0839               	movf	??_printf+2,w
  1189  0041  00C0               	movwf	printf@c
  1190  0042  0840               	movf	printf@c,w
  1191  0043  1903               	btfsc	3,2
  1192  0044  0008               	return
  1193                           
  1194                           ;doprnt.c: 538: if(c != '%')
  1195  0045  3025               	movlw	37
  1196  0046  0640               	xorwf	printf@c,w
  1197  0047  1903               	btfsc	3,2
  1198  0048  284E               	goto	l1328
  1199                           
  1200                           ;doprnt.c: 540: {
  1201                           ;doprnt.c: 541: (putch(c) );
  1202  0049  0840               	movf	printf@c,w
  1203  004A  3183  23D8  3180   	fcall	_putch
  1204                           
  1205                           ;doprnt.c: 542: continue;
  1206  004D  2832               	goto	l1372
  1207  004E                     l1328:	
  1208                           
  1209                           ;doprnt.c: 543: }
  1210                           ;doprnt.c: 548: flag = 0;
  1211  004E  0020               	movlb	0	; select bank0
  1212  004F  01BD               	clrf	printf@flag
  1213                           
  1214                           ;doprnt.c: 635: switch(c = *f++) {
  1215  0050  2853               	goto	l1332
  1216  0051                     l200:	
  1217                           ;doprnt.c: 817: case 'u':
  1218                           
  1219                           ;doprnt.c: 813: continue;
  1220                           
  1221                           ;doprnt.c: 802: default:
  1222                           
  1223                           ;doprnt.c: 698: case 'i':
  1224                           ;doprnt.c: 699: break;
  1225                           
  1226                           ;doprnt.c: 697: case 'd':
  1227                           
  1228                           ;doprnt.c: 638: goto alldone;
  1229                           
  1230                           ;doprnt.c: 637: case 0:
  1231                           
  1232                           
  1233                           ;doprnt.c: 818: flag |= 0x40;
  1234  0051  173D               	bsf	printf@flag,6
  1235                           
  1236                           ;doprnt.c: 822: }
  1237                           
  1238                           ;doprnt.c: 819: break;
  1239  0052  286D               	goto	l198
  1240  0053                     l1332:	
  1241  0053  0830               	movf	printf@f+1,w
  1242  0054  00B8               	movwf	??_printf+1
  1243  0055  082F               	movf	printf@f,w
  1244  0056  00B7               	movwf	??_printf
  1245  0057  0AAF               	incf	printf@f,f
  1246  0058  1903               	skipnz
  1247  0059  0AB0               	incf	printf@f+1,f
  1248  005A  0837               	movf	??_printf,w
  1249  005B  0084               	movwf	4
  1250  005C  0838               	movf	??_printf+1,w
  1251  005D  0085               	movwf	5
  1252  005E  0800               	movf	0,w	;code access
  1253  005F  00C0               	movwf	printf@c
  1254                           
  1255                           ; Switch size 1, requested type "space"
  1256                           ; Number of cases is 4, Range of values is 0 to 117
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte           13     7 (average)
  1260                           ; direct_byte          242     6 (fixed)
  1261                           ; jumptable            260     6 (fixed)
  1262                           ;	Chosen strategy is simple_byte
  1263  0060  3A00               	xorlw	0	; case 0
  1264  0061  1903               	skipnz
  1265  0062  28F8               	goto	l212
  1266  0063  3A64               	xorlw	100	; case 100
  1267  0064  1903               	skipnz
  1268  0065  286D               	goto	l198
  1269  0066  3A0D               	xorlw	13	; case 105
  1270  0067  1903               	skipnz
  1271  0068  286D               	goto	l198
  1272  0069  3A1C               	xorlw	28	; case 117
  1273  006A  1903               	skipnz
  1274  006B  2851               	goto	l200
  1275  006C  2832               	goto	l1372
  1276  006D                     l198:	
  1277                           
  1278                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1279  006D  1B3D               	btfsc	printf@flag,6
  1280  006E  2886               	goto	l1344
  1281                           
  1282                           ;doprnt.c: 1253: {
  1283                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1284  006F  083C               	movf	printf@ap,w
  1285  0070  0086               	movwf	6
  1286  0071  0187               	clrf	7
  1287  0072  3F40               	moviw [0]fsr1
  1288  0073  00BE               	movwf	printf@val
  1289  0074  3F41               	moviw [1]fsr1
  1290  0075  00BF               	movwf	printf@val+1
  1291  0076  3002               	movlw	2
  1292  0077  00B7               	movwf	??_printf
  1293  0078  0837               	movf	??_printf,w
  1294  0079  07BC               	addwf	printf@ap,f
  1295                           
  1296                           ;doprnt.c: 1261: if((int)val < 0) {
  1297  007A  1FBF               	btfss	printf@val+1,7
  1298  007B  2891               	goto	l1348
  1299                           
  1300                           ;doprnt.c: 1262: flag |= 0x03;
  1301  007C  3003               	movlw	3
  1302  007D  00B7               	movwf	??_printf
  1303  007E  0837               	movf	??_printf,w
  1304  007F  04BD               	iorwf	printf@flag,f
  1305                           
  1306                           ;doprnt.c: 1263: val = -val;
  1307  0080  09BE               	comf	printf@val,f
  1308  0081  09BF               	comf	printf@val+1,f
  1309  0082  0ABE               	incf	printf@val,f
  1310  0083  1903               	skipnz
  1311  0084  0ABF               	incf	printf@val+1,f
  1312                           
  1313                           ;doprnt.c: 1264: }
  1314                           ;doprnt.c: 1266: }
  1315  0085  2891               	goto	l1348
  1316  0086                     l1344:	
  1317                           
  1318                           ;doprnt.c: 1268: else
  1319                           ;doprnt.c: 1273: {
  1320                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1321  0086  083C               	movf	printf@ap,w
  1322  0087  0086               	movwf	6
  1323  0088  0187               	clrf	7
  1324  0089  3F40               	moviw [0]fsr1
  1325  008A  00BE               	movwf	printf@val
  1326  008B  3F41               	moviw [1]fsr1
  1327  008C  00BF               	movwf	printf@val+1
  1328  008D  3002               	movlw	2
  1329  008E  00B7               	movwf	??_printf
  1330  008F  0837               	movf	??_printf,w
  1331  0090  07BC               	addwf	printf@ap,f
  1332  0091                     l1348:	
  1333                           
  1334                           ;doprnt.c: 1287: }
  1335                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1336  0091  01C0               	clrf	printf@c
  1337  0092  0AC0               	incf	printf@c,f
  1338  0093  3005               	movlw	5
  1339  0094  0640               	xorwf	printf@c,w
  1340  0095  1903               	btfsc	3,2
  1341  0096  28B6               	goto	l1360
  1342  0097                     l1354:	
  1343                           
  1344                           ;doprnt.c: 1306: if(val < dpowers[c])
  1345  0097  0840               	movf	printf@c,w
  1346  0098  00B7               	movwf	??_printf
  1347  0099  01B8               	clrf	??_printf+1
  1348  009A  35B7               	lslf	??_printf,f
  1349  009B  0DB8               	rlf	??_printf+1,f
  1350  009C  307A               	movlw	low (_dpowers| (0+32768))
  1351  009D  0737               	addwf	??_printf,w
  1352  009E  0084               	movwf	4
  1353  009F  3083               	movlw	high (_dpowers| (0+32768))
  1354  00A0  3D38               	addwfc	??_printf+1,w
  1355  00A1  0085               	movwf	5
  1356  00A2  3F00               	moviw [0]fsr0
  1357  00A3  00B9               	movwf	??_printf+2
  1358  00A4  3F01               	moviw [1]fsr0
  1359  00A5  00BA               	movwf	??_printf+3
  1360  00A6  083A               	movf	??_printf+3,w
  1361  00A7  023F               	subwf	printf@val+1,w
  1362  00A8  1D03               	skipz
  1363  00A9  28AC               	goto	u775
  1364  00AA  0839               	movf	??_printf+2,w
  1365  00AB  023E               	subwf	printf@val,w
  1366  00AC                     u775:	
  1367  00AC  1C03               	btfss	3,0
  1368  00AD  28B6               	goto	l1360
  1369                           
  1370                           ;doprnt.c: 1307: break;
  1371  00AE  3001               	movlw	1
  1372  00AF  00B7               	movwf	??_printf
  1373  00B0  0837               	movf	??_printf,w
  1374  00B1  07C0               	addwf	printf@c,f
  1375  00B2  3005               	movlw	5
  1376  00B3  0640               	xorwf	printf@c,w
  1377  00B4  1D03               	btfss	3,2
  1378  00B5  2897               	goto	l1354
  1379  00B6                     l1360:	
  1380                           
  1381                           ;doprnt.c: 1422: {
  1382                           ;doprnt.c: 1438: if(flag & 0x03)
  1383  00B6  083D               	movf	printf@flag,w
  1384  00B7  3903               	andlw	3
  1385  00B8  1903               	btfsc	3,2
  1386  00B9  28BE               	goto	l1364
  1387                           
  1388                           ;doprnt.c: 1439: (putch('-') );
  1389  00BA  302D               	movlw	45
  1390  00BB  3183  23D8  3180   	fcall	_putch
  1391  00BE                     l1364:	
  1392                           
  1393                           ;doprnt.c: 1469: }
  1394                           ;doprnt.c: 1472: prec = c;
  1395  00BE  0020               	movlb	0	; select bank0
  1396  00BF  0840               	movf	printf@c,w
  1397  00C0  00B7               	movwf	??_printf
  1398  00C1  0837               	movf	??_printf,w
  1399  00C2  00BB               	movwf	printf@prec
  1400  00C3                     l1370:	
  1401                           ;doprnt.c: 1474: while(prec--) {
  1402                           
  1403  00C3  30FF               	movlw	255
  1404  00C4  0020               	movlb	0	; select bank0
  1405  00C5  00B7               	movwf	??_printf
  1406  00C6  0837               	movf	??_printf,w
  1407  00C7  07BB               	addwf	printf@prec,f
  1408  00C8  0A3B               	incf	printf@prec,w
  1409  00C9  1903               	btfsc	3,2
  1410  00CA  2832               	goto	l1372
  1411                           
  1412                           ;doprnt.c: 1478: {
  1413                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1414  00CB  300A               	movlw	10
  1415  00CC  00A9               	movwf	___lwmod@divisor
  1416  00CD  3000               	movlw	0
  1417  00CE  00AA               	movwf	___lwmod@divisor+1
  1418  00CF  083B               	movf	printf@prec,w
  1419  00D0  00B7               	movwf	??_printf
  1420  00D1  01B8               	clrf	??_printf+1
  1421  00D2  35B7               	lslf	??_printf,f
  1422  00D3  0DB8               	rlf	??_printf+1,f
  1423  00D4  307A               	movlw	low (_dpowers| (0+32768))
  1424  00D5  0737               	addwf	??_printf,w
  1425  00D6  0084               	movwf	4
  1426  00D7  3083               	movlw	high (_dpowers| (0+32768))
  1427  00D8  3D38               	addwfc	??_printf+1,w
  1428  00D9  0085               	movwf	5
  1429  00DA  3F00               	moviw [0]fsr0
  1430  00DB  00A1               	movwf	___lwdiv@divisor
  1431  00DC  3F01               	moviw [1]fsr0
  1432  00DD  00A2               	movwf	___lwdiv@divisor+1
  1433  00DE  083F               	movf	printf@val+1,w
  1434  00DF  00A4               	movwf	___lwdiv@dividend+1
  1435  00E0  083E               	movf	printf@val,w
  1436  00E1  00A3               	movwf	___lwdiv@dividend
  1437  00E2  3182  228B  3180   	fcall	___lwdiv
  1438  00E5  0020               	movlb	0	; select bank0
  1439  00E6  0822               	movf	?___lwdiv+1,w
  1440  00E7  00AC               	movwf	___lwmod@dividend+1
  1441  00E8  0821               	movf	?___lwdiv,w
  1442  00E9  00AB               	movwf	___lwmod@dividend
  1443  00EA  3182  22EF  3180   	fcall	___lwmod
  1444  00ED  0020               	movlb	0	; select bank0
  1445  00EE  0829               	movf	?___lwmod,w
  1446  00EF  3E30               	addlw	48
  1447  00F0  00B9               	movwf	??_printf+2
  1448  00F1  0839               	movf	??_printf+2,w
  1449  00F2  00C0               	movwf	printf@c
  1450                           
  1451                           ;doprnt.c: 1523: }
  1452                           ;doprnt.c: 1524: (putch(c) );
  1453  00F3  0840               	movf	printf@c,w
  1454  00F4  3183  23D8  3180   	fcall	_putch
  1455  00F7  28C3               	goto	l1370
  1456  00F8                     l212:	
  1457                           ;doprnt.c: 1540: return 0;
  1458                           ;	Return value of _printf is never used
  1459                           
  1460                           ;doprnt.c: 1525: }
  1461                           ;doprnt.c: 1533: }
  1462                           ;doprnt.c: 1535: alldone:
  1463                           
  1464  00F8  0008               	return
  1465  00F9                     __end_of_printf:	
  1466                           
  1467                           	psect	text2
  1468  03D8                     __ptext2:	
  1469 ;; *************** function _putch *****************
  1470 ;; Defined at:
  1471 ;;		line 64 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  c               1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  c               1    4[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1485 ;;      Params:         0       0       0       0       0       0
  1486 ;;      Locals:         0       1       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0
  1488 ;;      Totals:         0       1       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    4
  1492 ;; This function calls:
  1493 ;;		_LCD_WriteData
  1494 ;; This function is called by:
  1495 ;;		_printf
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _putch
  1501  03D8                     _putch:	
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1505                           ;putch@c stored from wreg
  1506  03D8  0020               	movlb	0	; select bank0
  1507  03D9  00A4               	movwf	putch@c
  1508                           
  1509                           ;LCD.c: 66: RA3 = 1;
  1510  03DA  158C               	bsf	12,3	;volatile
  1511                           
  1512                           ;LCD.c: 67: LCD_WriteData(c);
  1513  03DB  0824               	movf	putch@c,w
  1514  03DC  3182  2250         	fcall	_LCD_WriteData
  1515  03DE  0008               	return
  1516  03DF                     __end_of_putch:	
  1517                           
  1518                           	psect	text3
  1519  02EF                     __ptext3:	
  1520 ;; *************** function ___lwmod *****************
  1521 ;; Defined at:
  1522 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  divisor         2    9[BANK0 ] unsigned int 
  1525 ;;  dividend        2   11[BANK0 ] unsigned int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  counter         1   14[BANK0 ] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2    9[BANK0 ] unsigned int 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1537 ;;      Params:         0       4       0       0       0       0
  1538 ;;      Locals:         0       1       0       0       0       0
  1539 ;;      Temps:          0       1       0       0       0       0
  1540 ;;      Totals:         0       6       0       0       0       0
  1541 ;;Total ram usage:        6 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_printf
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function ___lwmod
  1553  02EF                     ___lwmod:	
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1557  02EF  0020               	movlb	0	; select bank0
  1558  02F0  0829               	movf	___lwmod@divisor,w
  1559  02F1  042A               	iorwf	___lwmod@divisor+1,w
  1560  02F2  1903               	btfsc	3,2
  1561  02F3  2B17               	goto	l1158
  1562  02F4  01AE               	clrf	___lwmod@counter
  1563  02F5  0AAE               	incf	___lwmod@counter,f
  1564  02F6                     l1148:	
  1565  02F6  1BAA               	btfsc	___lwmod@divisor+1,7
  1566  02F7  2B02               	goto	l1150
  1567  02F8  3001               	movlw	1
  1568  02F9                     u625:	
  1569  02F9  35A9               	lslf	___lwmod@divisor,f
  1570  02FA  0DAA               	rlf	___lwmod@divisor+1,f
  1571  02FB  0B89               	decfsz	9,f
  1572  02FC  2AF9               	goto	u625
  1573  02FD  3001               	movlw	1
  1574  02FE  00AD               	movwf	??___lwmod
  1575  02FF  082D               	movf	??___lwmod,w
  1576  0300  07AE               	addwf	___lwmod@counter,f
  1577  0301  2AF6               	goto	l1148
  1578  0302                     l1150:	
  1579  0302  082A               	movf	___lwmod@divisor+1,w
  1580  0303  022C               	subwf	___lwmod@dividend+1,w
  1581  0304  1D03               	skipz
  1582  0305  2B08               	goto	u645
  1583  0306  0829               	movf	___lwmod@divisor,w
  1584  0307  022B               	subwf	___lwmod@dividend,w
  1585  0308                     u645:	
  1586  0308  1C03               	skipc
  1587  0309  2B0E               	goto	l1154
  1588  030A  0829               	movf	___lwmod@divisor,w
  1589  030B  02AB               	subwf	___lwmod@dividend,f
  1590  030C  082A               	movf	___lwmod@divisor+1,w
  1591  030D  3BAC               	subwfb	___lwmod@dividend+1,f
  1592  030E                     l1154:	
  1593  030E  3001               	movlw	1
  1594  030F                     u655:	
  1595  030F  36AA               	lsrf	___lwmod@divisor+1,f
  1596  0310  0CA9               	rrf	___lwmod@divisor,f
  1597  0311  0B89               	decfsz	9,f
  1598  0312  2B0F               	goto	u655
  1599  0313  3001               	movlw	1
  1600  0314  02AE               	subwf	___lwmod@counter,f
  1601  0315  1D03               	btfss	3,2
  1602  0316  2B02               	goto	l1150
  1603  0317                     l1158:	
  1604  0317  082C               	movf	___lwmod@dividend+1,w
  1605  0318  00AA               	movwf	?___lwmod+1
  1606  0319  082B               	movf	___lwmod@dividend,w
  1607  031A  00A9               	movwf	?___lwmod
  1608  031B  0008               	return
  1609  031C                     __end_of___lwmod:	
  1610                           
  1611                           	psect	text4
  1612  028B                     __ptext4:	
  1613 ;; *************** function ___lwdiv *****************
  1614 ;; Defined at:
  1615 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  divisor         2    1[BANK0 ] unsigned int 
  1618 ;;  dividend        2    3[BANK0 ] unsigned int 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  quotient        2    6[BANK0 ] unsigned int 
  1621 ;;  counter         1    8[BANK0 ] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    1[BANK0 ] unsigned int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1631 ;;      Params:         0       4       0       0       0       0
  1632 ;;      Locals:         0       3       0       0       0       0
  1633 ;;      Temps:          0       1       0       0       0       0
  1634 ;;      Totals:         0       8       0       0       0       0
  1635 ;;Total ram usage:        8 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    3
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_printf
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function ___lwdiv
  1647  028B                     ___lwdiv:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1651  028B  0020               	movlb	0	; select bank0
  1652  028C  01A6               	clrf	___lwdiv@quotient
  1653  028D  01A7               	clrf	___lwdiv@quotient+1
  1654  028E  0821               	movf	___lwdiv@divisor,w
  1655  028F  0422               	iorwf	___lwdiv@divisor+1,w
  1656  0290  1903               	btfsc	3,2
  1657  0291  2ABB               	goto	l1136
  1658  0292  01A8               	clrf	___lwdiv@counter
  1659  0293  0AA8               	incf	___lwdiv@counter,f
  1660  0294                     l1124:	
  1661  0294  1BA2               	btfsc	___lwdiv@divisor+1,7
  1662  0295  2AA0               	goto	l1126
  1663  0296  3001               	movlw	1
  1664  0297                     u555:	
  1665  0297  35A1               	lslf	___lwdiv@divisor,f
  1666  0298  0DA2               	rlf	___lwdiv@divisor+1,f
  1667  0299  0B89               	decfsz	9,f
  1668  029A  2A97               	goto	u555
  1669  029B  3001               	movlw	1
  1670  029C  00A5               	movwf	??___lwdiv
  1671  029D  0825               	movf	??___lwdiv,w
  1672  029E  07A8               	addwf	___lwdiv@counter,f
  1673  029F  2A94               	goto	l1124
  1674  02A0                     l1126:	
  1675  02A0  3001               	movlw	1
  1676  02A1                     u575:	
  1677  02A1  35A6               	lslf	___lwdiv@quotient,f
  1678  02A2  0DA7               	rlf	___lwdiv@quotient+1,f
  1679  02A3  0B89               	decfsz	9,f
  1680  02A4  2AA1               	goto	u575
  1681  02A5  0822               	movf	___lwdiv@divisor+1,w
  1682  02A6  0224               	subwf	___lwdiv@dividend+1,w
  1683  02A7  1D03               	skipz
  1684  02A8  2AAB               	goto	u585
  1685  02A9  0821               	movf	___lwdiv@divisor,w
  1686  02AA  0223               	subwf	___lwdiv@dividend,w
  1687  02AB                     u585:	
  1688  02AB  1C03               	skipc
  1689  02AC  2AB2               	goto	l1132
  1690  02AD  0821               	movf	___lwdiv@divisor,w
  1691  02AE  02A3               	subwf	___lwdiv@dividend,f
  1692  02AF  0822               	movf	___lwdiv@divisor+1,w
  1693  02B0  3BA4               	subwfb	___lwdiv@dividend+1,f
  1694  02B1  1426               	bsf	___lwdiv@quotient,0
  1695  02B2                     l1132:	
  1696  02B2  3001               	movlw	1
  1697  02B3                     u595:	
  1698  02B3  36A2               	lsrf	___lwdiv@divisor+1,f
  1699  02B4  0CA1               	rrf	___lwdiv@divisor,f
  1700  02B5  0B89               	decfsz	9,f
  1701  02B6  2AB3               	goto	u595
  1702  02B7  3001               	movlw	1
  1703  02B8  02A8               	subwf	___lwdiv@counter,f
  1704  02B9  1D03               	btfss	3,2
  1705  02BA  2AA0               	goto	l1126
  1706  02BB                     l1136:	
  1707  02BB  0827               	movf	___lwdiv@quotient+1,w
  1708  02BC  00A2               	movwf	?___lwdiv+1
  1709  02BD  0826               	movf	___lwdiv@quotient,w
  1710  02BE  00A1               	movwf	?___lwdiv
  1711  02BF  0008               	return
  1712  02C0                     __end_of___lwdiv:	
  1713                           
  1714                           	psect	text5
  1715  03AB                     __ptext5:	
  1716 ;; *************** function _Timer4_Init *****************
  1717 ;; Defined at:
  1718 ;;		line 3 in file "Timer4.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1732 ;;      Params:         0       0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    3
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _Timer4_Init
  1748  03AB                     _Timer4_Init:	
  1749                           
  1750                           ;Timer4.c: 5: PR4 = 0x64;
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _Timer4_Init: [wreg+status,2]
  1754  03AB  3064               	movlw	100
  1755  03AC  0028               	movlb	8	; select bank8
  1756  03AD  0096               	movwf	22	;volatile
  1757                           
  1758                           ;Timer4.c: 6: TMR4 = 0x00;
  1759  03AE  0195               	clrf	21	;volatile
  1760                           
  1761                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  1762  03AF  1497               	bsf	23,1	;volatile
  1763                           
  1764                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  1765  03B0  0817               	movf	23,w	;volatile
  1766                           
  1767                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  1768  03B1  1517               	bsf	23,2	;volatile
  1769                           
  1770                           ;Timer4.c: 11: TMR4IF = 0;
  1771  03B2  0020               	movlb	0	; select bank0
  1772  03B3  1093               	bcf	19,1	;volatile
  1773                           
  1774                           ;Timer4.c: 12: TMR4IE = 1;
  1775  03B4  0021               	movlb	1	; select bank1
  1776  03B5  1493               	bsf	19,1	;volatile
  1777                           
  1778                           ;Timer4.c: 13: PEIE = 1;
  1779  03B6  170B               	bsf	11,6	;volatile
  1780                           
  1781                           ;Timer4.c: 14: GIE = 1;
  1782  03B7  178B               	bsf	11,7	;volatile
  1783  03B8  0008               	return
  1784  03B9                     __end_of_Timer4_Init:	
  1785                           
  1786                           	psect	text6
  1787  03EB                     __ptext6:	
  1788 ;; *************** function _Timer1_StartCount *****************
  1789 ;; Defined at:
  1790 ;;		line 31 in file "Timer1.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1804 ;;      Params:         0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    4
  1811 ;; This function calls:
  1812 ;;		_Timer1_ClearRecord
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _Timer1_StartCount
  1820  03EB                     _Timer1_StartCount:	
  1821                           
  1822                           ;Timer1.c: 33: Timer1_ClearRecord();
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  1826  03EB  3183  231C         	fcall	_Timer1_ClearRecord
  1827                           
  1828                           ;Timer1.c: 34: TMR1ON = 1;
  1829  03ED  0020               	movlb	0	; select bank0
  1830  03EE  1418               	bsf	24,0	;volatile
  1831  03EF  0008               	return
  1832  03F0                     __end_of_Timer1_StartCount:	
  1833                           
  1834                           	psect	text7
  1835  031C                     __ptext7:	
  1836 ;; *************** function _Timer1_ClearRecord *****************
  1837 ;; Defined at:
  1838 ;;		line 42 in file "Timer1.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1852 ;;      Params:         0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    3
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_Timer1_StartCount
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _Timer1_ClearRecord
  1868  031C                     _Timer1_ClearRecord:	
  1869                           
  1870                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _Timer1_ClearRecord: [wreg]
  1874  031C  0020               	movlb	0	; select bank0
  1875  031D  1018               	bcf	24,0	;volatile
  1876  031E  30FF               	movlw	255
  1877  031F  0097               	movwf	23	;volatile
  1878  0320  30F5               	movlw	245
  1879  0321  0096               	movwf	22	;volatile
  1880  0322  1418               	bsf	24,0	;volatile
  1881                           
  1882                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  1883  0323  3000               	movlw	0
  1884  0324  00C4               	movwf	_cnts+3
  1885  0325  3000               	movlw	0
  1886  0326  00C3               	movwf	_cnts+2
  1887  0327  3000               	movlw	0
  1888  0328  00C2               	movwf	_cnts+1
  1889  0329  3000               	movlw	0
  1890  032A  00C1               	movwf	_cnts
  1891                           
  1892                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  1893  032B  3000               	movlw	0
  1894  032C  00C8               	movwf	_cnts+7
  1895  032D  3000               	movlw	0
  1896  032E  00C7               	movwf	_cnts+6
  1897  032F  3000               	movlw	0
  1898  0330  00C6               	movwf	_cnts+5
  1899  0331  3000               	movlw	0
  1900  0332  00C5               	movwf	_cnts+4
  1901                           
  1902                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  1903  0333  3000               	movlw	0
  1904  0334  00CE               	movwf	_cnts+13
  1905  0335  3000               	movlw	0
  1906  0336  00CD               	movwf	_cnts+12
  1907  0337  3000               	movlw	0
  1908  0338  00CC               	movwf	_cnts+11
  1909  0339  3000               	movlw	0
  1910  033A  00CB               	movwf	_cnts+10
  1911                           
  1912                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  1913  033B  3000               	movlw	0
  1914  033C  00D2               	movwf	_tcnt+3
  1915  033D  3000               	movlw	0
  1916  033E  00D1               	movwf	_tcnt+2
  1917  033F  3000               	movlw	0
  1918  0340  00D0               	movwf	_tcnt+1
  1919  0341  3000               	movlw	0
  1920  0342  00CF               	movwf	_tcnt
  1921  0343  0008               	return
  1922  0344                     __end_of_Timer1_ClearRecord:	
  1923                           
  1924                           	psect	text8
  1925  0344                     __ptext8:	
  1926 ;; *************** function _Timer1_Init *****************
  1927 ;; Defined at:
  1928 ;;		line 6 in file "Timer1.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1942 ;;      Params:         0       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0
  1944 ;;      Temps:          0       1       0       0       0       0
  1945 ;;      Totals:         0       1       0       0       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _Timer1_Init
  1958  0344                     _Timer1_Init:	
  1959                           
  1960                           ;Timer1.c: 8: TRISB |= (1<<6);
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  1964  0344  0021               	movlb	1	; select bank1
  1965  0345  170D               	bsf	13,6	;volatile
  1966                           
  1967                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  1968  0346  30BF               	movlw	191
  1969  0347  0020               	movlb	0	; select bank0
  1970  0348  00A1               	movwf	??_Timer1_Init
  1971  0349  0821               	movf	??_Timer1_Init,w
  1972  034A  0023               	movlb	3	; select bank3
  1973  034B  058D               	andwf	13,f	;volatile
  1974                           
  1975                           ;Timer1.c: 10: WPUB |= (1<<6);
  1976  034C  0024               	movlb	4	; select bank4
  1977  034D  170D               	bsf	13,6	;volatile
  1978                           
  1979                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  1980  034E  0020               	movlb	0	; select bank0
  1981  034F  1518               	bsf	24,2	;volatile
  1982                           
  1983                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  1984  0350  30F7               	movlw	247
  1985  0351  00A1               	movwf	??_Timer1_Init
  1986  0352  0821               	movf	??_Timer1_Init,w
  1987  0353  0598               	andwf	24,f	;volatile
  1988                           
  1989                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  1990  0354  0818               	movf	24,w	;volatile
  1991                           
  1992                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  1993  0355  1798               	bsf	24,7	;volatile
  1994                           
  1995                           ;Timer1.c: 17: T1GCON = 0x00;
  1996  0356  0199               	clrf	25	;volatile
  1997                           
  1998                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  1999  0357  1018               	bcf	24,0	;volatile
  2000  0358  30FF               	movlw	255
  2001  0359  0097               	movwf	23	;volatile
  2002  035A  30F5               	movlw	245
  2003  035B  0096               	movwf	22	;volatile
  2004  035C  1418               	bsf	24,0	;volatile
  2005                           
  2006                           ;Timer1.c: 21: TMR1IF = 0;
  2007  035D  1011               	bcf	17,0	;volatile
  2008                           
  2009                           ;Timer1.c: 22: TMR1IE = 1;
  2010  035E  0021               	movlb	1	; select bank1
  2011  035F  1411               	bsf	17,0	;volatile
  2012                           
  2013                           ;Timer1.c: 23: PEIE = 1;
  2014  0360  170B               	bsf	11,6	;volatile
  2015                           
  2016                           ;Timer1.c: 24: GIE = 1;
  2017  0361  178B               	bsf	11,7	;volatile
  2018                           
  2019                           ;Timer1.c: 26: TMR1ON = 0;
  2020  0362  0020               	movlb	0	; select bank0
  2021  0363  1018               	bcf	24,0	;volatile
  2022  0364  0008               	return
  2023  0365                     __end_of_Timer1_Init:	
  2024                           
  2025                           	psect	text9
  2026  03C4                     __ptext9:	
  2027 ;; *************** function _Timer1_GetCountSum *****************
  2028 ;; Defined at:
  2029 ;;		line 51 in file "Timer1.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  4    1[BANK0 ] unsigned long 
  2036 ;; Registers used:
  2037 ;;		wreg
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2043 ;;      Params:         0       4       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0
  2046 ;;      Totals:         0       4       0       0       0       0
  2047 ;;Total ram usage:        4 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    3
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _Timer1_GetCountSum
  2059  03C4                     _Timer1_GetCountSum:	
  2060                           
  2061                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _Timer1_GetCountSum: [wreg]
  2065  03C4  0020               	movlb	0	; select bank0
  2066  03C5  0844               	movf	_cnts+3,w
  2067  03C6  00A4               	movwf	?_Timer1_GetCountSum+3
  2068  03C7  0843               	movf	_cnts+2,w
  2069  03C8  00A3               	movwf	?_Timer1_GetCountSum+2
  2070  03C9  0842               	movf	_cnts+1,w
  2071  03CA  00A2               	movwf	?_Timer1_GetCountSum+1
  2072  03CB  0841               	movf	_cnts,w
  2073  03CC  00A1               	movwf	?_Timer1_GetCountSum
  2074  03CD  0008               	return
  2075  03CE                     __end_of_Timer1_GetCountSum:	
  2076                           
  2077                           	psect	text10
  2078  03E5                     __ptext10:	
  2079 ;; *************** function _Timer1_GetCPM *****************
  2080 ;; Defined at:
  2081 ;;		line 56 in file "Timer1.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    1[BANK0 ] unsigned int 
  2088 ;; Registers used:
  2089 ;;		wreg
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2095 ;;      Params:         0       2       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0
  2098 ;;      Totals:         0       2       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    3
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_main
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _Timer1_GetCPM
  2111  03E5                     _Timer1_GetCPM:	
  2112                           
  2113                           ;Timer1.c: 58: return cnts.AverageCPM;
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _Timer1_GetCPM: [wreg]
  2117  03E5  0020               	movlb	0	; select bank0
  2118  03E6  084A               	movf	_cnts+9,w
  2119  03E7  00A2               	movwf	?_Timer1_GetCPM+1
  2120  03E8  0849               	movf	_cnts+8,w
  2121  03E9  00A1               	movwf	?_Timer1_GetCPM
  2122  03EA  0008               	return
  2123  03EB                     __end_of_Timer1_GetCPM:	
  2124                           
  2125                           	psect	text11
  2126  0191                     __ptext11:	
  2127 ;; *************** function _LCD_Init *****************
  2128 ;; Defined at:
  2129 ;;		line 28 in file "LCD.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2143 ;;      Params:         0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0
  2145 ;;      Temps:          0       2       0       0       0       0
  2146 ;;      Totals:         0       2       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    5
  2150 ;; This function calls:
  2151 ;;		_LCD_DisplayClear
  2152 ;;		_LCD_WriteData
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _LCD_Init
  2160  0191                     _LCD_Init:	
  2161                           
  2162                           ;LCD.c: 30: RA3 = 0;
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2166  0191  0020               	movlb	0	; select bank0
  2167  0192  118C               	bcf	12,3	;volatile
  2168                           
  2169                           ;LCD.c: 31: RA4 = 0;
  2170  0193  120C               	bcf	12,4	;volatile
  2171                           
  2172                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2173  0194  3002               	movlw	2
  2174  0195  0020               	movlb	0	; select bank0
  2175  0196  00A6               	movwf	??_LCD_Init+1
  2176  0197  3038               	movlw	56
  2177  0198  00A5               	movwf	??_LCD_Init
  2178  0199  30AD               	movlw	173
  2179  019A                     u897:	
  2180  019A  0B89               	decfsz	9,f
  2181  019B  299A               	goto	u897
  2182  019C  0BA5               	decfsz	??_LCD_Init,f
  2183  019D  299A               	goto	u897
  2184  019E  0BA6               	decfsz	??_LCD_Init+1,f
  2185  019F  299A               	goto	u897
  2186                           
  2187                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2188  01A0  3003               	movlw	3
  2189  01A1  0020               	movlb	0	; select bank0
  2190  01A2  008D               	movwf	13	;volatile
  2191                           
  2192                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2193  01A3  160C               	bsf	12,4	;volatile
  2194  01A4  3200               	nop2	;2 cycle nop
  2195  01A5  3200               	nop2	;2 cycle nop
  2196  01A6  3200               	nop2	;2 cycle nop
  2197  01A7  3200               	nop2	;2 cycle nop
  2198  01A8  0020               	movlb	0	; select bank0
  2199  01A9  120C               	bcf	12,4	;volatile
  2200  01AA  3200               	nop2	;2 cycle nop
  2201  01AB  3200               	nop2	;2 cycle nop
  2202  01AC  3200               	nop2	;2 cycle nop
  2203  01AD  3200               	nop2	;2 cycle nop
  2204                           
  2205                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2206  01AE  3034               	movlw	52
  2207  01AF  0020               	movlb	0	; select bank0
  2208  01B0  00A5               	movwf	??_LCD_Init
  2209  01B1  30F1               	movlw	241
  2210  01B2                     u907:	
  2211  01B2  0B89               	decfsz	9,f
  2212  01B3  29B2               	goto	u907
  2213  01B4  0BA5               	decfsz	??_LCD_Init,f
  2214  01B5  29B2               	goto	u907
  2215  01B6  3200               	nop2
  2216                           
  2217                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2218  01B7  0020               	movlb	0	; select bank0
  2219  01B8  160C               	bsf	12,4	;volatile
  2220  01B9  3200               	nop2	;2 cycle nop
  2221  01BA  3200               	nop2	;2 cycle nop
  2222  01BB  3200               	nop2	;2 cycle nop
  2223  01BC  3200               	nop2	;2 cycle nop
  2224  01BD  0020               	movlb	0	; select bank0
  2225  01BE  120C               	bcf	12,4	;volatile
  2226  01BF  3200               	nop2	;2 cycle nop
  2227  01C0  3200               	nop2	;2 cycle nop
  2228  01C1  3200               	nop2	;2 cycle nop
  2229  01C2  3200               	nop2	;2 cycle nop
  2230                           
  2231                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2232  01C3  3005               	movlw	5
  2233  01C4  0020               	movlb	0	; select bank0
  2234  01C5  00A5               	movwf	??_LCD_Init
  2235  01C6  3026               	movlw	38
  2236  01C7                     u917:	
  2237  01C7  0B89               	decfsz	9,f
  2238  01C8  29C7               	goto	u917
  2239  01C9  0BA5               	decfsz	??_LCD_Init,f
  2240  01CA  29C7               	goto	u917
  2241  01CB  0000               	nop
  2242                           
  2243                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2244  01CC  0020               	movlb	0	; select bank0
  2245  01CD  160C               	bsf	12,4	;volatile
  2246  01CE  3200               	nop2	;2 cycle nop
  2247  01CF  3200               	nop2	;2 cycle nop
  2248  01D0  3200               	nop2	;2 cycle nop
  2249  01D1  3200               	nop2	;2 cycle nop
  2250  01D2  0020               	movlb	0	; select bank0
  2251  01D3  120C               	bcf	12,4	;volatile
  2252  01D4  3200               	nop2	;2 cycle nop
  2253  01D5  3200               	nop2	;2 cycle nop
  2254  01D6  3200               	nop2	;2 cycle nop
  2255  01D7  3200               	nop2	;2 cycle nop
  2256                           
  2257                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2258  01D8  3005               	movlw	5
  2259  01D9  0020               	movlb	0	; select bank0
  2260  01DA  00A5               	movwf	??_LCD_Init
  2261  01DB  3026               	movlw	38
  2262  01DC                     u927:	
  2263  01DC  0B89               	decfsz	9,f
  2264  01DD  29DC               	goto	u927
  2265  01DE  0BA5               	decfsz	??_LCD_Init,f
  2266  01DF  29DC               	goto	u927
  2267  01E0  0000               	nop
  2268                           
  2269                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2270  01E1  3002               	movlw	2
  2271  01E2  0020               	movlb	0	; select bank0
  2272  01E3  008D               	movwf	13	;volatile
  2273                           
  2274                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2275  01E4  160C               	bsf	12,4	;volatile
  2276  01E5  3200               	nop2	;2 cycle nop
  2277  01E6  3200               	nop2	;2 cycle nop
  2278  01E7  3200               	nop2	;2 cycle nop
  2279  01E8  3200               	nop2	;2 cycle nop
  2280  01E9  0020               	movlb	0	; select bank0
  2281  01EA  120C               	bcf	12,4	;volatile
  2282  01EB  3200               	nop2	;2 cycle nop
  2283  01EC  3200               	nop2	;2 cycle nop
  2284  01ED  3200               	nop2	;2 cycle nop
  2285  01EE  3200               	nop2	;2 cycle nop
  2286                           
  2287                           ;LCD.c: 44: LCD_WriteData(0x28);
  2288  01EF  3028               	movlw	40
  2289  01F0  3182  2250  3181   	fcall	_LCD_WriteData
  2290                           
  2291                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2292  01F3  300C               	movlw	12
  2293  01F4  3182  2250  3181   	fcall	_LCD_WriteData
  2294                           
  2295                           ;LCD.c: 46: LCD_DisplayClear();
  2296  01F7  3183  238B  3181   	fcall	_LCD_DisplayClear
  2297                           
  2298                           ;LCD.c: 47: LCD_WriteData(0x06);
  2299  01FA  3006               	movlw	6
  2300  01FB  3182  2250         	fcall	_LCD_WriteData
  2301  01FD  0008               	return
  2302  01FE                     __end_of_LCD_Init:	
  2303                           
  2304                           	psect	text12
  2305  038B                     __ptext12:	
  2306 ;; *************** function _LCD_DisplayClear *****************
  2307 ;; Defined at:
  2308 ;;		line 73 in file "LCD.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2322 ;;      Params:         0       0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0
  2324 ;;      Temps:          0       1       0       0       0       0
  2325 ;;      Totals:         0       1       0       0       0       0
  2326 ;;Total ram usage:        1 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    4
  2329 ;; This function calls:
  2330 ;;		_LCD_WriteData
  2331 ;; This function is called by:
  2332 ;;		_LCD_Init
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _LCD_DisplayClear
  2338  038B                     _LCD_DisplayClear:	
  2339                           
  2340                           ;LCD.c: 75: RA3 = 0;
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2344  038B  0020               	movlb	0	; select bank0
  2345  038C  118C               	bcf	12,3	;volatile
  2346                           
  2347                           ;LCD.c: 76: LCD_WriteData(0x01);
  2348  038D  3001               	movlw	1
  2349  038E  3182  2250  3183   	fcall	_LCD_WriteData
  2350                           
  2351                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  2352  0391  3015               	movlw	21
  2353  0392  0020               	movlb	0	; select bank0
  2354  0393  00A4               	movwf	??_LCD_DisplayClear
  2355  0394  30C6               	movlw	198
  2356  0395                     u937:	
  2357  0395  0B89               	decfsz	9,f
  2358  0396  2B95               	goto	u937
  2359  0397  0BA4               	decfsz	??_LCD_DisplayClear,f
  2360  0398  2B95               	goto	u937
  2361  0399  0000               	nop
  2362  039A  0008               	return
  2363  039B                     __end_of_LCD_DisplayClear:	
  2364                           
  2365                           	psect	text13
  2366  039B                     __ptext13:	
  2367 ;; *************** function _LCD_CursorHome *****************
  2368 ;; Defined at:
  2369 ;;		line 84 in file "LCD.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2383 ;;      Params:         0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0
  2385 ;;      Temps:          0       1       0       0       0       0
  2386 ;;      Totals:         0       1       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    4
  2390 ;; This function calls:
  2391 ;;		_LCD_WriteData
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _LCD_CursorHome
  2399  039B                     _LCD_CursorHome:	
  2400                           
  2401                           ;LCD.c: 86: RA3 = 0;
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  2405  039B  0020               	movlb	0	; select bank0
  2406  039C  118C               	bcf	12,3	;volatile
  2407                           
  2408                           ;LCD.c: 87: LCD_WriteData(0x02);
  2409  039D  3002               	movlw	2
  2410  039E  3182  2250  3183   	fcall	_LCD_WriteData
  2411                           
  2412                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  2413  03A1  3015               	movlw	21
  2414  03A2  0020               	movlb	0	; select bank0
  2415  03A3  00A4               	movwf	??_LCD_CursorHome
  2416  03A4  30C6               	movlw	198
  2417  03A5                     u947:	
  2418  03A5  0B89               	decfsz	9,f
  2419  03A6  2BA5               	goto	u947
  2420  03A7  0BA4               	decfsz	??_LCD_CursorHome,f
  2421  03A8  2BA5               	goto	u947
  2422  03A9  0000               	nop
  2423  03AA  0008               	return
  2424  03AB                     __end_of_LCD_CursorHome:	
  2425                           
  2426                           	psect	text14
  2427  0250                     __ptext14:	
  2428 ;; *************** function _LCD_WriteData *****************
  2429 ;; Defined at:
  2430 ;;		line 15 in file "LCD.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  point           1    wreg     char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  point           1    3[BANK0 ] char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2444 ;;      Params:         0       0       0       0       0       0
  2445 ;;      Locals:         0       1       0       0       0       0
  2446 ;;      Temps:          0       2       0       0       0       0
  2447 ;;      Totals:         0       3       0       0       0       0
  2448 ;;Total ram usage:        3 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    3
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_LCD_Init
  2455 ;;		_putch
  2456 ;;		_LCD_DisplayClear
  2457 ;;		_LCD_CursorHome
  2458 ;;		_LCD_Put
  2459 ;;		_LCD_CursorPosition
  2460 ;;		_LCD_CursorShift
  2461 ;;		_LCD_DispShift
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _LCD_WriteData
  2467  0250                     _LCD_WriteData:	
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2471                           ;LCD_WriteData@point stored from wreg
  2472  0250  0020               	movlb	0	; select bank0
  2473  0251  00A3               	movwf	LCD_WriteData@point
  2474                           
  2475                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2476  0252  30D5               	movlw	213
  2477  0253                     u957:	
  2478  0253  0B89               	decfsz	9,f
  2479  0254  2A53               	goto	u957
  2480  0255  0000               	nop
  2481                           
  2482                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2483  0256  0020               	movlb	0	; select bank0
  2484  0257  0823               	movf	LCD_WriteData@point,w
  2485  0258  00A1               	movwf	??_LCD_WriteData
  2486  0259  3004               	movlw	4
  2487  025A                     u465:	
  2488  025A  1003               	clrc
  2489  025B  1BA1               	btfsc	??_LCD_WriteData,7
  2490  025C  1403               	setc
  2491  025D  0CA1               	rrf	??_LCD_WriteData,f
  2492  025E  0B89               	decfsz	9,f
  2493  025F  2A5A               	goto	u465
  2494  0260  3003               	movlw	3
  2495  0261  0521               	andwf	??_LCD_WriteData,w
  2496  0262  00A2               	movwf	??_LCD_WriteData+1
  2497  0263  0E23               	swapf	LCD_WriteData@point,w
  2498  0264  390F               	andlw	15
  2499  0265  1989               	btfsc	9,3
  2500  0266  38F0               	iorlw	240
  2501  0267  390C               	andlw	12
  2502  0268  0709               	addwf	9,w
  2503  0269  0422               	iorwf	??_LCD_WriteData+1,w
  2504  026A  008D               	movwf	13	;volatile
  2505                           
  2506                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2507  026B  160C               	bsf	12,4	;volatile
  2508  026C  3200               	nop2	;2 cycle nop
  2509  026D  3200               	nop2	;2 cycle nop
  2510  026E  3200               	nop2	;2 cycle nop
  2511  026F  3200               	nop2	;2 cycle nop
  2512  0270  0020               	movlb	0	; select bank0
  2513  0271  120C               	bcf	12,4	;volatile
  2514  0272  3200               	nop2	;2 cycle nop
  2515  0273  3200               	nop2	;2 cycle nop
  2516  0274  3200               	nop2	;2 cycle nop
  2517  0275  3200               	nop2	;2 cycle nop
  2518                           
  2519                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2520  0276  3003               	movlw	3
  2521  0277  0020               	movlb	0	; select bank0
  2522  0278  0523               	andwf	LCD_WriteData@point,w
  2523  0279  00A1               	movwf	??_LCD_WriteData
  2524  027A  0823               	movf	LCD_WriteData@point,w
  2525  027B  390C               	andlw	12
  2526  027C  0709               	addwf	9,w
  2527  027D  0421               	iorwf	??_LCD_WriteData,w
  2528  027E  008D               	movwf	13	;volatile
  2529                           
  2530                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2531  027F  160C               	bsf	12,4	;volatile
  2532  0280  3200               	nop2	;2 cycle nop
  2533  0281  3200               	nop2	;2 cycle nop
  2534  0282  3200               	nop2	;2 cycle nop
  2535  0283  3200               	nop2	;2 cycle nop
  2536  0284  0020               	movlb	0	; select bank0
  2537  0285  120C               	bcf	12,4	;volatile
  2538  0286  3200               	nop2	;2 cycle nop
  2539  0287  3200               	nop2	;2 cycle nop
  2540  0288  3200               	nop2	;2 cycle nop
  2541  0289  3200               	nop2	;2 cycle nop
  2542  028A  0008               	return
  2543  028B                     __end_of_LCD_WriteData:	
  2544                           
  2545                           	psect	text15
  2546  0365                     __ptext15:	
  2547 ;; *************** function _Basic_Init *****************
  2548 ;; Defined at:
  2549 ;;		line 32 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      char 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2563 ;;      Params:         0       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    3
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _Basic_Init
  2579  0365                     _Basic_Init:	
  2580                           
  2581                           ;main.c: 34: OSCCON = 0xF0;
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Basic_Init: [wreg+status,2]
  2585  0365  30F0               	movlw	240
  2586  0366  0021               	movlb	1	; select bank1
  2587  0367  0099               	movwf	25	;volatile
  2588                           
  2589                           ;main.c: 38: TRISA = 0x07;
  2590  0368  3007               	movlw	7
  2591  0369  008C               	movwf	12	;volatile
  2592                           
  2593                           ;main.c: 39: ANSELA = 0x07;
  2594  036A  3007               	movlw	7
  2595  036B  0023               	movlb	3	; select bank3
  2596  036C  008C               	movwf	12	;volatile
  2597                           
  2598                           ;main.c: 41: TRISB = 0x40;
  2599  036D  3040               	movlw	64
  2600  036E  0021               	movlb	1	; select bank1
  2601  036F  008D               	movwf	13	;volatile
  2602                           
  2603                           ;main.c: 42: ANSELB = 0x00;
  2604  0370  0023               	movlb	3	; select bank3
  2605  0371  018D               	clrf	13	;volatile
  2606                           
  2607                           ;main.c: 44: APFCON0 = 0x08;
  2608  0372  3008               	movlw	8
  2609  0373  0022               	movlb	2	; select bank2
  2610  0374  009D               	movwf	29	;volatile
  2611                           
  2612                           ;main.c: 45: APFCON1 = 0x00;
  2613  0375  019E               	clrf	30	;volatile
  2614                           
  2615                           ;main.c: 47: PORTA = 0x00;
  2616  0376  0020               	movlb	0	; select bank0
  2617  0377  018C               	clrf	12	;volatile
  2618                           
  2619                           ;main.c: 48: PORTB = 0x00;
  2620  0378  018D               	clrf	13	;volatile
  2621  0379  0008               	return
  2622  037A                     __end_of_Basic_Init:	
  2623                           ;main.c: 50: return 0;
  2624                           ;	Return value of _Basic_Init is never used
  2625                           
  2626                           
  2627                           	psect	intentry
  2628  0004                     __pintentry:	
  2629 ;; *************** function _Handler *****************
  2630 ;; Defined at:
  2631 ;;		line 53 in file "main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2645 ;;      Params:         0       0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0
  2647 ;;      Temps:          0       1       0       0       0       0
  2648 ;;      Totals:         0       1       0       0       0       0
  2649 ;;Total ram usage:        1 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    2
  2652 ;; This function calls:
  2653 ;;		_Timer1_Count200us
  2654 ;;		_Timer1_DetectAssignCount
  2655 ;;		_Timer4_CheckFlag
  2656 ;; This function is called by:
  2657 ;;		Interrupt level 1
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661  0004                     _Handler:	
  2662                           
  2663                           ;incstack = 0
  2664  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2665                           
  2666                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2667  0005  3180               	pagesel	$
  2668  0006  0020               	movlb	0	; select bank0
  2669  0007  087F               	movf	127,w
  2670  0008  00A0               	movwf	??_Handler
  2671                           
  2672                           ;main.c: 55: if(Timer4_CheckFlag())
  2673  0009  3183  23B9  3180   	fcall	_Timer4_CheckFlag
  2674  000C  3A00               	xorlw	0
  2675  000D  1903               	skipnz
  2676  000E  2812               	goto	i1l1416
  2677                           
  2678                           ;main.c: 56: Timer1_Count200us();
  2679  000F  3183  23CE  3180   	fcall	_Timer1_Count200us
  2680  0012                     i1l1416:	
  2681                           
  2682                           ;main.c: 58: if(Timer1_DetectAssignCount())
  2683  0012  3180  20F9  3180   	fcall	_Timer1_DetectAssignCount
  2684  0015  3A00               	xorlw	0
  2685  0016  1903               	skipnz
  2686  0017  281B               	goto	i1l179
  2687                           
  2688                           ;main.c: 59: LATA6 = !LATA6;
  2689  0018  3040               	movlw	64
  2690  0019  0022               	movlb	2	; select bank2
  2691  001A  068C               	xorwf	12,f
  2692  001B                     i1l179:	
  2693  001B  0020               	movlb	0	; select bank0
  2694  001C  0820               	movf	??_Handler,w
  2695  001D  00FF               	movwf	127
  2696  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2697  001F  0009               	retfie
  2698  0020                     __end_of_Handler:	
  2699                           
  2700                           	psect	text17
  2701  03B9                     __ptext17:	
  2702 ;; *************** function _Timer4_CheckFlag *****************
  2703 ;; Defined at:
  2704 ;;		line 17 in file "Timer4.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2718 ;;      Params:         0       0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_Handler
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function _Timer4_CheckFlag
  2733  03B9                     _Timer4_CheckFlag:	
  2734                           
  2735                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _Timer4_CheckFlag: [wreg]
  2739  03B9  0021               	movlb	1	; select bank1
  2740  03BA  1C93               	btfss	19,1	;volatile
  2741  03BB  2BC2               	goto	i1l942
  2742  03BC  0020               	movlb	0	; select bank0
  2743  03BD  1C93               	btfss	19,1	;volatile
  2744  03BE  2BC2               	goto	i1l942
  2745                           
  2746                           ;Timer4.c: 20: {
  2747                           ;Timer4.c: 21: TMR4IF = 0;
  2748  03BF  1093               	bcf	19,1	;volatile
  2749                           
  2750                           ;Timer4.c: 22: return 1;
  2751  03C0  3001               	movlw	1
  2752  03C1  0008               	return
  2753  03C2                     i1l942:	
  2754                           
  2755                           ;Timer4.c: 23: }
  2756                           ;Timer4.c: 24: return 0;
  2757  03C2  3000               	movlw	0
  2758  03C3  0008               	return
  2759  03C4                     __end_of_Timer4_CheckFlag:	
  2760                           
  2761                           	psect	text18
  2762  00F9                     __ptext18:	
  2763 ;; *************** function _Timer1_DetectAssignCount *****************
  2764 ;; Defined at:
  2765 ;;		line 67 in file "Timer1.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      unsigned char 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2779 ;;      Params:         0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    1
  2786 ;; This function calls:
  2787 ;;		___lldiv
  2788 ;; This function is called by:
  2789 ;;		_Handler
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _Timer1_DetectAssignCount
  2795  00F9                     _Timer1_DetectAssignCount:	
  2796                           
  2797                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  2798                           ;Timer1.c: 71: if((tcnt.Delta_t>50000)&&((uint16_t)TMR1==PreviousTimer1))
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  2802  00F9  0020               	movlb	0	; select bank0
  2803  00FA  0852               	movf	_tcnt+3,w
  2804  00FB  1D03               	btfss	3,2
  2805  00FC  2906               	goto	i1l1258
  2806  00FD  0851               	movf	_tcnt+2,w
  2807  00FE  1D03               	btfss	3,2
  2808  00FF  2906               	goto	i1l1258
  2809  0100  3051               	movlw	81
  2810  0101  024F               	subwf	_tcnt,w
  2811  0102  30C3               	movlw	195
  2812  0103  3B50               	subwfb	_tcnt+1,w
  2813  0104  1C03               	btfss	3,0
  2814  0105  2916               	goto	i1l97
  2815  0106                     i1l1258:	
  2816  0106  0856               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  2817  0107  0617               	xorwf	23,w	;volatile
  2818  0108  1D03               	skipz
  2819  0109  290C               	goto	u68_25
  2820  010A  0855               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  2821  010B  0616               	xorwf	22,w	;volatile
  2822  010C                     u68_25:	
  2823  010C  1D03               	skipz
  2824  010D  2916               	goto	i1l97
  2825                           
  2826                           ;Timer1.c: 72: cnts.SigmaCPM = 0;
  2827  010E  3000               	movlw	0
  2828  010F  00C8               	movwf	_cnts+7
  2829  0110  3000               	movlw	0
  2830  0111  00C7               	movwf	_cnts+6
  2831  0112  3000               	movlw	0
  2832  0113  00C6               	movwf	_cnts+5
  2833  0114  3000               	movlw	0
  2834  0115  00C5               	movwf	_cnts+4
  2835  0116                     i1l97:	
  2836                           
  2837                           ;Timer1.c: 73: PreviousTimer1 = (uint16_t)TMR1;
  2838  0116  0817               	movf	23,w	;volatile
  2839  0117  00D6               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  2840  0118  0816               	movf	22,w	;volatile
  2841  0119  00D5               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  2842                           
  2843                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  2844  011A  3001               	movlw	1
  2845  011B  07D3               	addwf	_tcnt+4,f
  2846  011C  3000               	movlw	0
  2847  011D  3DD4               	addwfc	_tcnt+5,f
  2848                           
  2849                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  2850  011E  3013               	movlw	19
  2851  011F  0254               	subwf	_tcnt+5,w
  2852  0120  3089               	movlw	137
  2853  0121  1903               	skipnz
  2854  0122  0253               	subwf	_tcnt+4,w
  2855  0123  1C03               	skipc
  2856  0124  294D               	goto	i1l1268
  2857  0125  084E               	movf	_cnts+13,w
  2858  0126  044D               	iorwf	_cnts+12,w
  2859  0127  044C               	iorwf	_cnts+11,w
  2860  0128  044B               	iorwf	_cnts+10,w
  2861  0129  1903               	skipnz
  2862  012A  294D               	goto	i1l1268
  2863                           
  2864                           ;Timer1.c: 77: {
  2865                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  2866  012B  01D3               	clrf	_tcnt+4
  2867  012C  01D4               	clrf	_tcnt+5
  2868                           
  2869                           ;Timer1.c: 79: cnts.AverageCPM = cnts.SigmaCPM/cnts.Num_of_Detect;
  2870  012D  300A               	movlw	10
  2871  012E  3E41               	addlw	(low (_cnts| 0))& (0+255)
  2872  012F  0086               	movwf	6
  2873  0130  0187               	clrf	7
  2874  0131  3F40               	moviw [0]fsr1
  2875  0132  00F0               	movwf	___lldiv@divisor
  2876  0133  3F41               	moviw [1]fsr1
  2877  0134  00F1               	movwf	___lldiv@divisor+1
  2878  0135  3F42               	moviw [2]fsr1
  2879  0136  00F2               	movwf	___lldiv@divisor+2
  2880  0137  3F43               	moviw [3]fsr1
  2881  0138  00F3               	movwf	___lldiv@divisor+3
  2882  0139  3004               	movlw	4
  2883  013A  3E41               	addlw	(low (_cnts| 0))& (0+255)
  2884  013B  0086               	movwf	6
  2885  013C  0187               	clrf	7
  2886  013D  3F40               	moviw [0]fsr1
  2887  013E  00F4               	movwf	___lldiv@dividend
  2888  013F  3F41               	moviw [1]fsr1
  2889  0140  00F5               	movwf	___lldiv@dividend+1
  2890  0141  3F42               	moviw [2]fsr1
  2891  0142  00F6               	movwf	___lldiv@dividend+2
  2892  0143  3F43               	moviw [3]fsr1
  2893  0144  00F7               	movwf	___lldiv@dividend+3
  2894  0145  3181  21FE  3180   	fcall	___lldiv
  2895  0148  0871               	movf	?___lldiv+1,w
  2896  0149  0020               	movlb	0	; select bank0
  2897  014A  00CA               	movwf	_cnts+9
  2898  014B  0870               	movf	?___lldiv,w
  2899  014C  00C9               	movwf	_cnts+8
  2900  014D                     i1l1268:	
  2901                           
  2902                           ;Timer1.c: 80: }
  2903                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  2904  014D  1C11               	btfss	17,0	;volatile
  2905  014E  298F               	goto	i1l1292
  2906  014F  0021               	movlb	1	; select bank1
  2907  0150  1C11               	btfss	17,0	;volatile
  2908  0151  298F               	goto	i1l1292
  2909                           
  2910                           ;Timer1.c: 83: {
  2911                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 10UL;
  2912  0152  300A               	movlw	10
  2913  0153  0020               	movlb	0	; select bank0
  2914  0154  07C1               	addwf	_cnts,f
  2915  0155  3000               	movlw	0
  2916  0156  3DC2               	addwfc	_cnts+1,f
  2917  0157  3000               	movlw	0
  2918  0158  3DC3               	addwfc	_cnts+2,f
  2919  0159  3000               	movlw	0
  2920  015A  3DC4               	addwfc	_cnts+3,f
  2921                           
  2922                           ;Timer1.c: 86: cnts.SigmaCPM += (uint32_t)((10UL * 12000UL) / tcnt.Delta_t);
  2923  015B  0852               	movf	_tcnt+3,w
  2924  015C  00F3               	movwf	___lldiv@divisor+3
  2925  015D  0851               	movf	_tcnt+2,w
  2926  015E  00F2               	movwf	___lldiv@divisor+2
  2927  015F  0850               	movf	_tcnt+1,w
  2928  0160  00F1               	movwf	___lldiv@divisor+1
  2929  0161  084F               	movf	_tcnt,w
  2930  0162  00F0               	movwf	___lldiv@divisor
  2931  0163  3000               	movlw	0
  2932  0164  00F7               	movwf	___lldiv@dividend+3
  2933  0165  3001               	movlw	1
  2934  0166  00F6               	movwf	___lldiv@dividend+2
  2935  0167  30D4               	movlw	212
  2936  0168  00F5               	movwf	___lldiv@dividend+1
  2937  0169  30C0               	movlw	192
  2938  016A  00F4               	movwf	___lldiv@dividend
  2939  016B  3181  21FE         	fcall	___lldiv
  2940  016D  0870               	movf	?___lldiv,w
  2941  016E  0020               	movlb	0	; select bank0
  2942  016F  07C5               	addwf	_cnts+4,f
  2943  0170  0871               	movf	?___lldiv+1,w
  2944  0171  3DC6               	addwfc	_cnts+5,f
  2945  0172  0872               	movf	?___lldiv+2,w
  2946  0173  3DC7               	addwfc	_cnts+6,f
  2947  0174  0873               	movf	?___lldiv+3,w
  2948  0175  3DC8               	addwfc	_cnts+7,f
  2949                           
  2950                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  2951  0176  3001               	movlw	1
  2952  0177  07CB               	addwf	_cnts+10,f
  2953  0178  3000               	movlw	0
  2954  0179  3DCC               	addwfc	_cnts+11,f
  2955  017A  3000               	movlw	0
  2956  017B  3DCD               	addwfc	_cnts+12,f
  2957  017C  3000               	movlw	0
  2958  017D  3DCE               	addwfc	_cnts+13,f
  2959                           
  2960                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  2961  017E  3000               	movlw	0
  2962  017F  00D2               	movwf	_tcnt+3
  2963  0180  3000               	movlw	0
  2964  0181  00D1               	movwf	_tcnt+2
  2965  0182  3000               	movlw	0
  2966  0183  00D0               	movwf	_tcnt+1
  2967  0184  3000               	movlw	0
  2968  0185  00CF               	movwf	_tcnt
  2969                           
  2970                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1; };
  2971  0186  1018               	bcf	24,0	;volatile
  2972  0187  30FF               	movlw	255
  2973  0188  0097               	movwf	23	;volatile
  2974  0189  30F5               	movlw	245
  2975  018A  0096               	movwf	22	;volatile
  2976  018B  1418               	bsf	24,0	;volatile
  2977                           
  2978                           ;Timer1.c: 91: TMR1IF = 0;
  2979  018C  1011               	bcf	17,0	;volatile
  2980                           
  2981                           ;Timer1.c: 92: return 1;
  2982  018D  3001               	movlw	1
  2983  018E  0008               	return
  2984  018F                     i1l1292:	
  2985                           
  2986                           ;Timer1.c: 93: }
  2987                           ;Timer1.c: 94: return 0;
  2988  018F  3000               	movlw	0
  2989  0190  0008               	return
  2990  0191                     __end_of_Timer1_DetectAssignCount:	
  2991                           
  2992                           	psect	text19
  2993  01FE                     __ptext19:	
  2994 ;; *************** function ___lldiv *****************
  2995 ;; Defined at:
  2996 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  divisor         4    0[COMMON] unsigned long 
  2999 ;;  dividend        4    4[COMMON] unsigned long 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  quotient        4    9[COMMON] unsigned long 
  3002 ;;  counter         1   13[COMMON] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  4    0[COMMON] unsigned long 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3012 ;;      Params:         8       0       0       0       0       0
  3013 ;;      Locals:         5       0       0       0       0       0
  3014 ;;      Temps:          1       0       0       0       0       0
  3015 ;;      Totals:        14       0       0       0       0       0
  3016 ;;Total ram usage:       14 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_Timer1_DetectAssignCount
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function ___lldiv
  3027  01FE                     ___lldiv:	
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3031  01FE  3000               	movlw	0
  3032  01FF  00FC               	movwf	___lldiv@quotient+3
  3033  0200  3000               	movlw	0
  3034  0201  00FB               	movwf	___lldiv@quotient+2
  3035  0202  3000               	movlw	0
  3036  0203  00FA               	movwf	___lldiv@quotient+1
  3037  0204  3000               	movlw	0
  3038  0205  00F9               	movwf	___lldiv@quotient
  3039  0206  0873               	movf	___lldiv@divisor+3,w
  3040  0207  0472               	iorwf	___lldiv@divisor+2,w
  3041  0208  0471               	iorwf	___lldiv@divisor+1,w
  3042  0209  0470               	iorwf	___lldiv@divisor,w
  3043  020A  1903               	skipnz
  3044  020B  2A47               	goto	i1l1110
  3045  020C  01FD               	clrf	___lldiv@counter
  3046  020D  0AFD               	incf	___lldiv@counter,f
  3047  020E                     i1l1096:	
  3048  020E  1BF3               	btfsc	___lldiv@divisor+3,7
  3049  020F  2A1C               	goto	i1l1098
  3050  0210  3001               	movlw	1
  3051  0211                     u48_25:	
  3052  0211  35F0               	lslf	___lldiv@divisor,f
  3053  0212  0DF1               	rlf	___lldiv@divisor+1,f
  3054  0213  0DF2               	rlf	___lldiv@divisor+2,f
  3055  0214  0DF3               	rlf	___lldiv@divisor+3,f
  3056  0215  0B89               	decfsz	9,f
  3057  0216  2A11               	goto	u48_25
  3058  0217  3001               	movlw	1
  3059  0218  00F8               	movwf	??___lldiv
  3060  0219  0878               	movf	??___lldiv,w
  3061  021A  07FD               	addwf	___lldiv@counter,f
  3062  021B  2A0E               	goto	i1l1096
  3063  021C                     i1l1098:	
  3064  021C  3001               	movlw	1
  3065  021D                     u50_25:	
  3066  021D  35F9               	lslf	___lldiv@quotient,f
  3067  021E  0DFA               	rlf	___lldiv@quotient+1,f
  3068  021F  0DFB               	rlf	___lldiv@quotient+2,f
  3069  0220  0DFC               	rlf	___lldiv@quotient+3,f
  3070  0221  0B89               	decfsz	9,f
  3071  0222  2A1D               	goto	u50_25
  3072  0223  0873               	movf	___lldiv@divisor+3,w
  3073  0224  0277               	subwf	___lldiv@dividend+3,w
  3074  0225  1D03               	skipz
  3075  0226  2A31               	goto	u51_25
  3076  0227  0872               	movf	___lldiv@divisor+2,w
  3077  0228  0276               	subwf	___lldiv@dividend+2,w
  3078  0229  1D03               	skipz
  3079  022A  2A31               	goto	u51_25
  3080  022B  0871               	movf	___lldiv@divisor+1,w
  3081  022C  0275               	subwf	___lldiv@dividend+1,w
  3082  022D  1D03               	skipz
  3083  022E  2A31               	goto	u51_25
  3084  022F  0870               	movf	___lldiv@divisor,w
  3085  0230  0274               	subwf	___lldiv@dividend,w
  3086  0231                     u51_25:	
  3087  0231  1C03               	skipc
  3088  0232  2A3C               	goto	i1l1106
  3089  0233  0870               	movf	___lldiv@divisor,w
  3090  0234  02F4               	subwf	___lldiv@dividend,f
  3091  0235  0871               	movf	___lldiv@divisor+1,w
  3092  0236  3BF5               	subwfb	___lldiv@dividend+1,f
  3093  0237  0872               	movf	___lldiv@divisor+2,w
  3094  0238  3BF6               	subwfb	___lldiv@dividend+2,f
  3095  0239  0873               	movf	___lldiv@divisor+3,w
  3096  023A  3BF7               	subwfb	___lldiv@dividend+3,f
  3097  023B  1479               	bsf	___lldiv@quotient,0
  3098  023C                     i1l1106:	
  3099  023C  3001               	movlw	1
  3100  023D                     u52_25:	
  3101  023D  36F3               	lsrf	___lldiv@divisor+3,f
  3102  023E  0CF2               	rrf	___lldiv@divisor+2,f
  3103  023F  0CF1               	rrf	___lldiv@divisor+1,f
  3104  0240  0CF0               	rrf	___lldiv@divisor,f
  3105  0241  0B89               	decfsz	9,f
  3106  0242  2A3D               	goto	u52_25
  3107  0243  3001               	movlw	1
  3108  0244  02FD               	subwf	___lldiv@counter,f
  3109  0245  1D03               	btfss	3,2
  3110  0246  2A1C               	goto	i1l1098
  3111  0247                     i1l1110:	
  3112  0247  087C               	movf	___lldiv@quotient+3,w
  3113  0248  00F3               	movwf	?___lldiv+3
  3114  0249  087B               	movf	___lldiv@quotient+2,w
  3115  024A  00F2               	movwf	?___lldiv+2
  3116  024B  087A               	movf	___lldiv@quotient+1,w
  3117  024C  00F1               	movwf	?___lldiv+1
  3118  024D  0879               	movf	___lldiv@quotient,w
  3119  024E  00F0               	movwf	?___lldiv
  3120  024F  0008               	return
  3121  0250                     __end_of___lldiv:	
  3122                           
  3123                           	psect	text20
  3124  03CE                     __ptext20:	
  3125 ;; *************** function _Timer1_Count200us *****************
  3126 ;; Defined at:
  3127 ;;		line 62 in file "Timer1.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3141 ;;      Params:         0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_Handler
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _Timer1_Count200us
  3156  03CE                     _Timer1_Count200us:	
  3157                           
  3158                           ;Timer1.c: 64: tcnt.Delta_t++;
  3159                           
  3160                           ;incstack = 0
  3161                           ; Regs used in _Timer1_Count200us: [wreg]
  3162  03CE  3001               	movlw	1
  3163  03CF  0020               	movlb	0	; select bank0
  3164  03D0  07CF               	addwf	_tcnt,f
  3165  03D1  3000               	movlw	0
  3166  03D2  3DD0               	addwfc	_tcnt+1,f
  3167  03D3  3000               	movlw	0
  3168  03D4  3DD1               	addwfc	_tcnt+2,f
  3169  03D5  3000               	movlw	0
  3170  03D6  3DD2               	addwfc	_tcnt+3,f
  3171  03D7  0008               	return
  3172  03D8                     __end_of_Timer1_Count200us:	
  3173  007E                     btemp	set	126	;btemp
  3174  007E                     int$flags	set	126
  3175  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      55
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1393
                         _Basic_Init
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8    1129
                                             15 BANK0     18    10      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handler                                              1     1      0     374
                                              0 BANK0      1     1      0
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                   _Timer4_CheckFlag
 ---------------------------------------------------------------------------------
 (5) _Timer4_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timer1_DetectAssignCount                             0     0      0     374
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (5) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_CheckFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      45       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      45      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 11:43:12 2017

                        _LCD_CursorHome 039B                             __CFG_CP$OFF 0000  
                                   l200 0051                                     l212 00F8  
                                   l168 02CF                                     l198 006D  
                                   _GIE 005F                                     _RA3 0063  
                                   _RA4 0064                                     _PR4 0416  
                          __CFG_CPD$OFF 0000                                     u465 025A  
                                   u625 02F9                                     u555 0297  
                                   u645 0308                                     u575 02A1  
                                   u655 030F                                     u585 02AB  
                                   u907 01B2                                     u595 02B3  
                                   u917 01C7                                     u927 01DC  
                                   u775 00AC                                     u937 0395  
                                   u947 03A5                                     u957 0253  
                                   u897 019A                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 0365  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 007E  
                                  l1132 02B2                                    l1124 0294  
                                  l1126 02A0                                    l1150 0302  
                                  l1136 02BB                                    l1154 030E  
                                  l1148 02F6                                    l1332 0053  
                                  l1158 0317                                    l1360 00B6  
                                  l1344 0086                                    l1328 004E  
                                  l1370 00C3                                    l1354 0097  
                                  l1364 00BE                                    l1348 0091  
                                  l1372 0032                                    STR_1 0384  
                                  _PEIE 005E                                    i1l97 0116  
                                  _TMR1 0016                                    _TMR4 0415  
                                  _WPUB 020D                            __CFG_WRT$OFF 0000  
                                  _cnts 0041                                    _main 02C0  
                                  _tcnt 004F                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                                  start 0020                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0020                  __end_of_LCD_CursorHome 03AB  
                         _LCD_WriteData 0250                           __CFG_MCLRE$ON 0000  
              __end_of_LCD_DisplayClear 039B                        __end_of_LCD_Init 01FE  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                         __CFG_WDTE$OFF 0000                         __end_of___lldiv 0250  
                                 _T1CON 0018                                   _LATA6 0866  
                                 _T4CON 0417                         __end_of___lwdiv 02C0  
           __size_of_Timer1_ClearRecord 0028                         __end_of___lwmod 031C  
                                 i1l179 001B                                   i1l942 03C2  
                                 u50_25 021D                                   _PORTA 000C  
                                 _PORTB 000D                                   u51_25 0231  
                                 u52_25 023D                                   u48_25 0211  
                                 _TRISA 008C                                   _TRISB 008D  
                                 u68_25 010C                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                         __end_of_dpowers 0384  
                                 _putch 03D8                   __end_of_Timer1_GetCPM 03EB  
           __size_of_Timer1_GetCountSum 000A                                   status 0003  
                                 wtemp0 007E                          ?_LCD_WriteData 0070  
                       ?_LCD_CursorHome 0070                         __initialization 0022  
                          __end_of_main 02EF                                  ??_main 0041  
                           ?_Basic_Init 0070                                  _ANSELA 018C  
                                ?_putch 0070                                  _ANSELB 018D  
                                _T1GCON 0019                                  i1l1110 0247  
                                i1l1106 023C                                  i1l1096 020E  
                                i1l1416 0012                                  i1l1098 021C  
                                i1l1258 0106                                  i1l1292 018F  
                                i1l1268 014D                                  _OSCCON 0099  
                                _TMR1IE 0488                                  _TMR1IF 0088  
                             ??_Handler 0020                                  _TMR4IE 0499  
                                _TMR4IF 0099                                  _TMR1ON 00C0  
                         ??_Timer1_Init 0021                           ??_Timer4_Init 0021  
                             ??___lldiv 0078                               ??___lwdiv 0025  
                             ??___lwmod 002D                                  _printf 002D  
                     ?_Timer4_CheckFlag 0070                      ??_Timer4_CheckFlag 0070  
                                putch@c 0024                 __end_of__initialization 0029  
                             ?_LCD_Init 0070                         ??_LCD_WriteData 0021  
                        __pcstackCOMMON 0070                     __size_of_Basic_Init 0015  
                         __end_of_putch 03DF                     __end_of_Timer1_Init 0365  
                   __end_of_Timer4_Init 03B9                                 ??_putch 0024  
                            __pbssBANK0 0041                              ??_LCD_Init 0025  
                            __pmaintext 02C0                              __pintentry 0004  
                     ?_LCD_DisplayClear 0070                                 _APFCON0 011D  
                               _APFCON1 011E                                 ?_printf 002F  
                    ??_LCD_DisplayClear 0024                        ??_LCD_CursorHome 0024  
                               _Handler 0004                       _Timer1_Count200us 03CE  
                           _Timer1_Init 0344                             _Timer4_Init 03AB  
                    ?_Timer1_Count200us 0070       __size_of_Timer1_DetectAssignCount 0098  
             ?_Timer1_DetectAssignCount 0070                                 ___lldiv 01FE  
                               ___lwdiv 028B                                 ___lwmod 02EF  
                       __CFG_STVREN$OFF 0000              __end_of_Timer1_ClearRecord 0344  
                               __ptext1 002D                                 __ptext2 03D8  
                               __ptext3 02EF                                 __ptext4 028B  
                               __ptext5 03AB                                 __ptext6 03EB  
                               __ptext7 031C                                 __ptext8 0344  
                               __ptext9 03C4                     ??_Timer1_Count200us 0070  
                       __size_of_printf 00CC                                 _dpowers 037A  
                          ??_Basic_Init 0021                                 clrloop0 03E0  
            __end_of_Timer1_GetCountSum 03CE                    end_of_initialization 0029  
             __end_of_Timer1_Count200us 03D8                         ___lldiv@divisor 0070  
                       ___lldiv@counter 007D                                 printf@c 0040  
                               printf@f 002F                      __end_of_Basic_Init 037A  
                          __pstringtext 037A                  __size_of_Timer1_GetCPM 0006  
                      __CFG_FOSC$INTOSC 0000               __size_of_Timer4_CheckFlag 000B  
                     __size_of_LCD_Init 006D                       _Timer1_StartCount 03EB  
                    ?_Timer1_StartCount 0070                     ??_Timer1_StartCount 0021  
                        __end_of_printf 00F9                     start_initialization 0022  
                         _Timer1_GetCPM 03E5              __size_of_Timer1_Count200us 000A  
             __end_of_Timer1_StartCount 03F0                   __end_of_LCD_WriteData 028B  
                              ??_printf 0037                               ___latbits 0001  
                         __pcstackBANK0 0020               __size_of_LCD_DisplayClear 0010  
                        ?_Timer1_GetCPM 0021        __end_of_Timer1_DetectAssignCount 0191  
                              ?_Handler 0070                            ?_Timer1_Init 0070  
                      ___lwdiv@dividend 0023                            ?_Timer4_Init 0070  
                              ?___lldiv 0070                                ?___lwdiv 0021  
                              ?___lwmod 0029  Timer1_DetectAssignCount@PreviousTimer1 0055  
                      ___lwdiv@quotient 0026                      _Timer1_ClearRecord 031C  
                        __size_of_putch 0007                        _Timer4_CheckFlag 03B9  
                              _LCD_Init 0191                     ?_Timer1_ClearRecord 0070  
            __size_of_Timer1_StartCount 0005                               clear_ram0 03DF  
                    _Timer1_GetCountSum 03C4                     ?_Timer1_GetCountSum 0021  
                  ??_Timer1_ClearRecord 0021                              printf@flag 003D  
                            printf@prec 003B                         ??_Timer1_GetCPM 0023  
                  ??_Timer1_GetCountSum 0025                        __size_of_Handler 001C  
              _Timer1_DetectAssignCount 00F9                 __size_of_LCD_CursorHome 0010  
                      __size_of___lldiv 0052                        __size_of___lwdiv 0035  
                      __size_of___lwmod 002D                      LCD_WriteData@point 0023  
                       ___lwdiv@divisor 0021                         ___lwdiv@counter 0028  
                              __ptext10 03E5                                __ptext11 0191  
                              __ptext20 03CE                                __ptext12 038B  
                              __ptext13 039B                                __ptext14 0250  
                              __ptext15 0365                                __ptext17 03B9  
                              __ptext18 00F9                                __ptext19 01FE  
                      _LCD_DisplayClear 038B                           __size_of_main 002F  
                  __size_of_Timer1_Init 0021                                int$flags 007E  
                  __size_of_Timer4_Init 000E                               printf@val 003E  
                              intlevel1 0000                        ___lwmod@dividend 002B  
                      ___lldiv@dividend 0074                       __CFG_CLKOUTEN$OFF 0000  
                              printf@ap 003C                __end_of_Timer4_CheckFlag 03C4  
                      ___lldiv@quotient 0079                         ___lwmod@divisor 0029  
                       ___lwmod@counter 002E                  __size_of_LCD_WriteData 003B  
