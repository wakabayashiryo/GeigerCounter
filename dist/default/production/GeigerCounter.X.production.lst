

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 14 11:53:58 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1827 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0219                     	;# 
   167  021A                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021E                     	;# 
   172  021F                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  029E                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0318                     	;# 
   196  0318                     	;# 
   197  0319                     	;# 
   198  031A                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0217                     	;# 
   324  0219                     	;# 
   325  021A                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021D                     	;# 
   329  021E                     	;# 
   330  021F                     	;# 
   331  0291                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0294                     	;# 
   336  0295                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029B                     	;# 
   344  029C                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  029E                     	;# 
   349  0311                     	;# 
   350  0311                     	;# 
   351  0312                     	;# 
   352  0313                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  039A                     	;# 
   361  039C                     	;# 
   362  039D                     	;# 
   363  039E                     	;# 
   364  039F                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011D                     	;# 
   442  011E                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019F                     	;# 
   465  020C                     	;# 
   466  020D                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  0219                     	;# 
   483  021A                     	;# 
   484  021B                     	;# 
   485  021C                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0298                     	;# 
   498  0298                     	;# 
   499  0299                     	;# 
   500  029A                     	;# 
   501  029B                     	;# 
   502  029C                     	;# 
   503  029C                     	;# 
   504  029D                     	;# 
   505  029E                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018D                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0216                     	;# 
   638  0217                     	;# 
   639  0217                     	;# 
   640  0219                     	;# 
   641  021A                     	;# 
   642  021B                     	;# 
   643  021C                     	;# 
   644  021D                     	;# 
   645  021E                     	;# 
   646  021F                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0298                     	;# 
   656  0298                     	;# 
   657  0299                     	;# 
   658  029A                     	;# 
   659  029B                     	;# 
   660  029C                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  029E                     	;# 
   665  0311                     	;# 
   666  0311                     	;# 
   667  0312                     	;# 
   668  0313                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  039A                     	;# 
   677  039C                     	;# 
   678  039D                     	;# 
   679  039E                     	;# 
   680  039F                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0014                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001E                     	;# 
   726  001F                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0094                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0219                     	;# 
   799  021A                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021D                     	;# 
   803  021E                     	;# 
   804  021F                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0294                     	;# 
   810  0295                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029B                     	;# 
   818  029C                     	;# 
   819  029C                     	;# 
   820  029D                     	;# 
   821  029E                     	;# 
   822  029E                     	;# 
   823  0311                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  039A                     	;# 
   835  039C                     	;# 
   836  039D                     	;# 
   837  039E                     	;# 
   838  039F                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0015                     	;# 
   875  0016                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  001E                     	;# 
   884  001F                     	;# 
   885  008C                     	;# 
   886  008D                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0095                     	;# 
   892  0096                     	;# 
   893  0097                     	;# 
   894  0098                     	;# 
   895  0099                     	;# 
   896  009A                     	;# 
   897  009B                     	;# 
   898  009B                     	;# 
   899  009C                     	;# 
   900  009D                     	;# 
   901  009E                     	;# 
   902  010C                     	;# 
   903  010D                     	;# 
   904  0111                     	;# 
   905  0112                     	;# 
   906  0113                     	;# 
   907  0114                     	;# 
   908  0115                     	;# 
   909  0116                     	;# 
   910  0117                     	;# 
   911  0118                     	;# 
   912  0119                     	;# 
   913  011A                     	;# 
   914  011B                     	;# 
   915  011D                     	;# 
   916  011E                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919  0191                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  0193                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0194                     	;# 
   926  0195                     	;# 
   927  0196                     	;# 
   928  0199                     	;# 
   929  019A                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020D                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021E                     	;# 
   962  021F                     	;# 
   963  0291                     	;# 
   964  0291                     	;# 
   965  0292                     	;# 
   966  0293                     	;# 
   967  0294                     	;# 
   968  0295                     	;# 
   969  0295                     	;# 
   970  0296                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  029B                     	;# 
   976  029C                     	;# 
   977  029C                     	;# 
   978  029D                     	;# 
   979  029E                     	;# 
   980  029E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0318                     	;# 
   986  0318                     	;# 
   987  0319                     	;# 
   988  031A                     	;# 
   989  0394                     	;# 
   990  0395                     	;# 
   991  0396                     	;# 
   992  039A                     	;# 
   993  039C                     	;# 
   994  039D                     	;# 
   995  039E                     	;# 
   996  039F                     	;# 
   997  0415                     	;# 
   998  0416                     	;# 
   999  0417                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014                           
  1015 ;; Function _LCD_Put is unused but had its address taken
  1016  000D                     _PORTB	set	13
  1017  000C                     _PORTA	set	12
  1018  005F                     _GIE	set	95
  1019  005E                     _PEIE	set	94
  1020  00A1                     _BCL2IF	set	161
  1021  00A0                     _SSP2IF	set	160
  1022  0093                     _BCL1IF	set	147
  1023  008B                     _SSP1IF	set	139
  1024  0064                     _RA4	set	100
  1025  0063                     _RA3	set	99
  1026  008D                     _TRISB	set	141
  1027  008C                     _TRISA	set	140
  1028  0099                     _OSCCON	set	153
  1029  04A1                     _BCL2IE	set	1185
  1030  04A0                     _SSP2IE	set	1184
  1031  0493                     _BCL1IE	set	1171
  1032  048B                     _SSP1IE	set	1163
  1033  011E                     _APFCON1	set	286
  1034  011D                     _APFCON0	set	285
  1035  0867                     _LATA7	set	2151
  1036  018D                     _ANSELB	set	397
  1037  018C                     _ANSELA	set	396
  1038  021C                     _SSP2STATbits	set	540
  1039  0219                     _SSP2BUF	set	537
  1040  021E                     _SSP2CON2	set	542
  1041  021B                     _SSP2MSK	set	539
  1042  021E                     _SSP2CON2bits	set	542
  1043  021D                     _SSP2CON1bits	set	541
  1044  021A                     _SSP2ADD	set	538
  1045  021C                     _SSP2STAT	set	540
  1046  021D                     _SSP2CON1	set	541
  1047  0214                     _SSP1STATbits	set	532
  1048  0211                     _SSP1BUF	set	529
  1049  0216                     _SSP1CON2	set	534
  1050  0213                     _SSP1MSK	set	531
  1051  0216                     _SSP1CON2bits	set	534
  1052  0215                     _SSP1CON1bits	set	533
  1053  0212                     _SSP1ADD	set	530
  1054  0214                     _SSP1STAT	set	532
  1055  0215                     _SSP1CON1	set	533
  1056                           
  1057                           	psect	stringtext
  1058  03D0                     __pstringtext:	
  1059  03D0                     STR_2:	
  1060  03D0  3425               	retlw	37	;'%'
  1061  03D1  3430               	retlw	48	;'0'
  1062  03D2  3438               	retlw	56	;'8'
  1063  03D3  346C               	retlw	108	;'l'
  1064  03D4  3458               	retlw	88	;'X'
  1065  03D5  3420               	retlw	32	;' '
  1066  03D6  3400               	retlw	0
  1067  03D7                     STR_5:	
  1068  03D7  3420               	retlw	32	;' '
  1069  03D8  3425               	retlw	37	;'%'
  1070  03D9  3430               	retlw	48	;'0'
  1071  03DA  3438               	retlw	56	;'8'
  1072  03DB  344C               	retlw	76	;'L'
  1073  03DC  3458               	retlw	88	;'X'
  1074  03DD  3400               	retlw	0
  1075  03DE                     STR_3:	
  1076  03DE  3420               	retlw	32	;' '
  1077  03DF  3425               	retlw	37	;'%'
  1078  03E0  3430               	retlw	48	;'0'
  1079  03E1  3432               	retlw	50	;'2'
  1080  03E2  3458               	retlw	88	;'X'
  1081  03E3  3400               	retlw	0
  1082  03E4                     STR_4:	
  1083  03E4  3420               	retlw	32	;' '
  1084  03E5  3425               	retlw	37	;'%'
  1085  03E6  3430               	retlw	48	;'0'
  1086  03E7  3434               	retlw	52	;'4'
  1087  03E8  3458               	retlw	88	;'X'
  1088  03E9  3400               	retlw	0
  1089  03EA                     STR_1:	
  1090  03EA  340D               	retlw	13
  1091  03EB  3400               	retlw	0
  1092                           
  1093                           ; #config settings
  1094  0000                     
  1095                           	psect	cinit
  1096  0012                     start_initialization:	
  1097  0012                     __initialization:	
  1098                           
  1099                           ; Clear objects allocated to COMMON
  1100  0012  01FB               	clrf	__pbssCOMMON& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK0
  1103  0013  3020               	movlw	low __pbssBANK0
  1104  0014  0084               	movwf	4
  1105  0015  3000               	movlw	high __pbssBANK0
  1106  0016  0085               	movwf	5
  1107  0017  3030               	movlw	48
  1108  0018  3184  2426         	fcall	clear_ram0
  1109  001A                     end_of_initialization:	
  1110                           ;End of C runtime variable initialization code
  1111                           
  1112  001A                     __end_of__initialization:	
  1113  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1114  001B  0020               	movlb	0
  1115  001C  3181  2984         	ljmp	_main	;jump to C main() function
  1116                           
  1117                           	psect	bssCOMMON
  1118  007B                     __pbssCOMMON:	
  1119  007B                     _outptr:	
  1120  007B                     	ds	1
  1121                           
  1122                           	psect	bssBANK0
  1123  0020                     __pbssBANK0:	
  1124  0020                     _MemoryReg:	
  1125  0020                     	ds	3
  1126  0023                     _xfunc_in:	
  1127  0023                     	ds	2
  1128  0025                     _xfunc_out:	
  1129  0025                     	ds	2
  1130  0027                     _I2C2_Config:	
  1131  0027                     	ds	19
  1132  003A                     _I2C1_Config:	
  1133  003A                     	ds	19
  1134  004D                     _VoltageReg:	
  1135  004D                     	ds	2
  1136  004F                     _ConfigReg:	
  1137  004F                     	ds	1
  1138                           
  1139                           	psect	clrtext
  1140  0426                     clear_ram0:	
  1141                           ;	Called with FSR0 containing the base address, and
  1142                           ;	WREG with the size to clear
  1143                           
  1144  0426  0064               	clrwdt	;clear the watchdog before getting into this loop
  1145  0427                     clrloop0:	
  1146  0427  0180               	clrf	0	;clear RAM location pointed to by FSR
  1147  0428  3101               	addfsr 0,1
  1148  0429  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1149  042A  2C27               	goto	clrloop0	;have we reached the end yet?
  1150  042B  3400               	retlw	0	;all done for this memory range, return
  1151                           
  1152                           	psect	cstackCOMMON
  1153  0070                     __pcstackCOMMON:	
  1154  0070                     ?_Basic_Init:	
  1155  0070                     ?_LCD_Init:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_DAC_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_I2C_CommonInterrupt:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_LCD_DisplayClear:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_main:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_hand:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_WriteData:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_I2C1_PinInit:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_I2C1_Interrupt:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_I2C1_Interrupt:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C2_PinInit:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_I2C2_Interrupt:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ??_I2C2_Interrupt:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x0
  1196  0070                     	ds	1
  1197  0071                     ??_I2C_CommonInterrupt:	
  1198  0071                     ??_hand:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x1
  1203  0071                     	ds	1
  1204  0072                     ??_Basic_Init:	
  1205  0072                     ??_LCD_WriteData:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     ??_I2C1_PinInit:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ?_I2C1_Transmit:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0072                     ??_I2C2_PinInit:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0072                     ?_I2C2_Transmit:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0072                     I2C1_Transmit@pData:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223  0072                     I2C2_Transmit@pData:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x2
  1228  0072                     	ds	1
  1229  0073                     ?_I2C1_Setting:	
  1230  0073                     ?_I2C2_Setting:	
  1231                           ; 1 bytes @ 0x3
  1232                           
  1233  0073                     I2C1_Setting@mode:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     I2C1_Transmit@size:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     I2C2_Setting@mode:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0073                     I2C2_Transmit@size:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247  0073                     	ds	1
  1248  0074                     ??_I2C1_Transmit:	
  1249  0074                     ??_I2C2_Transmit:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0074                     LCD_WriteData@point:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0074                     I2C1_Setting@Speed:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     I2C2_Setting@Speed:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x4
  1263  0074                     	ds	1
  1264  0075                     ??_LCD_DisplayClear:	
  1265  0075                     ??_I2C1_Setting:	
  1266                           ; 1 bytes @ 0x5
  1267                           
  1268  0075                     ??_I2C2_Setting:	
  1269                           ; 1 bytes @ 0x5
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x5
  1273  0075                     	ds	1
  1274  0076                     ??_LCD_Init:	
  1275  0076                     I2C1_Setting@address:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0076                     I2C1_Transmit@address:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281  0076                     I2C2_Setting@address:	
  1282                           ; 1 bytes @ 0x6
  1283                           
  1284  0076                     I2C2_Transmit@address:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x6
  1289  0076                     	ds	1
  1290  0077                     ?_I2C_Init:	
  1291  0077                     I2C1_Transmit@i:	
  1292                           ; 1 bytes @ 0x7
  1293                           
  1294  0077                     I2C2_Transmit@i:	
  1295                           ; 1 bytes @ 0x7
  1296                           
  1297  0077                     I2C_Init@address:	
  1298                           ; 1 bytes @ 0x7
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x7
  1302  0077                     	ds	1
  1303  0078                     I2C1_Transmit@i_369:	
  1304  0078                     I2C2_Transmit@i_513:	
  1305                           ; 1 bytes @ 0x8
  1306                           
  1307  0078                     I2C_Init@mode:	
  1308                           ; 1 bytes @ 0x8
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312  0078                     	ds	1
  1313  0079                     I2C1_Transmit@result:	
  1314  0079                     I2C2_Transmit@result:	
  1315                           ; 1 bytes @ 0x9
  1316                           
  1317  0079                     I2C_Init@Speed:	
  1318                           ; 1 bytes @ 0x9
  1319                           
  1320                           
  1321                           ; 1 bytes @ 0x9
  1322  0079                     	ds	1
  1323  007A                     I2C_Init@I2Cx:	
  1324  007A                     DAC_WriteVoltage@result:	
  1325                           ; 1 bytes @ 0xA
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0xA
  1329  007A                     	ds	1
  1330                           
  1331                           	psect	cstackBANK0
  1332  0050                     __pcstackBANK0:	
  1333  0050                     ??_I2C_Init:	
  1334  0050                     ?_I2C_Transmit:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0050                     I2C_Transmit@address:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0x0
  1342  0050                     	ds	1
  1343  0051                     I2C_Transmit@pData:	
  1344                           
  1345                           ; 1 bytes @ 0x1
  1346  0051                     	ds	1
  1347  0052                     I2C_Transmit@size:	
  1348                           
  1349                           ; 1 bytes @ 0x2
  1350  0052                     	ds	1
  1351  0053                     ??_I2C_Transmit:	
  1352                           
  1353                           ; 1 bytes @ 0x3
  1354  0053                     	ds	3
  1355  0056                     I2C_Transmit@I2Cx:	
  1356                           
  1357                           ; 1 bytes @ 0x6
  1358  0056                     	ds	1
  1359  0057                     I2C_Transmit@result:	
  1360                           
  1361                           ; 1 bytes @ 0x7
  1362  0057                     	ds	1
  1363  0058                     ??_DAC_Initialize:	
  1364  0058                     ?_DAC_WriteVoltage:	
  1365                           ; 1 bytes @ 0x8
  1366                           
  1367  0058                     DAC_WriteVoltage@volue:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x8
  1372  0058                     	ds	2
  1373  005A                     ??_DAC_WriteVoltage:	
  1374                           
  1375                           ; 1 bytes @ 0xA
  1376  005A                     	ds	4
  1377  005E                     ??_main:	
  1378                           
  1379                           ; 1 bytes @ 0xE
  1380  005E                     	ds	2
  1381  0060                     main@voltage:	
  1382                           
  1383                           ; 2 bytes @ 0x10
  1384  0060                     	ds	2
  1385  0062                     main@voltage_70:	
  1386                           
  1387                           ; 2 bytes @ 0x12
  1388  0062                     	ds	2
  1389                           
  1390                           	psect	maintext
  1391  0184                     __pmaintext:	
  1392 ;;
  1393 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 12 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  voltage         2   18[BANK0 ] unsigned int 
  1402 ;;  voltage         2   16[BANK0 ] unsigned int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      char 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : B1F/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1412 ;;      Params:         0       0       0       0       0       0
  1413 ;;      Locals:         0       4       0       0       0       0
  1414 ;;      Temps:          0       2       0       0       0       0
  1415 ;;      Totals:         0       6       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels required when called:    7
  1418 ;; This function calls:
  1419 ;;		_Basic_Init
  1420 ;;		_DAC_Initialize
  1421 ;;		_DAC_WriteVoltage
  1422 ;;		_LCD_Init
  1423 ;; This function is called by:
  1424 ;;		Startup code after reset
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _main
  1430  0184                     _main:	
  1431                           
  1432                           ;main.c: 14: Basic_Init();
  1433                           
  1434                           ;incstack = 0
  1435                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1436  0184  3183  23EC  3181   	fcall	_Basic_Init
  1437                           
  1438                           ;main.c: 15: LCD_Init();
  1439  0187  3181  211B  3181   	fcall	_LCD_Init
  1440                           
  1441                           ;main.c: 16: DAC_Initialize();
  1442  018A  3183  23B1  3181   	fcall	_DAC_Initialize
  1443                           
  1444                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1445  018D  3000               	movlw	0
  1446  018E  0020               	movlb	0	; select bank0
  1447  018F  00A5               	movwf	_xfunc_out
  1448  0190  3000               	movlw	0
  1449  0191  00A6               	movwf	_xfunc_out+1
  1450                           
  1451                           ;main.c: 18: LATA7 = 1;
  1452  0192  0022               	movlb	2	; select bank2
  1453  0193  178C               	bsf	12,7	;volatile
  1454  0194                     l3030:	
  1455                           ;main.c: 20: while(1)
  1456                           
  1457                           
  1458                           ;main.c: 21: {
  1459                           ;main.c: 22: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1460  0194  0020               	movlb	0	; select bank0
  1461  0195  01E0               	clrf	main@voltage
  1462  0196  01E1               	clrf	main@voltage+1
  1463  0197  300F               	movlw	15
  1464  0198  0261               	subwf	main@voltage+1,w
  1465  0199  30FF               	movlw	255
  1466  019A  1903               	skipnz
  1467  019B  0260               	subwf	main@voltage,w
  1468  019C  1803               	btfsc	3,0
  1469  019D  29B5               	goto	l3044
  1470  019E                     l3036:	
  1471                           
  1472                           ;main.c: 23: {
  1473                           ;main.c: 24: DAC_WriteVoltage(voltage);
  1474  019E  0861               	movf	main@voltage+1,w
  1475  019F  00D9               	movwf	DAC_WriteVoltage@volue+1
  1476  01A0  0860               	movf	main@voltage,w
  1477  01A1  00D8               	movwf	DAC_WriteVoltage@volue
  1478  01A2  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1479                           
  1480                           ;main.c: 25: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1481  01A5  30A0               	movlw	160
  1482  01A6                     u2807:	
  1483  01A6  3200               	nop2
  1484  01A7  0B89               	decfsz	9,f
  1485  01A8  29A6               	goto	u2807
  1486  01A9  3001               	movlw	1
  1487  01AA  0020               	movlb	0	; select bank0
  1488  01AB  07E0               	addwf	main@voltage,f
  1489  01AC  3000               	movlw	0
  1490  01AD  3DE1               	addwfc	main@voltage+1,f
  1491  01AE  300F               	movlw	15
  1492  01AF  0261               	subwf	main@voltage+1,w
  1493  01B0  30FF               	movlw	255
  1494  01B1  1903               	skipnz
  1495  01B2  0260               	subwf	main@voltage,w
  1496  01B3  1C03               	skipc
  1497  01B4  299E               	goto	l3036
  1498  01B5                     l3044:	
  1499                           
  1500                           ;main.c: 26: }
  1501                           ;main.c: 27: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1502  01B5  01E2               	clrf	main@voltage_70
  1503  01B6  01E3               	clrf	main@voltage_70+1
  1504  01B7                     L1:	
  1505  01B7  300F               	movlw	15
  1506  01B8  0263               	subwf	main@voltage_70+1,w
  1507  01B9  30FF               	movlw	255
  1508  01BA  1903               	skipnz
  1509  01BB  0262               	subwf	main@voltage_70,w
  1510  01BC  1803               	btfsc	3,0
  1511  01BD  2994               	goto	l3030
  1512                           
  1513                           ;main.c: 28: {
  1514                           ;main.c: 29: DAC_WriteVoltage(0x0FFF-voltage);
  1515  01BE  0962               	comf	main@voltage_70,w
  1516  01BF  00DE               	movwf	??_main
  1517  01C0  0963               	comf	main@voltage_70+1,w
  1518  01C1  00DF               	movwf	??_main+1
  1519  01C2  0ADE               	incf	??_main,f
  1520  01C3  1903               	skipnz
  1521  01C4  0ADF               	incf	??_main+1,f
  1522  01C5  085E               	movf	??_main,w
  1523  01C6  3EFF               	addlw	255
  1524  01C7  00D8               	movwf	DAC_WriteVoltage@volue
  1525  01C8  300F               	movlw	15
  1526  01C9  3D5F               	addwfc	??_main+1,w
  1527  01CA  00D9               	movwf	DAC_WriteVoltage@volue+1
  1528  01CB  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1529                           
  1530                           ;main.c: 30: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1531  01CE  30A0               	movlw	160
  1532  01CF                     u2817:	
  1533  01CF  3200               	nop2
  1534  01D0  0B89               	decfsz	9,f
  1535  01D1  29CF               	goto	u2817
  1536  01D2  3001               	movlw	1
  1537  01D3  0020               	movlb	0	; select bank0
  1538  01D4  07E2               	addwf	main@voltage_70,f
  1539  01D5  3000               	movlw	0
  1540  01D6  3DE3               	addwfc	main@voltage_70+1,f
  1541  01D7  29B7               	goto	L1
  1542  01D8                     __end_of_main:	
  1543                           ;main.c: 31: }
  1544                           ;main.c: 32: }
  1545                           ;main.c: 33: return 0;
  1546                           ;	Return value of _main is never used
  1547                           
  1548                           
  1549                           	psect	text1
  1550  011B                     __ptext1:	
  1551 ;; *************** function _LCD_Init *****************
  1552 ;; Defined at:
  1553 ;;		line 28 in file "LCD.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1567 ;;      Params:         0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    5
  1574 ;; This function calls:
  1575 ;;		_LCD_DisplayClear
  1576 ;;		_LCD_WriteData
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _LCD_Init
  1584  011B                     _LCD_Init:	
  1585                           
  1586                           ;LCD.c: 30: RA4 = 0;
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1590  011B  0020               	movlb	0	; select bank0
  1591  011C  120C               	bcf	12,4	;volatile
  1592                           
  1593                           ;LCD.c: 31: RA3 = 0;
  1594  011D  118C               	bcf	12,3	;volatile
  1595                           
  1596                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  1597  011E  3002               	movlw	2
  1598  011F  00F7               	movwf	??_LCD_Init+1
  1599  0120  3038               	movlw	56
  1600  0121  00F6               	movwf	??_LCD_Init
  1601  0122  30AD               	movlw	173
  1602  0123                     u2827:	
  1603  0123  0B89               	decfsz	9,f
  1604  0124  2923               	goto	u2827
  1605  0125  0BF6               	decfsz	??_LCD_Init,f
  1606  0126  2923               	goto	u2827
  1607  0127  0BF7               	decfsz	??_LCD_Init+1,f
  1608  0128  2923               	goto	u2827
  1609  0129  0000               	nop
  1610                           
  1611                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  1612  012A  3003               	movlw	3
  1613  012B  0020               	movlb	0	; select bank0
  1614  012C  008D               	movwf	13	;volatile
  1615                           
  1616                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1617  012D  158C               	bsf	12,3	;volatile
  1618  012E  3200               	nop2	;2 cycle nop
  1619  012F  3200               	nop2	;2 cycle nop
  1620  0130  3200               	nop2	;2 cycle nop
  1621  0131  3200               	nop2	;2 cycle nop
  1622  0132  0020               	movlb	0	; select bank0
  1623  0133  118C               	bcf	12,3	;volatile
  1624  0134  3200               	nop2	;2 cycle nop
  1625  0135  3200               	nop2	;2 cycle nop
  1626  0136  3200               	nop2	;2 cycle nop
  1627  0137  3200               	nop2	;2 cycle nop
  1628                           
  1629                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  1630  0138  3034               	movlw	52
  1631  0139  00F6               	movwf	??_LCD_Init
  1632  013A  30F2               	movlw	242
  1633  013B                     u2837:	
  1634  013B  0B89               	decfsz	9,f
  1635  013C  293B               	goto	u2837
  1636  013D  0BF6               	decfsz	??_LCD_Init,f
  1637  013E  293B               	goto	u2837
  1638                           
  1639                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1640  013F  0020               	movlb	0	; select bank0
  1641  0140  158C               	bsf	12,3	;volatile
  1642  0141  3200               	nop2	;2 cycle nop
  1643  0142  3200               	nop2	;2 cycle nop
  1644  0143  3200               	nop2	;2 cycle nop
  1645  0144  3200               	nop2	;2 cycle nop
  1646  0145  0020               	movlb	0	; select bank0
  1647  0146  118C               	bcf	12,3	;volatile
  1648  0147  3200               	nop2	;2 cycle nop
  1649  0148  3200               	nop2	;2 cycle nop
  1650  0149  3200               	nop2	;2 cycle nop
  1651  014A  3200               	nop2	;2 cycle nop
  1652                           
  1653                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1654  014B  3005               	movlw	5
  1655  014C  00F6               	movwf	??_LCD_Init
  1656  014D  3026               	movlw	38
  1657  014E                     u2847:	
  1658  014E  0B89               	decfsz	9,f
  1659  014F  294E               	goto	u2847
  1660  0150  0BF6               	decfsz	??_LCD_Init,f
  1661  0151  294E               	goto	u2847
  1662  0152  3200               	nop2
  1663                           
  1664                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1665  0153  0020               	movlb	0	; select bank0
  1666  0154  158C               	bsf	12,3	;volatile
  1667  0155  3200               	nop2	;2 cycle nop
  1668  0156  3200               	nop2	;2 cycle nop
  1669  0157  3200               	nop2	;2 cycle nop
  1670  0158  3200               	nop2	;2 cycle nop
  1671  0159  0020               	movlb	0	; select bank0
  1672  015A  118C               	bcf	12,3	;volatile
  1673  015B  3200               	nop2	;2 cycle nop
  1674  015C  3200               	nop2	;2 cycle nop
  1675  015D  3200               	nop2	;2 cycle nop
  1676  015E  3200               	nop2	;2 cycle nop
  1677                           
  1678                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1679  015F  3005               	movlw	5
  1680  0160  00F6               	movwf	??_LCD_Init
  1681  0161  3026               	movlw	38
  1682  0162                     u2857:	
  1683  0162  0B89               	decfsz	9,f
  1684  0163  2962               	goto	u2857
  1685  0164  0BF6               	decfsz	??_LCD_Init,f
  1686  0165  2962               	goto	u2857
  1687  0166  3200               	nop2
  1688                           
  1689                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  1690  0167  3002               	movlw	2
  1691  0168  0020               	movlb	0	; select bank0
  1692  0169  008D               	movwf	13	;volatile
  1693                           
  1694                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1695  016A  158C               	bsf	12,3	;volatile
  1696  016B  3200               	nop2	;2 cycle nop
  1697  016C  3200               	nop2	;2 cycle nop
  1698  016D  3200               	nop2	;2 cycle nop
  1699  016E  3200               	nop2	;2 cycle nop
  1700  016F  0020               	movlb	0	; select bank0
  1701  0170  118C               	bcf	12,3	;volatile
  1702  0171  3200               	nop2	;2 cycle nop
  1703  0172  3200               	nop2	;2 cycle nop
  1704  0173  3200               	nop2	;2 cycle nop
  1705  0174  3200               	nop2	;2 cycle nop
  1706                           
  1707                           ;LCD.c: 44: LCD_WriteData(0x28);
  1708  0175  3028               	movlw	40
  1709  0176  3182  2280  3181   	fcall	_LCD_WriteData
  1710                           
  1711                           ;LCD.c: 45: LCD_WriteData(0x0c);
  1712  0179  300C               	movlw	12
  1713  017A  3182  2280  3181   	fcall	_LCD_WriteData
  1714                           
  1715                           ;LCD.c: 46: LCD_DisplayClear();
  1716  017D  3184  2401  3181   	fcall	_LCD_DisplayClear
  1717                           
  1718                           ;LCD.c: 47: LCD_WriteData(0x06);
  1719  0180  3006               	movlw	6
  1720  0181  3182  2280         	fcall	_LCD_WriteData
  1721  0183  0008               	return
  1722  0184                     __end_of_LCD_Init:	
  1723                           
  1724                           	psect	text2
  1725  0401                     __ptext2:	
  1726 ;; *************** function _LCD_DisplayClear *****************
  1727 ;; Defined at:
  1728 ;;		line 64 in file "LCD.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1742 ;;      Params:         0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0
  1744 ;;      Temps:          1       0       0       0       0       0
  1745 ;;      Totals:         1       0       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    4
  1749 ;; This function calls:
  1750 ;;		_LCD_WriteData
  1751 ;; This function is called by:
  1752 ;;		_LCD_Init
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _LCD_DisplayClear
  1758  0401                     _LCD_DisplayClear:	
  1759                           
  1760                           ;LCD.c: 66: RA4 = 0;
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1764  0401  0020               	movlb	0	; select bank0
  1765  0402  120C               	bcf	12,4	;volatile
  1766                           
  1767                           ;LCD.c: 67: LCD_WriteData(0x01);
  1768  0403  3001               	movlw	1
  1769  0404  3182  2280  3184   	fcall	_LCD_WriteData
  1770                           
  1771                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  1772  0407  3015               	movlw	21
  1773  0408  00F5               	movwf	??_LCD_DisplayClear
  1774  0409  30C6               	movlw	198
  1775  040A                     u2867:	
  1776  040A  0B89               	decfsz	9,f
  1777  040B  2C0A               	goto	u2867
  1778  040C  0BF5               	decfsz	??_LCD_DisplayClear,f
  1779  040D  2C0A               	goto	u2867
  1780  040E  3200               	nop2
  1781  040F  0008               	return
  1782  0410                     __end_of_LCD_DisplayClear:	
  1783                           
  1784                           	psect	text3
  1785  0280                     __ptext3:	
  1786 ;; *************** function _LCD_WriteData *****************
  1787 ;; Defined at:
  1788 ;;		line 15 in file "LCD.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  point           1    wreg     char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  point           1    4[COMMON] char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1802 ;;      Params:         0       0       0       0       0       0
  1803 ;;      Locals:         1       0       0       0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0
  1805 ;;      Totals:         3       0       0       0       0       0
  1806 ;;Total ram usage:        3 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_LCD_Init
  1813 ;;		_LCD_Put
  1814 ;;		_LCD_DisplayClear
  1815 ;;		_LCD_CursorHome
  1816 ;;		_LCD_CursorPosition
  1817 ;;		_LCD_CursorShift
  1818 ;;		_LCD_DispShift
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _LCD_WriteData
  1824  0280                     _LCD_WriteData:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1828                           ;LCD_WriteData@point stored from wreg
  1829  0280  00F4               	movwf	LCD_WriteData@point
  1830                           
  1831                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1832  0281  30D5               	movlw	213
  1833  0282                     u2877:	
  1834  0282  0B89               	decfsz	9,f
  1835  0283  2A82               	goto	u2877
  1836  0284  0000               	nop
  1837                           
  1838                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1839  0285  0874               	movf	LCD_WriteData@point,w
  1840  0286  00F2               	movwf	??_LCD_WriteData
  1841  0287  3004               	movlw	4
  1842  0288                     u1475:	
  1843  0288  1003               	clrc
  1844  0289  1BF2               	btfsc	??_LCD_WriteData,7
  1845  028A  1403               	setc
  1846  028B  0CF2               	rrf	??_LCD_WriteData,f
  1847  028C  0B89               	decfsz	9,f
  1848  028D  2A88               	goto	u1475
  1849  028E  3003               	movlw	3
  1850  028F  0572               	andwf	??_LCD_WriteData,w
  1851  0290  00F3               	movwf	??_LCD_WriteData+1
  1852  0291  0E74               	swapf	LCD_WriteData@point,w
  1853  0292  390F               	andlw	15
  1854  0293  1989               	btfsc	9,3
  1855  0294  38F0               	iorlw	240
  1856  0295  390C               	andlw	12
  1857  0296  0709               	addwf	9,w
  1858  0297  0473               	iorwf	??_LCD_WriteData+1,w
  1859  0298  0020               	movlb	0	; select bank0
  1860  0299  008D               	movwf	13	;volatile
  1861                           
  1862                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1863  029A  158C               	bsf	12,3	;volatile
  1864  029B  3200               	nop2	;2 cycle nop
  1865  029C  3200               	nop2	;2 cycle nop
  1866  029D  3200               	nop2	;2 cycle nop
  1867  029E  3200               	nop2	;2 cycle nop
  1868  029F  0020               	movlb	0	; select bank0
  1869  02A0  118C               	bcf	12,3	;volatile
  1870  02A1  3200               	nop2	;2 cycle nop
  1871  02A2  3200               	nop2	;2 cycle nop
  1872  02A3  3200               	nop2	;2 cycle nop
  1873  02A4  3200               	nop2	;2 cycle nop
  1874                           
  1875                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1876  02A5  3003               	movlw	3
  1877  02A6  0574               	andwf	LCD_WriteData@point,w
  1878  02A7  00F2               	movwf	??_LCD_WriteData
  1879  02A8  0874               	movf	LCD_WriteData@point,w
  1880  02A9  390C               	andlw	12
  1881  02AA  0709               	addwf	9,w
  1882  02AB  0472               	iorwf	??_LCD_WriteData,w
  1883  02AC  0020               	movlb	0	; select bank0
  1884  02AD  008D               	movwf	13	;volatile
  1885                           
  1886                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1887  02AE  158C               	bsf	12,3	;volatile
  1888  02AF  3200               	nop2	;2 cycle nop
  1889  02B0  3200               	nop2	;2 cycle nop
  1890  02B1  3200               	nop2	;2 cycle nop
  1891  02B2  3200               	nop2	;2 cycle nop
  1892  02B3  0020               	movlb	0	; select bank0
  1893  02B4  118C               	bcf	12,3	;volatile
  1894  02B5  3200               	nop2	;2 cycle nop
  1895  02B6  3200               	nop2	;2 cycle nop
  1896  02B7  3200               	nop2	;2 cycle nop
  1897  02B8  3200               	nop2	;2 cycle nop
  1898  02B9  0008               	return
  1899  02BA                     __end_of_LCD_WriteData:	
  1900                           
  1901                           	psect	text4
  1902  032A                     __ptext4:	
  1903 ;; *************** function _DAC_WriteVoltage *****************
  1904 ;; Defined at:
  1905 ;;		line 27 in file "MCP4726.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  volue           2    8[BANK0 ] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  result          1   10[COMMON] char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      char 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1919 ;;      Params:         0       2       0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0       0
  1921 ;;      Temps:          0       4       0       0       0       0
  1922 ;;      Totals:         1       6       0       0       0       0
  1923 ;;Total ram usage:        7 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    5
  1926 ;; This function calls:
  1927 ;;		_I2C_Transmit
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _DAC_WriteVoltage
  1935  032A                     _DAC_WriteVoltage:	
  1936                           
  1937                           ;MCP4726.c: 29: int8_t result;
  1938                           ;MCP4726.c: 31: VoltageReg.Command = (uint8_t)(0x0);
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1942  032A  303F               	movlw	-193
  1943  032B  0020               	movlb	0	; select bank0
  1944  032C  05CD               	andwf	_VoltageReg,f
  1945                           
  1946                           ;MCP4726.c: 32: VoltageReg.PowerDown = ConfigReg.PowerDown;
  1947  032D  0C4F               	rrf	_ConfigReg,w
  1948  032E  3903               	andlw	3
  1949  032F  00DA               	movwf	??_DAC_WriteVoltage
  1950  0330  0EDA               	swapf	??_DAC_WriteVoltage,f
  1951  0331  084D               	movf	_VoltageReg,w
  1952  0332  065A               	xorwf	??_DAC_WriteVoltage,w
  1953  0333  39CF               	andlw	-49
  1954  0334  065A               	xorwf	??_DAC_WriteVoltage,w
  1955  0335  00CD               	movwf	_VoltageReg
  1956                           
  1957                           ;MCP4726.c: 33: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  1958  0336  0859               	movf	DAC_WriteVoltage@volue+1,w
  1959  0337  00DB               	movwf	??_DAC_WriteVoltage+1
  1960  0338  0858               	movf	DAC_WriteVoltage@volue,w
  1961  0339  00DA               	movwf	??_DAC_WriteVoltage
  1962  033A  085B               	movf	??_DAC_WriteVoltage+1,w
  1963  033B  00DA               	movwf	??_DAC_WriteVoltage
  1964  033C  01DB               	clrf	??_DAC_WriteVoltage+1
  1965  033D  300F               	movlw	15
  1966  033E  055A               	andwf	??_DAC_WriteVoltage,w
  1967  033F  00DC               	movwf	??_DAC_WriteVoltage+2
  1968  0340  084D               	movf	_VoltageReg,w
  1969  0341  065C               	xorwf	??_DAC_WriteVoltage+2,w
  1970  0342  39F0               	andlw	-16
  1971  0343  065C               	xorwf	??_DAC_WriteVoltage+2,w
  1972  0344  00CD               	movwf	_VoltageReg
  1973                           
  1974                           ;MCP4726.c: 34: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  1975  0345  0858               	movf	DAC_WriteVoltage@volue,w
  1976  0346  00DA               	movwf	??_DAC_WriteVoltage
  1977  0347  085A               	movf	??_DAC_WriteVoltage,w
  1978  0348  00CE               	movwf	_VoltageReg+1
  1979                           
  1980                           ;MCP4726.c: 36: result = I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  1981  0349  3060               	movlw	96
  1982  034A  00DA               	movwf	??_DAC_WriteVoltage
  1983  034B  085A               	movf	??_DAC_WriteVoltage,w
  1984  034C  00D0               	movwf	I2C_Transmit@address
  1985  034D  304D               	movlw	(low (_VoltageReg| 0))& (0+255)
  1986  034E  00DB               	movwf	??_DAC_WriteVoltage+1
  1987  034F  085B               	movf	??_DAC_WriteVoltage+1,w
  1988  0350  00D1               	movwf	I2C_Transmit@pData
  1989  0351  3002               	movlw	2
  1990  0352  00DC               	movwf	??_DAC_WriteVoltage+2
  1991  0353  085C               	movf	??_DAC_WriteVoltage+2,w
  1992  0354  00D2               	movwf	I2C_Transmit@size
  1993  0355  3001               	movlw	1
  1994  0356  3183  235D         	fcall	_I2C_Transmit
  1995  0358  0020               	movlb	0	; select bank0
  1996  0359  00DD               	movwf	??_DAC_WriteVoltage+3
  1997  035A  085D               	movf	??_DAC_WriteVoltage+3,w
  1998  035B  00FA               	movwf	DAC_WriteVoltage@result
  1999  035C  0008               	return
  2000  035D                     __end_of_DAC_WriteVoltage:	
  2001                           ;MCP4726.c: 38: return result;
  2002                           ;	Return value of _DAC_WriteVoltage is never used
  2003                           
  2004                           
  2005                           	psect	text5
  2006  03B1                     __ptext5:	
  2007 ;; *************** function _DAC_Initialize *****************
  2008 ;; Defined at:
  2009 ;;		line 14 in file "MCP4726.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2023 ;;      Params:         0       0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0
  2025 ;;      Temps:          0       2       0       0       0       0
  2026 ;;      Totals:         0       2       0       0       0       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    6
  2030 ;; This function calls:
  2031 ;;		_I2C_Init
  2032 ;;		_I2C_Transmit
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _DAC_Initialize
  2040  03B1                     _DAC_Initialize:	
  2041                           
  2042                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2046  03B1  01F7               	clrf	I2C_Init@address
  2047  03B2  01F8               	clrf	I2C_Init@mode
  2048  03B3  01F9               	clrf	I2C_Init@Speed
  2049  03B4  3001               	movlw	1
  2050  03B5  3183  2388  3183   	fcall	_I2C_Init
  2051                           
  2052                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  2053  03B8  0020               	movlb	0	; select bank0
  2054  03B9  084F               	movf	_ConfigReg,w
  2055  03BA  391F               	andlw	-225
  2056  03BB  3880               	iorlw	128
  2057  03BC  00CF               	movwf	_ConfigReg
  2058                           
  2059                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  2060  03BD  104F               	bcf	_ConfigReg,0
  2061                           
  2062                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  2063  03BE  30F9               	movlw	-7
  2064  03BF  05CF               	andwf	_ConfigReg,f
  2065                           
  2066                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  2067  03C0  30E7               	movlw	-25
  2068  03C1  05CF               	andwf	_ConfigReg,f
  2069                           
  2070                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  2071  03C2  3060               	movlw	96
  2072  03C3  00D8               	movwf	??_DAC_Initialize
  2073  03C4  0858               	movf	??_DAC_Initialize,w
  2074  03C5  00D0               	movwf	I2C_Transmit@address
  2075  03C6  304F               	movlw	(low (_ConfigReg| 0))& (0+255)
  2076  03C7  00D9               	movwf	??_DAC_Initialize+1
  2077  03C8  0859               	movf	??_DAC_Initialize+1,w
  2078  03C9  00D1               	movwf	I2C_Transmit@pData
  2079  03CA  01D2               	clrf	I2C_Transmit@size
  2080  03CB  0AD2               	incf	I2C_Transmit@size,f
  2081  03CC  3001               	movlw	1
  2082  03CD  3183  235D         	fcall	_I2C_Transmit
  2083  03CF  0008               	return
  2084  03D0                     __end_of_DAC_Initialize:	
  2085                           
  2086                           	psect	text6
  2087  035D                     __ptext6:	
  2088 ;; *************** function _I2C_Transmit *****************
  2089 ;; Defined at:
  2090 ;;		line 23 in file "I2C_Common.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  I2Cx            1    wreg     enum E3036
  2093 ;;  address         1    0[BANK0 ] unsigned char 
  2094 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  2095 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2096 ;;  size            1    2[BANK0 ] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  I2Cx            1    6[BANK0 ] enum E3036
  2099 ;;  result          1    7[BANK0 ] char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      char 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2109 ;;      Params:         0       3       0       0       0       0
  2110 ;;      Locals:         0       2       0       0       0       0
  2111 ;;      Temps:          0       3       0       0       0       0
  2112 ;;      Totals:         0       8       0       0       0       0
  2113 ;;Total ram usage:        8 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    4
  2116 ;; This function calls:
  2117 ;;		_I2C1_Transmit
  2118 ;;		_I2C2_Transmit
  2119 ;; This function is called by:
  2120 ;;		_DAC_Initialize
  2121 ;;		_DAC_WriteVoltage
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _I2C_Transmit
  2127  035D                     _I2C_Transmit:	
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2131                           ;I2C_Transmit@I2Cx stored from wreg
  2132  035D  0020               	movlb	0	; select bank0
  2133  035E  00D6               	movwf	I2C_Transmit@I2Cx
  2134                           
  2135                           ;I2C_Common.c: 25: int8_t result;
  2136                           ;I2C_Common.c: 27: switch(I2Cx)
  2137  035F  2B7E               	goto	l2996
  2138  0360                     l2990:	
  2139                           ;I2C_Common.c: 28: {
  2140                           ;I2C_Common.c: 29: case I2C1_MODULE:
  2141                           
  2142                           
  2143                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  2144  0360  0851               	movf	I2C_Transmit@pData,w
  2145  0361  00D3               	movwf	??_I2C_Transmit
  2146  0362  0853               	movf	??_I2C_Transmit,w
  2147  0363  00F2               	movwf	I2C1_Transmit@pData
  2148  0364  0852               	movf	I2C_Transmit@size,w
  2149  0365  00D4               	movwf	??_I2C_Transmit+1
  2150  0366  0854               	movf	??_I2C_Transmit+1,w
  2151  0367  00F3               	movwf	I2C1_Transmit@size
  2152  0368  0850               	movf	I2C_Transmit@address,w
  2153  0369  3180  209D  3183   	fcall	_I2C1_Transmit
  2154  036C  2B79               	goto	L2
  2155  036D                     l2992:	
  2156                           ;I2C_Common.c: 33: case I2C2_MODULE:
  2157                           
  2158                           ;I2C_Common.c: 31: break;
  2159                           
  2160                           
  2161                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  2162  036D  0851               	movf	I2C_Transmit@pData,w
  2163  036E  00D3               	movwf	??_I2C_Transmit
  2164  036F  0853               	movf	??_I2C_Transmit,w
  2165  0370  00F2               	movwf	I2C2_Transmit@pData
  2166  0371  0852               	movf	I2C_Transmit@size,w
  2167  0372  00D4               	movwf	??_I2C_Transmit+1
  2168  0373  0854               	movf	??_I2C_Transmit+1,w
  2169  0374  00F3               	movwf	I2C2_Transmit@size
  2170  0375  0850               	movf	I2C_Transmit@address,w
  2171  0376  3180  201E  3183   	fcall	_I2C2_Transmit
  2172  0379                     L2:	
  2173  0379  0020               	movlb	0	; select bank0
  2174  037A  00D5               	movwf	??_I2C_Transmit+2
  2175  037B  0855               	movf	??_I2C_Transmit+2,w
  2176  037C  00D7               	movwf	I2C_Transmit@result
  2177                           
  2178                           ;I2C_Common.c: 36: }
  2179                           
  2180                           ;I2C_Common.c: 35: break;
  2181  037D  2B86               	goto	l2998
  2182  037E                     l2996:	
  2183  037E  0856               	movf	I2C_Transmit@I2Cx,w
  2184                           
  2185                           ; Switch size 1, requested type "space"
  2186                           ; Number of cases is 2, Range of values is 0 to 1
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            7     4 (average)
  2190                           ; direct_byte           10     6 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193  037F  3A00               	xorlw	0	; case 0
  2194  0380  1903               	skipnz
  2195  0381  2B60               	goto	l2990
  2196  0382  3A01               	xorlw	1	; case 1
  2197  0383  1903               	skipnz
  2198  0384  2B6D               	goto	l2992
  2199  0385  2B86               	goto	l2998
  2200  0386                     l2998:	
  2201                           
  2202                           ;I2C_Common.c: 37: return result;
  2203  0386  0857               	movf	I2C_Transmit@result,w
  2204  0387  0008               	return
  2205  0388                     __end_of_I2C_Transmit:	
  2206                           
  2207                           	psect	text7
  2208  001E                     __ptext7:	
  2209 ;; *************** function _I2C2_Transmit *****************
  2210 ;; Defined at:
  2211 ;;		line 52 in file "I2C2.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  address         1    wreg     unsigned char 
  2214 ;;  pData           1    2[COMMON] PTR unsigned char 
  2215 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2216 ;;  size            1    3[COMMON] unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  address         1    6[COMMON] unsigned char 
  2219 ;;  i               1    8[COMMON] unsigned char 
  2220 ;;  i               1    7[COMMON] unsigned char 
  2221 ;;  result          1    9[COMMON] char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      char 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2231 ;;      Params:         2       0       0       0       0       0
  2232 ;;      Locals:         4       0       0       0       0       0
  2233 ;;      Temps:          2       0       0       0       0       0
  2234 ;;      Totals:         8       0       0       0       0       0
  2235 ;;Total ram usage:        8 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_I2C_Transmit
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _I2C2_Transmit
  2247  001E                     _I2C2_Transmit:	
  2248                           
  2249                           ;incstack = 0
  2250                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  2251                           ;I2C2_Transmit@address stored from wreg
  2252  001E  00F6               	movwf	I2C2_Transmit@address
  2253                           
  2254                           ;I2C2.c: 54: int8_t result = 0;
  2255  001F  01F9               	clrf	I2C2_Transmit@result
  2256                           
  2257                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  2258  0020  2892               	goto	l2972
  2259  0021                     l2928:	
  2260                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2261                           
  2262                           ;I2C2.c: 57: {
  2263                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  2264                           
  2265  0021  3005               	movlw	5
  2266  0022  0024               	movlb	4	; select bank4
  2267  0023  051C               	andwf	28,w	;volatile
  2268  0024  00F4               	movwf	??_I2C2_Transmit
  2269  0025  081E               	movf	30,w	;volatile
  2270  0026  391F               	andlw	31
  2271  0027  0474               	iorwf	??_I2C2_Transmit,w
  2272  0028  1D03               	btfss	3,2
  2273  0029  2821               	goto	l2928
  2274                           
  2275                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  2276  002A  141E               	bsf	30,0	;volatile
  2277  002B                     l2930:	
  2278                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2279                           
  2280  002B  3005               	movlw	5
  2281  002C  051C               	andwf	28,w	;volatile
  2282  002D  00F4               	movwf	??_I2C2_Transmit
  2283  002E  081E               	movf	30,w	;volatile
  2284  002F  391F               	andlw	31
  2285  0030  0474               	iorwf	??_I2C2_Transmit,w
  2286  0031  1D03               	btfss	3,2
  2287  0032  282B               	goto	l2930
  2288                           
  2289                           ;I2C2.c: 63: SSP2BUF = address << 1;
  2290  0033  3576               	lslf	I2C2_Transmit@address,w
  2291  0034  0099               	movwf	25	;volatile
  2292  0035                     l467:	
  2293                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  2294                           
  2295  0035  191C               	btfsc	28,2	;volatile
  2296  0036  2835               	goto	l467
  2297                           
  2298                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  2299  0037  3000               	movlw	0
  2300  0038  1B1E               	btfsc	30,6	;volatile
  2301  0039  3001               	movlw	1
  2302  003A  00F9               	movwf	I2C2_Transmit@result
  2303                           
  2304                           ;I2C2.c: 67: if (!result)
  2305  003B  0879               	movf	I2C2_Transmit@result,w
  2306  003C  1D03               	btfss	3,2
  2307  003D  2865               	goto	l2954
  2308                           
  2309                           ;I2C2.c: 68: {
  2310                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  2311  003E  01F7               	clrf	I2C2_Transmit@i
  2312  003F  2844               	goto	l2952
  2313  0040                     l2950:	
  2314                           ;I2C2.c: 79: break;
  2315                           
  2316  0040  3001               	movlw	1
  2317  0041  00F4               	movwf	??_I2C2_Transmit
  2318  0042  0874               	movf	??_I2C2_Transmit,w
  2319  0043  07F7               	addwf	I2C2_Transmit@i,f
  2320  0044                     l2952:	
  2321  0044  0873               	movf	I2C2_Transmit@size,w
  2322  0045  0277               	subwf	I2C2_Transmit@i,w
  2323  0046  1803               	btfsc	3,0
  2324  0047  2865               	goto	l2954
  2325  0048                     l2940:	
  2326                           ;I2C2.c: 70: {
  2327                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2328                           
  2329  0048  3005               	movlw	5
  2330  0049  051C               	andwf	28,w	;volatile
  2331  004A  00F4               	movwf	??_I2C2_Transmit
  2332  004B  081E               	movf	30,w	;volatile
  2333  004C  391F               	andlw	31
  2334  004D  0474               	iorwf	??_I2C2_Transmit,w
  2335  004E  1D03               	btfss	3,2
  2336  004F  2848               	goto	l2940
  2337                           
  2338                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  2339  0050  0877               	movf	I2C2_Transmit@i,w
  2340  0051  0772               	addwf	I2C2_Transmit@pData,w
  2341  0052  00F4               	movwf	??_I2C2_Transmit
  2342  0053  0874               	movf	??_I2C2_Transmit,w
  2343  0054  0086               	movwf	6
  2344  0055  0187               	clrf	7
  2345  0056  0801               	movf	1,w
  2346  0057  0099               	movwf	25	;volatile
  2347  0058                     l476:	
  2348                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  2349                           
  2350  0058  191C               	btfsc	28,2	;volatile
  2351  0059  2858               	goto	l476
  2352                           
  2353                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  2354  005A  3000               	movlw	0
  2355  005B  1B1E               	btfsc	30,6	;volatile
  2356  005C  3001               	movlw	1
  2357  005D  00F9               	movwf	I2C2_Transmit@result
  2358                           
  2359                           ;I2C2.c: 76: if (result)
  2360  005E  0879               	movf	I2C2_Transmit@result,w
  2361  005F  1903               	btfsc	3,2
  2362  0060  2840               	goto	l2950
  2363                           
  2364                           ;I2C2.c: 77: {
  2365                           ;I2C2.c: 78: result = 2;
  2366  0061  3002               	movlw	2
  2367  0062  00F4               	movwf	??_I2C2_Transmit
  2368  0063  0874               	movf	??_I2C2_Transmit,w
  2369  0064  00F9               	movwf	I2C2_Transmit@result
  2370  0065                     l2954:	
  2371                           ;I2C2.c: 80: }
  2372                           ;I2C2.c: 81: }
  2373                           ;I2C2.c: 82: }
  2374                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2375                           
  2376  0065  3005               	movlw	5
  2377  0066  051C               	andwf	28,w	;volatile
  2378  0067  00F4               	movwf	??_I2C2_Transmit
  2379  0068  081E               	movf	30,w	;volatile
  2380  0069  391F               	andlw	31
  2381  006A  0474               	iorwf	??_I2C2_Transmit,w
  2382  006B  1D03               	btfss	3,2
  2383  006C  2865               	goto	l2954
  2384                           
  2385                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  2386  006D  151E               	bsf	30,2	;volatile
  2387                           
  2388                           ;I2C2.c: 86: break;
  2389  006E  289B               	goto	l2974
  2390  006F                     l485:	
  2391                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  2392                           
  2393                           
  2394                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  2395  006F  0024               	movlb	4	; select bank4
  2396  0070  1D9C               	btfss	28,3	;volatile
  2397  0071  1E1C               	btfss	28,4	;volatile
  2398  0072  2890               	goto	l2968
  2399                           
  2400                           ;I2C2.c: 90: {
  2401                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  2402  0073  01F8               	clrf	I2C2_Transmit@i_513
  2403  0074                     l2964:	
  2404  0074  0873               	movf	I2C2_Transmit@size,w
  2405  0075  0278               	subwf	I2C2_Transmit@i_513,w
  2406  0076  1803               	btfsc	3,0
  2407  0077  288B               	goto	l2966
  2408                           
  2409                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  2410  0078  0878               	movf	I2C2_Transmit@i_513,w
  2411  0079  0772               	addwf	I2C2_Transmit@pData,w
  2412  007A  00F4               	movwf	??_I2C2_Transmit
  2413  007B  0874               	movf	??_I2C2_Transmit,w
  2414  007C  0086               	movwf	6
  2415  007D  0187               	clrf	7
  2416  007E  0801               	movf	1,w
  2417  007F  00F5               	movwf	??_I2C2_Transmit+1
  2418  0080  0878               	movf	I2C2_Transmit@i_513,w
  2419  0081  3E27               	addlw	(low (_I2C2_Config| 0))& (0+255)
  2420  0082  0086               	movwf	6
  2421  0083  0187               	clrf	7
  2422  0084  0875               	movf	??_I2C2_Transmit+1,w
  2423  0085  0081               	movwf	1
  2424  0086  3001               	movlw	1
  2425  0087  00F4               	movwf	??_I2C2_Transmit
  2426  0088  0874               	movf	??_I2C2_Transmit,w
  2427  0089  07F8               	addwf	I2C2_Transmit@i_513,f
  2428  008A  2874               	goto	l2964
  2429  008B                     l2966:	
  2430                           
  2431                           ;I2C2.c: 93: result = size;
  2432  008B  0873               	movf	I2C2_Transmit@size,w
  2433  008C  00F4               	movwf	??_I2C2_Transmit
  2434  008D  0874               	movf	??_I2C2_Transmit,w
  2435  008E  00F9               	movwf	I2C2_Transmit@result
  2436                           
  2437                           ;I2C2.c: 94: }
  2438  008F  289B               	goto	l2974
  2439  0090                     l2968:	
  2440                           
  2441                           ;I2C2.c: 95: else
  2442                           ;I2C2.c: 96: result = 0;
  2443  0090  01F9               	clrf	I2C2_Transmit@result
  2444                           
  2445                           ;I2C2.c: 98: }
  2446                           
  2447                           ;I2C2.c: 97: break;
  2448  0091  289B               	goto	l2974
  2449  0092                     l2972:	
  2450  0092  0020               	movlb	0	; select bank0
  2451  0093  0839               	movf	_I2C2_Config+18,w
  2452                           
  2453                           ; Switch size 1, requested type "space"
  2454                           ; Number of cases is 2, Range of values is 0 to 1
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte            7     4 (average)
  2458                           ; direct_byte           10     6 (fixed)
  2459                           ; jumptable            260     6 (fixed)
  2460                           ;	Chosen strategy is simple_byte
  2461  0094  3A00               	xorlw	0	; case 0
  2462  0095  1903               	skipnz
  2463  0096  2821               	goto	l2928
  2464  0097  3A01               	xorlw	1	; case 1
  2465  0098  1903               	skipnz
  2466  0099  286F               	goto	l485
  2467  009A  289B               	goto	l2974
  2468  009B                     l2974:	
  2469                           
  2470                           ;I2C2.c: 100: return result;
  2471  009B  0879               	movf	I2C2_Transmit@result,w
  2472  009C  0008               	return
  2473  009D                     __end_of_I2C2_Transmit:	
  2474                           
  2475                           	psect	text8
  2476  009D                     __ptext8:	
  2477 ;; *************** function _I2C1_Transmit *****************
  2478 ;; Defined at:
  2479 ;;		line 52 in file "I2C1.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  address         1    wreg     unsigned char 
  2482 ;;  pData           1    2[COMMON] PTR unsigned char 
  2483 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2484 ;;  size            1    3[COMMON] unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  address         1    6[COMMON] unsigned char 
  2487 ;;  i               1    8[COMMON] unsigned char 
  2488 ;;  i               1    7[COMMON] unsigned char 
  2489 ;;  result          1    9[COMMON] char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      char 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         2       0       0       0       0       0
  2500 ;;      Locals:         4       0       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0       0
  2502 ;;      Totals:         8       0       0       0       0       0
  2503 ;;Total ram usage:        8 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_I2C_Transmit
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _I2C1_Transmit
  2515  009D                     _I2C1_Transmit:	
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2519                           ;I2C1_Transmit@address stored from wreg
  2520  009D  00F6               	movwf	I2C1_Transmit@address
  2521                           
  2522                           ;I2C1.c: 54: int8_t result;
  2523                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  2524  009E  2910               	goto	l2886
  2525  009F                     l2842:	
  2526                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2527                           
  2528                           ;I2C1.c: 57: {
  2529                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  2530                           
  2531  009F  3005               	movlw	5
  2532  00A0  0024               	movlb	4	; select bank4
  2533  00A1  0514               	andwf	20,w	;volatile
  2534  00A2  00F4               	movwf	??_I2C1_Transmit
  2535  00A3  0816               	movf	22,w	;volatile
  2536  00A4  391F               	andlw	31
  2537  00A5  0474               	iorwf	??_I2C1_Transmit,w
  2538  00A6  1D03               	btfss	3,2
  2539  00A7  289F               	goto	l2842
  2540                           
  2541                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  2542  00A8  1416               	bsf	22,0	;volatile
  2543  00A9                     l2844:	
  2544                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2545                           
  2546  00A9  3005               	movlw	5
  2547  00AA  0514               	andwf	20,w	;volatile
  2548  00AB  00F4               	movwf	??_I2C1_Transmit
  2549  00AC  0816               	movf	22,w	;volatile
  2550  00AD  391F               	andlw	31
  2551  00AE  0474               	iorwf	??_I2C1_Transmit,w
  2552  00AF  1D03               	btfss	3,2
  2553  00B0  28A9               	goto	l2844
  2554                           
  2555                           ;I2C1.c: 63: SSP1BUF = address << 1;
  2556  00B1  3576               	lslf	I2C1_Transmit@address,w
  2557  00B2  0091               	movwf	17	;volatile
  2558  00B3                     l330:	
  2559                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  2560                           
  2561  00B3  1914               	btfsc	20,2	;volatile
  2562  00B4  28B3               	goto	l330
  2563                           
  2564                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  2565  00B5  3000               	movlw	0
  2566  00B6  1B16               	btfsc	22,6	;volatile
  2567  00B7  3001               	movlw	1
  2568  00B8  00F9               	movwf	I2C1_Transmit@result
  2569                           
  2570                           ;I2C1.c: 67: if (!result)
  2571  00B9  0879               	movf	I2C1_Transmit@result,w
  2572  00BA  1D03               	btfss	3,2
  2573  00BB  28E3               	goto	l2868
  2574                           
  2575                           ;I2C1.c: 68: {
  2576                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  2577  00BC  01F7               	clrf	I2C1_Transmit@i
  2578  00BD  28C2               	goto	l2866
  2579  00BE                     l2864:	
  2580                           ;I2C1.c: 79: break;
  2581                           
  2582  00BE  3001               	movlw	1
  2583  00BF  00F4               	movwf	??_I2C1_Transmit
  2584  00C0  0874               	movf	??_I2C1_Transmit,w
  2585  00C1  07F7               	addwf	I2C1_Transmit@i,f
  2586  00C2                     l2866:	
  2587  00C2  0873               	movf	I2C1_Transmit@size,w
  2588  00C3  0277               	subwf	I2C1_Transmit@i,w
  2589  00C4  1803               	btfsc	3,0
  2590  00C5  28E3               	goto	l2868
  2591  00C6                     l2854:	
  2592                           ;I2C1.c: 70: {
  2593                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2594                           
  2595  00C6  3005               	movlw	5
  2596  00C7  0514               	andwf	20,w	;volatile
  2597  00C8  00F4               	movwf	??_I2C1_Transmit
  2598  00C9  0816               	movf	22,w	;volatile
  2599  00CA  391F               	andlw	31
  2600  00CB  0474               	iorwf	??_I2C1_Transmit,w
  2601  00CC  1D03               	btfss	3,2
  2602  00CD  28C6               	goto	l2854
  2603                           
  2604                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  2605  00CE  0877               	movf	I2C1_Transmit@i,w
  2606  00CF  0772               	addwf	I2C1_Transmit@pData,w
  2607  00D0  00F4               	movwf	??_I2C1_Transmit
  2608  00D1  0874               	movf	??_I2C1_Transmit,w
  2609  00D2  0086               	movwf	6
  2610  00D3  0187               	clrf	7
  2611  00D4  0801               	movf	1,w
  2612  00D5  0091               	movwf	17	;volatile
  2613  00D6                     l339:	
  2614                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  2615                           
  2616  00D6  1914               	btfsc	20,2	;volatile
  2617  00D7  28D6               	goto	l339
  2618                           
  2619                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  2620  00D8  3000               	movlw	0
  2621  00D9  1B16               	btfsc	22,6	;volatile
  2622  00DA  3001               	movlw	1
  2623  00DB  00F9               	movwf	I2C1_Transmit@result
  2624                           
  2625                           ;I2C1.c: 76: if (result)
  2626  00DC  0879               	movf	I2C1_Transmit@result,w
  2627  00DD  1903               	btfsc	3,2
  2628  00DE  28BE               	goto	l2864
  2629                           
  2630                           ;I2C1.c: 77: {
  2631                           ;I2C1.c: 78: result = 2;
  2632  00DF  3002               	movlw	2
  2633  00E0  00F4               	movwf	??_I2C1_Transmit
  2634  00E1  0874               	movf	??_I2C1_Transmit,w
  2635  00E2  00F9               	movwf	I2C1_Transmit@result
  2636  00E3                     l2868:	
  2637                           ;I2C1.c: 80: }
  2638                           ;I2C1.c: 81: }
  2639                           ;I2C1.c: 82: }
  2640                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2641                           
  2642  00E3  3005               	movlw	5
  2643  00E4  0514               	andwf	20,w	;volatile
  2644  00E5  00F4               	movwf	??_I2C1_Transmit
  2645  00E6  0816               	movf	22,w	;volatile
  2646  00E7  391F               	andlw	31
  2647  00E8  0474               	iorwf	??_I2C1_Transmit,w
  2648  00E9  1D03               	btfss	3,2
  2649  00EA  28E3               	goto	l2868
  2650                           
  2651                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  2652  00EB  1516               	bsf	22,2	;volatile
  2653                           
  2654                           ;I2C1.c: 86: break;
  2655  00EC  2919               	goto	l2888
  2656  00ED                     l348:	
  2657                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  2658                           
  2659                           
  2660                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  2661  00ED  0024               	movlb	4	; select bank4
  2662  00EE  1D94               	btfss	20,3	;volatile
  2663  00EF  1E14               	btfss	20,4	;volatile
  2664  00F0  290E               	goto	l2882
  2665                           
  2666                           ;I2C1.c: 90: {
  2667                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  2668  00F1  01F8               	clrf	I2C1_Transmit@i_369
  2669  00F2                     l2878:	
  2670  00F2  0873               	movf	I2C1_Transmit@size,w
  2671  00F3  0278               	subwf	I2C1_Transmit@i_369,w
  2672  00F4  1803               	btfsc	3,0
  2673  00F5  2909               	goto	l2880
  2674                           
  2675                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2676  00F6  0878               	movf	I2C1_Transmit@i_369,w
  2677  00F7  0772               	addwf	I2C1_Transmit@pData,w
  2678  00F8  00F4               	movwf	??_I2C1_Transmit
  2679  00F9  0874               	movf	??_I2C1_Transmit,w
  2680  00FA  0086               	movwf	6
  2681  00FB  0187               	clrf	7
  2682  00FC  0801               	movf	1,w
  2683  00FD  00F5               	movwf	??_I2C1_Transmit+1
  2684  00FE  0878               	movf	I2C1_Transmit@i_369,w
  2685  00FF  3E3A               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2686  0100  0086               	movwf	6
  2687  0101  0187               	clrf	7
  2688  0102  0875               	movf	??_I2C1_Transmit+1,w
  2689  0103  0081               	movwf	1
  2690  0104  3001               	movlw	1
  2691  0105  00F4               	movwf	??_I2C1_Transmit
  2692  0106  0874               	movf	??_I2C1_Transmit,w
  2693  0107  07F8               	addwf	I2C1_Transmit@i_369,f
  2694  0108  28F2               	goto	l2878
  2695  0109                     l2880:	
  2696                           
  2697                           ;I2C1.c: 93: result = size;
  2698  0109  0873               	movf	I2C1_Transmit@size,w
  2699  010A  00F4               	movwf	??_I2C1_Transmit
  2700  010B  0874               	movf	??_I2C1_Transmit,w
  2701  010C  00F9               	movwf	I2C1_Transmit@result
  2702                           
  2703                           ;I2C1.c: 94: }
  2704  010D  2919               	goto	l2888
  2705  010E                     l2882:	
  2706                           
  2707                           ;I2C1.c: 95: else
  2708                           ;I2C1.c: 96: result = 0;
  2709  010E  01F9               	clrf	I2C1_Transmit@result
  2710                           
  2711                           ;I2C1.c: 98: }
  2712                           
  2713                           ;I2C1.c: 97: break;
  2714  010F  2919               	goto	l2888
  2715  0110                     l2886:	
  2716  0110  0020               	movlb	0	; select bank0
  2717  0111  084C               	movf	_I2C1_Config+18,w
  2718                           
  2719                           ; Switch size 1, requested type "space"
  2720                           ; Number of cases is 2, Range of values is 0 to 1
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            7     4 (average)
  2724                           ; direct_byte           10     6 (fixed)
  2725                           ; jumptable            260     6 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  0112  3A00               	xorlw	0	; case 0
  2728  0113  1903               	skipnz
  2729  0114  289F               	goto	l2842
  2730  0115  3A01               	xorlw	1	; case 1
  2731  0116  1903               	skipnz
  2732  0117  28ED               	goto	l348
  2733  0118  2919               	goto	l2888
  2734  0119                     l2888:	
  2735                           
  2736                           ;I2C1.c: 100: return result;
  2737  0119  0879               	movf	I2C1_Transmit@result,w
  2738  011A  0008               	return
  2739  011B                     __end_of_I2C1_Transmit:	
  2740                           
  2741                           	psect	text9
  2742  0388                     __ptext9:	
  2743 ;; *************** function _I2C_Init *****************
  2744 ;; Defined at:
  2745 ;;		line 6 in file "I2C_Common.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  I2Cx            1    wreg     enum E3036
  2748 ;;  address         1    7[COMMON] unsigned char 
  2749 ;;  mode            1    8[COMMON] enum E3027
  2750 ;;  Speed           1    9[COMMON] enum E3031
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  I2Cx            1   10[COMMON] enum E3036
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2762 ;;      Params:         3       0       0       0       0       0
  2763 ;;      Locals:         1       0       0       0       0       0
  2764 ;;      Temps:          0       2       0       0       0       0
  2765 ;;      Totals:         4       2       0       0       0       0
  2766 ;;Total ram usage:        6 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    5
  2769 ;; This function calls:
  2770 ;;		_I2C1_Setting
  2771 ;;		_I2C2_Setting
  2772 ;; This function is called by:
  2773 ;;		_DAC_Initialize
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _I2C_Init
  2779  0388                     _I2C_Init:	
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2783                           ;I2C_Init@I2Cx stored from wreg
  2784  0388  00FA               	movwf	I2C_Init@I2Cx
  2785                           
  2786                           ;I2C_Common.c: 8: switch(I2Cx)
  2787  0389  2BA6               	goto	l2986
  2788  038A                     l2980:	
  2789                           ;I2C_Common.c: 9: {
  2790                           ;I2C_Common.c: 10: case I2C1_MODULE:
  2791                           
  2792                           
  2793                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  2794  038A  0878               	movf	I2C_Init@mode,w
  2795  038B  0020               	movlb	0	; select bank0
  2796  038C  00D0               	movwf	??_I2C_Init
  2797  038D  0850               	movf	??_I2C_Init,w
  2798  038E  00F3               	movwf	I2C1_Setting@mode
  2799  038F  0879               	movf	I2C_Init@Speed,w
  2800  0390  00D1               	movwf	??_I2C_Init+1
  2801  0391  0851               	movf	??_I2C_Init+1,w
  2802  0392  00F4               	movwf	I2C1_Setting@Speed
  2803  0393  0877               	movf	I2C_Init@address,w
  2804  0394  3182  22F2  3183   	fcall	_I2C1_Setting
  2805                           
  2806                           ;I2C_Common.c: 12: break;
  2807  0397  2BAE               	goto	l577
  2808  0398                     l2982:	
  2809                           ;I2C_Common.c: 14: case I2C2_MODULE:
  2810                           
  2811                           
  2812                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  2813  0398  0878               	movf	I2C_Init@mode,w
  2814  0399  0020               	movlb	0	; select bank0
  2815  039A  00D0               	movwf	??_I2C_Init
  2816  039B  0850               	movf	??_I2C_Init,w
  2817  039C  00F3               	movwf	I2C2_Setting@mode
  2818  039D  0879               	movf	I2C_Init@Speed,w
  2819  039E  00D1               	movwf	??_I2C_Init+1
  2820  039F  0851               	movf	??_I2C_Init+1,w
  2821  03A0  00F4               	movwf	I2C2_Setting@Speed
  2822  03A1  0877               	movf	I2C_Init@address,w
  2823  03A2  3182  22BA  3183   	fcall	_I2C2_Setting
  2824                           
  2825                           ;I2C_Common.c: 17: }
  2826                           
  2827                           ;I2C_Common.c: 16: break;
  2828  03A5  2BAE               	goto	l577
  2829  03A6                     l2986:	
  2830  03A6  087A               	movf	I2C_Init@I2Cx,w
  2831                           
  2832                           ; Switch size 1, requested type "space"
  2833                           ; Number of cases is 2, Range of values is 0 to 1
  2834                           ; switch strategies available:
  2835                           ; Name         Instructions Cycles
  2836                           ; simple_byte            7     4 (average)
  2837                           ; direct_byte           10     6 (fixed)
  2838                           ; jumptable            260     6 (fixed)
  2839                           ;	Chosen strategy is simple_byte
  2840  03A7  3A00               	xorlw	0	; case 0
  2841  03A8  1903               	skipnz
  2842  03A9  2B8A               	goto	l2980
  2843  03AA  3A01               	xorlw	1	; case 1
  2844  03AB  1903               	skipnz
  2845  03AC  2B98               	goto	l2982
  2846  03AD  2BAE               	goto	l577
  2847  03AE                     l577:	
  2848                           
  2849                           ;I2C_Common.c: 19: PEIE = 1;
  2850  03AE  170B               	bsf	11,6	;volatile
  2851                           
  2852                           ;I2C_Common.c: 20: GIE = 1;
  2853  03AF  178B               	bsf	11,7	;volatile
  2854  03B0  0008               	return
  2855  03B1                     __end_of_I2C_Init:	
  2856                           
  2857                           	psect	text10
  2858  02BA                     __ptext10:	
  2859 ;; *************** function _I2C2_Setting *****************
  2860 ;; Defined at:
  2861 ;;		line 15 in file "I2C2.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  address         1    wreg     unsigned char 
  2864 ;;  mode            1    3[COMMON] enum E3027
  2865 ;;  Speed           1    4[COMMON] enum E3031
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  address         1    6[COMMON] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2877 ;;      Params:         2       0       0       0       0       0
  2878 ;;      Locals:         1       0       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0       0
  2880 ;;      Totals:         4       0       0       0       0       0
  2881 ;;Total ram usage:        4 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_I2C2_PinInit
  2886 ;; This function is called by:
  2887 ;;		_I2C_Init
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _I2C2_Setting
  2893  02BA                     _I2C2_Setting:	
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2897                           ;I2C2_Setting@address stored from wreg
  2898  02BA  00F6               	movwf	I2C2_Setting@address
  2899                           
  2900                           ;I2C2.c: 17: I2C2_PinInit();
  2901  02BB  3184  2410  3182   	fcall	_I2C2_PinInit
  2902                           
  2903                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  2904  02BE  0873               	movf	I2C2_Setting@mode,w
  2905  02BF  00F5               	movwf	??_I2C2_Setting
  2906  02C0  0875               	movf	??_I2C2_Setting,w
  2907  02C1  0020               	movlb	0	; select bank0
  2908  02C2  00B9               	movwf	_I2C2_Config+18
  2909                           
  2910                           ;I2C2.c: 20: switch(mode)
  2911  02C3  2AE3               	goto	l2924
  2912  02C4                     l450:	
  2913                           ;I2C2.c: 21: {
  2914                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  2915                           
  2916                           
  2917                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  2918  02C4  0024               	movlb	4	; select bank4
  2919  02C5  159D               	bsf	29,3	;volatile
  2920                           
  2921                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  2922  02C6  0874               	movf	I2C2_Setting@Speed,w
  2923  02C7  1D03               	btfss	3,2
  2924  02C8  2ACC               	goto	l2902
  2925                           
  2926                           ;I2C2.c: 25: {
  2927                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  2928  02C9  179C               	bsf	28,7	;volatile
  2929                           
  2930                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  2931  02CA  304F               	movlw	79
  2932  02CB  2AD4               	goto	L3
  2933  02CC                     l2902:	
  2934                           ;I2C2.c: 28: }
  2935                           
  2936                           
  2937                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  2938  02CC  0374               	decf	I2C2_Setting@Speed,w
  2939  02CD  1D03               	btfss	3,2
  2940  02CE  2AE1               	goto	l2920
  2941                           
  2942                           ;I2C2.c: 30: {
  2943                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  2944  02CF  307F               	movlw	127
  2945  02D0  00F5               	movwf	??_I2C2_Setting
  2946  02D1  0875               	movf	??_I2C2_Setting,w
  2947  02D2  059C               	andwf	28,f	;volatile
  2948                           
  2949                           ;I2C2.c: 32: SSP2ADD = 0x13;
  2950  02D3  3013               	movlw	19
  2951  02D4                     L3:	
  2952  02D4  009A               	movwf	26	;volatile
  2953  02D5  2AE1               	goto	l2920
  2954  02D6                     l2910:	
  2955                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  2956                           
  2957                           ;I2C2.c: 35: break;
  2958                           
  2959                           ;I2C2.c: 33: }
  2960                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  2961                           
  2962                           
  2963                           ;I2C2.c: 38: SSP2STAT = 0x00;
  2964  02D6  0024               	movlb	4	; select bank4
  2965  02D7  019C               	clrf	28	;volatile
  2966                           
  2967                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  2968  02D8  3006               	movlw	6
  2969  02D9  00F5               	movwf	??_I2C2_Setting
  2970  02DA  0875               	movf	??_I2C2_Setting,w
  2971  02DB  049D               	iorwf	29,f	;volatile
  2972                           
  2973                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  2974  02DC  141E               	bsf	30,0	;volatile
  2975                           
  2976                           ;I2C2.c: 41: SSP2ADD = address << 1;
  2977  02DD  3576               	lslf	I2C2_Setting@address,w
  2978  02DE  009A               	movwf	26	;volatile
  2979                           
  2980                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  2981  02DF  30FE               	movlw	254
  2982  02E0  009B               	movwf	27	;volatile
  2983  02E1                     l2920:	
  2984                           
  2985                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  2986  02E1  169D               	bsf	29,5	;volatile
  2987                           
  2988                           ;I2C2.c: 45: }
  2989                           
  2990                           ;I2C2.c: 44: break;
  2991  02E2  2AEB               	goto	l454
  2992  02E3                     l2924:	
  2993  02E3  0873               	movf	I2C2_Setting@mode,w
  2994                           
  2995                           ; Switch size 1, requested type "space"
  2996                           ; Number of cases is 2, Range of values is 0 to 1
  2997                           ; switch strategies available:
  2998                           ; Name         Instructions Cycles
  2999                           ; simple_byte            7     4 (average)
  3000                           ; direct_byte           10     6 (fixed)
  3001                           ; jumptable            260     6 (fixed)
  3002                           ;	Chosen strategy is simple_byte
  3003  02E4  3A00               	xorlw	0	; case 0
  3004  02E5  1903               	skipnz
  3005  02E6  2AC4               	goto	l450
  3006  02E7  3A01               	xorlw	1	; case 1
  3007  02E8  1903               	skipnz
  3008  02E9  2AD6               	goto	l2910
  3009  02EA  2AEB               	goto	l454
  3010  02EB                     l454:	
  3011                           
  3012                           ;I2C2.c: 46: SSP2IE = 1;
  3013  02EB  0021               	movlb	1	; select bank1
  3014  02EC  1414               	bsf	20,0	;volatile
  3015                           
  3016                           ;I2C2.c: 47: BCL2IE = 1;
  3017  02ED  1494               	bsf	20,1	;volatile
  3018                           
  3019                           ;I2C2.c: 48: SSP2IF = 0;
  3020  02EE  0020               	movlb	0	; select bank0
  3021  02EF  1014               	bcf	20,0	;volatile
  3022                           
  3023                           ;I2C2.c: 49: BCL2IF = 0;
  3024  02F0  1094               	bcf	20,1	;volatile
  3025  02F1  0008               	return
  3026  02F2                     __end_of_I2C2_Setting:	
  3027                           
  3028                           	psect	text11
  3029  0410                     __ptext11:	
  3030 ;; *************** function _I2C2_PinInit *****************
  3031 ;; Defined at:
  3032 ;;		line 9 in file "I2C2.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3046 ;;      Params:         0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0       0
  3049 ;;      Totals:         1       0       0       0       0       0
  3050 ;;Total ram usage:        1 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    3
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_I2C2_Setting
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _I2C2_PinInit
  3062  0410                     _I2C2_PinInit:	
  3063                           
  3064                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  3068  0410  3024               	movlw	36
  3069  0411  00F2               	movwf	??_I2C2_PinInit
  3070  0412  0872               	movf	??_I2C2_PinInit,w
  3071  0413  0021               	movlb	1	; select bank1
  3072  0414  048D               	iorwf	13,f	;volatile
  3073                           
  3074                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  3075  0415  30DB               	movlw	219
  3076  0416  00F2               	movwf	??_I2C2_PinInit
  3077  0417  0872               	movf	??_I2C2_PinInit,w
  3078  0418  0023               	movlb	3	; select bank3
  3079  0419  058D               	andwf	13,f	;volatile
  3080  041A  0008               	return
  3081  041B                     __end_of_I2C2_PinInit:	
  3082                           
  3083                           	psect	text12
  3084  02F2                     __ptext12:	
  3085 ;; *************** function _I2C1_Setting *****************
  3086 ;; Defined at:
  3087 ;;		line 15 in file "I2C1.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  address         1    wreg     unsigned char 
  3090 ;;  mode            1    3[COMMON] enum E3027
  3091 ;;  Speed           1    4[COMMON] enum E3031
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  address         1    6[COMMON] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3103 ;;      Params:         2       0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0
  3106 ;;      Totals:         4       0       0       0       0       0
  3107 ;;Total ram usage:        4 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    4
  3110 ;; This function calls:
  3111 ;;		_I2C1_PinInit
  3112 ;; This function is called by:
  3113 ;;		_I2C_Init
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _I2C1_Setting
  3119  02F2                     _I2C1_Setting:	
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3123                           ;I2C1_Setting@address stored from wreg
  3124  02F2  00F6               	movwf	I2C1_Setting@address
  3125                           
  3126                           ;I2C1.c: 17: I2C1_PinInit();
  3127  02F3  3184  241B  3182   	fcall	_I2C1_PinInit
  3128                           
  3129                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  3130  02F6  0873               	movf	I2C1_Setting@mode,w
  3131  02F7  00F5               	movwf	??_I2C1_Setting
  3132  02F8  0875               	movf	??_I2C1_Setting,w
  3133  02F9  0020               	movlb	0	; select bank0
  3134  02FA  00CC               	movwf	_I2C1_Config+18
  3135                           
  3136                           ;I2C1.c: 20: switch(mode)
  3137  02FB  2B1B               	goto	l2838
  3138  02FC                     l313:	
  3139                           ;I2C1.c: 21: {
  3140                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  3141                           
  3142                           
  3143                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  3144  02FC  0024               	movlb	4	; select bank4
  3145  02FD  1595               	bsf	21,3	;volatile
  3146                           
  3147                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  3148  02FE  0874               	movf	I2C1_Setting@Speed,w
  3149  02FF  1D03               	btfss	3,2
  3150  0300  2B04               	goto	l2816
  3151                           
  3152                           ;I2C1.c: 25: {
  3153                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  3154  0301  1794               	bsf	20,7	;volatile
  3155                           
  3156                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  3157  0302  304F               	movlw	79
  3158  0303  2B0C               	goto	L4
  3159  0304                     l2816:	
  3160                           ;I2C1.c: 28: }
  3161                           
  3162                           
  3163                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  3164  0304  0374               	decf	I2C1_Setting@Speed,w
  3165  0305  1D03               	btfss	3,2
  3166  0306  2B19               	goto	l2834
  3167                           
  3168                           ;I2C1.c: 30: {
  3169                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  3170  0307  307F               	movlw	127
  3171  0308  00F5               	movwf	??_I2C1_Setting
  3172  0309  0875               	movf	??_I2C1_Setting,w
  3173  030A  0594               	andwf	20,f	;volatile
  3174                           
  3175                           ;I2C1.c: 32: SSP1ADD = 0x13;
  3176  030B  3013               	movlw	19
  3177  030C                     L4:	
  3178  030C  0092               	movwf	18	;volatile
  3179  030D  2B19               	goto	l2834
  3180  030E                     l2824:	
  3181                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  3182                           
  3183                           ;I2C1.c: 35: break;
  3184                           
  3185                           ;I2C1.c: 33: }
  3186                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  3187                           
  3188                           
  3189                           ;I2C1.c: 38: SSP1STAT = 0x00;
  3190  030E  0024               	movlb	4	; select bank4
  3191  030F  0194               	clrf	20	;volatile
  3192                           
  3193                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  3194  0310  3006               	movlw	6
  3195  0311  00F5               	movwf	??_I2C1_Setting
  3196  0312  0875               	movf	??_I2C1_Setting,w
  3197  0313  0495               	iorwf	21,f	;volatile
  3198                           
  3199                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  3200  0314  1416               	bsf	22,0	;volatile
  3201                           
  3202                           ;I2C1.c: 41: SSP1ADD = address << 1;
  3203  0315  3576               	lslf	I2C1_Setting@address,w
  3204  0316  0092               	movwf	18	;volatile
  3205                           
  3206                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  3207  0317  30FE               	movlw	254
  3208  0318  0093               	movwf	19	;volatile
  3209  0319                     l2834:	
  3210                           
  3211                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  3212  0319  1695               	bsf	21,5	;volatile
  3213                           
  3214                           ;I2C1.c: 45: }
  3215                           
  3216                           ;I2C1.c: 44: break;
  3217  031A  2B23               	goto	l317
  3218  031B                     l2838:	
  3219  031B  0873               	movf	I2C1_Setting@mode,w
  3220                           
  3221                           ; Switch size 1, requested type "space"
  3222                           ; Number of cases is 2, Range of values is 0 to 1
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; simple_byte            7     4 (average)
  3226                           ; direct_byte           10     6 (fixed)
  3227                           ; jumptable            260     6 (fixed)
  3228                           ;	Chosen strategy is simple_byte
  3229  031C  3A00               	xorlw	0	; case 0
  3230  031D  1903               	skipnz
  3231  031E  2AFC               	goto	l313
  3232  031F  3A01               	xorlw	1	; case 1
  3233  0320  1903               	skipnz
  3234  0321  2B0E               	goto	l2824
  3235  0322  2B23               	goto	l317
  3236  0323                     l317:	
  3237                           
  3238                           ;I2C1.c: 46: SSP1IE = 1;
  3239  0323  0021               	movlb	1	; select bank1
  3240  0324  1591               	bsf	17,3	;volatile
  3241                           
  3242                           ;I2C1.c: 47: BCL1IE = 1;
  3243  0325  1592               	bsf	18,3	;volatile
  3244                           
  3245                           ;I2C1.c: 48: SSP1IF = 0;
  3246  0326  0020               	movlb	0	; select bank0
  3247  0327  1191               	bcf	17,3	;volatile
  3248                           
  3249                           ;I2C1.c: 49: BCL1IF = 0;
  3250  0328  1192               	bcf	18,3	;volatile
  3251  0329  0008               	return
  3252  032A                     __end_of_I2C1_Setting:	
  3253                           
  3254                           	psect	text13
  3255  041B                     __ptext13:	
  3256 ;; *************** function _I2C1_PinInit *****************
  3257 ;; Defined at:
  3258 ;;		line 9 in file "I2C1.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3272 ;;      Params:         0       0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0
  3274 ;;      Temps:          1       0       0       0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    3
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_I2C1_Setting
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _I2C1_PinInit
  3288  041B                     _I2C1_PinInit:	
  3289                           
  3290                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  3294  041B  3012               	movlw	18
  3295  041C  00F2               	movwf	??_I2C1_PinInit
  3296  041D  0872               	movf	??_I2C1_PinInit,w
  3297  041E  0021               	movlb	1	; select bank1
  3298  041F  048D               	iorwf	13,f	;volatile
  3299                           
  3300                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  3301  0420  30ED               	movlw	237
  3302  0421  00F2               	movwf	??_I2C1_PinInit
  3303  0422  0872               	movf	??_I2C1_PinInit,w
  3304  0423  0023               	movlb	3	; select bank3
  3305  0424  058D               	andwf	13,f	;volatile
  3306  0425  0008               	return
  3307  0426                     __end_of_I2C1_PinInit:	
  3308                           
  3309                           	psect	text14
  3310  03EC                     __ptext14:	
  3311 ;; *************** function _Basic_Init *****************
  3312 ;; Defined at:
  3313 ;;		line 36 in file "main.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3327 ;;      Params:         0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _Basic_Init
  3343  03EC                     _Basic_Init:	
  3344                           
  3345                           ;main.c: 38: OSCCON = 0xF0;
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Basic_Init: [wreg+status,2]
  3349  03EC  30F0               	movlw	240
  3350  03ED  0021               	movlb	1	; select bank1
  3351  03EE  0099               	movwf	25	;volatile
  3352                           
  3353                           ;main.c: 42: TRISA = 0x07;
  3354  03EF  3007               	movlw	7
  3355  03F0  008C               	movwf	12	;volatile
  3356                           
  3357                           ;main.c: 43: ANSELA = 0x07;
  3358  03F1  3007               	movlw	7
  3359  03F2  0023               	movlb	3	; select bank3
  3360  03F3  008C               	movwf	12	;volatile
  3361                           
  3362                           ;main.c: 45: TRISB = 0x40;
  3363  03F4  3040               	movlw	64
  3364  03F5  0021               	movlb	1	; select bank1
  3365  03F6  008D               	movwf	13	;volatile
  3366                           
  3367                           ;main.c: 46: ANSELB = 0x00;
  3368  03F7  0023               	movlb	3	; select bank3
  3369  03F8  018D               	clrf	13	;volatile
  3370                           
  3371                           ;main.c: 48: APFCON0 = 0x08;
  3372  03F9  3008               	movlw	8
  3373  03FA  0022               	movlb	2	; select bank2
  3374  03FB  009D               	movwf	29	;volatile
  3375                           
  3376                           ;main.c: 49: APFCON1 = 0x00;
  3377  03FC  019E               	clrf	30	;volatile
  3378                           
  3379                           ;main.c: 51: PORTA = 0x00;
  3380  03FD  0020               	movlb	0	; select bank0
  3381  03FE  018C               	clrf	12	;volatile
  3382                           
  3383                           ;main.c: 52: PORTB = 0x00;
  3384  03FF  018D               	clrf	13	;volatile
  3385  0400  0008               	return
  3386  0401                     __end_of_Basic_Init:	
  3387                           ;main.c: 54: return 0;
  3388                           ;	Return value of _Basic_Init is never used
  3389                           
  3390                           
  3391                           	psect	intentry
  3392  0004                     __pintentry:	
  3393 ;; *************** function _hand *****************
  3394 ;; Defined at:
  3395 ;;		line 58 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3409 ;;      Params:         0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0       0
  3412 ;;      Totals:         1       0       0       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    2
  3416 ;; This function calls:
  3417 ;;		_I2C_CommonInterrupt
  3418 ;; This function is called by:
  3419 ;;		Interrupt level 1
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423  0004                     _hand:	
  3424                           
  3425                           ;incstack = 0
  3426  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3427                           
  3428                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3429  0005  3180               	pagesel	$
  3430  0006  0020               	movlb	0	; select bank0
  3431  0007  087F               	movf	127,w
  3432  0008  00F1               	movwf	??_hand
  3433                           
  3434                           ;main.c: 60: I2C_CommonInterrupt();
  3435  0009  3184  242C         	fcall	_I2C_CommonInterrupt
  3436  000B  0871               	movf	??_hand,w
  3437  000C  0020               	movlb	0	; select bank0
  3438  000D  00FF               	movwf	127
  3439  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3440  000F  0009               	retfie
  3441  0010                     __end_of_hand:	
  3442                           
  3443                           	psect	text16
  3444  042C                     __ptext16:	
  3445 ;; *************** function _I2C_CommonInterrupt *****************
  3446 ;; Defined at:
  3447 ;;		line 58 in file "I2C_Common.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3461 ;;      Params:         0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    1
  3468 ;; This function calls:
  3469 ;;		_I2C1_Interrupt
  3470 ;;		_I2C2_Interrupt
  3471 ;; This function is called by:
  3472 ;;		_hand
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _I2C_CommonInterrupt
  3478  042C                     _I2C_CommonInterrupt:	
  3479                           
  3480                           ;I2C_Common.c: 60: I2C1_Interrupt();
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3484  042C  3182  222C  3184   	fcall	_I2C1_Interrupt
  3485                           
  3486                           ;I2C_Common.c: 61: I2C2_Interrupt();
  3487  042F  3181  21D8         	fcall	_I2C2_Interrupt
  3488  0431  0008               	return
  3489  0432                     __end_of_I2C_CommonInterrupt:	
  3490                           
  3491                           	psect	text17
  3492  01D8                     __ptext17:	
  3493 ;; *************** function _I2C2_Interrupt *****************
  3494 ;; Defined at:
  3495 ;;		line 152 in file "I2C2.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3509 ;;      Params:         0       0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0
  3511 ;;      Temps:          1       0       0       0       0       0
  3512 ;;      Totals:         1       0       0       0       0       0
  3513 ;;Total ram usage:        1 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_I2C_CommonInterrupt
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _I2C2_Interrupt
  3524  01D8                     _I2C2_Interrupt:	
  3525                           
  3526                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3530  01D8  0020               	movlb	0	; select bank0
  3531  01D9  1C14               	btfss	20,0	;volatile
  3532  01DA  2A24               	goto	i1l1566
  3533  01DB  0021               	movlb	1	; select bank1
  3534  01DC  1C14               	btfss	20,0	;volatile
  3535  01DD  2A24               	goto	i1l1566
  3536                           
  3537                           ;I2C2.c: 155: {
  3538                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  3539  01DE  0024               	movlb	4	; select bank4
  3540  01DF  1E9C               	btfss	28,5	;volatile
  3541  01E0  29FB               	goto	i1l533
  3542                           
  3543                           ;I2C2.c: 157: {
  3544                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  3545  01E1  1D1C               	btfss	28,2	;volatile
  3546  01E2  29EE               	goto	i1l1542
  3547                           
  3548                           ;I2C2.c: 159: {
  3549                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  3550  01E3  1B1E               	btfsc	30,6	;volatile
  3551  01E4  2A22               	goto	i1l1564
  3552  01E5                     i1l1534:	
  3553                           ;I2C2.c: 161: {
  3554                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3555                           
  3556  01E5  081C               	movf	28,w	;volatile
  3557  01E6  3901               	andlw	1
  3558  01E7  00F0               	movwf	??_I2C2_Interrupt
  3559  01E8  0E1D               	swapf	29,w	;volatile
  3560  01E9  3901               	andlw	1
  3561  01EA  0470               	iorwf	??_I2C2_Interrupt,w
  3562  01EB  1D03               	btfss	3,2
  3563  01EC  29E5               	goto	i1l1534
  3564  01ED  2A0E               	goto	L5
  3565  01EE                     i1l1542:	
  3566                           ;I2C2.c: 166: }
  3567                           ;I2C2.c: 167: }
  3568                           
  3569                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  3570                           
  3571                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  3572                           
  3573                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  3574                           
  3575                           
  3576                           ;I2C2.c: 168: else
  3577                           ;I2C2.c: 169: {
  3578                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  3579  01EE  0819               	movf	25,w	;volatile
  3580  01EF  00F0               	movwf	??_I2C2_Interrupt
  3581  01F0  0020               	movlb	0	; select bank0
  3582  01F1  0838               	movf	low ((_I2C2_Config| 0+17)),w
  3583  01F2  0086               	movwf	6
  3584  01F3  0187               	clrf	7
  3585  01F4  0870               	movf	??_I2C2_Interrupt,w
  3586  01F5  0081               	movwf	1
  3587                           
  3588                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  3589  01F6  3001               	movlw	1
  3590  01F7  00F0               	movwf	??_I2C2_Interrupt
  3591  01F8  0870               	movf	??_I2C2_Interrupt,w
  3592  01F9  07B8               	addwf	low ((_I2C2_Config| 0+17)),f
  3593  01FA  2A20               	goto	i1l1562
  3594  01FB                     i1l533:	
  3595                           ;I2C2.c: 173: }
  3596                           ;I2C2.c: 174: }
  3597                           
  3598                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  3599                           
  3600                           
  3601                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  3602  01FB  1A9C               	btfsc	28,5	;volatile
  3603  01FC  2A22               	goto	i1l1564
  3604                           
  3605                           ;I2C2.c: 176: {
  3606                           ;I2C2.c: 177: SSP2BUF;
  3607  01FD  0819               	movf	25,w	;volatile
  3608                           
  3609                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  3610  01FE  1D1C               	btfss	28,2	;volatile
  3611  01FF  2A1B               	goto	i1l1560
  3612                           
  3613                           ;I2C2.c: 180: {
  3614                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  3615  0200  3027               	movlw	(low (_I2C2_Config| 0))& (0+255)
  3616  0201  00F0               	movwf	??_I2C2_Interrupt
  3617  0202  0870               	movf	??_I2C2_Interrupt,w
  3618  0203  0020               	movlb	0	; select bank0
  3619  0204  00B7               	movwf	low ((_I2C2_Config| 0+16))
  3620  0205                     i1l1554:	
  3621                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3622                           
  3623  0205  0024               	movlb	4	; select bank4
  3624  0206  081C               	movf	28,w	;volatile
  3625  0207  3901               	andlw	1
  3626  0208  00F0               	movwf	??_I2C2_Interrupt
  3627  0209  0E1D               	swapf	29,w	;volatile
  3628  020A  3901               	andlw	1
  3629  020B  0470               	iorwf	??_I2C2_Interrupt,w
  3630  020C  1D03               	btfss	3,2
  3631  020D  2A05               	goto	i1l1554
  3632  020E                     L5:	
  3633                           
  3634                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  3635  020E  0020               	movlb	0	; select bank0
  3636  020F  0837               	movf	low ((_I2C2_Config| 0+16)),w
  3637  0210  0086               	movwf	6
  3638  0211  0187               	clrf	7
  3639  0212  0801               	movf	1,w
  3640  0213  0024               	movlb	4	; select bank4
  3641  0214  0099               	movwf	25	;volatile
  3642                           
  3643                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  3644  0215  3001               	movlw	1
  3645  0216  00F0               	movwf	??_I2C2_Interrupt
  3646  0217  0870               	movf	??_I2C2_Interrupt,w
  3647  0218  0020               	movlb	0	; select bank0
  3648  0219  07B7               	addwf	low ((_I2C2_Config| 0+16)),f
  3649                           
  3650                           ;I2C2.c: 186: }
  3651  021A  2A20               	goto	i1l1562
  3652  021B                     i1l1560:	
  3653                           
  3654                           ;I2C2.c: 187: else
  3655                           ;I2C2.c: 188: {
  3656                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  3657  021B  302F               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  3658  021C  00F0               	movwf	??_I2C2_Interrupt
  3659  021D  0870               	movf	??_I2C2_Interrupt,w
  3660  021E  0020               	movlb	0	; select bank0
  3661  021F  00B8               	movwf	low ((_I2C2_Config| 0+17))
  3662  0220                     i1l1562:	
  3663                           
  3664                           ;I2C2.c: 190: }
  3665                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  3666  0220  0024               	movlb	4	; select bank4
  3667  0221  161D               	bsf	29,4	;volatile
  3668  0222                     i1l1564:	
  3669                           
  3670                           ;I2C2.c: 192: }
  3671                           ;I2C2.c: 193: SSP2IF = 0;
  3672  0222  0020               	movlb	0	; select bank0
  3673  0223  1014               	bcf	20,0	;volatile
  3674  0224                     i1l1566:	
  3675                           
  3676                           ;I2C2.c: 194: }
  3677                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  3678  0224  0021               	movlb	1	; select bank1
  3679  0225  1C94               	btfss	20,1	;volatile
  3680  0226  0008               	return
  3681  0227  0020               	movlb	0	; select bank0
  3682  0228  1C94               	btfss	20,1	;volatile
  3683  0229  0008               	return
  3684                           
  3685                           ;I2C2.c: 197: BCL2IF = 0;
  3686  022A  1094               	bcf	20,1	;volatile
  3687  022B  0008               	return
  3688  022C                     __end_of_I2C2_Interrupt:	
  3689                           
  3690                           	psect	text18
  3691  022C                     __ptext18:	
  3692 ;; *************** function _I2C1_Interrupt *****************
  3693 ;; Defined at:
  3694 ;;		line 152 in file "I2C1.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3708 ;;      Params:         0       0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0
  3710 ;;      Temps:          1       0       0       0       0       0
  3711 ;;      Totals:         1       0       0       0       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_I2C_CommonInterrupt
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function _I2C1_Interrupt
  3723  022C                     _I2C1_Interrupt:	
  3724                           
  3725                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3729  022C  0020               	movlb	0	; select bank0
  3730  022D  1D91               	btfss	17,3	;volatile
  3731  022E  2A78               	goto	i1l1516
  3732  022F  0021               	movlb	1	; select bank1
  3733  0230  1D91               	btfss	17,3	;volatile
  3734  0231  2A78               	goto	i1l1516
  3735                           
  3736                           ;I2C1.c: 155: {
  3737                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  3738  0232  0024               	movlb	4	; select bank4
  3739  0233  1E94               	btfss	20,5	;volatile
  3740  0234  2A4F               	goto	i1l396
  3741                           
  3742                           ;I2C1.c: 157: {
  3743                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  3744  0235  1D14               	btfss	20,2	;volatile
  3745  0236  2A42               	goto	i1l1492
  3746                           
  3747                           ;I2C1.c: 159: {
  3748                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  3749  0237  1B16               	btfsc	22,6	;volatile
  3750  0238  2A76               	goto	i1l1514
  3751  0239                     i1l1484:	
  3752                           ;I2C1.c: 161: {
  3753                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3754                           
  3755  0239  0814               	movf	20,w	;volatile
  3756  023A  3901               	andlw	1
  3757  023B  00F0               	movwf	??_I2C1_Interrupt
  3758  023C  0E15               	swapf	21,w	;volatile
  3759  023D  3901               	andlw	1
  3760  023E  0470               	iorwf	??_I2C1_Interrupt,w
  3761  023F  1D03               	btfss	3,2
  3762  0240  2A39               	goto	i1l1484
  3763  0241  2A62               	goto	L6
  3764  0242                     i1l1492:	
  3765                           ;I2C1.c: 166: }
  3766                           ;I2C1.c: 167: }
  3767                           
  3768                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  3769                           
  3770                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  3771                           
  3772                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  3773                           
  3774                           
  3775                           ;I2C1.c: 168: else
  3776                           ;I2C1.c: 169: {
  3777                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  3778  0242  0811               	movf	17,w	;volatile
  3779  0243  00F0               	movwf	??_I2C1_Interrupt
  3780  0244  0020               	movlb	0	; select bank0
  3781  0245  084B               	movf	low ((_I2C1_Config| 0+17)),w
  3782  0246  0086               	movwf	6
  3783  0247  0187               	clrf	7
  3784  0248  0870               	movf	??_I2C1_Interrupt,w
  3785  0249  0081               	movwf	1
  3786                           
  3787                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  3788  024A  3001               	movlw	1
  3789  024B  00F0               	movwf	??_I2C1_Interrupt
  3790  024C  0870               	movf	??_I2C1_Interrupt,w
  3791  024D  07CB               	addwf	low ((_I2C1_Config| 0+17)),f
  3792  024E  2A74               	goto	i1l1512
  3793  024F                     i1l396:	
  3794                           ;I2C1.c: 173: }
  3795                           ;I2C1.c: 174: }
  3796                           
  3797                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  3798                           
  3799                           
  3800                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  3801  024F  1A94               	btfsc	20,5	;volatile
  3802  0250  2A76               	goto	i1l1514
  3803                           
  3804                           ;I2C1.c: 176: {
  3805                           ;I2C1.c: 177: SSP1BUF;
  3806  0251  0811               	movf	17,w	;volatile
  3807                           
  3808                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  3809  0252  1D14               	btfss	20,2	;volatile
  3810  0253  2A6F               	goto	i1l1510
  3811                           
  3812                           ;I2C1.c: 180: {
  3813                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3814  0254  303A               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3815  0255  00F0               	movwf	??_I2C1_Interrupt
  3816  0256  0870               	movf	??_I2C1_Interrupt,w
  3817  0257  0020               	movlb	0	; select bank0
  3818  0258  00CA               	movwf	low ((_I2C1_Config| 0+16))
  3819  0259                     i1l1504:	
  3820                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3821                           
  3822  0259  0024               	movlb	4	; select bank4
  3823  025A  0814               	movf	20,w	;volatile
  3824  025B  3901               	andlw	1
  3825  025C  00F0               	movwf	??_I2C1_Interrupt
  3826  025D  0E15               	swapf	21,w	;volatile
  3827  025E  3901               	andlw	1
  3828  025F  0470               	iorwf	??_I2C1_Interrupt,w
  3829  0260  1D03               	btfss	3,2
  3830  0261  2A59               	goto	i1l1504
  3831  0262                     L6:	
  3832                           
  3833                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  3834  0262  0020               	movlb	0	; select bank0
  3835  0263  084A               	movf	low ((_I2C1_Config| 0+16)),w
  3836  0264  0086               	movwf	6
  3837  0265  0187               	clrf	7
  3838  0266  0801               	movf	1,w
  3839  0267  0024               	movlb	4	; select bank4
  3840  0268  0091               	movwf	17	;volatile
  3841                           
  3842                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  3843  0269  3001               	movlw	1
  3844  026A  00F0               	movwf	??_I2C1_Interrupt
  3845  026B  0870               	movf	??_I2C1_Interrupt,w
  3846  026C  0020               	movlb	0	; select bank0
  3847  026D  07CA               	addwf	low ((_I2C1_Config| 0+16)),f
  3848                           
  3849                           ;I2C1.c: 186: }
  3850  026E  2A74               	goto	i1l1512
  3851  026F                     i1l1510:	
  3852                           
  3853                           ;I2C1.c: 187: else
  3854                           ;I2C1.c: 188: {
  3855                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3856  026F  3042               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3857  0270  00F0               	movwf	??_I2C1_Interrupt
  3858  0271  0870               	movf	??_I2C1_Interrupt,w
  3859  0272  0020               	movlb	0	; select bank0
  3860  0273  00CB               	movwf	low ((_I2C1_Config| 0+17))
  3861  0274                     i1l1512:	
  3862                           
  3863                           ;I2C1.c: 190: }
  3864                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  3865  0274  0024               	movlb	4	; select bank4
  3866  0275  1615               	bsf	21,4	;volatile
  3867  0276                     i1l1514:	
  3868                           
  3869                           ;I2C1.c: 192: }
  3870                           ;I2C1.c: 193: SSP1IF = 0;
  3871  0276  0020               	movlb	0	; select bank0
  3872  0277  1191               	bcf	17,3	;volatile
  3873  0278                     i1l1516:	
  3874                           
  3875                           ;I2C1.c: 194: }
  3876                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  3877  0278  0021               	movlb	1	; select bank1
  3878  0279  1D92               	btfss	18,3	;volatile
  3879  027A  0008               	return
  3880  027B  0020               	movlb	0	; select bank0
  3881  027C  1D92               	btfss	18,3	;volatile
  3882  027D  0008               	return
  3883                           
  3884                           ;I2C1.c: 197: BCL1IF = 0;
  3885  027E  1192               	bcf	18,3	;volatile
  3886  027F  0008               	return
  3887  0280                     __end_of_I2C1_Interrupt:	
  3888  007E                     btemp	set	126	;btemp
  3889  007E                     int$flags	set	126
  3890  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     20      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S243$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S243$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_DAC_WriteVoltage
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_DAC_WriteVoltage
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5564
                                             14 BANK0      6     6      0
                         _Basic_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     7     5      2    2175
                                             10 COMMON     1     1      0
                                              8 BANK0      6     4      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      50       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     14      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      50      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 14 11:53:58 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
                         l313 02FC                           l330 00B3                           l317 0323  
                         l450 02C4                           l339 00D6                           l348 00ED  
                         l454 02EB                           l467 0035                           l476 0058  
                         l485 006F                           l577 03AE                           _GIE 005F  
                         _RA3 0063                           _RA4 0064                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 03EC  
                __CFG_LVP$OFF 0000                          l3030 0194                          l3044 01B5  
                        l3036 019E                          l2910 02D6                          l2902 02CC  
                        l2824 030E                          l2816 0304                          l2920 02E1  
                        l2834 0319                          l2842 009F                          l2930 002B  
                        l2924 02E3                          l2844 00A9                          l2940 0048  
                        l2838 031B                          l2854 00C6                          l2950 0040  
                        l2880 0109                          l2864 00BE                          l2952 0044  
                        l2928 0021                          l2882 010E                          l2866 00C2  
                        l2954 0065                          l2980 038A                          l2868 00E3  
                        l2964 0074                          l2972 0092                          l2982 0398  
                        l2878 00F2                          l2886 0110                          l2966 008B  
                        l2974 009B                          l2990 0360                          l2888 0119  
                        l2968 0090                          l2992 036D                          l2986 03A6  
                        l2996 037E                          l2998 0386             ?_DAC_WriteVoltage 0058  
                        STR_1 03EA                          STR_2 03D0                          STR_3 03DE  
                        STR_4 03E4                          STR_5 03D7                          u1475 0288  
                        u2807 01A6                          u2817 01CF                          u2827 0123  
                        _PEIE 005E                          u2837 013B                          u2847 014E  
                        u2857 0162                          u2867 040A                          u2877 0282  
             ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000            ??_DAC_WriteVoltage 005A  
                        _hand 0004                          _main 0184              __end_of_I2C_Init 03B1  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0010                 __CFG_IESO$OFF 0000  
                 main@voltage 0060                 _LCD_WriteData 0280                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 0410         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 0184                 __CFG_PLLEN$ON 0000                         ?_hand 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATA7 0867  
                       i1l533 01FB                         i1l396 024F                         _PORTA 000C  
                       _PORTB 000D                         _TRISA 008C                         _TRISB 008D  
           I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000  
                       status 0003                         wtemp0 007E                  _I2C_Transmit 035D  
              ?_LCD_WriteData 0070              ??_DAC_Initialize 0058               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 01D8                        ??_hand 0071  
                      ??_main 005E                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
                      _ANSELA 018C                        _ANSELB 018D                        i1l1510 026F  
                      i1l1512 0274                        i1l1504 0259                        i1l1514 0276  
                      i1l1516 0278                        i1l1534 01E5                        i1l1542 01EE  
                      i1l1560 021B                        i1l1562 0220                        i1l1554 0205  
                      i1l1484 0239                        i1l1492 0242                        i1l1564 0222  
                      i1l1566 0224            I2C2_Transmit@i_513 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0                        _outptr 007B  
            I2C_Transmit@I2Cx 0056                     ?_I2C_Init 0077              I2C_Transmit@size 0052  
     __end_of__initialization 001A                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
                  _VoltageReg 004D                __pcstackCOMMON 0070           __size_of_Basic_Init 0015  
                  ??_I2C_Init 0050           I2C1_Transmit@result 0079                    __pbssBANK0 0020  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A        DAC_WriteVoltage@result 007A  
 __end_of_I2C_CommonInterrupt 0432                  I2C_Init@mode 0078                    __pmaintext 0184  
   __size_of_DAC_WriteVoltage 0033                    __pintentry 0004             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E            ??_LCD_DisplayClear 0075  
                     _LCD_Put 0000                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           I2C2_Transmit@result 0079         __end_of_I2C1_Transmit 011B  
       __end_of_I2C2_Transmit 009D               __CFG_STVREN$OFF 0000                       __ptext1 011B  
                     __ptext2 0401                       __ptext3 0280                       __ptext4 032A  
                     __ptext5 03B1                       __ptext6 035D                       __ptext7 001E  
                     __ptext8 009D                       __ptext9 0388                  ??_Basic_Init 0072  
                     clrloop0 0427          end_of_initialization 001A                 ?_I2C1_PinInit 0070  
               ?_I2C2_PinInit 0070                   _I2C1_Config 003A                   _I2C2_Config 0027  
               ?_I2C1_Setting 0073                 ?_I2C2_Setting 0073             I2C_Transmit@pData 0051  
          __end_of_Basic_Init 0401                  __pstringtext 03D0       __size_of_I2C1_Interrupt 0054  
            __CFG_FOSC$INTOSC 0000                main@voltage_70 0062       __size_of_I2C2_Interrupt 0054  
           __size_of_I2C_Init 0029           I2C1_Setting@address 0076                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                ??_I2C2_Setting 0075  
           __size_of_LCD_Init 0069              _DAC_WriteVoltage 032A                     _ConfigReg 004F  
     __size_of_DAC_Initialize 001F           start_initialization 0012          I2C1_Transmit@address 0076  
                   _MemoryReg 0020           I2C2_Setting@address 0076         __end_of_LCD_WriteData 02BA  
           I2C1_Setting@Speed 0074                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0050            I2C1_Transmit@i_369 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                 ?_I2C_Transmit 0050  
               I2C_Init@Speed 0079         DAC_WriteVoltage@volue 0058                _I2C1_Interrupt 022C  
        __end_of_I2C1_PinInit 0426  __size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 041B  
        __end_of_I2C1_Setting 032A                      _I2C_Init 0388          __end_of_I2C2_Setting 02F2  
              _I2C2_Interrupt 01D8                      _LCD_Init 011B                ??_I2C_Transmit 0053  
                   clear_ram0 0426        __end_of_I2C1_Interrupt 0280                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
              _DAC_Initialize 03B1        __end_of_I2C2_Interrupt 022C        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0025        __size_of_I2C2_Transmit 007F      __end_of_DAC_WriteVoltage 035D  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 03D0              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
                    __ptext10 02BA                      __ptext11 0410                      __ptext12 02F2  
                    __ptext13 041B                      __ptext14 03EC                      __ptext16 042C  
                    __ptext17 01D8                      __ptext18 022C                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0401                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E                 __size_of_hand 000C                 __size_of_main 0054  
               _I2C1_Transmit 009D                 _I2C2_Transmit 001E         __size_of_I2C1_PinInit 000B  
                    int$flags 007E         __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0050  
       __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0023         __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C  
        __end_of_I2C_Transmit 0388             I2C2_Setting@Speed 0074                      intlevel1 0000  
         _I2C_CommonInterrupt 042C                  _I2C1_PinInit 041B                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0410                  _I2C1_Setting 02F2  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 02BA            I2C_Transmit@result 0057  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070        __size_of_LCD_WriteData 003A  
              I2C1_Transmit@i 0077  
