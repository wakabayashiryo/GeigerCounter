

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May  1 23:34:56 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1827 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029E                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  0211                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0217                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021B                     	;# 
   312  021C                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029E                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  039A                     	;# 
   346  039C                     	;# 
   347  039D                     	;# 
   348  039E                     	;# 
   349  039F                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0097                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009A                     	;# 
   408  009B                     	;# 
   409  009B                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  0111                     	;# 
   416  0112                     	;# 
   417  0113                     	;# 
   418  0114                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0117                     	;# 
   422  0118                     	;# 
   423  0119                     	;# 
   424  011A                     	;# 
   425  011B                     	;# 
   426  011D                     	;# 
   427  011E                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0219                     	;# 
   468  021A                     	;# 
   469  021B                     	;# 
   470  021C                     	;# 
   471  021D                     	;# 
   472  021E                     	;# 
   473  021F                     	;# 
   474  0291                     	;# 
   475  0291                     	;# 
   476  0292                     	;# 
   477  0293                     	;# 
   478  0294                     	;# 
   479  0295                     	;# 
   480  0295                     	;# 
   481  0296                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  029B                     	;# 
   487  029C                     	;# 
   488  029C                     	;# 
   489  029D                     	;# 
   490  029E                     	;# 
   491  029E                     	;# 
   492  0311                     	;# 
   493  0311                     	;# 
   494  0312                     	;# 
   495  0313                     	;# 
   496  0318                     	;# 
   497  0318                     	;# 
   498  0319                     	;# 
   499  031A                     	;# 
   500  0394                     	;# 
   501  0395                     	;# 
   502  0396                     	;# 
   503  039A                     	;# 
   504  039C                     	;# 
   505  039D                     	;# 
   506  039E                     	;# 
   507  039F                     	;# 
   508  0415                     	;# 
   509  0416                     	;# 
   510  0417                     	;# 
   511  041C                     	;# 
   512  041D                     	;# 
   513  041E                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525                           
   526 ;; Function _LCD_Put is unused but had its address taken
   527  000C                     _PORTA	set	12
   528  000D                     _PORTB	set	13
   529  001B                     _PR2	set	27
   530  001A                     _TMR2	set	26
   531  001C                     _T2CON	set	28
   532  0064                     _RA4	set	100
   533  0063                     _RA3	set	99
   534  008D                     _TRISB	set	141
   535  0099                     _OSCCON	set	153
   536  008C                     _TRISA	set	140
   537  011E                     _APFCON1	set	286
   538  011D                     _APFCON0	set	285
   539  018D                     _ANSELB	set	397
   540  018C                     _ANSELA	set	396
   541  0298                     _CCPR2L	set	664
   542  029E                     _CCPTMRS	set	670
   543  029A                     _CCP2CON	set	666
   544                           
   545                           	psect	stringtext
   546  0800                     __pstringtext:	
   547  0800                     STR_2:	
   548  0800  3425               	retlw	37	;'%'
   549  0801  3430               	retlw	48	;'0'
   550  0802  3438               	retlw	56	;'8'
   551  0803  346C               	retlw	108	;'l'
   552  0804  3458               	retlw	88	;'X'
   553  0805  3420               	retlw	32	;' '
   554  0806  3400               	retlw	0
   555  0807                     STR_5:	
   556  0807  3420               	retlw	32	;' '
   557  0808  3425               	retlw	37	;'%'
   558  0809  3430               	retlw	48	;'0'
   559  080A  3438               	retlw	56	;'8'
   560  080B  344C               	retlw	76	;'L'
   561  080C  3458               	retlw	88	;'X'
   562  080D  3400               	retlw	0
   563  080E                     STR_3:	
   564  080E  3420               	retlw	32	;' '
   565  080F  3425               	retlw	37	;'%'
   566  0810  3430               	retlw	48	;'0'
   567  0811  3432               	retlw	50	;'2'
   568  0812  3458               	retlw	88	;'X'
   569  0813  3400               	retlw	0
   570  0814                     STR_4:	
   571  0814  3420               	retlw	32	;' '
   572  0815  3425               	retlw	37	;'%'
   573  0816  3430               	retlw	48	;'0'
   574  0817  3434               	retlw	52	;'4'
   575  0818  3458               	retlw	88	;'X'
   576  0819  3400               	retlw	0
   577  081A                     STR_1:	
   578  081A  340D               	retlw	13
   579  081B  3400               	retlw	0
   580                           
   581                           ; #config settings
   582  0000                     
   583                           	psect	cinit
   584  07F6                     start_initialization:	
   585  07F6                     __initialization:	
   586                           
   587                           ; Clear objects allocated to COMMON
   588  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   589  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   590  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   591  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   592  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   593  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   594  07FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   595  07FD                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  07FD                     __end_of__initialization:	
   599  07FD  0020               	movlb	0
   600  07FE  3187  2F01         	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssCOMMON
   603  0070                     __pbssCOMMON:	
   604  0070                     _xfunc_in:	
   605  0070                     	ds	2
   606  0072                     _xfunc_out:	
   607  0072                     	ds	2
   608  0074                     _count:	
   609  0074                     	ds	2
   610  0076                     _outptr:	
   611  0076                     	ds	1
   612                           
   613                           	psect	cstackCOMMON
   614  0077                     __pcstackCOMMON:	
   615  0077                     ?_LCD_DisplayClear:	
   616  0077                     ?_Basic_Init:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0077                     ??_Basic_Init:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0077                     ?_Buzzer_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0077                     ??_Buzzer_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0077                     ?_Buzzer_SetDuty:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0077                     ?_LCD_WriteData:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0077                     ??_LCD_WriteData:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0077                     ?_LCD_Init:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0077                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0077                     Buzzer_SetDuty@duty:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 2 bytes @ 0x0
   648  0077                     	ds	2
   649  0079                     ??_Buzzer_SetDuty:	
   650  0079                     LCD_WriteData@point:	
   651                           ; 1 bytes @ 0x2
   652                           
   653                           
   654                           ; 1 bytes @ 0x2
   655  0079                     	ds	1
   656  007A                     ??_LCD_DisplayClear:	
   657                           
   658                           ; 1 bytes @ 0x3
   659  007A                     	ds	1
   660  007B                     ??_LCD_Init:	
   661  007B                     Buzzer_SetDuty@CCP2CON_Pre:	
   662                           ; 1 bytes @ 0x4
   663                           
   664                           
   665                           ; 1 bytes @ 0x4
   666  007B                     	ds	2
   667  007D                     ??_main:	
   668                           
   669                           	psect	maintext
   670  0701                     __pmaintext:	
   671                           ; 1 bytes @ 0x6
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 10 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      char 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : B1F/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   691 ;;      Params:         0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels required when called:    3
   697 ;; This function calls:
   698 ;;		_Basic_Init
   699 ;;		_Buzzer_Init
   700 ;;		_Buzzer_SetDuty
   701 ;;		_LCD_Init
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _main
   709  0701                     _main:	
   710                           
   711                           ;main.c: 12: Basic_Init();
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   715  0701  3186  26EC  3187   	fcall	_Basic_Init
   716                           
   717                           ;main.c: 13: Buzzer_Init();
   718  0704  3187  2731  3187   	fcall	_Buzzer_Init
   719                           
   720                           ;main.c: 14: Buzzer_SetDuty(0x01FF);
   721  0707  30FF               	movlw	255
   722  0708  00F7               	movwf	Buzzer_SetDuty@duty
   723  0709  3001               	movlw	1
   724  070A  00F8               	movwf	Buzzer_SetDuty@duty+1
   725  070B  3187  2716  3187   	fcall	_Buzzer_SetDuty
   726                           
   727                           ;main.c: 16: LCD_Init();
   728  070E  3187  278D  3187   	fcall	_LCD_Init
   729                           
   730                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   731  0711  3000               	movlw	0
   732  0712  00F2               	movwf	_xfunc_out
   733  0713  3000               	movlw	0
   734  0714  00F3               	movwf	_xfunc_out+1
   735  0715                     l108:	
   736                           ;main.c: 18: while(1)
   737                           
   738                           
   739                           ;main.c: 19: {
   740  0715  2F15               	goto	l108
   741  0716                     __end_of_main:	
   742                           ;main.c: 21: }
   743                           ;main.c: 22: return 0;
   744                           ;	Return value of _main is never used
   745                           
   746                           
   747                           	psect	text1
   748  078D                     __ptext1:	
   749 ;; *************** function _LCD_Init *****************
   750 ;; Defined at:
   751 ;;		line 28 in file "LCD.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   765 ;;      Params:         0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0
   768 ;;      Totals:         2       0       0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		_LCD_DisplayClear
   774 ;;		_LCD_WriteData
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _LCD_Init
   782  078D                     _LCD_Init:	
   783                           
   784                           ;LCD.c: 30: RA4 = 0;
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   788  078D  0020               	movlb	0	; select bank0
   789  078E  120C               	bcf	12,4	;volatile
   790                           
   791                           ;LCD.c: 31: RA3 = 0;
   792  078F  118C               	bcf	12,3	;volatile
   793                           
   794                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
   795  0790  3002               	movlw	2
   796  0791  00FC               	movwf	??_LCD_Init+1
   797  0792  3038               	movlw	56
   798  0793  00FB               	movwf	??_LCD_Init
   799  0794  30AD               	movlw	173
   800  0795                     u727:	
   801  0795  0B89               	decfsz	9,f
   802  0796  2F95               	goto	u727
   803  0797  0BFB               	decfsz	??_LCD_Init,f
   804  0798  2F95               	goto	u727
   805  0799  0BFC               	decfsz	??_LCD_Init+1,f
   806  079A  2F95               	goto	u727
   807  079B  0000               	nop
   808                           
   809                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
   810  079C  3003               	movlw	3
   811  079D  0020               	movlb	0	; select bank0
   812  079E  008D               	movwf	13	;volatile
   813                           
   814                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   815  079F  158C               	bsf	12,3	;volatile
   816  07A0  3200               	nop2	;2 cycle nop
   817  07A1  3200               	nop2	;2 cycle nop
   818  07A2  3200               	nop2	;2 cycle nop
   819  07A3  3200               	nop2	;2 cycle nop
   820  07A4  0020               	movlb	0	; select bank0
   821  07A5  118C               	bcf	12,3	;volatile
   822  07A6  3200               	nop2	;2 cycle nop
   823  07A7  3200               	nop2	;2 cycle nop
   824  07A8  3200               	nop2	;2 cycle nop
   825  07A9  3200               	nop2	;2 cycle nop
   826                           
   827                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
   828  07AA  3034               	movlw	52
   829  07AB  00FB               	movwf	??_LCD_Init
   830  07AC  30F2               	movlw	242
   831  07AD                     u737:	
   832  07AD  0B89               	decfsz	9,f
   833  07AE  2FAD               	goto	u737
   834  07AF  0BFB               	decfsz	??_LCD_Init,f
   835  07B0  2FAD               	goto	u737
   836                           
   837                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   838  07B1  0020               	movlb	0	; select bank0
   839  07B2  158C               	bsf	12,3	;volatile
   840  07B3  3200               	nop2	;2 cycle nop
   841  07B4  3200               	nop2	;2 cycle nop
   842  07B5  3200               	nop2	;2 cycle nop
   843  07B6  3200               	nop2	;2 cycle nop
   844  07B7  0020               	movlb	0	; select bank0
   845  07B8  118C               	bcf	12,3	;volatile
   846  07B9  3200               	nop2	;2 cycle nop
   847  07BA  3200               	nop2	;2 cycle nop
   848  07BB  3200               	nop2	;2 cycle nop
   849  07BC  3200               	nop2	;2 cycle nop
   850                           
   851                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
   852  07BD  3005               	movlw	5
   853  07BE  00FB               	movwf	??_LCD_Init
   854  07BF  3026               	movlw	38
   855  07C0                     u747:	
   856  07C0  0B89               	decfsz	9,f
   857  07C1  2FC0               	goto	u747
   858  07C2  0BFB               	decfsz	??_LCD_Init,f
   859  07C3  2FC0               	goto	u747
   860  07C4  3200               	nop2
   861                           
   862                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   863  07C5  0020               	movlb	0	; select bank0
   864  07C6  158C               	bsf	12,3	;volatile
   865  07C7  3200               	nop2	;2 cycle nop
   866  07C8  3200               	nop2	;2 cycle nop
   867  07C9  3200               	nop2	;2 cycle nop
   868  07CA  3200               	nop2	;2 cycle nop
   869  07CB  0020               	movlb	0	; select bank0
   870  07CC  118C               	bcf	12,3	;volatile
   871  07CD  3200               	nop2	;2 cycle nop
   872  07CE  3200               	nop2	;2 cycle nop
   873  07CF  3200               	nop2	;2 cycle nop
   874  07D0  3200               	nop2	;2 cycle nop
   875                           
   876                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
   877  07D1  3005               	movlw	5
   878  07D2  00FB               	movwf	??_LCD_Init
   879  07D3  3026               	movlw	38
   880  07D4                     u757:	
   881  07D4  0B89               	decfsz	9,f
   882  07D5  2FD4               	goto	u757
   883  07D6  0BFB               	decfsz	??_LCD_Init,f
   884  07D7  2FD4               	goto	u757
   885  07D8  3200               	nop2
   886                           
   887                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
   888  07D9  3002               	movlw	2
   889  07DA  0020               	movlb	0	; select bank0
   890  07DB  008D               	movwf	13	;volatile
   891                           
   892                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   893  07DC  158C               	bsf	12,3	;volatile
   894  07DD  3200               	nop2	;2 cycle nop
   895  07DE  3200               	nop2	;2 cycle nop
   896  07DF  3200               	nop2	;2 cycle nop
   897  07E0  3200               	nop2	;2 cycle nop
   898  07E1  0020               	movlb	0	; select bank0
   899  07E2  118C               	bcf	12,3	;volatile
   900  07E3  3200               	nop2	;2 cycle nop
   901  07E4  3200               	nop2	;2 cycle nop
   902  07E5  3200               	nop2	;2 cycle nop
   903  07E6  3200               	nop2	;2 cycle nop
   904                           
   905                           ;LCD.c: 44: LCD_WriteData(0x28);
   906  07E7  3028               	movlw	40
   907  07E8  3187  2753  3187   	fcall	_LCD_WriteData
   908                           
   909                           ;LCD.c: 45: LCD_WriteData(0x0c);
   910  07EB  300C               	movlw	12
   911  07EC  3187  2753  3187   	fcall	_LCD_WriteData
   912                           
   913                           ;LCD.c: 46: LCD_DisplayClear();
   914  07EF  3186  26DD  3187   	fcall	_LCD_DisplayClear
   915                           
   916                           ;LCD.c: 47: LCD_WriteData(0x06);
   917  07F2  3006               	movlw	6
   918  07F3  3187  2753         	fcall	_LCD_WriteData
   919  07F5  0008               	return
   920  07F6                     __end_of_LCD_Init:	
   921                           
   922                           	psect	text2
   923  06DD                     __ptext2:	
   924 ;; *************** function _LCD_DisplayClear *****************
   925 ;; Defined at:
   926 ;;		line 64 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   940 ;;      Params:         0       0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0       0
   943 ;;      Totals:         1       0       0       0       0       0
   944 ;;Total ram usage:        1 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		_LCD_WriteData
   949 ;; This function is called by:
   950 ;;		_LCD_Init
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _LCD_DisplayClear
   956  06DD                     _LCD_DisplayClear:	
   957                           
   958                           ;LCD.c: 66: RA4 = 0;
   959                           
   960                           ;incstack = 0
   961                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
   962  06DD  0020               	movlb	0	; select bank0
   963  06DE  120C               	bcf	12,4	;volatile
   964                           
   965                           ;LCD.c: 67: LCD_WriteData(0x01);
   966  06DF  3001               	movlw	1
   967  06E0  3187  2753  3186   	fcall	_LCD_WriteData
   968                           
   969                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
   970  06E3  3015               	movlw	21
   971  06E4  00FA               	movwf	??_LCD_DisplayClear
   972  06E5  30C6               	movlw	198
   973  06E6                     u767:	
   974  06E6  0B89               	decfsz	9,f
   975  06E7  2EE6               	goto	u767
   976  06E8  0BFA               	decfsz	??_LCD_DisplayClear,f
   977  06E9  2EE6               	goto	u767
   978  06EA  3200               	nop2
   979  06EB  0008               	return
   980  06EC                     __end_of_LCD_DisplayClear:	
   981                           
   982                           	psect	text3
   983  0753                     __ptext3:	
   984 ;; *************** function _LCD_WriteData *****************
   985 ;; Defined at:
   986 ;;		line 15 in file "LCD.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  point           1    wreg     char 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  point           1    2[COMMON] char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1000 ;;      Params:         0       0       0       0       0       0
  1001 ;;      Locals:         1       0       0       0       0       0
  1002 ;;      Temps:          2       0       0       0       0       0
  1003 ;;      Totals:         3       0       0       0       0       0
  1004 ;;Total ram usage:        3 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_LCD_Init
  1010 ;;		_LCD_DisplayClear
  1011 ;;		_LCD_Put
  1012 ;;		_LCD_CursorHome
  1013 ;;		_LCD_CursorPosition
  1014 ;;		_LCD_CursorShift
  1015 ;;		_LCD_DispShift
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _LCD_WriteData
  1021  0753                     _LCD_WriteData:	
  1022                           
  1023                           ;incstack = 0
  1024                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1025                           ;LCD_WriteData@point stored from wreg
  1026  0753  00F9               	movwf	LCD_WriteData@point
  1027                           
  1028                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1029  0754  30D5               	movlw	213
  1030  0755                     u777:	
  1031  0755  0B89               	decfsz	9,f
  1032  0756  2F55               	goto	u777
  1033  0757  0000               	nop
  1034                           
  1035                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1036  0758  0879               	movf	LCD_WriteData@point,w
  1037  0759  00F7               	movwf	??_LCD_WriteData
  1038  075A  3004               	movlw	4
  1039  075B                     u15:	
  1040  075B  1003               	clrc
  1041  075C  1BF7               	btfsc	??_LCD_WriteData,7
  1042  075D  1403               	setc
  1043  075E  0CF7               	rrf	??_LCD_WriteData,f
  1044  075F  0B89               	decfsz	9,f
  1045  0760  2F5B               	goto	u15
  1046  0761  3003               	movlw	3
  1047  0762  0577               	andwf	??_LCD_WriteData,w
  1048  0763  00F8               	movwf	??_LCD_WriteData+1
  1049  0764  0E79               	swapf	LCD_WriteData@point,w
  1050  0765  390F               	andlw	15
  1051  0766  1989               	btfsc	9,3
  1052  0767  38F0               	iorlw	240
  1053  0768  390C               	andlw	12
  1054  0769  0709               	addwf	9,w
  1055  076A  0478               	iorwf	??_LCD_WriteData+1,w
  1056  076B  0020               	movlb	0	; select bank0
  1057  076C  008D               	movwf	13	;volatile
  1058                           
  1059                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1060  076D  158C               	bsf	12,3	;volatile
  1061  076E  3200               	nop2	;2 cycle nop
  1062  076F  3200               	nop2	;2 cycle nop
  1063  0770  3200               	nop2	;2 cycle nop
  1064  0771  3200               	nop2	;2 cycle nop
  1065  0772  0020               	movlb	0	; select bank0
  1066  0773  118C               	bcf	12,3	;volatile
  1067  0774  3200               	nop2	;2 cycle nop
  1068  0775  3200               	nop2	;2 cycle nop
  1069  0776  3200               	nop2	;2 cycle nop
  1070  0777  3200               	nop2	;2 cycle nop
  1071                           
  1072                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1073  0778  3003               	movlw	3
  1074  0779  0579               	andwf	LCD_WriteData@point,w
  1075  077A  00F7               	movwf	??_LCD_WriteData
  1076  077B  0879               	movf	LCD_WriteData@point,w
  1077  077C  390C               	andlw	12
  1078  077D  0709               	addwf	9,w
  1079  077E  0477               	iorwf	??_LCD_WriteData,w
  1080  077F  0020               	movlb	0	; select bank0
  1081  0780  008D               	movwf	13	;volatile
  1082                           
  1083                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1084  0781  158C               	bsf	12,3	;volatile
  1085  0782  3200               	nop2	;2 cycle nop
  1086  0783  3200               	nop2	;2 cycle nop
  1087  0784  3200               	nop2	;2 cycle nop
  1088  0785  3200               	nop2	;2 cycle nop
  1089  0786  0020               	movlb	0	; select bank0
  1090  0787  118C               	bcf	12,3	;volatile
  1091  0788  3200               	nop2	;2 cycle nop
  1092  0789  3200               	nop2	;2 cycle nop
  1093  078A  3200               	nop2	;2 cycle nop
  1094  078B  3200               	nop2	;2 cycle nop
  1095  078C  0008               	return
  1096  078D                     __end_of_LCD_WriteData:	
  1097                           
  1098                           	psect	text4
  1099  0716                     __ptext4:	
  1100 ;; *************** function _Buzzer_SetDuty *****************
  1101 ;; Defined at:
  1102 ;;		line 31 in file "Buzzer.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  duty            2    0[COMMON] unsigned int 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1116 ;;      Params:         2       0       0       0       0       0
  1117 ;;      Locals:         1       0       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0
  1119 ;;      Totals:         5       0       0       0       0       0
  1120 ;;Total ram usage:        5 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;;		_Buzzer_Handler
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _Buzzer_SetDuty
  1132  0716                     _Buzzer_SetDuty:	
  1133                           
  1134                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON;
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  1138  0716  0025               	movlb	5	; select bank5
  1139  0717  081A               	movf	26,w	;volatile
  1140  0718  00F9               	movwf	??_Buzzer_SetDuty
  1141  0719  0879               	movf	??_Buzzer_SetDuty,w
  1142  071A  00FB               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  1143                           
  1144                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  1145  071B  0878               	movf	Buzzer_SetDuty@duty+1,w
  1146  071C  00FA               	movwf	??_Buzzer_SetDuty+1
  1147  071D  0877               	movf	Buzzer_SetDuty@duty,w
  1148  071E  00F9               	movwf	??_Buzzer_SetDuty
  1149  071F  36FA               	lsrf	??_Buzzer_SetDuty+1,f
  1150  0720  0CF9               	rrf	??_Buzzer_SetDuty,f
  1151  0721  36FA               	lsrf	??_Buzzer_SetDuty+1,f
  1152  0722  0CF9               	rrf	??_Buzzer_SetDuty,f
  1153  0723  0879               	movf	??_Buzzer_SetDuty,w
  1154  0724  0098               	movwf	24	;volatile
  1155                           
  1156                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  1157  0725  0877               	movf	Buzzer_SetDuty@duty,w
  1158  0726  3903               	andlw	3
  1159  0727  00F9               	movwf	??_Buzzer_SetDuty
  1160  0728  3003               	movlw	3
  1161  0729                     u705:	
  1162  0729  35F9               	lslf	??_Buzzer_SetDuty,f
  1163  072A  3EFF               	addlw	-1
  1164  072B  1D03               	skipz
  1165  072C  2F29               	goto	u705
  1166  072D  3579               	lslf	??_Buzzer_SetDuty,w
  1167  072E  047B               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  1168  072F  009A               	movwf	26	;volatile
  1169  0730  0008               	return
  1170  0731                     __end_of_Buzzer_SetDuty:	
  1171                           
  1172                           	psect	text5
  1173  0731                     __ptext5:	
  1174 ;; *************** function _Buzzer_Init *****************
  1175 ;; Defined at:
  1176 ;;		line 11 in file "Buzzer.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1190 ;;      Params:         0       0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0
  1192 ;;      Temps:          1       0       0       0       0       0
  1193 ;;      Totals:         1       0       0       0       0       0
  1194 ;;Total ram usage:        1 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _Buzzer_Init
  1205  0731                     _Buzzer_Init:	
  1206                           
  1207                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  1211  0731  307F               	movlw	127
  1212  0732  00F7               	movwf	??_Buzzer_Init
  1213  0733  0877               	movf	??_Buzzer_Init,w
  1214  0734  0021               	movlb	1	; select bank1
  1215  0735  058C               	andwf	12,f	;volatile
  1216                           
  1217                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  1218  0736  307F               	movlw	127
  1219  0737  00F7               	movwf	??_Buzzer_Init
  1220  0738  0877               	movf	??_Buzzer_Init,w
  1221  0739  0023               	movlb	3	; select bank3
  1222  073A  058C               	andwf	12,f	;volatile
  1223                           
  1224                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  1225  073B  0022               	movlb	2	; select bank2
  1226  073C  159D               	bsf	29,3	;volatile
  1227                           
  1228                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  1229  073D  0020               	movlb	0	; select bank0
  1230  073E  081C               	movf	28,w	;volatile
  1231                           
  1232                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  1233  073F  149C               	bsf	28,1	;volatile
  1234                           
  1235                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  1236  0740  151C               	bsf	28,2	;volatile
  1237                           
  1238                           ;Buzzer.c: 21: TMR2 = 0x00;
  1239  0741  019A               	clrf	26	;volatile
  1240                           
  1241                           ;Buzzer.c: 22: PR2 = 0xFF;
  1242  0742  30FF               	movlw	255
  1243  0743  009B               	movwf	27	;volatile
  1244                           
  1245                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  1246  0744  303F               	movlw	63
  1247  0745  00F7               	movwf	??_Buzzer_Init
  1248  0746  0877               	movf	??_Buzzer_Init,w
  1249  0747  0025               	movlb	5	; select bank5
  1250  0748  059A               	andwf	26,f	;volatile
  1251                           
  1252                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  1253  0749  300C               	movlw	12
  1254  074A  00F7               	movwf	??_Buzzer_Init
  1255  074B  0877               	movf	??_Buzzer_Init,w
  1256  074C  049A               	iorwf	26,f	;volatile
  1257                           
  1258                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  1259  074D  30F3               	movlw	243
  1260  074E  00F7               	movwf	??_Buzzer_Init
  1261  074F  0877               	movf	??_Buzzer_Init,w
  1262  0750  059E               	andwf	30,f	;volatile
  1263                           
  1264                           ;Buzzer.c: 28: CCPR2L = 0x00;
  1265  0751  0198               	clrf	24	;volatile
  1266  0752  0008               	return
  1267  0753                     __end_of_Buzzer_Init:	
  1268                           
  1269                           	psect	text6
  1270  06EC                     __ptext6:	
  1271 ;; *************** function _Basic_Init *****************
  1272 ;; Defined at:
  1273 ;;		line 25 in file "main.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      char 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1287 ;;      Params:         0       0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _Basic_Init
  1302  06EC                     _Basic_Init:	
  1303                           
  1304                           ;main.c: 27: OSCCON = 0xF0;
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _Basic_Init: [wreg+status,2]
  1308  06EC  30F0               	movlw	240
  1309  06ED  0021               	movlb	1	; select bank1
  1310  06EE  0099               	movwf	25	;volatile
  1311                           
  1312                           ;main.c: 31: TRISA = 0x07;
  1313  06EF  3007               	movlw	7
  1314  06F0  008C               	movwf	12	;volatile
  1315                           
  1316                           ;main.c: 32: ANSELA = 0x07;
  1317  06F1  3007               	movlw	7
  1318  06F2  0023               	movlb	3	; select bank3
  1319  06F3  008C               	movwf	12	;volatile
  1320                           
  1321                           ;main.c: 34: TRISB = 0x40;
  1322  06F4  3040               	movlw	64
  1323  06F5  0021               	movlb	1	; select bank1
  1324  06F6  008D               	movwf	13	;volatile
  1325                           
  1326                           ;main.c: 35: ANSELB = 0x00;
  1327  06F7  0023               	movlb	3	; select bank3
  1328  06F8  018D               	clrf	13	;volatile
  1329                           
  1330                           ;main.c: 37: APFCON0 = 0x08;
  1331  06F9  3008               	movlw	8
  1332  06FA  0022               	movlb	2	; select bank2
  1333  06FB  009D               	movwf	29	;volatile
  1334                           
  1335                           ;main.c: 38: APFCON1 = 0x00;
  1336  06FC  019E               	clrf	30	;volatile
  1337                           
  1338                           ;main.c: 40: PORTA = 0x00;
  1339  06FD  0020               	movlb	0	; select bank0
  1340  06FE  018C               	clrf	12	;volatile
  1341                           
  1342                           ;main.c: 41: PORTB = 0x00;
  1343  06FF  018D               	clrf	13	;volatile
  1344  0700  0008               	return
  1345  0701                     __end_of_Basic_Init:	
  1346                           ;main.c: 43: return 0;
  1347                           ;	Return value of _Basic_Init is never used
  1348                           
  1349  007E                     btemp	set	126	;btemp
  1350  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     379
                         _Basic_Init
                        _Buzzer_Init
                     _Buzzer_SetDuty
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              4 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      60
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_SetDuty                                       5     3      2     259
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _Buzzer_SetDuty
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May  1 23:34:56 2017

              __CFG_CP$OFF 0000                         u15 075B                        l108 0715  
                      _RA3 0063                        _RA4 0064                        _PR2 001B  
             __CFG_CPD$OFF 0000                        u705 0729                        u727 0795  
                      u737 07AD                        u747 07C0                        u757 07D4  
                      u767 06E6                        u777 0755               __CFG_BORV$LO 0000  
                      wreg 0009                 _Basic_Init 06EC               __CFG_LVP$OFF 0000  
                     STR_1 081A                       STR_2 0800                       STR_3 080E  
                     STR_4 0814                       STR_5 0807                       _TMR2 001A  
             __CFG_WRT$OFF 0000                       _main 0701                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0002              __CFG_IESO$OFF 0000  
            _LCD_WriteData 0753              __CFG_MCLRE$ON 0000   __end_of_LCD_DisplayClear 06EC  
         __end_of_LCD_Init 07F6              __CFG_PLLEN$ON 0000                      ?_main 0077  
            __CFG_WDTE$OFF 0000                      _T2CON 001C                      _PORTA 000C  
                    _PORTB 000D                      _TRISA 008C                      _TRISB 008D  
            __CFG_PWRTE$ON 0000             __CFG_FCMEN$OFF 0000                      _count 0074  
            ??_Buzzer_Init 0077                      wtemp0 007E             ?_LCD_WriteData 0077  
          __initialization 07F6               __end_of_main 0716                     ??_main 007D  
              ?_Basic_Init 0077                     _CCPR2L 0298                     _ANSELA 018C  
                   _ANSELB 018D                     _OSCCON 0099        __end_of_Buzzer_Init 0753  
                   _outptr 0076    __end_of__initialization 07FD                  ?_LCD_Init 0077  
          ??_LCD_WriteData 0077         Buzzer_SetDuty@duty 0077             __pcstackCOMMON 0077  
      __size_of_Basic_Init 0015  Buzzer_SetDuty@CCP2CON_Pre 007B                _Buzzer_Init 0731  
               ??_LCD_Init 007B    __size_of_Buzzer_SetDuty 001B                 __pmaintext 0701  
                  _CCP2CON 029A          ?_LCD_DisplayClear 0077                    _APFCON0 011D  
                  _APFCON1 011E                    _CCPTMRS 029E         ??_LCD_DisplayClear 007A  
                  _LCD_Put 0000            __CFG_STVREN$OFF 0000                    __ptext1 078D  
                  __ptext2 06DD                    __ptext3 0753                    __ptext4 0716  
                  __ptext5 0731                    __ptext6 06EC               ??_Basic_Init 0077  
     end_of_initialization 07FD         __end_of_Basic_Init 0701               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000             _Buzzer_SetDuty 0716          __size_of_LCD_Init 0069  
      start_initialization 07F6     __end_of_Buzzer_SetDuty 0731               ?_Buzzer_Init 0077  
    __end_of_LCD_WriteData 078D                __pbssCOMMON 0070                  ___latbits 0001  
__size_of_LCD_DisplayClear 000F            ?_Buzzer_SetDuty 0077                   _LCD_Init 078D  
                _xfunc_out 0072       __size_of_Buzzer_Init 0022         LCD_WriteData@point 0079  
         _LCD_DisplayClear 06DD              __size_of_main 0015                   _xfunc_in 0070  
         ??_Buzzer_SetDuty 0079          __CFG_CLKOUTEN$OFF 0000     __size_of_LCD_WriteData 003A  
