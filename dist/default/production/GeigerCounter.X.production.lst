

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 16 14:35:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.41
    66                           ; Generated 25/01/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1827 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0191                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0194                     	;# 
   169  0195                     	;# 
   170  0196                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0219                     	;# 
   200  021A                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  029E                     	;# 
   223  029E                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  039A                     	;# 
   236  039C                     	;# 
   237  039D                     	;# 
   238  039E                     	;# 
   239  039F                     	;# 
   240  0415                     	;# 
   241  0416                     	;# 
   242  0417                     	;# 
   243  041C                     	;# 
   244  041D                     	;# 
   245  041E                     	;# 
   246  0FE4                     	;# 
   247  0FE5                     	;# 
   248  0FE6                     	;# 
   249  0FE7                     	;# 
   250  0FE8                     	;# 
   251  0FE9                     	;# 
   252  0FEA                     	;# 
   253  0FEB                     	;# 
   254  0FED                     	;# 
   255  0FEE                     	;# 
   256  0FEF                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  0008                     	;# 
   266  0009                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  0111                     	;# 
   306  0112                     	;# 
   307  0113                     	;# 
   308  0114                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  0118                     	;# 
   313  0119                     	;# 
   314  011A                     	;# 
   315  011B                     	;# 
   316  011D                     	;# 
   317  011E                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019C                     	;# 
   337  019D                     	;# 
   338  019E                     	;# 
   339  019F                     	;# 
   340  020C                     	;# 
   341  020D                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0219                     	;# 
   358  021A                     	;# 
   359  021B                     	;# 
   360  021C                     	;# 
   361  021D                     	;# 
   362  021E                     	;# 
   363  021F                     	;# 
   364  0291                     	;# 
   365  0291                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0294                     	;# 
   369  0295                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0298                     	;# 
   373  0298                     	;# 
   374  0299                     	;# 
   375  029A                     	;# 
   376  029B                     	;# 
   377  029C                     	;# 
   378  029C                     	;# 
   379  029D                     	;# 
   380  029E                     	;# 
   381  029E                     	;# 
   382  0311                     	;# 
   383  0311                     	;# 
   384  0312                     	;# 
   385  0313                     	;# 
   386  0318                     	;# 
   387  0318                     	;# 
   388  0319                     	;# 
   389  031A                     	;# 
   390  0394                     	;# 
   391  0395                     	;# 
   392  0396                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0415                     	;# 
   399  0416                     	;# 
   400  0417                     	;# 
   401  041C                     	;# 
   402  041D                     	;# 
   403  041E                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  0191                     	;# 
   479  0191                     	;# 
   480  0192                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0219                     	;# 
   516  021A                     	;# 
   517  021B                     	;# 
   518  021C                     	;# 
   519  021D                     	;# 
   520  021E                     	;# 
   521  021F                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029C                     	;# 
   537  029D                     	;# 
   538  029E                     	;# 
   539  029E                     	;# 
   540  0311                     	;# 
   541  0311                     	;# 
   542  0312                     	;# 
   543  0313                     	;# 
   544  0318                     	;# 
   545  0318                     	;# 
   546  0319                     	;# 
   547  031A                     	;# 
   548  0394                     	;# 
   549  0395                     	;# 
   550  0396                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  0111                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0115                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  0118                     	;# 
   629  0119                     	;# 
   630  011A                     	;# 
   631  011B                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0219                     	;# 
   674  021A                     	;# 
   675  021B                     	;# 
   676  021C                     	;# 
   677  021D                     	;# 
   678  021E                     	;# 
   679  021F                     	;# 
   680  0291                     	;# 
   681  0291                     	;# 
   682  0292                     	;# 
   683  0293                     	;# 
   684  0294                     	;# 
   685  0295                     	;# 
   686  0295                     	;# 
   687  0296                     	;# 
   688  0298                     	;# 
   689  0298                     	;# 
   690  0299                     	;# 
   691  029A                     	;# 
   692  029B                     	;# 
   693  029C                     	;# 
   694  029C                     	;# 
   695  029D                     	;# 
   696  029E                     	;# 
   697  029E                     	;# 
   698  0311                     	;# 
   699  0311                     	;# 
   700  0312                     	;# 
   701  0313                     	;# 
   702  0318                     	;# 
   703  0318                     	;# 
   704  0319                     	;# 
   705  031A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  039A                     	;# 
   710  039C                     	;# 
   711  039D                     	;# 
   712  039E                     	;# 
   713  039F                     	;# 
   714  0415                     	;# 
   715  0416                     	;# 
   716  0417                     	;# 
   717  041C                     	;# 
   718  041D                     	;# 
   719  041E                     	;# 
   720  0FE4                     	;# 
   721  0FE5                     	;# 
   722  0FE6                     	;# 
   723  0FE7                     	;# 
   724  0FE8                     	;# 
   725  0FE9                     	;# 
   726  0FEA                     	;# 
   727  0FEB                     	;# 
   728  0FED                     	;# 
   729  0FEE                     	;# 
   730  0FEF                     	;# 
   731  0000                     	;# 
   732  0001                     	;# 
   733  0002                     	;# 
   734  0003                     	;# 
   735  0004                     	;# 
   736  0005                     	;# 
   737  0006                     	;# 
   738  0007                     	;# 
   739  0008                     	;# 
   740  0009                     	;# 
   741  000A                     	;# 
   742  000B                     	;# 
   743  000C                     	;# 
   744  000D                     	;# 
   745  0011                     	;# 
   746  0012                     	;# 
   747  0013                     	;# 
   748  0014                     	;# 
   749  0015                     	;# 
   750  0016                     	;# 
   751  0016                     	;# 
   752  0017                     	;# 
   753  0018                     	;# 
   754  0019                     	;# 
   755  001A                     	;# 
   756  001B                     	;# 
   757  001C                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0094                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  0111                     	;# 
   780  0112                     	;# 
   781  0113                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0118                     	;# 
   787  0119                     	;# 
   788  011A                     	;# 
   789  011B                     	;# 
   790  011D                     	;# 
   791  011E                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0191                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0199                     	;# 
   804  019A                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019E                     	;# 
   813  019F                     	;# 
   814  020C                     	;# 
   815  020D                     	;# 
   816  0211                     	;# 
   817  0211                     	;# 
   818  0212                     	;# 
   819  0212                     	;# 
   820  0213                     	;# 
   821  0213                     	;# 
   822  0214                     	;# 
   823  0214                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0216                     	;# 
   828  0216                     	;# 
   829  0217                     	;# 
   830  0217                     	;# 
   831  0219                     	;# 
   832  021A                     	;# 
   833  021B                     	;# 
   834  021C                     	;# 
   835  021D                     	;# 
   836  021E                     	;# 
   837  021F                     	;# 
   838  0291                     	;# 
   839  0291                     	;# 
   840  0292                     	;# 
   841  0293                     	;# 
   842  0294                     	;# 
   843  0295                     	;# 
   844  0295                     	;# 
   845  0296                     	;# 
   846  0298                     	;# 
   847  0298                     	;# 
   848  0299                     	;# 
   849  029A                     	;# 
   850  029B                     	;# 
   851  029C                     	;# 
   852  029C                     	;# 
   853  029D                     	;# 
   854  029E                     	;# 
   855  029E                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  0394                     	;# 
   865  0395                     	;# 
   866  0396                     	;# 
   867  039A                     	;# 
   868  039C                     	;# 
   869  039D                     	;# 
   870  039E                     	;# 
   871  039F                     	;# 
   872  0415                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000D                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0013                     	;# 
   906  0014                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  001E                     	;# 
   917  001F                     	;# 
   918  008C                     	;# 
   919  008D                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0093                     	;# 
   923  0094                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  0111                     	;# 
   938  0112                     	;# 
   939  0113                     	;# 
   940  0114                     	;# 
   941  0115                     	;# 
   942  0116                     	;# 
   943  0117                     	;# 
   944  0118                     	;# 
   945  0119                     	;# 
   946  011A                     	;# 
   947  011B                     	;# 
   948  011D                     	;# 
   949  011E                     	;# 
   950  018C                     	;# 
   951  018D                     	;# 
   952  0191                     	;# 
   953  0191                     	;# 
   954  0192                     	;# 
   955  0193                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0194                     	;# 
   959  0195                     	;# 
   960  0196                     	;# 
   961  0199                     	;# 
   962  019A                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019C                     	;# 
   968  019C                     	;# 
   969  019D                     	;# 
   970  019E                     	;# 
   971  019F                     	;# 
   972  020C                     	;# 
   973  020D                     	;# 
   974  0211                     	;# 
   975  0211                     	;# 
   976  0212                     	;# 
   977  0212                     	;# 
   978  0213                     	;# 
   979  0213                     	;# 
   980  0214                     	;# 
   981  0214                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0216                     	;# 
   986  0216                     	;# 
   987  0217                     	;# 
   988  0217                     	;# 
   989  0219                     	;# 
   990  021A                     	;# 
   991  021B                     	;# 
   992  021C                     	;# 
   993  021D                     	;# 
   994  021E                     	;# 
   995  021F                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0298                     	;# 
  1005  0298                     	;# 
  1006  0299                     	;# 
  1007  029A                     	;# 
  1008  029B                     	;# 
  1009  029C                     	;# 
  1010  029C                     	;# 
  1011  029D                     	;# 
  1012  029E                     	;# 
  1013  029E                     	;# 
  1014  0311                     	;# 
  1015  0311                     	;# 
  1016  0312                     	;# 
  1017  0313                     	;# 
  1018  0318                     	;# 
  1019  0318                     	;# 
  1020  0319                     	;# 
  1021  031A                     	;# 
  1022  0394                     	;# 
  1023  0395                     	;# 
  1024  0396                     	;# 
  1025  039A                     	;# 
  1026  039C                     	;# 
  1027  039D                     	;# 
  1028  039E                     	;# 
  1029  039F                     	;# 
  1030  0415                     	;# 
  1031  0416                     	;# 
  1032  0417                     	;# 
  1033  041C                     	;# 
  1034  041D                     	;# 
  1035  041E                     	;# 
  1036  0FE4                     	;# 
  1037  0FE5                     	;# 
  1038  0FE6                     	;# 
  1039  0FE7                     	;# 
  1040  0FE8                     	;# 
  1041  0FE9                     	;# 
  1042  0FEA                     	;# 
  1043  0FEB                     	;# 
  1044  0FED                     	;# 
  1045  0FEE                     	;# 
  1046  0FEF                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0008                     	;# 
  1056  0009                     	;# 
  1057  000A                     	;# 
  1058  000B                     	;# 
  1059  000C                     	;# 
  1060  000D                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0014                     	;# 
  1065  0015                     	;# 
  1066  0016                     	;# 
  1067  0016                     	;# 
  1068  0017                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  001B                     	;# 
  1073  001C                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  008C                     	;# 
  1077  008D                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0093                     	;# 
  1081  0094                     	;# 
  1082  0095                     	;# 
  1083  0096                     	;# 
  1084  0097                     	;# 
  1085  0098                     	;# 
  1086  0099                     	;# 
  1087  009A                     	;# 
  1088  009B                     	;# 
  1089  009B                     	;# 
  1090  009C                     	;# 
  1091  009D                     	;# 
  1092  009E                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011D                     	;# 
  1107  011E                     	;# 
  1108  018C                     	;# 
  1109  018D                     	;# 
  1110  0191                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0194                     	;# 
  1117  0195                     	;# 
  1118  0196                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019C                     	;# 
  1126  019C                     	;# 
  1127  019D                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  020C                     	;# 
  1131  020D                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  0219                     	;# 
  1148  021A                     	;# 
  1149  021B                     	;# 
  1150  021C                     	;# 
  1151  021D                     	;# 
  1152  021E                     	;# 
  1153  021F                     	;# 
  1154  0291                     	;# 
  1155  0291                     	;# 
  1156  0292                     	;# 
  1157  0293                     	;# 
  1158  0294                     	;# 
  1159  0295                     	;# 
  1160  0295                     	;# 
  1161  0296                     	;# 
  1162  0298                     	;# 
  1163  0298                     	;# 
  1164  0299                     	;# 
  1165  029A                     	;# 
  1166  029B                     	;# 
  1167  029C                     	;# 
  1168  029C                     	;# 
  1169  029D                     	;# 
  1170  029E                     	;# 
  1171  029E                     	;# 
  1172  0311                     	;# 
  1173  0311                     	;# 
  1174  0312                     	;# 
  1175  0313                     	;# 
  1176  0318                     	;# 
  1177  0318                     	;# 
  1178  0319                     	;# 
  1179  031A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  039A                     	;# 
  1184  039C                     	;# 
  1185  039D                     	;# 
  1186  039E                     	;# 
  1187  039F                     	;# 
  1188  0415                     	;# 
  1189  0416                     	;# 
  1190  0417                     	;# 
  1191  041C                     	;# 
  1192  041D                     	;# 
  1193  041E                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0013                     	;# 
  1222  0014                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001B                     	;# 
  1231  001C                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008D                     	;# 
  1236  0091                     	;# 
  1237  0092                     	;# 
  1238  0093                     	;# 
  1239  0094                     	;# 
  1240  0095                     	;# 
  1241  0096                     	;# 
  1242  0097                     	;# 
  1243  0098                     	;# 
  1244  0099                     	;# 
  1245  009A                     	;# 
  1246  009B                     	;# 
  1247  009B                     	;# 
  1248  009C                     	;# 
  1249  009D                     	;# 
  1250  009E                     	;# 
  1251  010C                     	;# 
  1252  010D                     	;# 
  1253  0111                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0115                     	;# 
  1258  0116                     	;# 
  1259  0117                     	;# 
  1260  0118                     	;# 
  1261  0119                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011D                     	;# 
  1265  011E                     	;# 
  1266  018C                     	;# 
  1267  018D                     	;# 
  1268  0191                     	;# 
  1269  0191                     	;# 
  1270  0192                     	;# 
  1271  0193                     	;# 
  1272  0193                     	;# 
  1273  0193                     	;# 
  1274  0194                     	;# 
  1275  0195                     	;# 
  1276  0196                     	;# 
  1277  0199                     	;# 
  1278  019A                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019C                     	;# 
  1284  019C                     	;# 
  1285  019D                     	;# 
  1286  019E                     	;# 
  1287  019F                     	;# 
  1288  020C                     	;# 
  1289  020D                     	;# 
  1290  0211                     	;# 
  1291  0211                     	;# 
  1292  0212                     	;# 
  1293  0212                     	;# 
  1294  0213                     	;# 
  1295  0213                     	;# 
  1296  0214                     	;# 
  1297  0214                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0216                     	;# 
  1302  0216                     	;# 
  1303  0217                     	;# 
  1304  0217                     	;# 
  1305  0219                     	;# 
  1306  021A                     	;# 
  1307  021B                     	;# 
  1308  021C                     	;# 
  1309  021D                     	;# 
  1310  021E                     	;# 
  1311  021F                     	;# 
  1312  0291                     	;# 
  1313  0291                     	;# 
  1314  0292                     	;# 
  1315  0293                     	;# 
  1316  0294                     	;# 
  1317  0295                     	;# 
  1318  0295                     	;# 
  1319  0296                     	;# 
  1320  0298                     	;# 
  1321  0298                     	;# 
  1322  0299                     	;# 
  1323  029A                     	;# 
  1324  029B                     	;# 
  1325  029C                     	;# 
  1326  029C                     	;# 
  1327  029D                     	;# 
  1328  029E                     	;# 
  1329  029E                     	;# 
  1330  0311                     	;# 
  1331  0311                     	;# 
  1332  0312                     	;# 
  1333  0313                     	;# 
  1334  0318                     	;# 
  1335  0318                     	;# 
  1336  0319                     	;# 
  1337  031A                     	;# 
  1338  0394                     	;# 
  1339  0395                     	;# 
  1340  0396                     	;# 
  1341  039A                     	;# 
  1342  039C                     	;# 
  1343  039D                     	;# 
  1344  039E                     	;# 
  1345  039F                     	;# 
  1346  0415                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  041C                     	;# 
  1350  041D                     	;# 
  1351  041E                     	;# 
  1352  0FE4                     	;# 
  1353  0FE5                     	;# 
  1354  0FE6                     	;# 
  1355  0FE7                     	;# 
  1356  0FE8                     	;# 
  1357  0FE9                     	;# 
  1358  0FEA                     	;# 
  1359  0FEB                     	;# 
  1360  0FED                     	;# 
  1361  0FEE                     	;# 
  1362  0FEF                     	;# 
  1363  0000                     	;# 
  1364  0001                     	;# 
  1365  0002                     	;# 
  1366  0003                     	;# 
  1367  0004                     	;# 
  1368  0005                     	;# 
  1369  0006                     	;# 
  1370  0007                     	;# 
  1371  0008                     	;# 
  1372  0009                     	;# 
  1373  000A                     	;# 
  1374  000B                     	;# 
  1375  000C                     	;# 
  1376  000D                     	;# 
  1377  0011                     	;# 
  1378  0012                     	;# 
  1379  0013                     	;# 
  1380  0014                     	;# 
  1381  0015                     	;# 
  1382  0016                     	;# 
  1383  0016                     	;# 
  1384  0017                     	;# 
  1385  0018                     	;# 
  1386  0019                     	;# 
  1387  001A                     	;# 
  1388  001B                     	;# 
  1389  001C                     	;# 
  1390  001E                     	;# 
  1391  001F                     	;# 
  1392  008C                     	;# 
  1393  008D                     	;# 
  1394  0091                     	;# 
  1395  0092                     	;# 
  1396  0093                     	;# 
  1397  0094                     	;# 
  1398  0095                     	;# 
  1399  0096                     	;# 
  1400  0097                     	;# 
  1401  0098                     	;# 
  1402  0099                     	;# 
  1403  009A                     	;# 
  1404  009B                     	;# 
  1405  009B                     	;# 
  1406  009C                     	;# 
  1407  009D                     	;# 
  1408  009E                     	;# 
  1409  010C                     	;# 
  1410  010D                     	;# 
  1411  0111                     	;# 
  1412  0112                     	;# 
  1413  0113                     	;# 
  1414  0114                     	;# 
  1415  0115                     	;# 
  1416  0116                     	;# 
  1417  0117                     	;# 
  1418  0118                     	;# 
  1419  0119                     	;# 
  1420  011A                     	;# 
  1421  011B                     	;# 
  1422  011D                     	;# 
  1423  011E                     	;# 
  1424  018C                     	;# 
  1425  018D                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0194                     	;# 
  1433  0195                     	;# 
  1434  0196                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0219                     	;# 
  1464  021A                     	;# 
  1465  021B                     	;# 
  1466  021C                     	;# 
  1467  021D                     	;# 
  1468  021E                     	;# 
  1469  021F                     	;# 
  1470  0291                     	;# 
  1471  0291                     	;# 
  1472  0292                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0295                     	;# 
  1477  0296                     	;# 
  1478  0298                     	;# 
  1479  0298                     	;# 
  1480  0299                     	;# 
  1481  029A                     	;# 
  1482  029B                     	;# 
  1483  029C                     	;# 
  1484  029C                     	;# 
  1485  029D                     	;# 
  1486  029E                     	;# 
  1487  029E                     	;# 
  1488  0311                     	;# 
  1489  0311                     	;# 
  1490  0312                     	;# 
  1491  0313                     	;# 
  1492  0318                     	;# 
  1493  0318                     	;# 
  1494  0319                     	;# 
  1495  031A                     	;# 
  1496  0394                     	;# 
  1497  0395                     	;# 
  1498  0396                     	;# 
  1499  039A                     	;# 
  1500  039C                     	;# 
  1501  039D                     	;# 
  1502  039E                     	;# 
  1503  039F                     	;# 
  1504  0415                     	;# 
  1505  0416                     	;# 
  1506  0417                     	;# 
  1507  041C                     	;# 
  1508  041D                     	;# 
  1509  041E                     	;# 
  1510  0FE4                     	;# 
  1511  0FE5                     	;# 
  1512  0FE6                     	;# 
  1513  0FE7                     	;# 
  1514  0FE8                     	;# 
  1515  0FE9                     	;# 
  1516  0FEA                     	;# 
  1517  0FEB                     	;# 
  1518  0FED                     	;# 
  1519  0FEE                     	;# 
  1520  0FEF                     	;# 
  1521  0000                     	;# 
  1522  0001                     	;# 
  1523  0002                     	;# 
  1524  0003                     	;# 
  1525  0004                     	;# 
  1526  0005                     	;# 
  1527  0006                     	;# 
  1528  0007                     	;# 
  1529  0008                     	;# 
  1530  0009                     	;# 
  1531  000A                     	;# 
  1532  000B                     	;# 
  1533  000C                     	;# 
  1534  000D                     	;# 
  1535  0011                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  001A                     	;# 
  1546  001B                     	;# 
  1547  001C                     	;# 
  1548  001E                     	;# 
  1549  001F                     	;# 
  1550  008C                     	;# 
  1551  008D                     	;# 
  1552  0091                     	;# 
  1553  0092                     	;# 
  1554  0093                     	;# 
  1555  0094                     	;# 
  1556  0095                     	;# 
  1557  0096                     	;# 
  1558  0097                     	;# 
  1559  0098                     	;# 
  1560  0099                     	;# 
  1561  009A                     	;# 
  1562  009B                     	;# 
  1563  009B                     	;# 
  1564  009C                     	;# 
  1565  009D                     	;# 
  1566  009E                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  0111                     	;# 
  1570  0112                     	;# 
  1571  0113                     	;# 
  1572  0114                     	;# 
  1573  0115                     	;# 
  1574  0116                     	;# 
  1575  0117                     	;# 
  1576  0118                     	;# 
  1577  0119                     	;# 
  1578  011A                     	;# 
  1579  011B                     	;# 
  1580  011D                     	;# 
  1581  011E                     	;# 
  1582  018C                     	;# 
  1583  018D                     	;# 
  1584  0191                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0194                     	;# 
  1591  0195                     	;# 
  1592  0196                     	;# 
  1593  0199                     	;# 
  1594  019A                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  020C                     	;# 
  1605  020D                     	;# 
  1606  0211                     	;# 
  1607  0211                     	;# 
  1608  0212                     	;# 
  1609  0212                     	;# 
  1610  0213                     	;# 
  1611  0213                     	;# 
  1612  0214                     	;# 
  1613  0214                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0216                     	;# 
  1618  0216                     	;# 
  1619  0217                     	;# 
  1620  0217                     	;# 
  1621  0219                     	;# 
  1622  021A                     	;# 
  1623  021B                     	;# 
  1624  021C                     	;# 
  1625  021D                     	;# 
  1626  021E                     	;# 
  1627  021F                     	;# 
  1628  0291                     	;# 
  1629  0291                     	;# 
  1630  0292                     	;# 
  1631  0293                     	;# 
  1632  0294                     	;# 
  1633  0295                     	;# 
  1634  0295                     	;# 
  1635  0296                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  029A                     	;# 
  1640  029B                     	;# 
  1641  029C                     	;# 
  1642  029C                     	;# 
  1643  029D                     	;# 
  1644  029E                     	;# 
  1645  029E                     	;# 
  1646  0311                     	;# 
  1647  0311                     	;# 
  1648  0312                     	;# 
  1649  0313                     	;# 
  1650  0318                     	;# 
  1651  0318                     	;# 
  1652  0319                     	;# 
  1653  031A                     	;# 
  1654  0394                     	;# 
  1655  0395                     	;# 
  1656  0396                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0415                     	;# 
  1663  0416                     	;# 
  1664  0417                     	;# 
  1665  041C                     	;# 
  1666  041D                     	;# 
  1667  041E                     	;# 
  1668  0FE4                     	;# 
  1669  0FE5                     	;# 
  1670  0FE6                     	;# 
  1671  0FE7                     	;# 
  1672  0FE8                     	;# 
  1673  0FE9                     	;# 
  1674  0FEA                     	;# 
  1675  0FEB                     	;# 
  1676  0FED                     	;# 
  1677  0FEE                     	;# 
  1678  0FEF                     	;# 
  1679  0000                     	;# 
  1680  0001                     	;# 
  1681  0002                     	;# 
  1682  0003                     	;# 
  1683  0004                     	;# 
  1684  0005                     	;# 
  1685  0006                     	;# 
  1686  0007                     	;# 
  1687  0008                     	;# 
  1688  0009                     	;# 
  1689  000A                     	;# 
  1690  000B                     	;# 
  1691  000C                     	;# 
  1692  000D                     	;# 
  1693  0011                     	;# 
  1694  0012                     	;# 
  1695  0013                     	;# 
  1696  0014                     	;# 
  1697  0015                     	;# 
  1698  0016                     	;# 
  1699  0016                     	;# 
  1700  0017                     	;# 
  1701  0018                     	;# 
  1702  0019                     	;# 
  1703  001A                     	;# 
  1704  001B                     	;# 
  1705  001C                     	;# 
  1706  001E                     	;# 
  1707  001F                     	;# 
  1708  008C                     	;# 
  1709  008D                     	;# 
  1710  0091                     	;# 
  1711  0092                     	;# 
  1712  0093                     	;# 
  1713  0094                     	;# 
  1714  0095                     	;# 
  1715  0096                     	;# 
  1716  0097                     	;# 
  1717  0098                     	;# 
  1718  0099                     	;# 
  1719  009A                     	;# 
  1720  009B                     	;# 
  1721  009B                     	;# 
  1722  009C                     	;# 
  1723  009D                     	;# 
  1724  009E                     	;# 
  1725  010C                     	;# 
  1726  010D                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0113                     	;# 
  1730  0114                     	;# 
  1731  0115                     	;# 
  1732  0116                     	;# 
  1733  0117                     	;# 
  1734  0118                     	;# 
  1735  0119                     	;# 
  1736  011A                     	;# 
  1737  011B                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  0191                     	;# 
  1743  0191                     	;# 
  1744  0192                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0194                     	;# 
  1749  0195                     	;# 
  1750  0196                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019C                     	;# 
  1758  019C                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019F                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0214                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0216                     	;# 
  1776  0216                     	;# 
  1777  0217                     	;# 
  1778  0217                     	;# 
  1779  0219                     	;# 
  1780  021A                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021E                     	;# 
  1785  021F                     	;# 
  1786  0291                     	;# 
  1787  0291                     	;# 
  1788  0292                     	;# 
  1789  0293                     	;# 
  1790  0294                     	;# 
  1791  0295                     	;# 
  1792  0295                     	;# 
  1793  0296                     	;# 
  1794  0298                     	;# 
  1795  0298                     	;# 
  1796  0299                     	;# 
  1797  029A                     	;# 
  1798  029B                     	;# 
  1799  029C                     	;# 
  1800  029C                     	;# 
  1801  029D                     	;# 
  1802  029E                     	;# 
  1803  029E                     	;# 
  1804  0311                     	;# 
  1805  0311                     	;# 
  1806  0312                     	;# 
  1807  0313                     	;# 
  1808  0318                     	;# 
  1809  0318                     	;# 
  1810  0319                     	;# 
  1811  031A                     	;# 
  1812  0394                     	;# 
  1813  0395                     	;# 
  1814  0396                     	;# 
  1815  039A                     	;# 
  1816  039C                     	;# 
  1817  039D                     	;# 
  1818  039E                     	;# 
  1819  039F                     	;# 
  1820  0415                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  041C                     	;# 
  1824  041D                     	;# 
  1825  041E                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0013                     	;# 
  1854  0014                     	;# 
  1855  0015                     	;# 
  1856  0016                     	;# 
  1857  0016                     	;# 
  1858  0017                     	;# 
  1859  0018                     	;# 
  1860  0019                     	;# 
  1861  001A                     	;# 
  1862  001B                     	;# 
  1863  001C                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0097                     	;# 
  1875  0098                     	;# 
  1876  0099                     	;# 
  1877  009A                     	;# 
  1878  009B                     	;# 
  1879  009B                     	;# 
  1880  009C                     	;# 
  1881  009D                     	;# 
  1882  009E                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  0111                     	;# 
  1886  0112                     	;# 
  1887  0113                     	;# 
  1888  0114                     	;# 
  1889  0115                     	;# 
  1890  0116                     	;# 
  1891  0117                     	;# 
  1892  0118                     	;# 
  1893  0119                     	;# 
  1894  011A                     	;# 
  1895  011B                     	;# 
  1896  011D                     	;# 
  1897  011E                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  0191                     	;# 
  1901  0191                     	;# 
  1902  0192                     	;# 
  1903  0193                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019D                     	;# 
  1918  019E                     	;# 
  1919  019F                     	;# 
  1920  020C                     	;# 
  1921  020D                     	;# 
  1922  0211                     	;# 
  1923  0211                     	;# 
  1924  0212                     	;# 
  1925  0212                     	;# 
  1926  0213                     	;# 
  1927  0213                     	;# 
  1928  0214                     	;# 
  1929  0214                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0219                     	;# 
  1938  021A                     	;# 
  1939  021B                     	;# 
  1940  021C                     	;# 
  1941  021D                     	;# 
  1942  021E                     	;# 
  1943  021F                     	;# 
  1944  0291                     	;# 
  1945  0291                     	;# 
  1946  0292                     	;# 
  1947  0293                     	;# 
  1948  0294                     	;# 
  1949  0295                     	;# 
  1950  0295                     	;# 
  1951  0296                     	;# 
  1952  0298                     	;# 
  1953  0298                     	;# 
  1954  0299                     	;# 
  1955  029A                     	;# 
  1956  029B                     	;# 
  1957  029C                     	;# 
  1958  029C                     	;# 
  1959  029D                     	;# 
  1960  029E                     	;# 
  1961  029E                     	;# 
  1962  0311                     	;# 
  1963  0311                     	;# 
  1964  0312                     	;# 
  1965  0313                     	;# 
  1966  0318                     	;# 
  1967  0318                     	;# 
  1968  0319                     	;# 
  1969  031A                     	;# 
  1970  0394                     	;# 
  1971  0395                     	;# 
  1972  0396                     	;# 
  1973  039A                     	;# 
  1974  039C                     	;# 
  1975  039D                     	;# 
  1976  039E                     	;# 
  1977  039F                     	;# 
  1978  0415                     	;# 
  1979  0416                     	;# 
  1980  0417                     	;# 
  1981  041C                     	;# 
  1982  041D                     	;# 
  1983  041E                     	;# 
  1984  0FE4                     	;# 
  1985  0FE5                     	;# 
  1986  0FE6                     	;# 
  1987  0FE7                     	;# 
  1988  0FE8                     	;# 
  1989  0FE9                     	;# 
  1990  0FEA                     	;# 
  1991  0FEB                     	;# 
  1992  0FED                     	;# 
  1993  0FEE                     	;# 
  1994  0FEF                     	;# 
  1995  0000                     	;# 
  1996  0001                     	;# 
  1997  0002                     	;# 
  1998  0003                     	;# 
  1999  0004                     	;# 
  2000  0005                     	;# 
  2001  0006                     	;# 
  2002  0007                     	;# 
  2003  0008                     	;# 
  2004  0009                     	;# 
  2005  000A                     	;# 
  2006  000B                     	;# 
  2007  000C                     	;# 
  2008  000D                     	;# 
  2009  0011                     	;# 
  2010  0012                     	;# 
  2011  0013                     	;# 
  2012  0014                     	;# 
  2013  0015                     	;# 
  2014  0016                     	;# 
  2015  0016                     	;# 
  2016  0017                     	;# 
  2017  0018                     	;# 
  2018  0019                     	;# 
  2019  001A                     	;# 
  2020  001B                     	;# 
  2021  001C                     	;# 
  2022  001E                     	;# 
  2023  001F                     	;# 
  2024  008C                     	;# 
  2025  008D                     	;# 
  2026  0091                     	;# 
  2027  0092                     	;# 
  2028  0093                     	;# 
  2029  0094                     	;# 
  2030  0095                     	;# 
  2031  0096                     	;# 
  2032  0097                     	;# 
  2033  0098                     	;# 
  2034  0099                     	;# 
  2035  009A                     	;# 
  2036  009B                     	;# 
  2037  009B                     	;# 
  2038  009C                     	;# 
  2039  009D                     	;# 
  2040  009E                     	;# 
  2041  010C                     	;# 
  2042  010D                     	;# 
  2043  0111                     	;# 
  2044  0112                     	;# 
  2045  0113                     	;# 
  2046  0114                     	;# 
  2047  0115                     	;# 
  2048  0116                     	;# 
  2049  0117                     	;# 
  2050  0118                     	;# 
  2051  0119                     	;# 
  2052  011A                     	;# 
  2053  011B                     	;# 
  2054  011D                     	;# 
  2055  011E                     	;# 
  2056  018C                     	;# 
  2057  018D                     	;# 
  2058  0191                     	;# 
  2059  0191                     	;# 
  2060  0192                     	;# 
  2061  0193                     	;# 
  2062  0193                     	;# 
  2063  0193                     	;# 
  2064  0194                     	;# 
  2065  0195                     	;# 
  2066  0196                     	;# 
  2067  0199                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019B                     	;# 
  2072  019B                     	;# 
  2073  019C                     	;# 
  2074  019C                     	;# 
  2075  019D                     	;# 
  2076  019E                     	;# 
  2077  019F                     	;# 
  2078  020C                     	;# 
  2079  020D                     	;# 
  2080  0211                     	;# 
  2081  0211                     	;# 
  2082  0212                     	;# 
  2083  0212                     	;# 
  2084  0213                     	;# 
  2085  0213                     	;# 
  2086  0214                     	;# 
  2087  0214                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0215                     	;# 
  2091  0216                     	;# 
  2092  0216                     	;# 
  2093  0217                     	;# 
  2094  0217                     	;# 
  2095  0219                     	;# 
  2096  021A                     	;# 
  2097  021B                     	;# 
  2098  021C                     	;# 
  2099  021D                     	;# 
  2100  021E                     	;# 
  2101  021F                     	;# 
  2102  0291                     	;# 
  2103  0291                     	;# 
  2104  0292                     	;# 
  2105  0293                     	;# 
  2106  0294                     	;# 
  2107  0295                     	;# 
  2108  0295                     	;# 
  2109  0296                     	;# 
  2110  0298                     	;# 
  2111  0298                     	;# 
  2112  0299                     	;# 
  2113  029A                     	;# 
  2114  029B                     	;# 
  2115  029C                     	;# 
  2116  029C                     	;# 
  2117  029D                     	;# 
  2118  029E                     	;# 
  2119  029E                     	;# 
  2120  0311                     	;# 
  2121  0311                     	;# 
  2122  0312                     	;# 
  2123  0313                     	;# 
  2124  0318                     	;# 
  2125  0318                     	;# 
  2126  0319                     	;# 
  2127  031A                     	;# 
  2128  0394                     	;# 
  2129  0395                     	;# 
  2130  0396                     	;# 
  2131  039A                     	;# 
  2132  039C                     	;# 
  2133  039D                     	;# 
  2134  039E                     	;# 
  2135  039F                     	;# 
  2136  0415                     	;# 
  2137  0416                     	;# 
  2138  0417                     	;# 
  2139  041C                     	;# 
  2140  041D                     	;# 
  2141  041E                     	;# 
  2142  0FE4                     	;# 
  2143  0FE5                     	;# 
  2144  0FE6                     	;# 
  2145  0FE7                     	;# 
  2146  0FE8                     	;# 
  2147  0FE9                     	;# 
  2148  0FEA                     	;# 
  2149  0FEB                     	;# 
  2150  0FED                     	;# 
  2151  0FEE                     	;# 
  2152  0FEF                     	;# 
  2153                           
  2154                           	psect	idataBANK2
  2155  0F44                     __pidataBANK2:	
  2156                           
  2157                           ;initializer for _H7826_Gain
  2158  0F44  34C3               	retlw	low (STR_20| (0+32768))
  2159  0F45  3483               	retlw	high (STR_20| (0+32768))
  2160  0F46  34BE               	retlw	low (STR_21| (0+32768))
  2161  0F47  3483               	retlw	high (STR_21| (0+32768))
  2162  0F48  34CD               	retlw	low (STR_22| (0+32768))
  2163  0F49  3483               	retlw	high (STR_22| (0+32768))
  2164  0F4A  3479               	retlw	low (STR_23| (0+32768))
  2165  0F4B  3483               	retlw	high (STR_23| (0+32768))
  2166  0F4C  344F               	retlw	low (STR_24| (0+32768))
  2167  0F4D  3483               	retlw	high (STR_24| (0+32768))
  2168  0F4E  345B               	retlw	low (STR_25| (0+32768))
  2169  0F4F  3483               	retlw	high (STR_25| (0+32768))
  2170  0F50  3473               	retlw	low (STR_26| (0+32768))
  2171  0F51  3483               	retlw	high (STR_26| (0+32768))
  2172  0F52  3420               	retlw	low (STR_27| (0+32768))
  2173  0F53  3483               	retlw	high (STR_27| (0+32768))
  2174  0F54  3419               	retlw	low (STR_28| (0+32768))
  2175  0F55  3483               	retlw	high (STR_28| (0+32768))
  2176  0F56  3427               	retlw	low (STR_29| (0+32768))
  2177  0F57  3483               	retlw	high (STR_29| (0+32768))
  2178  0F58  34EF               	retlw	low (STR_30| (0+32768))
  2179  0F59  3482               	retlw	high (STR_30| (0+32768))
  2180  0F5A  3435               	retlw	low (STR_31| (0+32768))
  2181  0F5B  3483               	retlw	high (STR_31| (0+32768))
  2182  0F5C  34D1               	retlw	low (STR_32| (0+32768))
  2183  0F5D  3482               	retlw	high (STR_32| (0+32768))
  2184  0F5E  34C9               	retlw	low (STR_33| (0+32768))
  2185  0F5F  3482               	retlw	high (STR_33| (0+32768))
  2186  0F60  34C1               	retlw	low (STR_34| (0+32768))
  2187  0F61  3482               	retlw	high (STR_34| (0+32768))
  2188                           
  2189                           ;initializer for _DAC_VoltageTable
  2190  0F62  34E1               	retlw	low (STR_5| (0+32768))
  2191  0F63  3483               	retlw	high (STR_5| (0+32768))
  2192  0F64  348B               	retlw	low (STR_6| (0+32768))
  2193  0F65  3483               	retlw	high (STR_6| (0+32768))
  2194  0F66  34E6               	retlw	low (STR_7| (0+32768))
  2195  0F67  3483               	retlw	high (STR_7| (0+32768))
  2196  0F68  3491               	retlw	low (STR_8| (0+32768))
  2197  0F69  3483               	retlw	high (STR_8| (0+32768))
  2198  0F6A  34EB               	retlw	low (STR_9| (0+32768))
  2199  0F6B  3483               	retlw	high (STR_9| (0+32768))
  2200  0F6C  3497               	retlw	low (STR_10| (0+32768))
  2201  0F6D  3483               	retlw	high (STR_10| (0+32768))
  2202  0F6E  34F0               	retlw	low (STR_11| (0+32768))
  2203  0F6F  3483               	retlw	high (STR_11| (0+32768))
  2204  0F70  349D               	retlw	low (STR_12| (0+32768))
  2205  0F71  3483               	retlw	high (STR_12| (0+32768))
  2206  0F72  34F5               	retlw	low (STR_13| (0+32768))
  2207  0F73  3483               	retlw	high (STR_13| (0+32768))
  2208  0F74  34A3               	retlw	low (STR_14| (0+32768))
  2209  0F75  3483               	retlw	high (STR_14| (0+32768))
  2210  0F76  34D2               	retlw	low (STR_15| (0+32768))
  2211  0F77  3483               	retlw	high (STR_15| (0+32768))
  2212  0F78  347F               	retlw	low (STR_16| (0+32768))
  2213  0F79  3483               	retlw	high (STR_16| (0+32768))
  2214  0F7A  34D7               	retlw	low (STR_17| (0+32768))
  2215  0F7B  3483               	retlw	high (STR_17| (0+32768))
  2216  0F7C  3485               	retlw	low (STR_18| (0+32768))
  2217  0F7D  3483               	retlw	high (STR_18| (0+32768))
  2218  0F7E  34DC               	retlw	low (STR_19| (0+32768))
  2219  0F7F  3483               	retlw	high (STR_19| (0+32768))
  2220                           
  2221                           	psect	idataBANK3
  2222  0E18                     __pidataBANK3:	
  2223                           
  2224                           ;initializer for _H7826_01_Gain
  2225  0E18  34AF               	retlw	low (STR_35| (0+32768))
  2226  0E19  3483               	retlw	high (STR_35| (0+32768))
  2227  0E1A  34B4               	retlw	low (STR_36| (0+32768))
  2228  0E1B  3483               	retlw	high (STR_36| (0+32768))
  2229  0E1C  34C8               	retlw	low (STR_37| (0+32768))
  2230  0E1D  3483               	retlw	high (STR_37| (0+32768))
  2231  0E1E  34B9               	retlw	low (STR_38| (0+32768))
  2232  0E1F  3483               	retlw	high (STR_38| (0+32768))
  2233  0E20  3461               	retlw	low (STR_39| (0+32768))
  2234  0E21  3483               	retlw	high (STR_39| (0+32768))
  2235  0E22  3467               	retlw	low (STR_40| (0+32768))
  2236  0E23  3483               	retlw	high (STR_40| (0+32768))
  2237  0E24  346D               	retlw	low (STR_41| (0+32768))
  2238  0E25  3483               	retlw	high (STR_41| (0+32768))
  2239  0E26  3455               	retlw	low (STR_42| (0+32768))
  2240  0E27  3483               	retlw	high (STR_42| (0+32768))
  2241  0E28  3404               	retlw	low (STR_43| (0+32768))
  2242  0E29  3483               	retlw	high (STR_43| (0+32768))
  2243  0E2A  342E               	retlw	low (STR_44| (0+32768))
  2244  0E2B  3483               	retlw	high (STR_44| (0+32768))
  2245  0E2C  340B               	retlw	low (STR_45| (0+32768))
  2246  0E2D  3483               	retlw	high (STR_45| (0+32768))
  2247  0E2E  3412               	retlw	low (STR_46| (0+32768))
  2248  0E2F  3483               	retlw	high (STR_46| (0+32768))
  2249  0E30  343C               	retlw	low (STR_47| (0+32768))
  2250  0E31  3483               	retlw	high (STR_47| (0+32768))
  2251  0E32  34F6               	retlw	low (STR_48| (0+32768))
  2252  0E33  3482               	retlw	high (STR_48| (0+32768))
  2253  0E34  34FD               	retlw	low (STR_49| (0+32768))
  2254  0E35  3482               	retlw	high (STR_49| (0+32768))
  2255                           
  2256                           	psect	stringtext
  2257  028E                     __pstringtext:	
  2258  028E                     _DAC_DataTable:	
  2259  028E  3499               	retlw	153
  2260  028F  3401               	retlw	1
  2261  0290  34C2               	retlw	194
  2262  0291  3401               	retlw	1
  2263  0292  34EB               	retlw	235
  2264  0293  3401               	retlw	1
  2265  0294  3414               	retlw	20
  2266  0295  3402               	retlw	2
  2267  0296  343D               	retlw	61
  2268  0297  3402               	retlw	2
  2269  0298  3466               	retlw	102
  2270  0299  3402               	retlw	2
  2271  029A  348F               	retlw	143
  2272  029B  3402               	retlw	2
  2273  029C  34B8               	retlw	184
  2274  029D  3402               	retlw	2
  2275  029E  34E1               	retlw	225
  2276  029F  3402               	retlw	2
  2277  02A0  340A               	retlw	10
  2278  02A1  3403               	retlw	3
  2279  02A2  3433               	retlw	51
  2280  02A3  3403               	retlw	3
  2281  02A4  345B               	retlw	91
  2282  02A5  3403               	retlw	3
  2283  02A6  3484               	retlw	132
  2284  02A7  3403               	retlw	3
  2285  02A8  34AD               	retlw	173
  2286  02A9  3403               	retlw	3
  2287  02AA  34D6               	retlw	214
  2288  02AB  3403               	retlw	3
  2289  02AC                     __end_of_DAC_DataTable:	
  2290  0016                     _TMR1	set	22
  2291  000C                     _PORTA	set	12
  2292  001F                     _CPSCON1	set	31
  2293  001E                     _CPSCON0	set	30
  2294  0015                     _TMR0	set	21
  2295  0019                     _T1GCON	set	25
  2296  0018                     _T1CON	set	24
  2297  000D                     _PORTB	set	13
  2298  001B                     _PR2	set	27
  2299  001A                     _TMR2	set	26
  2300  001C                     _T2CON	set	28
  2301  009B                     _TMR6IF	set	155
  2302  00C0                     _TMR1ON	set	192
  2303  0099                     _TMR4IF	set	153
  2304  0088                     _TMR1IF	set	136
  2305  005F                     _GIE	set	95
  2306  005E                     _PEIE	set	94
  2307  00A1                     _BCL2IF	set	161
  2308  00A0                     _SSP2IF	set	160
  2309  0093                     _BCL1IF	set	147
  2310  008B                     _SSP1IF	set	139
  2311  0099                     _OSCCON	set	153
  2312  0095                     _OPTION_REG	set	149
  2313  008D                     _TRISB	set	141
  2314  008C                     _TRISA	set	140
  2315  049B                     _TMR6IE	set	1179
  2316  0499                     _TMR4IE	set	1177
  2317  0488                     _TMR1IE	set	1160
  2318  04A1                     _BCL2IE	set	1185
  2319  04A0                     _SSP2IE	set	1184
  2320  0493                     _BCL1IE	set	1171
  2321  048B                     _SSP1IE	set	1163
  2322  011E                     _APFCON1	set	286
  2323  011D                     _APFCON0	set	285
  2324  0866                     _LATA6	set	2150
  2325  0863                     _LATA3	set	2147
  2326  0864                     _LATA4	set	2148
  2327  018D                     _ANSELB	set	397
  2328  018C                     _ANSELA	set	396
  2329  021C                     _SSP2STATbits	set	540
  2330  0219                     _SSP2BUF	set	537
  2331  021E                     _SSP2CON2	set	542
  2332  021B                     _SSP2MSK	set	539
  2333  021E                     _SSP2CON2bits	set	542
  2334  021D                     _SSP2CON1bits	set	541
  2335  021A                     _SSP2ADD	set	538
  2336  021C                     _SSP2STAT	set	540
  2337  021D                     _SSP2CON1	set	541
  2338  0214                     _SSP1STATbits	set	532
  2339  0211                     _SSP1BUF	set	529
  2340  0216                     _SSP1CON2	set	534
  2341  0213                     _SSP1MSK	set	531
  2342  0216                     _SSP1CON2bits	set	534
  2343  0215                     _SSP1CON1bits	set	533
  2344  0212                     _SSP1ADD	set	530
  2345  0214                     _SSP1STAT	set	532
  2346  0215                     _SSP1CON1	set	533
  2347  0298                     _CCPR2L	set	664
  2348  029E                     _CCPTMRS	set	670
  2349  029A                     _CCP2CON	set	666
  2350  041E                     _T6CON	set	1054
  2351  041C                     _TMR6	set	1052
  2352  041D                     _PR6	set	1053
  2353  0417                     _T4CON	set	1047
  2354  0415                     _TMR4	set	1045
  2355  0416                     _PR4	set	1046
  2356  02AC                     STR_2:	
  2357  02AC  3453               	retlw	83	;'S'
  2358  02AD  3445               	retlw	69	;'E'
  2359  02AE  344C               	retlw	76	;'L'
  2360  02AF  3445               	retlw	69	;'E'
  2361  02B0  3443               	retlw	67	;'C'
  2362  02B1  3454               	retlw	84	;'T'
  2363  02B2  3446               	retlw	70	;'F'
  2364  02B3  3455               	retlw	85	;'U'
  2365  02B4  344E               	retlw	78	;'N'
  2366  02B5  3443               	retlw	67	;'C'
  2367  02B6  3400               	retlw	0
  2368  02B7                     STR_4:	
  2369  02B7  3450               	retlw	80	;'P'
  2370  02B8  344D               	retlw	77	;'M'
  2371  02B9  3454               	retlw	84	;'T'
  2372  02BA  3444               	retlw	68	;'D'
  2373  02BB  3445               	retlw	69	;'E'
  2374  02BC  3456               	retlw	86	;'V'
  2375  02BD  3449               	retlw	73	;'I'
  2376  02BE  3443               	retlw	67	;'C'
  2377  02BF  3445               	retlw	69	;'E'
  2378  02C0  3400               	retlw	0
  2379  02C1                     STR_34:	
  2380  02C1  3432               	retlw	50	;'2'
  2381  02C2  3437               	retlw	55	;'7'
  2382  02C3  3437               	retlw	55	;'7'
  2383  02C4  3434               	retlw	52	;'4'
  2384  02C5  3435               	retlw	53	;'5'
  2385  02C6  3436               	retlw	54	;'6'
  2386  02C7  3432               	retlw	50	;'2'
  2387  02C8  3400               	retlw	0
  2388  02C9                     STR_33:	
  2389  02C9  3431               	retlw	49	;'1'
  2390  02CA  3439               	retlw	57	;'9'
  2391  02CB  3434               	retlw	52	;'4'
  2392  02CC  3430               	retlw	48	;'0'
  2393  02CD  3436               	retlw	54	;'6'
  2394  02CE  3437               	retlw	55	;'7'
  2395  02CF  3433               	retlw	51	;'3'
  2396  02D0  3400               	retlw	0
  2397  02D1                     STR_32:	
  2398  02D1  3431               	retlw	49	;'1'
  2399  02D2  3433               	retlw	51	;'3'
  2400  02D3  3433               	retlw	51	;'3'
  2401  02D4  3436               	retlw	54	;'6'
  2402  02D5  3430               	retlw	48	;'0'
  2403  02D6  3430               	retlw	48	;'0'
  2404  02D7  3436               	retlw	54	;'6'
  2405  02D8  3400               	retlw	0
  2406  02D9                     STR_3:	
  2407  02D9  3441               	retlw	65	;'A'
  2408  02DA  3444               	retlw	68	;'D'
  2409  02DB  344A               	retlw	74	;'J'
  2410  02DC  3447               	retlw	71	;'G'
  2411  02DD  3441               	retlw	65	;'A'
  2412  02DE  3449               	retlw	73	;'I'
  2413  02DF  344E               	retlw	78	;'N'
  2414  02E0  3400               	retlw	0
  2415  02E1                     STR_51:	
  2416  02E1  3425               	retlw	37	;'%'
  2417  02E2  3430               	retlw	48	;'0'
  2418  02E3  3438               	retlw	56	;'8'
  2419  02E4  346C               	retlw	108	;'l'
  2420  02E5  3458               	retlw	88	;'X'
  2421  02E6  3420               	retlw	32	;' '
  2422  02E7  3400               	retlw	0
  2423  02E8                     STR_54:	
  2424  02E8  3420               	retlw	32	;' '
  2425  02E9  3425               	retlw	37	;'%'
  2426  02EA  3430               	retlw	48	;'0'
  2427  02EB  3438               	retlw	56	;'8'
  2428  02EC  344C               	retlw	76	;'L'
  2429  02ED  3458               	retlw	88	;'X'
  2430  02EE  3400               	retlw	0
  2431  02EF                     STR_30:	
  2432  02EF  3436               	retlw	54	;'6'
  2433  02F0  3430               	retlw	48	;'0'
  2434  02F1  3430               	retlw	48	;'0'
  2435  02F2  3430               	retlw	48	;'0'
  2436  02F3  3430               	retlw	48	;'0'
  2437  02F4  3430               	retlw	48	;'0'
  2438  02F5  3400               	retlw	0
  2439  02F6                     STR_48:	
  2440  02F6  3437               	retlw	55	;'7'
  2441  02F7  3430               	retlw	48	;'0'
  2442  02F8  3430               	retlw	48	;'0'
  2443  02F9  3438               	retlw	56	;'8'
  2444  02FA  3439               	retlw	57	;'9'
  2445  02FB  3430               	retlw	48	;'0'
  2446  02FC  3400               	retlw	0
  2447  02FD                     STR_49:	
  2448  02FD  3439               	retlw	57	;'9'
  2449  02FE  3436               	retlw	54	;'6'
  2450  02FF  3438               	retlw	56	;'8'
  2451  0300  3434               	retlw	52	;'4'
  2452  0301  3437               	retlw	55	;'7'
  2453  0302  3432               	retlw	50	;'2'
  2454  0303  3400               	retlw	0
  2455  0304                     STR_43:	
  2456  0304  3431               	retlw	49	;'1'
  2457  0305  3430               	retlw	48	;'0'
  2458  0306  3438               	retlw	56	;'8'
  2459  0307  3438               	retlw	56	;'8'
  2460  0308  3434               	retlw	52	;'4'
  2461  0309  3433               	retlw	51	;'3'
  2462  030A  3400               	retlw	0
  2463  030B                     STR_45:	
  2464  030B  3432               	retlw	50	;'2'
  2465  030C  3434               	retlw	52	;'4'
  2466  030D  3432               	retlw	50	;'2'
  2467  030E  3433               	retlw	51	;'3'
  2468  030F  3436               	retlw	54	;'6'
  2469  0310  3434               	retlw	52	;'4'
  2470  0311  3400               	retlw	0
  2471  0312                     STR_46:	
  2472  0312  3433               	retlw	51	;'3'
  2473  0313  3435               	retlw	53	;'5'
  2474  0314  3431               	retlw	49	;'1'
  2475  0315  3431               	retlw	49	;'1'
  2476  0316  3432               	retlw	50	;'2'
  2477  0317  3437               	retlw	55	;'7'
  2478  0318  3400               	retlw	0
  2479  0319                     STR_28:	
  2480  0319  3432               	retlw	50	;'2'
  2481  031A  3434               	retlw	52	;'4'
  2482  031B  3437               	retlw	55	;'7'
  2483  031C  3436               	retlw	54	;'6'
  2484  031D  3434               	retlw	52	;'4'
  2485  031E  3437               	retlw	55	;'7'
  2486  031F  3400               	retlw	0
  2487  0320                     STR_27:	
  2488  0320  3431               	retlw	49	;'1'
  2489  0321  3435               	retlw	53	;'5'
  2490  0322  3433               	retlw	51	;'3'
  2491  0323  3432               	retlw	50	;'2'
  2492  0324  3432               	retlw	50	;'2'
  2493  0325  3438               	retlw	56	;'8'
  2494  0326  3400               	retlw	0
  2495  0327                     STR_29:	
  2496  0327  3433               	retlw	51	;'3'
  2497  0328  3438               	retlw	56	;'8'
  2498  0329  3439               	retlw	57	;'9'
  2499  032A  3439               	retlw	57	;'9'
  2500  032B  3438               	retlw	56	;'8'
  2501  032C  3438               	retlw	56	;'8'
  2502  032D  3400               	retlw	0
  2503  032E                     STR_44:	
  2504  032E  3431               	retlw	49	;'1'
  2505  032F  3436               	retlw	54	;'6'
  2506  0330  3434               	retlw	52	;'4'
  2507  0331  3431               	retlw	49	;'1'
  2508  0332  3433               	retlw	51	;'3'
  2509  0333  3439               	retlw	57	;'9'
  2510  0334  3400               	retlw	0
  2511  0335                     STR_31:	
  2512  0335  3439               	retlw	57	;'9'
  2513  0336  3430               	retlw	48	;'0'
  2514  0337  3433               	retlw	51	;'3'
  2515  0338  3438               	retlw	56	;'8'
  2516  0339  3439               	retlw	57	;'9'
  2517  033A  3439               	retlw	57	;'9'
  2518  033B  3400               	retlw	0
  2519  033C                     STR_47:	
  2520  033C  3434               	retlw	52	;'4'
  2521  033D  3439               	retlw	57	;'9'
  2522  033E  3439               	retlw	57	;'9'
  2523  033F  3439               	retlw	57	;'9'
  2524  0340  3439               	retlw	57	;'9'
  2525  0341  3439               	retlw	57	;'9'
  2526  0342  3400               	retlw	0
  2527  0343                     STR_52:	
  2528  0343  3420               	retlw	32	;' '
  2529  0344  3425               	retlw	37	;'%'
  2530  0345  3430               	retlw	48	;'0'
  2531  0346  3432               	retlw	50	;'2'
  2532  0347  3458               	retlw	88	;'X'
  2533  0348  3400               	retlw	0
  2534  0349                     STR_53:	
  2535  0349  3420               	retlw	32	;' '
  2536  034A  3425               	retlw	37	;'%'
  2537  034B  3430               	retlw	48	;'0'
  2538  034C  3434               	retlw	52	;'4'
  2539  034D  3458               	retlw	88	;'X'
  2540  034E  3400               	retlw	0
  2541  034F                     STR_24:	
  2542  034F  3433               	retlw	51	;'3'
  2543  0350  3430               	retlw	48	;'0'
  2544  0351  3430               	retlw	48	;'0'
  2545  0352  3430               	retlw	48	;'0'
  2546  0353  3430               	retlw	48	;'0'
  2547  0354  3400               	retlw	0
  2548  0355                     STR_42:	
  2549  0355  3437               	retlw	55	;'7'
  2550  0356  3430               	retlw	48	;'0'
  2551  0357  3435               	retlw	53	;'5'
  2552  0358  3430               	retlw	48	;'0'
  2553  0359  3430               	retlw	48	;'0'
  2554  035A  3400               	retlw	0
  2555  035B                     STR_25:	
  2556  035B  3435               	retlw	53	;'5'
  2557  035C  3433               	retlw	51	;'3'
  2558  035D  3435               	retlw	53	;'5'
  2559  035E  3435               	retlw	53	;'5'
  2560  035F  3433               	retlw	51	;'3'
  2561  0360  3400               	retlw	0
  2562  0361                     STR_39:	
  2563  0361  3431               	retlw	49	;'1'
  2564  0362  3436               	retlw	54	;'6'
  2565  0363  3431               	retlw	49	;'1'
  2566  0364  3432               	retlw	50	;'2'
  2567  0365  3435               	retlw	53	;'5'
  2568  0366  3400               	retlw	0
  2569  0367                     STR_40:	
  2570  0367  3432               	retlw	50	;'2'
  2571  0368  3437               	retlw	55	;'7'
  2572  0369  3432               	retlw	50	;'2'
  2573  036A  3433               	retlw	51	;'3'
  2574  036B  3438               	retlw	56	;'8'
  2575  036C  3400               	retlw	0
  2576  036D                     STR_41:	
  2577  036D  3434               	retlw	52	;'4'
  2578  036E  3434               	retlw	52	;'4'
  2579  036F  3434               	retlw	52	;'4'
  2580  0370  3437               	retlw	55	;'7'
  2581  0371  3438               	retlw	56	;'8'
  2582  0372  3400               	retlw	0
  2583  0373                     STR_26:	
  2584  0373  3439               	retlw	57	;'9'
  2585  0374  3432               	retlw	50	;'2'
  2586  0375  3430               	retlw	48	;'0'
  2587  0376  3438               	retlw	56	;'8'
  2588  0377  3438               	retlw	56	;'8'
  2589  0378  3400               	retlw	0
  2590  0379                     STR_23:	
  2591  0379  3431               	retlw	49	;'1'
  2592  037A  3436               	retlw	54	;'6'
  2593  037B  3430               	retlw	48	;'0'
  2594  037C  3439               	retlw	57	;'9'
  2595  037D  3439               	retlw	57	;'9'
  2596  037E  3400               	retlw	0
  2597  037F                     STR_16:	
  2598  037F  3431               	retlw	49	;'1'
  2599  0380  342E               	retlw	46	;'.'
  2600  0381  3430               	retlw	48	;'0'
  2601  0382  3435               	retlw	53	;'5'
  2602  0383  3456               	retlw	86	;'V'
  2603  0384  3400               	retlw	0
  2604  0385                     STR_18:	
  2605  0385  3431               	retlw	49	;'1'
  2606  0386  342E               	retlw	46	;'.'
  2607  0387  3431               	retlw	49	;'1'
  2608  0388  3435               	retlw	53	;'5'
  2609  0389  3456               	retlw	86	;'V'
  2610  038A  3400               	retlw	0
  2611  038B                     STR_6:	
  2612  038B  3430               	retlw	48	;'0'
  2613  038C  342E               	retlw	46	;'.'
  2614  038D  3435               	retlw	53	;'5'
  2615  038E  3435               	retlw	53	;'5'
  2616  038F  3456               	retlw	86	;'V'
  2617  0390  3400               	retlw	0
  2618  0391                     STR_8:	
  2619  0391  3430               	retlw	48	;'0'
  2620  0392  342E               	retlw	46	;'.'
  2621  0393  3436               	retlw	54	;'6'
  2622  0394  3435               	retlw	53	;'5'
  2623  0395  3456               	retlw	86	;'V'
  2624  0396  3400               	retlw	0
  2625  0397                     STR_10:	
  2626  0397  3430               	retlw	48	;'0'
  2627  0398  342E               	retlw	46	;'.'
  2628  0399  3437               	retlw	55	;'7'
  2629  039A  3435               	retlw	53	;'5'
  2630  039B  3456               	retlw	86	;'V'
  2631  039C  3400               	retlw	0
  2632  039D                     STR_12:	
  2633  039D  3430               	retlw	48	;'0'
  2634  039E  342E               	retlw	46	;'.'
  2635  039F  3438               	retlw	56	;'8'
  2636  03A0  3435               	retlw	53	;'5'
  2637  03A1  3456               	retlw	86	;'V'
  2638  03A2  3400               	retlw	0
  2639  03A3                     STR_14:	
  2640  03A3  3430               	retlw	48	;'0'
  2641  03A4  342E               	retlw	46	;'.'
  2642  03A5  3439               	retlw	57	;'9'
  2643  03A6  3435               	retlw	53	;'5'
  2644  03A7  3456               	retlw	86	;'V'
  2645  03A8  3400               	retlw	0
  2646  03A9                     STR_1:	
  2647  03A9  3425               	retlw	37	;'%'
  2648  03AA  3464               	retlw	100	;'d'
  2649  03AB  3420               	retlw	32	;' '
  2650  03AC  3425               	retlw	37	;'%'
  2651  03AD  3464               	retlw	100	;'d'
  2652  03AE  3400               	retlw	0
  2653  03AF                     STR_35:	
  2654  03AF  3431               	retlw	49	;'1'
  2655  03B0  3432               	retlw	50	;'2'
  2656  03B1  3435               	retlw	53	;'5'
  2657  03B2  3430               	retlw	48	;'0'
  2658  03B3  3400               	retlw	0
  2659  03B4                     STR_36:	
  2660  03B4  3432               	retlw	50	;'2'
  2661  03B5  3435               	retlw	53	;'5'
  2662  03B6  3438               	retlw	56	;'8'
  2663  03B7  3430               	retlw	48	;'0'
  2664  03B8  3400               	retlw	0
  2665  03B9                     STR_38:	
  2666  03B9  3439               	retlw	57	;'9'
  2667  03BA  3431               	retlw	49	;'1'
  2668  03BB  3438               	retlw	56	;'8'
  2669  03BC  3432               	retlw	50	;'2'
  2670  03BD  3400               	retlw	0
  2671  03BE                     STR_21:	
  2672  03BE  3433               	retlw	51	;'3'
  2673  03BF  3439               	retlw	57	;'9'
  2674  03C0  3435               	retlw	53	;'5'
  2675  03C1  3437               	retlw	55	;'7'
  2676  03C2  3400               	retlw	0
  2677  03C3                     STR_20:	
  2678  03C3  3431               	retlw	49	;'1'
  2679  03C4  3437               	retlw	55	;'7'
  2680  03C5  3437               	retlw	55	;'7'
  2681  03C6  3437               	retlw	55	;'7'
  2682  03C7  3400               	retlw	0
  2683  03C8                     STR_37:	
  2684  03C8  3434               	retlw	52	;'4'
  2685  03C9  3439               	retlw	57	;'9'
  2686  03CA  3439               	retlw	57	;'9'
  2687  03CB  3438               	retlw	56	;'8'
  2688  03CC  3400               	retlw	0
  2689  03CD                     STR_22:	
  2690  03CD  3438               	retlw	56	;'8'
  2691  03CE  3432               	retlw	50	;'2'
  2692  03CF  3431               	retlw	49	;'1'
  2693  03D0  3439               	retlw	57	;'9'
  2694  03D1  3400               	retlw	0
  2695  03D2                     STR_15:	
  2696  03D2  3431               	retlw	49	;'1'
  2697  03D3  342E               	retlw	46	;'.'
  2698  03D4  3430               	retlw	48	;'0'
  2699  03D5  3456               	retlw	86	;'V'
  2700  03D6  3400               	retlw	0
  2701  03D7                     STR_17:	
  2702  03D7  3431               	retlw	49	;'1'
  2703  03D8  342E               	retlw	46	;'.'
  2704  03D9  3431               	retlw	49	;'1'
  2705  03DA  3456               	retlw	86	;'V'
  2706  03DB  3400               	retlw	0
  2707  03DC                     STR_19:	
  2708  03DC  3431               	retlw	49	;'1'
  2709  03DD  342E               	retlw	46	;'.'
  2710  03DE  3432               	retlw	50	;'2'
  2711  03DF  3456               	retlw	86	;'V'
  2712  03E0  3400               	retlw	0
  2713  03E1                     STR_5:	
  2714  03E1  3430               	retlw	48	;'0'
  2715  03E2  342E               	retlw	46	;'.'
  2716  03E3  3435               	retlw	53	;'5'
  2717  03E4  3456               	retlw	86	;'V'
  2718  03E5  3400               	retlw	0
  2719  03E6                     STR_7:	
  2720  03E6  3430               	retlw	48	;'0'
  2721  03E7  342E               	retlw	46	;'.'
  2722  03E8  3436               	retlw	54	;'6'
  2723  03E9  3456               	retlw	86	;'V'
  2724  03EA  3400               	retlw	0
  2725  03EB                     STR_9:	
  2726  03EB  3430               	retlw	48	;'0'
  2727  03EC  342E               	retlw	46	;'.'
  2728  03ED  3437               	retlw	55	;'7'
  2729  03EE  3456               	retlw	86	;'V'
  2730  03EF  3400               	retlw	0
  2731  03F0                     STR_11:	
  2732  03F0  3430               	retlw	48	;'0'
  2733  03F1  342E               	retlw	46	;'.'
  2734  03F2  3438               	retlw	56	;'8'
  2735  03F3  3456               	retlw	86	;'V'
  2736  03F4  3400               	retlw	0
  2737  03F5                     STR_13:	
  2738  03F5  3430               	retlw	48	;'0'
  2739  03F6  342E               	retlw	46	;'.'
  2740  03F7  3439               	retlw	57	;'9'
  2741  03F8  3456               	retlw	86	;'V'
  2742  03F9  3400               	retlw	0
  2743  03FA                     STR_50:	
  2744  03FA  340D               	retlw	13
  2745  03FB  3400               	retlw	0
  2746                           
  2747                           ; #config settings
  2748  0000                     
  2749                           	psect	cinit
  2750  0034                     start_initialization:	
  2751  0034                     __initialization:	
  2752                           
  2753                           ; Initialize objects allocated to BANK2
  2754  0034  3044               	movlw	low __pidataBANK2
  2755  0035  0084               	movwf	4
  2756  0036  308F               	movlw	(high __pidataBANK2)| (0+128)
  2757  0037  0085               	movwf	5
  2758  0038  3020               	movlw	low __pdataBANK2
  2759  0039  0086               	movwf	6
  2760  003A  3001               	movlw	high __pdataBANK2
  2761  003B  0087               	movwf	7
  2762  003C  303C               	movlw	60
  2763  003D  318C  24AC  3180   	fcall	init_ram
  2764                           
  2765                           ; Initialize objects allocated to BANK3
  2766  0040  3018               	movlw	low __pidataBANK3
  2767  0041  0084               	movwf	4
  2768  0042  308E               	movlw	(high __pidataBANK3)| (0+128)
  2769  0043  0085               	movwf	5
  2770  0044  30A0               	movlw	low __pdataBANK3
  2771  0045  0086               	movwf	6
  2772  0046  3001               	movlw	high __pdataBANK3
  2773  0047  0087               	movwf	7
  2774  0048  301E               	movlw	30
  2775  0049  318C  24AC  3180   	fcall	init_ram
  2776                           
  2777                           ; Clear objects allocated to COMMON
  2778  004C  01F6               	clrf	__pbssCOMMON& (0+127)
  2779  004D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2780  004E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2781  004F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2782  0050  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  2783                           
  2784                           ; Clear objects allocated to BANK0
  2785  0051  3068               	movlw	low __pbssBANK0
  2786  0052  0084               	movwf	4
  2787  0053  3000               	movlw	high __pbssBANK0
  2788  0054  0085               	movwf	5
  2789  0055  3008               	movlw	8
  2790  0056  318C  24A6  3180   	fcall	clear_ram0
  2791                           
  2792                           ; Clear objects allocated to BANK1
  2793  0059  30A0               	movlw	low __pbssBANK1
  2794  005A  0084               	movwf	4
  2795  005B  3000               	movlw	high __pbssBANK1
  2796  005C  0085               	movwf	5
  2797  005D  303A               	movlw	58
  2798  005E  318C  24A6         	fcall	clear_ram0
  2799  0060                     end_of_initialization:	
  2800                           ;End of C runtime variable initialization code
  2801                           
  2802  0060                     __end_of__initialization:	
  2803  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2804  0061  0020               	movlb	0
  2805  0062  3185  2D2B         	ljmp	_main	;jump to C main() function
  2806                           
  2807                           	psect	bssCOMMON
  2808  0076                     __pbssCOMMON:	
  2809  0076                     _xfunc_in:	
  2810  0076                     	ds	2
  2811  0078                     _count:	
  2812  0078                     	ds	2
  2813  007A                     CPSx_Read@channel:	
  2814  007A                     	ds	1
  2815                           
  2816                           	psect	bssBANK0
  2817  0068                     __pbssBANK0:	
  2818  0068                     _mode:	
  2819  0068                     	ds	2
  2820  006A                     _xfunc_out:	
  2821  006A                     	ds	2
  2822  006C                     _outptr:	
  2823  006C                     	ds	1
  2824  006D                     _VoltageReg:	
  2825  006D                     	ds	2
  2826  006F                     _ConfigReg:	
  2827  006F                     	ds	1
  2828                           
  2829                           	psect	bssBANK1
  2830  00A0                     __pbssBANK1:	
  2831  00A0                     _countsum:	
  2832  00A0                     	ds	4
  2833  00A4                     _mTouch_Interval:	
  2834  00A4                     	ds	3
  2835  00A7                     _CPS_Data:	
  2836  00A7                     	ds	3
  2837  00AA                     _CPS_PreData:	
  2838  00AA                     	ds	3
  2839  00AD                     _MemoryReg:	
  2840  00AD                     	ds	3
  2841  00B0                     _resulttime:	
  2842  00B0                     	ds	2
  2843  00B2                     _count10us:	
  2844  00B2                     	ds	2
  2845  00B4                     _I2C2_Config:	
  2846  00B4                     	ds	19
  2847  00C7                     _I2C1_Config:	
  2848  00C7                     	ds	19
  2849                           
  2850                           	psect	dataBANK2
  2851  0120                     __pdataBANK2:	
  2852  0120                     _H7826_Gain:	
  2853  0120                     	ds	30
  2854  013E                     _DAC_VoltageTable:	
  2855  013E                     	ds	30
  2856                           
  2857                           	psect	dataBANK3
  2858  01A0                     __pdataBANK3:	
  2859  01A0                     _H7826_01_Gain:	
  2860  01A0                     	ds	30
  2861                           
  2862                           	psect	inittext
  2863  0CAC                     init_ram:	
  2864  0CAC  00FE               	movwf	126
  2865  0CAD                     initloop:	
  2866  0CAD  0012               	moviw fsr0++
  2867  0CAE  001E               	movwi fsr1++
  2868  0CAF  0BFE               	decfsz	126,f
  2869  0CB0  2CAD               	goto	initloop
  2870  0CB1  3400               	retlw	0
  2871                           
  2872                           	psect	clrtext
  2873  0CA6                     clear_ram0:	
  2874                           ;	Called with FSR0 containing the base address, and
  2875                           ;	WREG with the size to clear
  2876                           
  2877  0CA6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2878  0CA7                     clrloop0:	
  2879  0CA7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2880  0CA8  3101               	addfsr 0,1
  2881  0CA9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2882  0CAA  2CA7               	goto	clrloop0	;have we reached the end yet?
  2883  0CAB  3400               	retlw	0	;all done for this memory range, return
  2884                           
  2885                           	psect	cstackBANK1
  2886  00DA                     __pcstackBANK1:	
  2887  00DA                     ??_main:	
  2888                           
  2889                           ; 1 bytes @ 0x0
  2890  00DA                     	ds	1
  2891                           
  2892                           	psect	cstackCOMMON
  2893  0070                     __pcstackCOMMON:	
  2894  0070                     ?_LCD_DisplayClear:	
  2895  0070                     ?_Basic_Init:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_mTouch_Read:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_mTouch_IntervalDecrement:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ??_mTouch_IntervalDecrement:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_Buzzer_Init:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_Buzzer_SetDuty:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_Buzzer_Handler:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_I2C1_PinInit:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_I2C1_Interrupt:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ??_I2C1_Interrupt:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_I2C2_PinInit:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_I2C2_Interrupt:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ??_I2C2_Interrupt:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_I2C_CommonInterrupt:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_LCD_WriteData:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_LCD_Init:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_LCD_CursorHome:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_DAC_Initialize:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_Timer1_Init:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_Timer1_Count10us:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ??_Timer1_Count10us:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_Timer1_DetectAssignCount:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ??_Timer1_DetectAssignCount:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_Timer4_Init:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_Timer4_Handler:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ??_Timer4_Handler:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_mTouch_PortInit:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_mTouch_Init:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ?_CPSx_Read:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ??_CPSx_Read:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ?_main:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ?_Handler:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_xputc:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_xputs:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_Timer6_Init:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?_Timer6_Handler:	
  3001                           ; 2 bytes @ 0x0
  3002                           
  3003  0070                     Buzzer_SetDuty@duty:	
  3004                           ; 2 bytes @ 0x0
  3005                           
  3006                           
  3007                           ; 2 bytes @ 0x0
  3008  0070                     	ds	1
  3009  0071                     ??_I2C_CommonInterrupt:	
  3010                           
  3011                           ; 1 bytes @ 0x1
  3012  0071                     	ds	1
  3013  0072                     ??_Timer6_Handler:	
  3014  0072                     ??_Buzzer_SetDuty:	
  3015                           ; 1 bytes @ 0x2
  3016                           
  3017                           
  3018                           ; 1 bytes @ 0x2
  3019  0072                     	ds	2
  3020  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  3021                           
  3022                           ; 1 bytes @ 0x4
  3023  0074                     	ds	1
  3024  0075                     ??_Buzzer_Handler:	
  3025  0075                     ??_Handler:	
  3026                           ; 1 bytes @ 0x5
  3027                           
  3028                           
  3029                           ; 1 bytes @ 0x5
  3030  0075                     	ds	1
  3031                           
  3032                           	psect	cstackBANK0
  3033  0020                     __pcstackBANK0:	
  3034  0020                     ??_Basic_Init:	
  3035  0020                     ??_Timer6_Init:	
  3036                           ; 1 bytes @ 0x0
  3037                           
  3038  0020                     ??_Buzzer_Init:	
  3039                           ; 1 bytes @ 0x0
  3040                           
  3041  0020                     ?_Buzzer_MiliSecond:	
  3042                           ; 1 bytes @ 0x0
  3043                           
  3044  0020                     ??_I2C1_PinInit:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047  0020                     ?_I2C1_Transmit:	
  3048                           ; 1 bytes @ 0x0
  3049                           
  3050  0020                     ??_I2C2_PinInit:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053  0020                     ?_I2C2_Transmit:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  0020                     ??_LCD_WriteData:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059  0020                     ??_Timer1_Init:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0020                     ??_Timer4_Init:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0020                     ??_mTouch_PortInit:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068  0020                     ?_Timer1_ResultRead:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0020                     ?___wmul:	
  3072                           ; 2 bytes @ 0x0
  3073                           
  3074  0020                     ?_Timer1_SumRead:	
  3075                           ; 2 bytes @ 0x0
  3076                           
  3077  0020                     ?___lldiv:	
  3078                           ; 4 bytes @ 0x0
  3079                           
  3080  0020                     ?___llmod:	
  3081                           ; 4 bytes @ 0x0
  3082                           
  3083  0020                     I2C1_Transmit@pData:	
  3084                           ; 4 bytes @ 0x0
  3085                           
  3086  0020                     I2C2_Transmit@pData:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0020                     Buzzer_MiliSecond@time:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0020                     ___wmul@multiplier:	
  3093                           ; 2 bytes @ 0x0
  3094                           
  3095  0020                     ___lldiv@divisor:	
  3096                           ; 2 bytes @ 0x0
  3097                           
  3098  0020                     ___llmod@divisor:	
  3099                           ; 4 bytes @ 0x0
  3100                           
  3101                           
  3102                           ; 4 bytes @ 0x0
  3103  0020                     	ds	1
  3104  0021                     ?_I2C1_Setting:	
  3105  0021                     ?_I2C2_Setting:	
  3106                           ; 1 bytes @ 0x1
  3107                           
  3108  0021                     ??_mTouch_Init:	
  3109                           ; 1 bytes @ 0x1
  3110                           
  3111  0021                     I2C1_Setting@mode:	
  3112                           ; 1 bytes @ 0x1
  3113                           
  3114  0021                     I2C1_Transmit@size:	
  3115                           ; 1 bytes @ 0x1
  3116                           
  3117  0021                     I2C2_Setting@mode:	
  3118                           ; 1 bytes @ 0x1
  3119                           
  3120  0021                     I2C2_Transmit@size:	
  3121                           ; 1 bytes @ 0x1
  3122                           
  3123                           
  3124                           ; 1 bytes @ 0x1
  3125  0021                     	ds	1
  3126  0022                     ??_mTouch_Read:	
  3127  0022                     ??_Buzzer_MiliSecond:	
  3128                           ; 1 bytes @ 0x2
  3129                           
  3130  0022                     ??_I2C1_Transmit:	
  3131                           ; 1 bytes @ 0x2
  3132                           
  3133  0022                     ??_I2C2_Transmit:	
  3134                           ; 1 bytes @ 0x2
  3135                           
  3136  0022                     ??_Timer1_ResultRead:	
  3137                           ; 1 bytes @ 0x2
  3138                           
  3139  0022                     I2C1_Setting@Speed:	
  3140                           ; 1 bytes @ 0x2
  3141                           
  3142  0022                     I2C2_Setting@Speed:	
  3143                           ; 1 bytes @ 0x2
  3144                           
  3145  0022                     LCD_WriteData@point:	
  3146                           ; 1 bytes @ 0x2
  3147                           
  3148  0022                     ___wmul@multiplicand:	
  3149                           ; 1 bytes @ 0x2
  3150                           
  3151                           
  3152                           ; 2 bytes @ 0x2
  3153  0022                     	ds	1
  3154  0023                     ??_LCD_DisplayClear:	
  3155  0023                     ??_I2C1_Setting:	
  3156                           ; 1 bytes @ 0x3
  3157                           
  3158  0023                     ??_I2C2_Setting:	
  3159                           ; 1 bytes @ 0x3
  3160                           
  3161  0023                     ?_LCD_Put:	
  3162                           ; 1 bytes @ 0x3
  3163                           
  3164  0023                     ??_LCD_CursorHome:	
  3165                           ; 1 bytes @ 0x3
  3166                           
  3167  0023                     LCD_Put@word:	
  3168                           ; 1 bytes @ 0x3
  3169                           
  3170                           
  3171                           ; 1 bytes @ 0x3
  3172  0023                     	ds	1
  3173  0024                     ??_LCD_Init:	
  3174  0024                     ??_LCD_Put:	
  3175                           ; 1 bytes @ 0x4
  3176                           
  3177  0024                     ??_Timer1_SumRead:	
  3178                           ; 1 bytes @ 0x4
  3179                           
  3180  0024                     ??_xputc:	
  3181                           ; 1 bytes @ 0x4
  3182                           
  3183  0024                     ??___wmul:	
  3184                           ; 1 bytes @ 0x4
  3185                           
  3186  0024                     I2C1_Setting@address:	
  3187                           ; 1 bytes @ 0x4
  3188                           
  3189  0024                     I2C1_Transmit@address:	
  3190                           ; 1 bytes @ 0x4
  3191                           
  3192  0024                     I2C2_Setting@address:	
  3193                           ; 1 bytes @ 0x4
  3194                           
  3195  0024                     I2C2_Transmit@address:	
  3196                           ; 1 bytes @ 0x4
  3197                           
  3198  0024                     ___wmul@product:	
  3199                           ; 1 bytes @ 0x4
  3200                           
  3201  0024                     ___lldiv@dividend:	
  3202                           ; 2 bytes @ 0x4
  3203                           
  3204  0024                     ___llmod@dividend:	
  3205                           ; 4 bytes @ 0x4
  3206                           
  3207                           
  3208                           ; 4 bytes @ 0x4
  3209  0024                     	ds	1
  3210  0025                     ?_I2C_Init:	
  3211  0025                     I2C1_Transmit@i:	
  3212                           ; 1 bytes @ 0x5
  3213                           
  3214  0025                     I2C2_Transmit@i:	
  3215                           ; 1 bytes @ 0x5
  3216                           
  3217  0025                     I2C_Init@address:	
  3218                           ; 1 bytes @ 0x5
  3219                           
  3220  0025                     xputc@c:	
  3221                           ; 1 bytes @ 0x5
  3222                           
  3223                           
  3224                           ; 1 bytes @ 0x5
  3225  0025                     	ds	1
  3226  0026                     ??_xputs:	
  3227  0026                     I2C1_Transmit@i_172:	
  3228                           ; 1 bytes @ 0x6
  3229                           
  3230  0026                     I2C2_Transmit@i_316:	
  3231                           ; 1 bytes @ 0x6
  3232                           
  3233  0026                     I2C_Init@mode:	
  3234                           ; 1 bytes @ 0x6
  3235                           
  3236                           
  3237                           ; 1 bytes @ 0x6
  3238  0026                     	ds	1
  3239  0027                     I2C1_Transmit@result:	
  3240  0027                     I2C2_Transmit@result:	
  3241                           ; 1 bytes @ 0x7
  3242                           
  3243  0027                     I2C_Init@Speed:	
  3244                           ; 1 bytes @ 0x7
  3245                           
  3246  0027                     mTouch_Read@chan:	
  3247                           ; 1 bytes @ 0x7
  3248                           
  3249  0027                     xputs@str:	
  3250                           ; 1 bytes @ 0x7
  3251                           
  3252                           
  3253                           ; 1 bytes @ 0x7
  3254  0027                     	ds	1
  3255  0028                     ??_I2C_Init:	
  3256  0028                     ?_I2C_Transmit:	
  3257                           ; 1 bytes @ 0x8
  3258                           
  3259  0028                     ??___lldiv:	
  3260                           ; 1 bytes @ 0x8
  3261                           
  3262  0028                     ??___llmod:	
  3263                           ; 1 bytes @ 0x8
  3264                           
  3265  0028                     I2C_Transmit@address:	
  3266                           ; 1 bytes @ 0x8
  3267                           
  3268                           
  3269                           ; 1 bytes @ 0x8
  3270  0028                     	ds	1
  3271  0029                     I2C_Transmit@pData:	
  3272  0029                     ___llmod@counter:	
  3273                           ; 1 bytes @ 0x9
  3274                           
  3275  0029                     ___lldiv@quotient:	
  3276                           ; 1 bytes @ 0x9
  3277                           
  3278                           
  3279                           ; 4 bytes @ 0x9
  3280  0029                     	ds	1
  3281  002A                     I2C_Init@I2Cx:	
  3282  002A                     I2C_Transmit@size:	
  3283                           ; 1 bytes @ 0xA
  3284                           
  3285                           
  3286                           ; 1 bytes @ 0xA
  3287  002A                     	ds	1
  3288  002B                     ??_I2C_Transmit:	
  3289                           
  3290                           ; 1 bytes @ 0xB
  3291  002B                     	ds	2
  3292  002D                     ___lldiv@counter:	
  3293                           
  3294                           ; 1 bytes @ 0xD
  3295  002D                     	ds	1
  3296  002E                     ?_xvprintf:	
  3297  002E                     I2C_Transmit@I2Cx:	
  3298                           ; 1 bytes @ 0xE
  3299                           
  3300  002E                     xvprintf@fmt:	
  3301                           ; 1 bytes @ 0xE
  3302                           
  3303                           
  3304                           ; 2 bytes @ 0xE
  3305  002E                     	ds	1
  3306  002F                     I2C_Transmit@result:	
  3307                           
  3308                           ; 1 bytes @ 0xF
  3309  002F                     	ds	1
  3310  0030                     ??_DAC_Initialize:	
  3311  0030                     xvprintf@arp:	
  3312                           ; 1 bytes @ 0x10
  3313                           
  3314                           
  3315                           ; 1 bytes @ 0x10
  3316  0030                     	ds	1
  3317  0031                     ??_xvprintf:	
  3318                           
  3319                           ; 1 bytes @ 0x11
  3320  0031                     	ds	4
  3321  0035                     xvprintf@s:	
  3322                           
  3323                           ; 16 bytes @ 0x15
  3324  0035                     	ds	16
  3325  0045                     _xvprintf$763:	
  3326                           
  3327                           ; 4 bytes @ 0x25
  3328  0045                     	ds	4
  3329  0049                     _xvprintf$764:	
  3330                           
  3331                           ; 2 bytes @ 0x29
  3332  0049                     	ds	2
  3333  004B                     _xvprintf$765:	
  3334                           
  3335                           ; 2 bytes @ 0x2B
  3336  004B                     	ds	2
  3337  004D                     xvprintf@p:	
  3338                           
  3339                           ; 1 bytes @ 0x2D
  3340  004D                     	ds	1
  3341  004E                     xvprintf@r:	
  3342                           
  3343                           ; 2 bytes @ 0x2E
  3344  004E                     	ds	2
  3345  0050                     xvprintf@w:	
  3346                           
  3347                           ; 2 bytes @ 0x30
  3348  0050                     	ds	2
  3349  0052                     xvprintf@j:	
  3350                           
  3351                           ; 2 bytes @ 0x32
  3352  0052                     	ds	2
  3353  0054                     xvprintf@v:	
  3354                           
  3355                           ; 4 bytes @ 0x34
  3356  0054                     	ds	4
  3357  0058                     xvprintf@f:	
  3358                           
  3359                           ; 2 bytes @ 0x38
  3360  0058                     	ds	2
  3361  005A                     xvprintf@i:	
  3362                           
  3363                           ; 2 bytes @ 0x3A
  3364  005A                     	ds	2
  3365  005C                     xvprintf@d:	
  3366                           
  3367                           ; 1 bytes @ 0x3C
  3368  005C                     	ds	1
  3369  005D                     xvprintf@c:	
  3370                           
  3371                           ; 1 bytes @ 0x3D
  3372  005D                     	ds	1
  3373  005E                     ?_xprintf:	
  3374  005E                     xprintf@fmt:	
  3375                           ; 1 bytes @ 0x3E
  3376                           
  3377                           
  3378                           ; 2 bytes @ 0x3E
  3379  005E                     	ds	8
  3380  0066                     ??_xprintf:	
  3381                           
  3382                           ; 1 bytes @ 0x46
  3383  0066                     	ds	1
  3384  0067                     xprintf@arp:	
  3385                           
  3386                           ; 1 bytes @ 0x47
  3387  0067                     	ds	1
  3388                           
  3389                           	psect	maintext
  3390  052B                     __pmaintext:	
  3391 ;;
  3392 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3393 ;;
  3394 ;; *************** function _main *****************
  3395 ;; Defined at:
  3396 ;;		line 18 in file "main.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      char 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : B1F/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3410 ;;      Params:         0       0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0
  3412 ;;      Temps:          0       0       1       0       0       0
  3413 ;;      Totals:         0       0       1       0       0       0
  3414 ;;Total ram usage:        1 bytes
  3415 ;; Hardware stack levels required when called:    9
  3416 ;; This function calls:
  3417 ;;		_Basic_Init
  3418 ;;		_Buzzer_Init
  3419 ;;		_DAC_Initialize
  3420 ;;		_LCD_CursorHome
  3421 ;;		_LCD_Init
  3422 ;;		_Timer1_Init
  3423 ;;		_Timer1_ResultRead
  3424 ;;		_Timer1_SumRead
  3425 ;;		_Timer4_Init
  3426 ;;		_Timer6_Init
  3427 ;;		_mTouch_Init
  3428 ;;		_mTouch_Read
  3429 ;;		_xprintf
  3430 ;; This function is called by:
  3431 ;;		Startup code after reset
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _main
  3437  052B                     _main:	
  3438                           
  3439                           ;main.c: 20: Basic_Init();
  3440                           
  3441                           ;incstack = 0
  3442                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3443  052B  318D  2598  3185   	fcall	_Basic_Init
  3444                           
  3445                           ;main.c: 21: LATA6 = 1;
  3446  052E  0022               	movlb	2	; select bank2
  3447  052F  170C               	bsf	12,6	;volatile
  3448                           
  3449                           ;main.c: 22: Buzzer_Init();
  3450  0530  318E  269A  3185   	fcall	_Buzzer_Init
  3451                           
  3452                           ;main.c: 23: LCD_Init();
  3453  0533  3185  25BA  3185   	fcall	_LCD_Init
  3454                           
  3455                           ;main.c: 24: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  3456  0536  30B2               	movlw	low _LCD_Put
  3457  0537  0020               	movlb	0	; select bank0
  3458  0538  00EA               	movwf	_xfunc_out
  3459  0539  300C               	movlw	high _LCD_Put
  3460  053A  00EB               	movwf	_xfunc_out+1
  3461                           
  3462                           ;main.c: 25: Timer1_Init();
  3463  053B  318E  2636  3185   	fcall	_Timer1_Init
  3464                           
  3465                           ;main.c: 26: TMR1ON = 1;;
  3466  053E  0020               	movlb	0	; select bank0
  3467  053F  1418               	bsf	24,0	;volatile
  3468                           
  3469                           ;main.c: 27: mTouch_Init();
  3470  0540  318D  2570  3185   	fcall	_mTouch_Init
  3471                           
  3472                           ;main.c: 28: Timer4_Init();
  3473  0543  318D  255D  3185   	fcall	_Timer4_Init
  3474                           
  3475                           ;main.c: 29: Timer6_Init();
  3476  0546  318C  24FE  3185   	fcall	_Timer6_Init
  3477                           
  3478                           ;main.c: 30: DAC_Initialize();
  3479  0549  318E  2655  3185   	fcall	_DAC_Initialize
  3480                           
  3481                           ;main.c: 32: mode.ModeNum = 0;
  3482  054C  0020               	movlb	0	; select bank0
  3483  054D  01E9               	clrf	_mode+1
  3484  054E                     l4991:	
  3485                           ;main.c: 34: while(1)
  3486                           
  3487                           
  3488                           ;main.c: 35: {
  3489                           ;main.c: 36: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3490  054E  3002               	movlw	2
  3491  054F  3187  2724  3185   	fcall	_mTouch_Read
  3492  0552  3A00               	xorlw	0
  3493  0553  1903               	skipnz
  3494  0554  2D61               	goto	l4997
  3495  0555  3003               	movlw	3
  3496  0556  0020               	movlb	0	; select bank0
  3497  0557  0269               	subwf	_mode+1,w
  3498  0558  1803               	skipnc
  3499  0559  2D61               	goto	l4997
  3500                           
  3501                           ;main.c: 37: mode.ModeNum++;
  3502  055A  3001               	movlw	1
  3503  055B  0021               	movlb	1	; select bank1
  3504  055C  00DA               	movwf	??_main^(0+128)
  3505  055D  085A               	movf	??_main^(0+128),w
  3506  055E  0020               	movlb	0	; select bank0
  3507  055F  07E9               	addwf	_mode+1,f
  3508  0560  2D6E               	goto	l5003
  3509  0561                     l4997:	
  3510                           
  3511                           ;main.c: 38: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3512  0561  3001               	movlw	1
  3513  0562  3187  2724  3185   	fcall	_mTouch_Read
  3514  0565  3A00               	xorlw	0
  3515  0566  1903               	skipnz
  3516  0567  2D6E               	goto	l5003
  3517  0568  0020               	movlb	0	; select bank0
  3518  0569  0869               	movf	_mode+1,w
  3519  056A  1903               	btfsc	3,2
  3520  056B  2D6E               	goto	l5003
  3521                           
  3522                           ;main.c: 39: mode.ModeNum--;
  3523  056C  3001               	movlw	1
  3524  056D  02E9               	subwf	_mode+1,f
  3525  056E                     l5003:	
  3526                           
  3527                           ;main.c: 41: LCD_CursorHome();
  3528  056E  318D  251B  3185   	fcall	_LCD_CursorHome
  3529                           
  3530                           ;main.c: 42: switch(mode.ModeNum)
  3531  0571  2DAA               	goto	l5015
  3532  0572                     l5005:	
  3533                           ;main.c: 43: {
  3534                           ;main.c: 44: case COUNT:
  3535                           
  3536                           
  3537                           ;main.c: 45: xprintf("%d %d",Timer1_ResultRead(),Timer1_SumRead());
  3538  0572  30A9               	movlw	low (STR_1| (0+32768))
  3539  0573  0020               	movlb	0	; select bank0
  3540  0574  00DE               	movwf	xprintf@fmt
  3541  0575  3083               	movlw	high (STR_1| (0+32768))
  3542  0576  00DF               	movwf	xprintf@fmt+1
  3543  0577  318C  24B9  3185   	fcall	_Timer1_ResultRead
  3544  057A  0020               	movlb	0	; select bank0
  3545  057B  0821               	movf	?_Timer1_ResultRead+1,w
  3546  057C  00E1               	movwf	?_xprintf+3
  3547  057D  0820               	movf	?_Timer1_ResultRead,w
  3548  057E  00E0               	movwf	?_xprintf+2
  3549  057F  318D  254C  3185   	fcall	_Timer1_SumRead
  3550  0582  0020               	movlb	0	; select bank0
  3551  0583  0823               	movf	?_Timer1_SumRead+3,w
  3552  0584  00E5               	movwf	?_xprintf+7
  3553  0585  0822               	movf	?_Timer1_SumRead+2,w
  3554  0586  00E4               	movwf	?_xprintf+6
  3555  0587  0821               	movf	?_Timer1_SumRead+1,w
  3556  0588  00E3               	movwf	?_xprintf+5
  3557  0589  0820               	movf	?_Timer1_SumRead,w
  3558  058A  00E2               	movwf	?_xprintf+4
  3559  058B  3187  27F0  3185   	fcall	_xprintf
  3560                           
  3561                           ;main.c: 46: break;
  3562  058E  2D4E               	goto	l4991
  3563  058F                     l5007:	
  3564                           ;main.c: 47: case SELECTFUNC:
  3565                           
  3566                           
  3567                           ;main.c: 48: xprintf("SELECTFUNC");
  3568  058F  30AC               	movlw	low (STR_2| (0+32768))
  3569  0590  0020               	movlb	0	; select bank0
  3570  0591  00DE               	movwf	xprintf@fmt
  3571  0592  3082               	movlw	high (STR_2| (0+32768))
  3572  0593  00DF               	movwf	xprintf@fmt+1
  3573  0594  3187  27F0  3185   	fcall	_xprintf
  3574                           
  3575                           ;main.c: 49: break;
  3576  0597  2D4E               	goto	l4991
  3577  0598                     l5009:	
  3578                           ;main.c: 50: case ADJGAIN:
  3579                           
  3580                           
  3581                           ;main.c: 51: xprintf("ADJGAIN");
  3582  0598  30D9               	movlw	low (STR_3| (0+32768))
  3583  0599  0020               	movlb	0	; select bank0
  3584  059A  00DE               	movwf	xprintf@fmt
  3585  059B  3082               	movlw	high (STR_3| (0+32768))
  3586  059C  00DF               	movwf	xprintf@fmt+1
  3587  059D  3187  27F0  3185   	fcall	_xprintf
  3588                           
  3589                           ;main.c: 52: break;
  3590  05A0  2D4E               	goto	l4991
  3591  05A1                     l5011:	
  3592                           ;main.c: 53: case PMTDEVICE:
  3593                           
  3594                           
  3595                           ;main.c: 54: xprintf("PMTDEVICE");
  3596  05A1  30B7               	movlw	low (STR_4| (0+32768))
  3597  05A2  0020               	movlb	0	; select bank0
  3598  05A3  00DE               	movwf	xprintf@fmt
  3599  05A4  3082               	movlw	high (STR_4| (0+32768))
  3600  05A5  00DF               	movwf	xprintf@fmt+1
  3601  05A6  3187  27F0  3185   	fcall	_xprintf
  3602                           
  3603                           ;main.c: 56: }
  3604                           
  3605                           ;main.c: 55: break;
  3606  05A9  2D4E               	goto	l4991
  3607  05AA                     l5015:	
  3608  05AA  0020               	movlb	0	; select bank0
  3609  05AB  0869               	movf	_mode+1,w
  3610                           
  3611                           ; Switch size 1, requested type "space"
  3612                           ; Number of cases is 4, Range of values is 0 to 3
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte           13     7 (average)
  3616                           ; direct_byte           14     6 (fixed)
  3617                           ; jumptable            260     6 (fixed)
  3618                           ;	Chosen strategy is simple_byte
  3619  05AC  3A00               	xorlw	0	; case 0
  3620  05AD  1903               	skipnz
  3621  05AE  2D72               	goto	l5005
  3622  05AF  3A01               	xorlw	1	; case 1
  3623  05B0  1903               	skipnz
  3624  05B1  2D8F               	goto	l5007
  3625  05B2  3A03               	xorlw	3	; case 2
  3626  05B3  1903               	skipnz
  3627  05B4  2D98               	goto	l5009
  3628  05B5  3A01               	xorlw	1	; case 3
  3629  05B6  1903               	skipnz
  3630  05B7  2DA1               	goto	l5011
  3631  05B8  2D4E               	goto	l4991
  3632  05B9  2D4E               	goto	l4991
  3633  05BA                     __end_of_main:	
  3634                           ;main.c: 57: }
  3635                           ;main.c: 59: return 0;
  3636                           ;	Return value of _main is never used
  3637                           
  3638                           
  3639                           	psect	text1
  3640  07F0                     __ptext1:	
  3641 ;; *************** function _xprintf *****************
  3642 ;; Defined at:
  3643 ;;		line 165 in file "xprintf.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3646 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3647 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(6), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  arp             1   71[BANK0 ] PTR void [1]
  3650 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3660 ;;      Params:         0       8       0       0       0       0
  3661 ;;      Locals:         0       1       0       0       0       0
  3662 ;;      Temps:          0       1       0       0       0       0
  3663 ;;      Totals:         0      10       0       0       0       0
  3664 ;;Total ram usage:       10 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    8
  3667 ;; This function calls:
  3668 ;;		_xvprintf
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;;		_put_dump
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _xprintf
  3677  07F0                     _xprintf:	
  3678                           
  3679                           ;xprintf.c: 170: va_list arp;
  3680                           ;xprintf.c: 173: *arp = __va_start();
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3684  07F0  3060               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  3685  07F1  0020               	movlb	0	; select bank0
  3686  07F2  00E6               	movwf	??_xprintf
  3687  07F3  0866               	movf	??_xprintf,w
  3688  07F4  00E7               	movwf	xprintf@arp
  3689                           
  3690                           ;xprintf.c: 174: xvprintf(fmt, arp);
  3691  07F5  085F               	movf	xprintf@fmt+1,w
  3692  07F6  00AF               	movwf	xvprintf@fmt+1
  3693  07F7  085E               	movf	xprintf@fmt,w
  3694  07F8  00AE               	movwf	xvprintf@fmt
  3695  07F9  3067               	movlw	(low (xprintf@arp| 0))& (0+255)
  3696  07FA  00E6               	movwf	??_xprintf
  3697  07FB  0866               	movf	??_xprintf,w
  3698  07FC  00B0               	movwf	xvprintf@arp
  3699  07FD  3180  2064         	fcall	_xvprintf
  3700  07FF  0008               	return
  3701  0800                     __end_of_xprintf:	
  3702                           
  3703                           	psect	text2
  3704  0064                     __ptext2:	
  3705 ;; *************** function _xvprintf *****************
  3706 ;; Defined at:
  3707 ;;		line 88 in file "xprintf.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3710 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3711 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(6), 
  3712 ;;  arp             1   16[BANK0 ] PTR PTR void 
  3713 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  s              16   21[BANK0 ] unsigned char [16]
  3716 ;;  v               4   52[BANK0 ] unsigned long 
  3717 ;;  i               2   58[BANK0 ] unsigned int 
  3718 ;;  f               2   56[BANK0 ] unsigned int 
  3719 ;;  j               2   50[BANK0 ] unsigned int 
  3720 ;;  w               2   48[BANK0 ] unsigned int 
  3721 ;;  r               2   46[BANK0 ] unsigned int 
  3722 ;;  c               1   61[BANK0 ] unsigned char 
  3723 ;;  d               1   60[BANK0 ] unsigned char 
  3724 ;;  p               1   45[BANK0 ] PTR unsigned char 
  3725 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3735 ;;      Params:         0       3       0       0       0       0
  3736 ;;      Locals:         0      41       0       0       0       0
  3737 ;;      Temps:          0       4       0       0       0       0
  3738 ;;      Totals:         0      48       0       0       0       0
  3739 ;;Total ram usage:       48 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    7
  3742 ;; This function calls:
  3743 ;;		___lldiv
  3744 ;;		___llmod
  3745 ;;		___wmul
  3746 ;;		_xputc
  3747 ;;		_xputs
  3748 ;; This function is called by:
  3749 ;;		_xprintf
  3750 ;;		_xsprintf
  3751 ;;		_xfprintf
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _xvprintf
  3757  0064                     _xvprintf:	
  3758  0064                     l670:	
  3759                           ;incstack = 0
  3760                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3761                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  3762                           ;xprintf.c: 94: unsigned long v;
  3763                           ;xprintf.c: 95: char s[16], c, d, *p;
  3764                           ;xprintf.c: 98: for (;;) {
  3765                           
  3766                           
  3767                           ;xprintf.c: 99: c = *fmt++;
  3768  0064  0020               	movlb	0	; select bank0
  3769  0065  082E               	movf	xvprintf@fmt,w
  3770  0066  0084               	movwf	4
  3771  0067  082F               	movf	xvprintf@fmt+1,w
  3772  0068  0085               	movwf	5
  3773  0069  0800               	movf	0,w	;code access
  3774  006A  00B1               	movwf	??_xvprintf
  3775  006B  0831               	movf	??_xvprintf,w
  3776  006C  00DD               	movwf	xvprintf@c
  3777  006D  3001               	movlw	1
  3778  006E  07AE               	addwf	xvprintf@fmt,f
  3779  006F  3000               	movlw	0
  3780  0070  3DAF               	addwfc	xvprintf@fmt+1,f
  3781                           
  3782                           ;xprintf.c: 100: if (!c) break;
  3783  0071  085D               	movf	xvprintf@c,w
  3784  0072  1903               	btfsc	3,2
  3785  0073  0008               	return
  3786                           
  3787                           ;xprintf.c: 101: if (c != '%') {
  3788  0074  3025               	movlw	37
  3789  0075  065D               	xorwf	xvprintf@c,w
  3790  0076  1903               	btfsc	3,2
  3791  0077  287D               	goto	l4775
  3792                           
  3793                           ;xprintf.c: 102: xputc(c); continue;
  3794  0078  085D               	movf	xvprintf@c,w
  3795  0079  318F  2717  3180   	fcall	_xputc
  3796  007C  2864               	goto	l670
  3797  007D                     l4775:	
  3798                           
  3799                           ;xprintf.c: 103: }
  3800                           ;xprintf.c: 104: f = 0;
  3801  007D  0020               	movlb	0	; select bank0
  3802  007E  01D8               	clrf	xvprintf@f
  3803  007F  01D9               	clrf	xvprintf@f+1
  3804                           
  3805                           ;xprintf.c: 105: c = *fmt++;
  3806  0080  082E               	movf	xvprintf@fmt,w
  3807  0081  0084               	movwf	4
  3808  0082  082F               	movf	xvprintf@fmt+1,w
  3809  0083  0085               	movwf	5
  3810  0084  0800               	movf	0,w	;code access
  3811  0085  00B1               	movwf	??_xvprintf
  3812  0086  0831               	movf	??_xvprintf,w
  3813  0087  00DD               	movwf	xvprintf@c
  3814  0088  3001               	movlw	1
  3815  0089  07AE               	addwf	xvprintf@fmt,f
  3816  008A  3000               	movlw	0
  3817  008B  3DAF               	addwfc	xvprintf@fmt+1,f
  3818                           
  3819                           ;xprintf.c: 106: if (c == '0') {
  3820  008C  3030               	movlw	48
  3821  008D  065D               	xorwf	xvprintf@c,w
  3822  008E  1D03               	btfss	3,2
  3823  008F  2892               	goto	l4789
  3824                           
  3825                           ;xprintf.c: 107: f = 1; c = *fmt++;
  3826  0090  3001               	movlw	1
  3827  0091  2897               	goto	L6
  3828  0092                     l4789:	
  3829                           ;xprintf.c: 108: } else {
  3830                           
  3831                           
  3832                           ;xprintf.c: 109: if (c == '-') {
  3833  0092  302D               	movlw	45
  3834  0093  065D               	xorwf	xvprintf@c,w
  3835  0094  1D03               	btfss	3,2
  3836  0095  28A6               	goto	l4797
  3837                           
  3838                           ;xprintf.c: 110: f = 2; c = *fmt++;
  3839  0096  3002               	movlw	2
  3840  0097                     L6:	
  3841  0097  00D8               	movwf	xvprintf@f
  3842  0098  3000               	movlw	0
  3843  0099  00D9               	movwf	xvprintf@f+1
  3844  009A  082E               	movf	xvprintf@fmt,w
  3845  009B  0084               	movwf	4
  3846  009C  082F               	movf	xvprintf@fmt+1,w
  3847  009D  0085               	movwf	5
  3848  009E  0800               	movf	0,w	;code access
  3849  009F  00B1               	movwf	??_xvprintf
  3850  00A0  0831               	movf	??_xvprintf,w
  3851  00A1  00DD               	movwf	xvprintf@c
  3852  00A2  3001               	movlw	1
  3853  00A3  07AE               	addwf	xvprintf@fmt,f
  3854  00A4  3000               	movlw	0
  3855  00A5  3DAF               	addwfc	xvprintf@fmt+1,f
  3856  00A6                     l4797:	
  3857                           
  3858                           ;xprintf.c: 111: }
  3859                           ;xprintf.c: 112: }
  3860                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  3861  00A6  01D0               	clrf	xvprintf@w
  3862  00A7  01D1               	clrf	xvprintf@w+1
  3863  00A8  28D0               	goto	l4805
  3864  00A9                     l4799:	
  3865                           
  3866                           ;xprintf.c: 114: w = w * 10 + c - '0';
  3867  00A9  085D               	movf	xvprintf@c,w
  3868  00AA  00B1               	movwf	??_xvprintf
  3869  00AB  01B2               	clrf	??_xvprintf+1
  3870  00AC  0851               	movf	xvprintf@w+1,w
  3871  00AD  00A1               	movwf	___wmul@multiplier+1
  3872  00AE  0850               	movf	xvprintf@w,w
  3873  00AF  00A0               	movwf	___wmul@multiplier
  3874  00B0  300A               	movlw	10
  3875  00B1  00A2               	movwf	___wmul@multiplicand
  3876  00B2  3000               	movlw	0
  3877  00B3  00A3               	movwf	___wmul@multiplicand+1
  3878  00B4  318D  25DE  3180   	fcall	___wmul
  3879  00B7  0020               	movlb	0	; select bank0
  3880  00B8  0831               	movf	??_xvprintf,w
  3881  00B9  0720               	addwf	?___wmul,w
  3882  00BA  00B3               	movwf	??_xvprintf+2
  3883  00BB  0832               	movf	??_xvprintf+1,w
  3884  00BC  3D21               	addwfc	?___wmul+1,w
  3885  00BD  00B4               	movwf	??_xvprintf+3
  3886  00BE  0833               	movf	??_xvprintf+2,w
  3887  00BF  3ED0               	addlw	208
  3888  00C0  00D0               	movwf	xvprintf@w
  3889  00C1  30FF               	movlw	255
  3890  00C2  3D34               	addwfc	??_xvprintf+3,w
  3891  00C3  00D1               	movwf	xvprintf@w+1
  3892  00C4  082E               	movf	xvprintf@fmt,w
  3893  00C5  0084               	movwf	4
  3894  00C6  082F               	movf	xvprintf@fmt+1,w
  3895  00C7  0085               	movwf	5
  3896  00C8  0800               	movf	0,w	;code access
  3897  00C9  00B1               	movwf	??_xvprintf
  3898  00CA  0831               	movf	??_xvprintf,w
  3899  00CB  00DD               	movwf	xvprintf@c
  3900  00CC  3001               	movlw	1
  3901  00CD  07AE               	addwf	xvprintf@fmt,f
  3902  00CE  3000               	movlw	0
  3903  00CF  3DAF               	addwfc	xvprintf@fmt+1,f
  3904  00D0                     l4805:	
  3905  00D0  3030               	movlw	48
  3906  00D1  025D               	subwf	xvprintf@c,w
  3907  00D2  1C03               	skipc
  3908  00D3  28D8               	goto	l4809
  3909  00D4  303A               	movlw	58
  3910  00D5  025D               	subwf	xvprintf@c,w
  3911  00D6  1C03               	skipc
  3912  00D7  28A9               	goto	l4799
  3913  00D8                     l4809:	
  3914                           
  3915                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  3916  00D8  306C               	movlw	108
  3917  00D9  065D               	xorwf	xvprintf@c,w
  3918  00DA  1903               	btfsc	3,2
  3919  00DB  28E0               	goto	l685
  3920  00DC  304C               	movlw	76
  3921  00DD  065D               	xorwf	xvprintf@c,w
  3922  00DE  1D03               	btfss	3,2
  3923  00DF  28ED               	goto	l4817
  3924  00E0                     l685:	
  3925                           
  3926                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3927  00E0  1558               	bsf	xvprintf@f,2
  3928  00E1  082E               	movf	xvprintf@fmt,w
  3929  00E2  0084               	movwf	4
  3930  00E3  082F               	movf	xvprintf@fmt+1,w
  3931  00E4  0085               	movwf	5
  3932  00E5  0800               	movf	0,w	;code access
  3933  00E6  00B1               	movwf	??_xvprintf
  3934  00E7  0831               	movf	??_xvprintf,w
  3935  00E8  00DD               	movwf	xvprintf@c
  3936  00E9  3001               	movlw	1
  3937  00EA  07AE               	addwf	xvprintf@fmt,f
  3938  00EB  3000               	movlw	0
  3939  00EC  3DAF               	addwfc	xvprintf@fmt+1,f
  3940  00ED                     l4817:	
  3941                           
  3942                           ;xprintf.c: 117: }
  3943                           ;xprintf.c: 118: if (!c) break;
  3944  00ED  085D               	movf	xvprintf@c,w
  3945  00EE  1903               	btfsc	3,2
  3946  00EF  0008               	return
  3947                           
  3948                           ;xprintf.c: 119: d = c;
  3949  00F0  085D               	movf	xvprintf@c,w
  3950  00F1  00B1               	movwf	??_xvprintf
  3951  00F2  0831               	movf	??_xvprintf,w
  3952  00F3  00DC               	movwf	xvprintf@d
  3953                           
  3954                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3955  00F4  3061               	movlw	97
  3956  00F5  025C               	subwf	xvprintf@d,w
  3957  00F6  1C03               	skipc
  3958  00F7  2963               	goto	l4859
  3959  00F8  3020               	movlw	32
  3960  00F9  02DC               	subwf	xvprintf@d,f
  3961                           
  3962                           ;xprintf.c: 121: switch (d) {
  3963  00FA  2963               	goto	l4859
  3964  00FB                     l4825:	
  3965                           ;xprintf.c: 122: case 'S' :
  3966                           
  3967                           
  3968                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3969  00FB  0830               	movf	xvprintf@arp,w
  3970  00FC  0086               	movwf	6
  3971  00FD  0187               	clrf	7
  3972  00FE  3F40               	moviw [0]fsr1
  3973  00FF  0084               	movwf	4
  3974  0100  0185               	clrf	5
  3975  0101  0A81               	incf	1,f
  3976  0102  0800               	movf	0,w
  3977  0103  00B1               	movwf	??_xvprintf
  3978  0104  0831               	movf	??_xvprintf,w
  3979  0105  00CD               	movwf	xvprintf@p
  3980                           
  3981                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3982  0106  01D2               	clrf	xvprintf@j
  3983  0107  01D3               	clrf	xvprintf@j+1
  3984  0108                     l4831:	
  3985  0108  0852               	movf	xvprintf@j,w
  3986  0109  074D               	addwf	xvprintf@p,w
  3987  010A  00B1               	movwf	??_xvprintf
  3988  010B  0831               	movf	??_xvprintf,w
  3989  010C  0086               	movwf	6
  3990  010D  0187               	clrf	7
  3991  010E  0801               	movf	1,w
  3992  010F  1903               	btfsc	3,2
  3993  0110  291A               	goto	l4835
  3994  0111  3001               	movlw	1
  3995  0112  07D2               	addwf	xvprintf@j,f
  3996  0113  3000               	movlw	0
  3997  0114  3DD3               	addwfc	xvprintf@j+1,f
  3998  0115  2908               	goto	l4831
  3999  0116                     l4833:	
  4000                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  4001                           
  4002  0116  3020               	movlw	32
  4003  0117  318F  2717  3180   	fcall	_xputc
  4004  011A                     l4835:	
  4005  011A  0020               	movlb	0	; select bank0
  4006  011B  18D8               	btfsc	xvprintf@f,1
  4007  011C  292C               	goto	l4839
  4008  011D  0853               	movf	xvprintf@j+1,w
  4009  011E  00B2               	movwf	??_xvprintf+1
  4010  011F  0852               	movf	xvprintf@j,w
  4011  0120  00B1               	movwf	??_xvprintf
  4012  0121  0AD2               	incf	xvprintf@j,f
  4013  0122  1903               	skipnz
  4014  0123  0AD3               	incf	xvprintf@j+1,f
  4015  0124  0851               	movf	xvprintf@w+1,w
  4016  0125  0232               	subwf	??_xvprintf+1,w
  4017  0126  1D03               	skipz
  4018  0127  292A               	goto	u4745
  4019  0128  0850               	movf	xvprintf@w,w
  4020  0129  0231               	subwf	??_xvprintf,w
  4021  012A                     u4745:	
  4022  012A  1C03               	skipc
  4023  012B  2916               	goto	l4833
  4024  012C                     l4839:	
  4025                           
  4026                           ;xprintf.c: 126: xputs(p);
  4027  012C  084D               	movf	xvprintf@p,w
  4028  012D  318D  25AD  3180   	fcall	_xputs
  4029  0130                     l4843:	
  4030                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  4031                           
  4032  0130  0020               	movlb	0	; select bank0
  4033  0131  0853               	movf	xvprintf@j+1,w
  4034  0132  00B2               	movwf	??_xvprintf+1
  4035  0133  0852               	movf	xvprintf@j,w
  4036  0134  00B1               	movwf	??_xvprintf
  4037  0135  0AD2               	incf	xvprintf@j,f
  4038  0136  1903               	skipnz
  4039  0137  0AD3               	incf	xvprintf@j+1,f
  4040  0138  0851               	movf	xvprintf@w+1,w
  4041  0139  0232               	subwf	??_xvprintf+1,w
  4042  013A  1D03               	skipz
  4043  013B  293E               	goto	u4755
  4044  013C  0850               	movf	xvprintf@w,w
  4045  013D  0231               	subwf	??_xvprintf,w
  4046  013E                     u4755:	
  4047  013E  1803               	btfsc	3,0
  4048  013F  2864               	goto	l670
  4049  0140  3020               	movlw	32
  4050  0141  318F  2717  3180   	fcall	_xputc
  4051  0144  2930               	goto	l4843
  4052  0145                     l4845:	
  4053                           ;xprintf.c: 129: case 'C' :
  4054                           
  4055                           ;xprintf.c: 128: continue;
  4056                           
  4057                           
  4058                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  4059  0145  0830               	movf	xvprintf@arp,w
  4060  0146  0086               	movwf	6
  4061  0147  0187               	clrf	7
  4062  0148  0801               	movf	1,w
  4063  0149  0084               	movwf	4
  4064  014A  0185               	clrf	5
  4065  014B  3002               	movlw	2
  4066  014C  0781               	addwf	1,f
  4067  014D  0800               	movf	0,w
  4068  014E  318F  2717  3180   	fcall	_xputc
  4069  0151  2864               	goto	l670
  4070  0152                     l4847:	
  4071                           ;xprintf.c: 131: case 'B' :
  4072                           
  4073                           
  4074                           ;xprintf.c: 132: r = 2; break;
  4075  0152  3002               	movlw	2
  4076  0153  0020               	movlb	0	; select bank0
  4077  0154  295A               	goto	L3
  4078  0155                     l4849:	
  4079                           ;xprintf.c: 133: case 'O' :
  4080                           
  4081                           
  4082                           ;xprintf.c: 134: r = 8; break;
  4083  0155  3008               	movlw	8
  4084  0156  295A               	goto	L3
  4085  0157                     l4851:	
  4086                           ;xprintf.c: 135: case 'D' :
  4087                           
  4088                           
  4089                           ;xprintf.c: 136: case 'U' :
  4090                           ;xprintf.c: 137: r = 10; break;
  4091  0157  300A               	movlw	10
  4092  0158  295A               	goto	L3
  4093  0159                     l4853:	
  4094                           ;xprintf.c: 138: case 'X' :
  4095                           
  4096                           
  4097                           ;xprintf.c: 139: r = 16; break;
  4098  0159  3010               	movlw	16
  4099  015A                     L3:	
  4100  015A  00CE               	movwf	xvprintf@r
  4101  015B  3000               	movlw	0
  4102  015C  00CF               	movwf	xvprintf@r+1
  4103  015D  297B               	goto	l703
  4104  015E                     l4855:	
  4105                           ;xprintf.c: 140: default:
  4106                           
  4107                           
  4108                           ;xprintf.c: 141: xputc(c); continue;
  4109  015E  085D               	movf	xvprintf@c,w
  4110  015F  318F  2717  3180   	fcall	_xputc
  4111  0162  2864               	goto	l670
  4112  0163                     l4859:	
  4113                           ;xprintf.c: 142: }
  4114                           
  4115  0163  0020               	movlb	0	; select bank0
  4116  0164  085C               	movf	xvprintf@d,w
  4117                           
  4118                           ; Switch size 1, requested type "space"
  4119                           ; Number of cases is 7, Range of values is 66 to 88
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte           22    12 (average)
  4123                           ; direct_byte           55     9 (fixed)
  4124                           ; jumptable            263     9 (fixed)
  4125                           ;	Chosen strategy is simple_byte
  4126  0165  3A42               	xorlw	66	; case 66
  4127  0166  1903               	skipnz
  4128  0167  2952               	goto	l4847
  4129  0168  3A01               	xorlw	1	; case 67
  4130  0169  1903               	skipnz
  4131  016A  2945               	goto	l4845
  4132  016B  3A07               	xorlw	7	; case 68
  4133  016C  1903               	skipnz
  4134  016D  2957               	goto	l4851
  4135  016E  3A0B               	xorlw	11	; case 79
  4136  016F  1903               	skipnz
  4137  0170  2955               	goto	l4849
  4138  0171  3A1C               	xorlw	28	; case 83
  4139  0172  1903               	skipnz
  4140  0173  28FB               	goto	l4825
  4141  0174  3A06               	xorlw	6	; case 85
  4142  0175  1903               	skipnz
  4143  0176  2957               	goto	l4851
  4144  0177  3A0D               	xorlw	13	; case 88
  4145  0178  1903               	skipnz
  4146  0179  2959               	goto	l4853
  4147  017A  295E               	goto	l4855
  4148  017B                     l703:	
  4149                           
  4150                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  4151  017B  0020               	movlb	0	; select bank0
  4152  017C  1958               	btfsc	xvprintf@f,2
  4153  017D  29B3               	goto	l4869
  4154  017E  3044               	movlw	68
  4155  017F  065C               	xorwf	xvprintf@d,w
  4156  0180  1903               	btfsc	3,2
  4157  0181  2995               	goto	l4865
  4158  0182  0830               	movf	xvprintf@arp,w
  4159  0183  0086               	movwf	6
  4160  0184  0187               	clrf	7
  4161  0185  0801               	movf	1,w
  4162  0186  0084               	movwf	4
  4163  0187  0185               	clrf	5
  4164  0188  3002               	movlw	2
  4165  0189  0781               	addwf	1,f
  4166  018A  3F00               	moviw [0]fsr0
  4167  018B  00B1               	movwf	??_xvprintf
  4168  018C  3F01               	moviw [1]fsr0
  4169  018D  00B2               	movwf	??_xvprintf+1
  4170  018E  0831               	movf	??_xvprintf,w
  4171  018F  00C5               	movwf	_xvprintf$763
  4172  0190  0832               	movf	??_xvprintf+1,w
  4173  0191  00C6               	movwf	_xvprintf$763+1
  4174  0192  01C7               	clrf	_xvprintf$763+2
  4175  0193  01C8               	clrf	_xvprintf$763+3
  4176  0194  29AA               	goto	l4867
  4177  0195                     l4865:	
  4178  0195  0830               	movf	xvprintf@arp,w
  4179  0196  0086               	movwf	6
  4180  0197  0187               	clrf	7
  4181  0198  0801               	movf	1,w
  4182  0199  0084               	movwf	4
  4183  019A  0185               	clrf	5
  4184  019B  3002               	movlw	2
  4185  019C  0781               	addwf	1,f
  4186  019D  3F00               	moviw [0]fsr0
  4187  019E  00B1               	movwf	??_xvprintf
  4188  019F  3F01               	moviw [1]fsr0
  4189  01A0  00B2               	movwf	??_xvprintf+1
  4190  01A1  0831               	movf	??_xvprintf,w
  4191  01A2  00C5               	movwf	_xvprintf$763
  4192  01A3  0832               	movf	??_xvprintf+1,w
  4193  01A4  00C6               	movwf	_xvprintf$763+1
  4194  01A5  0D89               	rlf	9,f
  4195  01A6  3B89               	subwfb	9,f
  4196  01A7  0989               	comf	9,f
  4197  01A8  00C7               	movwf	_xvprintf$763+2
  4198  01A9  00C8               	movwf	_xvprintf$763+3
  4199  01AA                     l4867:	
  4200  01AA  0848               	movf	_xvprintf$763+3,w
  4201  01AB  00D7               	movwf	xvprintf@v+3
  4202  01AC  0847               	movf	_xvprintf$763+2,w
  4203  01AD  00D6               	movwf	xvprintf@v+2
  4204  01AE  0846               	movf	_xvprintf$763+1,w
  4205  01AF  00D5               	movwf	xvprintf@v+1
  4206  01B0  0845               	movf	_xvprintf$763,w
  4207  01B1  00D4               	movwf	xvprintf@v
  4208  01B2  29C3               	goto	l4871
  4209  01B3                     l4869:	
  4210  01B3  0830               	movf	xvprintf@arp,w
  4211  01B4  0086               	movwf	6
  4212  01B5  0187               	clrf	7
  4213  01B6  0801               	movf	1,w
  4214  01B7  0084               	movwf	4
  4215  01B8  0185               	clrf	5
  4216  01B9  3004               	movlw	4
  4217  01BA  0781               	addwf	1,f
  4218  01BB  3F00               	moviw [0]fsr0
  4219  01BC  00D4               	movwf	xvprintf@v
  4220  01BD  3F01               	moviw [1]fsr0
  4221  01BE  00D5               	movwf	xvprintf@v+1
  4222  01BF  3F02               	moviw [2]fsr0
  4223  01C0  00D6               	movwf	xvprintf@v+2
  4224  01C1  3F03               	moviw [3]fsr0
  4225  01C2  00D7               	movwf	xvprintf@v+3
  4226  01C3                     l4871:	
  4227                           
  4228                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  4229  01C3  3044               	movlw	68
  4230  01C4  065C               	xorwf	xvprintf@d,w
  4231  01C5  1903               	btfsc	3,2
  4232  01C6  1FD7               	btfss	xvprintf@v+3,7
  4233  01C7  29D4               	goto	l4877
  4234                           
  4235                           ;xprintf.c: 147: v = 0 - v;
  4236  01C8  09D4               	comf	xvprintf@v,f
  4237  01C9  09D5               	comf	xvprintf@v+1,f
  4238  01CA  09D6               	comf	xvprintf@v+2,f
  4239  01CB  09D7               	comf	xvprintf@v+3,f
  4240  01CC  0AD4               	incf	xvprintf@v,f
  4241  01CD  1903               	skipnz
  4242  01CE  0AD5               	incf	xvprintf@v+1,f
  4243  01CF  1903               	skipnz
  4244  01D0  0AD6               	incf	xvprintf@v+2,f
  4245  01D1  1903               	skipnz
  4246  01D2  0AD7               	incf	xvprintf@v+3,f
  4247                           
  4248                           ;xprintf.c: 148: f |= 8;
  4249  01D3  15D8               	bsf	xvprintf@f,3
  4250  01D4                     l4877:	
  4251                           
  4252                           ;xprintf.c: 149: }
  4253                           ;xprintf.c: 150: i = 0;
  4254  01D4  01DA               	clrf	xvprintf@i
  4255  01D5  01DB               	clrf	xvprintf@i+1
  4256  01D6                     l4879:	
  4257                           ;xprintf.c: 151: do {
  4258                           
  4259                           
  4260                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  4261  01D6  084E               	movf	xvprintf@r,w
  4262  01D7  00A0               	movwf	___llmod@divisor
  4263  01D8  084F               	movf	xvprintf@r+1,w
  4264  01D9  00A1               	movwf	___llmod@divisor+1
  4265  01DA  01A2               	clrf	___llmod@divisor+2
  4266  01DB  01A3               	clrf	___llmod@divisor+3
  4267  01DC  0857               	movf	xvprintf@v+3,w
  4268  01DD  00A7               	movwf	___llmod@dividend+3
  4269  01DE  0856               	movf	xvprintf@v+2,w
  4270  01DF  00A6               	movwf	___llmod@dividend+2
  4271  01E0  0855               	movf	xvprintf@v+1,w
  4272  01E1  00A5               	movwf	___llmod@dividend+1
  4273  01E2  0854               	movf	xvprintf@v,w
  4274  01E3  00A4               	movwf	___llmod@dividend
  4275  01E4  318F  27BD  3180   	fcall	___llmod
  4276  01E7  0020               	movlb	0	; select bank0
  4277  01E8  0820               	movf	?___llmod,w
  4278  01E9  00B1               	movwf	??_xvprintf
  4279  01EA  0831               	movf	??_xvprintf,w
  4280  01EB  00DC               	movwf	xvprintf@d
  4281  01EC  084E               	movf	xvprintf@r,w
  4282  01ED  00A0               	movwf	___lldiv@divisor
  4283  01EE  084F               	movf	xvprintf@r+1,w
  4284  01EF  00A1               	movwf	___lldiv@divisor+1
  4285  01F0  01A2               	clrf	___lldiv@divisor+2
  4286  01F1  01A3               	clrf	___lldiv@divisor+3
  4287  01F2  0857               	movf	xvprintf@v+3,w
  4288  01F3  00A7               	movwf	___lldiv@dividend+3
  4289  01F4  0856               	movf	xvprintf@v+2,w
  4290  01F5  00A6               	movwf	___lldiv@dividend+2
  4291  01F6  0855               	movf	xvprintf@v+1,w
  4292  01F7  00A5               	movwf	___lldiv@dividend+1
  4293  01F8  0854               	movf	xvprintf@v,w
  4294  01F9  00A4               	movwf	___lldiv@dividend
  4295  01FA  3186  26D1  3180   	fcall	___lldiv
  4296  01FD  0020               	movlb	0	; select bank0
  4297  01FE  0823               	movf	?___lldiv+3,w
  4298  01FF  00D7               	movwf	xvprintf@v+3
  4299  0200  0822               	movf	?___lldiv+2,w
  4300  0201  00D6               	movwf	xvprintf@v+2
  4301  0202  0821               	movf	?___lldiv+1,w
  4302  0203  00D5               	movwf	xvprintf@v+1
  4303  0204  0820               	movf	?___lldiv,w
  4304  0205  00D4               	movwf	xvprintf@v
  4305                           
  4306                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  4307  0206  300A               	movlw	10
  4308  0207  025C               	subwf	xvprintf@d,w
  4309  0208  1C03               	skipc
  4310  0209  2A18               	goto	l4893
  4311  020A  3078               	movlw	120
  4312  020B  065D               	xorwf	xvprintf@c,w
  4313  020C  1903               	btfsc	3,2
  4314  020D  2A10               	goto	l4889
  4315  020E  3007               	movlw	7
  4316  020F  2A11               	goto	L4
  4317  0210                     l4889:	
  4318  0210  3027               	movlw	39
  4319  0211                     L4:	
  4320  0211  00C9               	movwf	_xvprintf$764
  4321  0212  3000               	movlw	0
  4322  0213  00CA               	movwf	_xvprintf$764+1
  4323  0214  0849               	movf	_xvprintf$764,w
  4324  0215  00B1               	movwf	??_xvprintf
  4325  0216  0831               	movf	??_xvprintf,w
  4326  0217  07DC               	addwf	xvprintf@d,f
  4327  0218                     l4893:	
  4328                           
  4329                           ;xprintf.c: 154: s[i++] = d + '0';
  4330  0218  085C               	movf	xvprintf@d,w
  4331  0219  3E30               	addlw	48
  4332  021A  00B1               	movwf	??_xvprintf
  4333  021B  085A               	movf	xvprintf@i,w
  4334  021C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4335  021D  0086               	movwf	6
  4336  021E  0187               	clrf	7
  4337  021F  0831               	movf	??_xvprintf,w
  4338  0220  0081               	movwf	1
  4339  0221  3001               	movlw	1
  4340  0222  07DA               	addwf	xvprintf@i,f
  4341  0223  3000               	movlw	0
  4342  0224  3DDB               	addwfc	xvprintf@i+1,f
  4343                           
  4344                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  4345  0225  0857               	movf	xvprintf@v+3,w
  4346  0226  0456               	iorwf	xvprintf@v+2,w
  4347  0227  0455               	iorwf	xvprintf@v+1,w
  4348  0228  0454               	iorwf	xvprintf@v,w
  4349  0229  1903               	skipnz
  4350  022A  2A32               	goto	l726
  4351  022B  3000               	movlw	0
  4352  022C  025B               	subwf	xvprintf@i+1,w
  4353  022D  3010               	movlw	16
  4354  022E  1903               	skipnz
  4355  022F  025A               	subwf	xvprintf@i,w
  4356  0230  1C03               	skipc
  4357  0231  29D6               	goto	l4879
  4358  0232                     l726:	
  4359                           
  4360                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  4361  0232  1DD8               	btfss	xvprintf@f,3
  4362  0233  2A40               	goto	l4905
  4363  0234  302D               	movlw	45
  4364  0235  00B1               	movwf	??_xvprintf
  4365  0236  085A               	movf	xvprintf@i,w
  4366  0237  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4367  0238  0086               	movwf	6
  4368  0239  0187               	clrf	7
  4369  023A  0831               	movf	??_xvprintf,w
  4370  023B  0081               	movwf	1
  4371  023C  3001               	movlw	1
  4372  023D  07DA               	addwf	xvprintf@i,f
  4373  023E  3000               	movlw	0
  4374  023F  3DDB               	addwfc	xvprintf@i+1,f
  4375  0240                     l4905:	
  4376                           
  4377                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  4378  0240  085B               	movf	xvprintf@i+1,w
  4379  0241  00D3               	movwf	xvprintf@j+1
  4380  0242  085A               	movf	xvprintf@i,w
  4381  0243  00D2               	movwf	xvprintf@j
  4382  0244  1858               	btfsc	xvprintf@f,0
  4383  0245  2A48               	goto	l4911
  4384  0246  3020               	movlw	32
  4385  0247  2A49               	goto	L5
  4386  0248                     l4911:	
  4387  0248  3030               	movlw	48
  4388  0249                     L5:	
  4389  0249  00CB               	movwf	_xvprintf$765
  4390  024A  3000               	movlw	0
  4391  024B  00CC               	movwf	_xvprintf$765+1
  4392  024C  084B               	movf	_xvprintf$765,w
  4393  024D  00B1               	movwf	??_xvprintf
  4394  024E  0831               	movf	??_xvprintf,w
  4395  024F  00DC               	movwf	xvprintf@d
  4396                           
  4397                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  4398  0250  2A55               	goto	l4915
  4399  0251                     l4913:	
  4400  0251  085C               	movf	xvprintf@d,w
  4401  0252  318F  2717  3180   	fcall	_xputc
  4402  0255                     l4915:	
  4403  0255  0020               	movlb	0	; select bank0
  4404  0256  18D8               	btfsc	xvprintf@f,1
  4405  0257  2A67               	goto	l4919
  4406  0258  0853               	movf	xvprintf@j+1,w
  4407  0259  00B2               	movwf	??_xvprintf+1
  4408  025A  0852               	movf	xvprintf@j,w
  4409  025B  00B1               	movwf	??_xvprintf
  4410  025C  0AD2               	incf	xvprintf@j,f
  4411  025D  1903               	skipnz
  4412  025E  0AD3               	incf	xvprintf@j+1,f
  4413  025F  0851               	movf	xvprintf@w+1,w
  4414  0260  0232               	subwf	??_xvprintf+1,w
  4415  0261  1D03               	skipz
  4416  0262  2A65               	goto	u4875
  4417  0263  0850               	movf	xvprintf@w,w
  4418  0264  0231               	subwf	??_xvprintf,w
  4419  0265                     u4875:	
  4420  0265  1C03               	skipc
  4421  0266  2A51               	goto	l4913
  4422  0267                     l4919:	
  4423                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  4424                           
  4425  0267  3001               	movlw	1
  4426  0268  02DA               	subwf	xvprintf@i,f
  4427  0269  3000               	movlw	0
  4428  026A  3BDB               	subwfb	xvprintf@i+1,f
  4429  026B  085A               	movf	xvprintf@i,w
  4430  026C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4431  026D  0086               	movwf	6
  4432  026E  0187               	clrf	7
  4433  026F  0801               	movf	1,w
  4434  0270  318F  2717  3180   	fcall	_xputc
  4435  0273  0020               	movlb	0	; select bank0
  4436  0274  085A               	movf	xvprintf@i,w
  4437  0275  045B               	iorwf	xvprintf@i+1,w
  4438  0276  1903               	btfsc	3,2
  4439  0277  2A7D               	goto	l4925
  4440  0278  2A67               	goto	l4919
  4441  0279                     l4923:	
  4442                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  4443                           
  4444  0279  3020               	movlw	32
  4445  027A  318F  2717  3180   	fcall	_xputc
  4446  027D                     l4925:	
  4447  027D  0020               	movlb	0	; select bank0
  4448  027E  0853               	movf	xvprintf@j+1,w
  4449  027F  00B2               	movwf	??_xvprintf+1
  4450  0280  0852               	movf	xvprintf@j,w
  4451  0281  00B1               	movwf	??_xvprintf
  4452  0282  0AD2               	incf	xvprintf@j,f
  4453  0283  1903               	skipnz
  4454  0284  0AD3               	incf	xvprintf@j+1,f
  4455  0285  0851               	movf	xvprintf@w+1,w
  4456  0286  0232               	subwf	??_xvprintf+1,w
  4457  0287  1D03               	skipz
  4458  0288  2A8B               	goto	u4895
  4459  0289  0850               	movf	xvprintf@w,w
  4460  028A  0231               	subwf	??_xvprintf,w
  4461  028B                     u4895:	
  4462  028B  1803               	btfsc	3,0
  4463  028C  2864               	goto	l670
  4464  028D  2A79               	goto	l4923
  4465  028E                     __end_of_xvprintf:	
  4466                           ;xprintf.c: 161: }
  4467                           
  4468                           
  4469                           	psect	text3
  4470  0DAD                     __ptext3:	
  4471 ;; *************** function _xputs *****************
  4472 ;; Defined at:
  4473 ;;		line 44 in file "xprintf.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  str             1    wreg     PTR const unsigned char 
  4476 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  4479 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4489 ;;      Params:         0       0       0       0       0       0
  4490 ;;      Locals:         0       1       0       0       0       0
  4491 ;;      Temps:          0       1       0       0       0       0
  4492 ;;      Totals:         0       2       0       0       0       0
  4493 ;;Total ram usage:        2 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    6
  4496 ;; This function calls:
  4497 ;;		_xputc
  4498 ;; This function is called by:
  4499 ;;		_xvprintf
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _xputs
  4505  0DAD                     _xputs:	
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4509                           ;xputs@str stored from wreg
  4510  0DAD  0020               	movlb	0	; select bank0
  4511  0DAE  00A7               	movwf	xputs@str
  4512  0DAF                     l4761:	
  4513                           ;xprintf.c: 48: while (*str)
  4514                           
  4515  0DAF  0827               	movf	xputs@str,w
  4516  0DB0  0086               	movwf	6
  4517  0DB1  0187               	clrf	7
  4518  0DB2  0801               	movf	1,w
  4519  0DB3  1903               	btfsc	3,2
  4520  0DB4  0008               	return
  4521                           
  4522                           ;xprintf.c: 49: xputc(*str++);
  4523  0DB5  0827               	movf	xputs@str,w
  4524  0DB6  0086               	movwf	6
  4525  0DB7  0187               	clrf	7
  4526  0DB8  0801               	movf	1,w
  4527  0DB9  318F  2717  318D   	fcall	_xputc
  4528  0DBC  3001               	movlw	1
  4529  0DBD  0020               	movlb	0	; select bank0
  4530  0DBE  00A6               	movwf	??_xputs
  4531  0DBF  0826               	movf	??_xputs,w
  4532  0DC0  07A7               	addwf	xputs@str,f
  4533  0DC1  2DAF               	goto	l4761
  4534  0DC2                     __end_of_xputs:	
  4535                           
  4536                           	psect	text4
  4537  0F17                     __ptext4:	
  4538 ;; *************** function _xputc *****************
  4539 ;; Defined at:
  4540 ;;		line 26 in file "xprintf.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  c               1    wreg     unsigned char 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  c               1    5[BANK0 ] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4554 ;;      Params:         0       0       0       0       0       0
  4555 ;;      Locals:         0       1       0       0       0       0
  4556 ;;      Temps:          0       1       0       0       0       0
  4557 ;;      Totals:         0       2       0       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    5
  4561 ;; This function calls:
  4562 ;;		Absolute function
  4563 ;;		_LCD_Put
  4564 ;; This function is called by:
  4565 ;;		_xputs
  4566 ;;		_xvprintf
  4567 ;;		_xfputs
  4568 ;;		_put_dump
  4569 ;;		_xgets
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _xputc
  4575  0F17                     _xputc:	
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4579                           ;xputc@c stored from wreg
  4580  0F17  0020               	movlb	0	; select bank0
  4581  0F18  00A5               	movwf	xputc@c
  4582  0F19  300A               	movlw	10
  4583  0F1A  0625               	xorwf	xputc@c,w
  4584  0F1B  1D03               	btfss	3,2
  4585  0F1C  2F26               	goto	l4743
  4586  0F1D  30FA               	movlw	(low (STR_50| (0+32768)))& (0+255)
  4587  0F1E  00A4               	movwf	??_xputc
  4588  0F1F  0824               	movf	??_xputc,w
  4589  0F20  00A3               	movwf	LCD_Put@word
  4590  0F21  086B               	movf	_xfunc_out+1,w
  4591  0F22  008A               	movwf	10
  4592  0F23  086A               	movf	_xfunc_out,w
  4593  0F24  000A               	callw
  4594  0F25  318F               	pagesel	$
  4595  0F26                     l4743:	
  4596                           
  4597                           ;xprintf.c: 30: if (outptr) {
  4598  0F26  0020               	movlb	0	; select bank0
  4599  0F27  086C               	movf	_outptr,w
  4600  0F28  1903               	btfsc	3,2
  4601  0F29  2F36               	goto	l4751
  4602                           
  4603                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  4604  0F2A  0825               	movf	xputc@c,w
  4605  0F2B  00A4               	movwf	??_xputc
  4606  0F2C  086C               	movf	_outptr,w
  4607  0F2D  0086               	movwf	6
  4608  0F2E  0187               	clrf	7
  4609  0F2F  0824               	movf	??_xputc,w
  4610  0F30  0081               	movwf	1
  4611  0F31  3001               	movlw	1
  4612  0F32  00A4               	movwf	??_xputc
  4613  0F33  0824               	movf	??_xputc,w
  4614  0F34  07EC               	addwf	_outptr,f
  4615                           
  4616                           ;xprintf.c: 32: return;
  4617  0F35  0008               	return
  4618  0F36                     l4751:	
  4619                           
  4620                           ;xprintf.c: 33: }
  4621                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  4622  0F36  086A               	movf	_xfunc_out,w
  4623  0F37  046B               	iorwf	_xfunc_out+1,w
  4624  0F38  1903               	btfsc	3,2
  4625  0F39  0008               	return
  4626  0F3A  0825               	movf	xputc@c,w
  4627  0F3B  00A4               	movwf	??_xputc
  4628  0F3C  0824               	movf	??_xputc,w
  4629  0F3D  00A3               	movwf	LCD_Put@word
  4630  0F3E  086B               	movf	_xfunc_out+1,w
  4631  0F3F  008A               	movwf	10
  4632  0F40  086A               	movf	_xfunc_out,w
  4633  0F41  000A               	callw
  4634  0F42  318F               	pagesel	$
  4635  0F43  0008               	return
  4636  0F44                     __end_of_xputc:	
  4637                           
  4638                           	psect	text5
  4639  0CB2                     __ptext5:	
  4640 ;; *************** function _LCD_Put *****************
  4641 ;; Defined at:
  4642 ;;		line 54 in file "LCD.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  word            1    3[BANK0 ] char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0, pclath, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4656 ;;      Params:         0       1       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0
  4659 ;;      Totals:         0       1       0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		_LCD_WriteData
  4665 ;; This function is called by:
  4666 ;;		_main
  4667 ;;		_xputc
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _LCD_Put
  4673  0CB2                     _LCD_Put:	
  4674                           
  4675                           ;LCD.c: 56: LATA3 = 1;
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  4679  0CB2  0022               	movlb	2	; select bank2
  4680  0CB3  158C               	bsf	12,3	;volatile
  4681                           
  4682                           ;LCD.c: 57: LCD_WriteData(word);
  4683  0CB4  0020               	movlb	0	; select bank0
  4684  0CB5  0823               	movf	LCD_Put@word,w
  4685  0CB6  318F  2780         	fcall	_LCD_WriteData
  4686  0CB8  0008               	return
  4687  0CB9                     __end_of_LCD_Put:	
  4688                           
  4689                           	psect	text6
  4690  0DDE                     __ptext6:	
  4691 ;; *************** function ___wmul *****************
  4692 ;; Defined at:
  4693 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4696 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  product         2    4[BANK0 ] unsigned int 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  2    0[BANK0 ] unsigned int 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4708 ;;      Params:         0       4       0       0       0       0
  4709 ;;      Locals:         0       2       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0
  4711 ;;      Totals:         0       6       0       0       0       0
  4712 ;;Total ram usage:        6 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    3
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_xvprintf
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function ___wmul
  4724  0DDE                     ___wmul:	
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4728  0DDE  0020               	movlb	0	; select bank0
  4729  0DDF  01A4               	clrf	___wmul@product
  4730  0DE0  01A5               	clrf	___wmul@product+1
  4731  0DE1                     l4069:	
  4732  0DE1  1C20               	btfss	___wmul@multiplier,0
  4733  0DE2  2DE7               	goto	l969
  4734  0DE3  0822               	movf	___wmul@multiplicand,w
  4735  0DE4  07A4               	addwf	___wmul@product,f
  4736  0DE5  0823               	movf	___wmul@multiplicand+1,w
  4737  0DE6  3DA5               	addwfc	___wmul@product+1,f
  4738  0DE7                     l969:	
  4739  0DE7  3001               	movlw	1
  4740  0DE8                     u3875:	
  4741  0DE8  35A2               	lslf	___wmul@multiplicand,f
  4742  0DE9  0DA3               	rlf	___wmul@multiplicand+1,f
  4743  0DEA  0B89               	decfsz	9,f
  4744  0DEB  2DE8               	goto	u3875
  4745  0DEC  3001               	movlw	1
  4746  0DED                     u3885:	
  4747  0DED  36A1               	lsrf	___wmul@multiplier+1,f
  4748  0DEE  0CA0               	rrf	___wmul@multiplier,f
  4749  0DEF  0B89               	decfsz	9,f
  4750  0DF0  2DED               	goto	u3885
  4751  0DF1  0820               	movf	___wmul@multiplier,w
  4752  0DF2  0421               	iorwf	___wmul@multiplier+1,w
  4753  0DF3  1D03               	btfss	3,2
  4754  0DF4  2DE1               	goto	l4069
  4755  0DF5  0825               	movf	___wmul@product+1,w
  4756  0DF6  00A1               	movwf	?___wmul+1
  4757  0DF7  0824               	movf	___wmul@product,w
  4758  0DF8  00A0               	movwf	?___wmul
  4759  0DF9  0008               	return
  4760  0DFA                     __end_of___wmul:	
  4761                           
  4762                           	psect	text7
  4763  0FBD                     __ptext7:	
  4764 ;; *************** function ___llmod *****************
  4765 ;; Defined at:
  4766 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  divisor         4    0[BANK0 ] unsigned long 
  4769 ;;  dividend        4    4[BANK0 ] unsigned long 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  counter         1    9[BANK0 ] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  4    0[BANK0 ] unsigned long 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4781 ;;      Params:         0       8       0       0       0       0
  4782 ;;      Locals:         0       1       0       0       0       0
  4783 ;;      Temps:          0       1       0       0       0       0
  4784 ;;      Totals:         0      10       0       0       0       0
  4785 ;;Total ram usage:       10 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_xvprintf
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function ___llmod
  4797  0FBD                     ___llmod:	
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4801  0FBD  0020               	movlb	0	; select bank0
  4802  0FBE  0823               	movf	___llmod@divisor+3,w
  4803  0FBF  0422               	iorwf	___llmod@divisor+2,w
  4804  0FC0  0421               	iorwf	___llmod@divisor+1,w
  4805  0FC1  0420               	iorwf	___llmod@divisor,w
  4806  0FC2  1903               	skipnz
  4807  0FC3  2FF7               	goto	l4121
  4808  0FC4  01A9               	clrf	___llmod@counter
  4809  0FC5  0AA9               	incf	___llmod@counter,f
  4810  0FC6                     l4111:	
  4811  0FC6  1BA3               	btfsc	___llmod@divisor+3,7
  4812  0FC7  2FD4               	goto	l4113
  4813  0FC8  3001               	movlw	1
  4814  0FC9                     u3985:	
  4815  0FC9  35A0               	lslf	___llmod@divisor,f
  4816  0FCA  0DA1               	rlf	___llmod@divisor+1,f
  4817  0FCB  0DA2               	rlf	___llmod@divisor+2,f
  4818  0FCC  0DA3               	rlf	___llmod@divisor+3,f
  4819  0FCD  0B89               	decfsz	9,f
  4820  0FCE  2FC9               	goto	u3985
  4821  0FCF  3001               	movlw	1
  4822  0FD0  00A8               	movwf	??___llmod
  4823  0FD1  0828               	movf	??___llmod,w
  4824  0FD2  07A9               	addwf	___llmod@counter,f
  4825  0FD3  2FC6               	goto	l4111
  4826  0FD4                     l4113:	
  4827  0FD4  0823               	movf	___llmod@divisor+3,w
  4828  0FD5  0227               	subwf	___llmod@dividend+3,w
  4829  0FD6  1D03               	skipz
  4830  0FD7  2FE2               	goto	u4005
  4831  0FD8  0822               	movf	___llmod@divisor+2,w
  4832  0FD9  0226               	subwf	___llmod@dividend+2,w
  4833  0FDA  1D03               	skipz
  4834  0FDB  2FE2               	goto	u4005
  4835  0FDC  0821               	movf	___llmod@divisor+1,w
  4836  0FDD  0225               	subwf	___llmod@dividend+1,w
  4837  0FDE  1D03               	skipz
  4838  0FDF  2FE2               	goto	u4005
  4839  0FE0  0820               	movf	___llmod@divisor,w
  4840  0FE1  0224               	subwf	___llmod@dividend,w
  4841  0FE2                     u4005:	
  4842  0FE2  1C03               	skipc
  4843  0FE3  2FEC               	goto	l4117
  4844  0FE4  0820               	movf	___llmod@divisor,w
  4845  0FE5  02A4               	subwf	___llmod@dividend,f
  4846  0FE6  0821               	movf	___llmod@divisor+1,w
  4847  0FE7  3BA5               	subwfb	___llmod@dividend+1,f
  4848  0FE8  0822               	movf	___llmod@divisor+2,w
  4849  0FE9  3BA6               	subwfb	___llmod@dividend+2,f
  4850  0FEA  0823               	movf	___llmod@divisor+3,w
  4851  0FEB  3BA7               	subwfb	___llmod@dividend+3,f
  4852  0FEC                     l4117:	
  4853  0FEC  3001               	movlw	1
  4854  0FED                     u4015:	
  4855  0FED  36A3               	lsrf	___llmod@divisor+3,f
  4856  0FEE  0CA2               	rrf	___llmod@divisor+2,f
  4857  0FEF  0CA1               	rrf	___llmod@divisor+1,f
  4858  0FF0  0CA0               	rrf	___llmod@divisor,f
  4859  0FF1  0B89               	decfsz	9,f
  4860  0FF2  2FED               	goto	u4015
  4861  0FF3  3001               	movlw	1
  4862  0FF4  02A9               	subwf	___llmod@counter,f
  4863  0FF5  1D03               	btfss	3,2
  4864  0FF6  2FD4               	goto	l4113
  4865  0FF7                     l4121:	
  4866  0FF7  0827               	movf	___llmod@dividend+3,w
  4867  0FF8  00A3               	movwf	?___llmod+3
  4868  0FF9  0826               	movf	___llmod@dividend+2,w
  4869  0FFA  00A2               	movwf	?___llmod+2
  4870  0FFB  0825               	movf	___llmod@dividend+1,w
  4871  0FFC  00A1               	movwf	?___llmod+1
  4872  0FFD  0824               	movf	___llmod@dividend,w
  4873  0FFE  00A0               	movwf	?___llmod
  4874  0FFF  0008               	return
  4875  1000                     __end_of___llmod:	
  4876                           
  4877                           	psect	text8
  4878  06D1                     __ptext8:	
  4879 ;; *************** function ___lldiv *****************
  4880 ;; Defined at:
  4881 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  divisor         4    0[BANK0 ] unsigned long 
  4884 ;;  dividend        4    4[BANK0 ] unsigned long 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  quotient        4    9[BANK0 ] unsigned long 
  4887 ;;  counter         1   13[BANK0 ] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  4    0[BANK0 ] unsigned long 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4897 ;;      Params:         0       8       0       0       0       0
  4898 ;;      Locals:         0       5       0       0       0       0
  4899 ;;      Temps:          0       1       0       0       0       0
  4900 ;;      Totals:         0      14       0       0       0       0
  4901 ;;Total ram usage:       14 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_xvprintf
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function ___lldiv
  4913  06D1                     ___lldiv:	
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4917  06D1  3000               	movlw	0
  4918  06D2  0020               	movlb	0	; select bank0
  4919  06D3  00AC               	movwf	___lldiv@quotient+3
  4920  06D4  3000               	movlw	0
  4921  06D5  00AB               	movwf	___lldiv@quotient+2
  4922  06D6  3000               	movlw	0
  4923  06D7  00AA               	movwf	___lldiv@quotient+1
  4924  06D8  3000               	movlw	0
  4925  06D9  00A9               	movwf	___lldiv@quotient
  4926  06DA  0823               	movf	___lldiv@divisor+3,w
  4927  06DB  0422               	iorwf	___lldiv@divisor+2,w
  4928  06DC  0421               	iorwf	___lldiv@divisor+1,w
  4929  06DD  0420               	iorwf	___lldiv@divisor,w
  4930  06DE  1903               	skipnz
  4931  06DF  2F1B               	goto	l4101
  4932  06E0  01AD               	clrf	___lldiv@counter
  4933  06E1  0AAD               	incf	___lldiv@counter,f
  4934  06E2                     l4087:	
  4935  06E2  1BA3               	btfsc	___lldiv@divisor+3,7
  4936  06E3  2EF0               	goto	l4089
  4937  06E4  3001               	movlw	1
  4938  06E5                     u3915:	
  4939  06E5  35A0               	lslf	___lldiv@divisor,f
  4940  06E6  0DA1               	rlf	___lldiv@divisor+1,f
  4941  06E7  0DA2               	rlf	___lldiv@divisor+2,f
  4942  06E8  0DA3               	rlf	___lldiv@divisor+3,f
  4943  06E9  0B89               	decfsz	9,f
  4944  06EA  2EE5               	goto	u3915
  4945  06EB  3001               	movlw	1
  4946  06EC  00A8               	movwf	??___lldiv
  4947  06ED  0828               	movf	??___lldiv,w
  4948  06EE  07AD               	addwf	___lldiv@counter,f
  4949  06EF  2EE2               	goto	l4087
  4950  06F0                     l4089:	
  4951  06F0  3001               	movlw	1
  4952  06F1                     u3935:	
  4953  06F1  35A9               	lslf	___lldiv@quotient,f
  4954  06F2  0DAA               	rlf	___lldiv@quotient+1,f
  4955  06F3  0DAB               	rlf	___lldiv@quotient+2,f
  4956  06F4  0DAC               	rlf	___lldiv@quotient+3,f
  4957  06F5  0B89               	decfsz	9,f
  4958  06F6  2EF1               	goto	u3935
  4959  06F7  0823               	movf	___lldiv@divisor+3,w
  4960  06F8  0227               	subwf	___lldiv@dividend+3,w
  4961  06F9  1D03               	skipz
  4962  06FA  2F05               	goto	u3945
  4963  06FB  0822               	movf	___lldiv@divisor+2,w
  4964  06FC  0226               	subwf	___lldiv@dividend+2,w
  4965  06FD  1D03               	skipz
  4966  06FE  2F05               	goto	u3945
  4967  06FF  0821               	movf	___lldiv@divisor+1,w
  4968  0700  0225               	subwf	___lldiv@dividend+1,w
  4969  0701  1D03               	skipz
  4970  0702  2F05               	goto	u3945
  4971  0703  0820               	movf	___lldiv@divisor,w
  4972  0704  0224               	subwf	___lldiv@dividend,w
  4973  0705                     u3945:	
  4974  0705  1C03               	skipc
  4975  0706  2F10               	goto	l4097
  4976  0707  0820               	movf	___lldiv@divisor,w
  4977  0708  02A4               	subwf	___lldiv@dividend,f
  4978  0709  0821               	movf	___lldiv@divisor+1,w
  4979  070A  3BA5               	subwfb	___lldiv@dividend+1,f
  4980  070B  0822               	movf	___lldiv@divisor+2,w
  4981  070C  3BA6               	subwfb	___lldiv@dividend+2,f
  4982  070D  0823               	movf	___lldiv@divisor+3,w
  4983  070E  3BA7               	subwfb	___lldiv@dividend+3,f
  4984  070F  1429               	bsf	___lldiv@quotient,0
  4985  0710                     l4097:	
  4986  0710  3001               	movlw	1
  4987  0711                     u3955:	
  4988  0711  36A3               	lsrf	___lldiv@divisor+3,f
  4989  0712  0CA2               	rrf	___lldiv@divisor+2,f
  4990  0713  0CA1               	rrf	___lldiv@divisor+1,f
  4991  0714  0CA0               	rrf	___lldiv@divisor,f
  4992  0715  0B89               	decfsz	9,f
  4993  0716  2F11               	goto	u3955
  4994  0717  3001               	movlw	1
  4995  0718  02AD               	subwf	___lldiv@counter,f
  4996  0719  1D03               	btfss	3,2
  4997  071A  2EF0               	goto	l4089
  4998  071B                     l4101:	
  4999  071B  082C               	movf	___lldiv@quotient+3,w
  5000  071C  00A3               	movwf	?___lldiv+3
  5001  071D  082B               	movf	___lldiv@quotient+2,w
  5002  071E  00A2               	movwf	?___lldiv+2
  5003  071F  082A               	movf	___lldiv@quotient+1,w
  5004  0720  00A1               	movwf	?___lldiv+1
  5005  0721  0829               	movf	___lldiv@quotient,w
  5006  0722  00A0               	movwf	?___lldiv
  5007  0723  0008               	return
  5008  0724                     __end_of___lldiv:	
  5009                           
  5010                           	psect	text9
  5011  0724                     __ptext9:	
  5012 ;; *************** function _mTouch_Read *****************
  5013 ;; Defined at:
  5014 ;;		line 111 in file "main.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  chan            1    wreg     unsigned char 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  chan            1    7[BANK0 ] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      unsigned char 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5028 ;;      Params:         0       0       0       0       0       0
  5029 ;;      Locals:         0       1       0       0       0       0
  5030 ;;      Temps:          0       5       0       0       0       0
  5031 ;;      Totals:         0       6       0       0       0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    4
  5035 ;; This function calls:
  5036 ;;		_Buzzer_MiliSecond
  5037 ;; This function is called by:
  5038 ;;		_main
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function _mTouch_Read
  5044  0724                     _mTouch_Read:	
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5048                           ;mTouch_Read@chan stored from wreg
  5049  0724  0020               	movlb	0	; select bank0
  5050  0725  00A7               	movwf	mTouch_Read@chan
  5051                           
  5052                           ;main.c: 113: if(chan>2)return 0;
  5053  0726  3003               	movlw	3
  5054  0727  0227               	subwf	mTouch_Read@chan,w
  5055  0728  1C03               	skipc
  5056  0729  2F2C               	goto	l4507
  5057  072A  3000               	movlw	0
  5058  072B  0008               	return
  5059  072C                     l4507:	
  5060                           
  5061                           ;main.c: 115: if(((CPS_PreData[chan]-CPS_Data[chan])>100)&&!mTouch_Interval[chan])
  5062  072C  0827               	movf	mTouch_Read@chan,w
  5063  072D  3EA7               	addlw	(low (_CPS_Data| 0))& (0+255)
  5064  072E  0086               	movwf	6
  5065  072F  0187               	clrf	7
  5066  0730  0801               	movf	1,w
  5067  0731  00A2               	movwf	??_mTouch_Read
  5068  0732  01A3               	clrf	??_mTouch_Read+1
  5069  0733  09A2               	comf	??_mTouch_Read,f
  5070  0734  09A3               	comf	??_mTouch_Read+1,f
  5071  0735  0AA2               	incf	??_mTouch_Read,f
  5072  0736  1903               	skipnz
  5073  0737  0AA3               	incf	??_mTouch_Read+1,f
  5074  0738  0827               	movf	mTouch_Read@chan,w
  5075  0739  3EAA               	addlw	(low (_CPS_PreData| 0))& (0+255)
  5076  073A  0086               	movwf	6
  5077  073B  0187               	clrf	7
  5078  073C  0801               	movf	1,w
  5079  073D  0722               	addwf	??_mTouch_Read,w
  5080  073E  00A4               	movwf	??_mTouch_Read+2
  5081  073F  0823               	movf	??_mTouch_Read+1,w
  5082  0740  1803               	skipnc
  5083  0741  0A23               	incf	??_mTouch_Read+1,w
  5084  0742  00A5               	movwf	??_mTouch_Read+3
  5085  0743  0825               	movf	??_mTouch_Read+3,w
  5086  0744  3A80               	xorlw	128
  5087  0745  00A6               	movwf	??_mTouch_Read+4
  5088  0746  3080               	movlw	128
  5089  0747  0226               	subwf	??_mTouch_Read+4,w
  5090  0748  1D03               	skipz
  5091  0749  2F4C               	goto	u4335
  5092  074A  3065               	movlw	101
  5093  074B  0224               	subwf	??_mTouch_Read+2,w
  5094  074C                     u4335:	
  5095  074C  1C03               	skipc
  5096  074D  2F66               	goto	l4519
  5097  074E  0020               	movlb	0	; select bank0
  5098  074F  0827               	movf	mTouch_Read@chan,w
  5099  0750  3EA4               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  5100  0751  0086               	movwf	6
  5101  0752  0187               	clrf	7
  5102  0753  0801               	movf	1,w
  5103  0754  1D03               	btfss	3,2
  5104  0755  2F66               	goto	l4519
  5105                           
  5106                           ;main.c: 116: {
  5107                           ;main.c: 117: mTouch_Interval[chan] = 100;
  5108  0756  3064               	movlw	100
  5109  0757  00A2               	movwf	??_mTouch_Read
  5110  0758  0827               	movf	mTouch_Read@chan,w
  5111  0759  3EA4               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  5112  075A  0086               	movwf	6
  5113  075B  0187               	clrf	7
  5114  075C  0822               	movf	??_mTouch_Read,w
  5115  075D  0081               	movwf	1
  5116                           
  5117                           ;main.c: 118: Buzzer_MiliSecond(100);
  5118  075E  3064               	movlw	100
  5119  075F  00A0               	movwf	Buzzer_MiliSecond@time
  5120  0760  3000               	movlw	0
  5121  0761  00A1               	movwf	Buzzer_MiliSecond@time+1
  5122  0762  318C  24C2         	fcall	_Buzzer_MiliSecond
  5123                           
  5124                           ;main.c: 119: return 1;
  5125  0764  3001               	movlw	1
  5126  0765  0008               	return
  5127  0766                     l4519:	
  5128                           
  5129                           ;main.c: 120: }
  5130                           ;main.c: 121: return 0;
  5131  0766  3000               	movlw	0
  5132  0767  0008               	return
  5133  0768                     __end_of_mTouch_Read:	
  5134                           
  5135                           	psect	text10
  5136  0CC2                     __ptext10:	
  5137 ;; *************** function _Buzzer_MiliSecond *****************
  5138 ;; Defined at:
  5139 ;;		line 38 in file "Buzzer.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  time            2    0[BANK0 ] unsigned int 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5153 ;;      Params:         0       2       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0
  5156 ;;      Totals:         0       2       0       0       0       0
  5157 ;;Total ram usage:        2 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    3
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_mTouch_Read
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function _Buzzer_MiliSecond
  5169  0CC2                     _Buzzer_MiliSecond:	
  5170                           
  5171                           ;Buzzer.c: 40: if(count==0)
  5172                           
  5173                           ;incstack = 0
  5174                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  5175  0CC2  0878               	movf	_count,w
  5176  0CC3  0479               	iorwf	_count+1,w
  5177  0CC4  1D03               	btfss	3,2
  5178  0CC5  0008               	return
  5179                           
  5180                           ;Buzzer.c: 41: count = time;
  5181  0CC6  0020               	movlb	0	; select bank0
  5182  0CC7  0821               	movf	Buzzer_MiliSecond@time+1,w
  5183  0CC8  00F9               	movwf	_count+1
  5184  0CC9  0820               	movf	Buzzer_MiliSecond@time,w
  5185  0CCA  00F8               	movwf	_count
  5186  0CCB  0008               	return
  5187  0CCC                     __end_of_Buzzer_MiliSecond:	
  5188                           
  5189                           	psect	text11
  5190  0D70                     __ptext11:	
  5191 ;; *************** function _mTouch_Init *****************
  5192 ;; Defined at:
  5193 ;;		line 12 in file "mTouch.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5207 ;;      Params:         0       0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0       0
  5209 ;;      Temps:          0       1       0       0       0       0
  5210 ;;      Totals:         0       1       0       0       0       0
  5211 ;;Total ram usage:        1 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    4
  5214 ;; This function calls:
  5215 ;;		_mTouch_PortInit
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _mTouch_Init
  5223  0D70                     _mTouch_Init:	
  5224                           
  5225                           ;mTouch.c: 14: mTouch_PortInit();
  5226                           
  5227                           ;incstack = 0
  5228                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  5229  0D70  318C  24F1         	fcall	_mTouch_PortInit
  5230                           
  5231                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  5232  0D72  0021               	movlb	1	; select bank1
  5233  0D73  0815               	movf	21,w	;volatile
  5234                           
  5235                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  5236  0D74  1595               	bsf	21,3	;volatile
  5237                           
  5238                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  5239  0D75  1695               	bsf	21,5	;volatile
  5240                           
  5241                           ;mTouch.c: 20: TMR0 = 0x00;
  5242  0D76  0020               	movlb	0	; select bank0
  5243  0D77  0195               	clrf	21	;volatile
  5244                           
  5245                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  5246  0D78  141E               	bsf	30,0	;volatile
  5247                           
  5248                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  5249  0D79  300C               	movlw	12
  5250  0D7A  00A1               	movwf	??_mTouch_Init
  5251  0D7B  0821               	movf	??_mTouch_Init,w
  5252  0D7C  049E               	iorwf	30,f	;volatile
  5253                           
  5254                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  5255  0D7D  307F               	movlw	127
  5256  0D7E  00A1               	movwf	??_mTouch_Init
  5257  0D7F  0821               	movf	??_mTouch_Init,w
  5258  0D80  059E               	andwf	30,f	;volatile
  5259                           
  5260                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  5261  0D81  019F               	clrf	31	;volatile
  5262  0D82  0008               	return
  5263  0D83                     __end_of_mTouch_Init:	
  5264                           
  5265                           	psect	text12
  5266  0CF1                     __ptext12:	
  5267 ;; *************** function _mTouch_PortInit *****************
  5268 ;; Defined at:
  5269 ;;		line 6 in file "mTouch.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5283 ;;      Params:         0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0
  5285 ;;      Temps:          0       1       0       0       0       0
  5286 ;;      Totals:         0       1       0       0       0       0
  5287 ;;Total ram usage:        1 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    3
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_mTouch_Init
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function _mTouch_PortInit
  5299  0CF1                     _mTouch_PortInit:	
  5300                           
  5301                           ;mTouch.c: 8: TRISA |= (0x07);
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  5305  0CF1  3007               	movlw	7
  5306  0CF2  0020               	movlb	0	; select bank0
  5307  0CF3  00A0               	movwf	??_mTouch_PortInit
  5308  0CF4  0820               	movf	??_mTouch_PortInit,w
  5309  0CF5  0021               	movlb	1	; select bank1
  5310  0CF6  048C               	iorwf	12,f	;volatile
  5311                           
  5312                           ;mTouch.c: 9: ANSELA |= (0x07);
  5313  0CF7  3007               	movlw	7
  5314  0CF8  0020               	movlb	0	; select bank0
  5315  0CF9  00A0               	movwf	??_mTouch_PortInit
  5316  0CFA  0820               	movf	??_mTouch_PortInit,w
  5317  0CFB  0023               	movlb	3	; select bank3
  5318  0CFC  048C               	iorwf	12,f	;volatile
  5319  0CFD  0008               	return
  5320  0CFE                     __end_of_mTouch_PortInit:	
  5321                           
  5322                           	psect	text13
  5323  0CFE                     __ptext13:	
  5324 ;; *************** function _Timer6_Init *****************
  5325 ;; Defined at:
  5326 ;;		line 3 in file "Timer6.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2  542[None  ] int 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5340 ;;      Params:         0       0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    3
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_main
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _Timer6_Init
  5356  0CFE                     _Timer6_Init:	
  5357                           
  5358                           ;Timer6.c: 5: PR6 = 50;
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _Timer6_Init: [wreg+status,2]
  5362  0CFE  3032               	movlw	50
  5363  0CFF  0028               	movlb	8	; select bank8
  5364  0D00  009D               	movwf	29	;volatile
  5365                           
  5366                           ;Timer6.c: 6: TMR6 = 0x00;
  5367  0D01  019C               	clrf	28	;volatile
  5368                           
  5369                           ;Timer6.c: 7: T6CON |= (0x02<<0);
  5370  0D02  149E               	bsf	30,1	;volatile
  5371                           
  5372                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  5373  0D03  081E               	movf	30,w	;volatile
  5374                           
  5375                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  5376  0D04  151E               	bsf	30,2	;volatile
  5377                           
  5378                           ;Timer6.c: 11: TMR6IF = 0;
  5379  0D05  0020               	movlb	0	; select bank0
  5380  0D06  1193               	bcf	19,3	;volatile
  5381                           
  5382                           ;Timer6.c: 12: TMR6IE = 1;
  5383  0D07  0021               	movlb	1	; select bank1
  5384  0D08  1593               	bsf	19,3	;volatile
  5385                           
  5386                           ;Timer6.c: 13: PEIE = 1;
  5387  0D09  170B               	bsf	11,6	;volatile
  5388                           
  5389                           ;Timer6.c: 14: GIE = 1;
  5390  0D0A  178B               	bsf	11,7	;volatile
  5391  0D0B  0008               	return
  5392  0D0C                     __end_of_Timer6_Init:	
  5393                           
  5394                           	psect	text14
  5395  0D5D                     __ptext14:	
  5396 ;; *************** function _Timer4_Init *****************
  5397 ;; Defined at:
  5398 ;;		line 3 in file "Timer4.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5412 ;;      Params:         0       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0
  5414 ;;      Temps:          0       1       0       0       0       0
  5415 ;;      Totals:         0       1       0       0       0       0
  5416 ;;Total ram usage:        1 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    3
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _Timer4_Init
  5428  0D5D                     _Timer4_Init:	
  5429                           
  5430                           ;Timer4.c: 5: PR4 = 0x7D;
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  5434  0D5D  307D               	movlw	125
  5435  0D5E  0028               	movlb	8	; select bank8
  5436  0D5F  0096               	movwf	22	;volatile
  5437                           
  5438                           ;Timer4.c: 6: TMR4 = 0x00;
  5439  0D60  0195               	clrf	21	;volatile
  5440                           
  5441                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  5442  0D61  3003               	movlw	3
  5443  0D62  0020               	movlb	0	; select bank0
  5444  0D63  00A0               	movwf	??_Timer4_Init
  5445  0D64  0820               	movf	??_Timer4_Init,w
  5446  0D65  0028               	movlb	8	; select bank8
  5447  0D66  0497               	iorwf	23,f	;volatile
  5448                           
  5449                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  5450  0D67  0817               	movf	23,w	;volatile
  5451                           
  5452                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  5453  0D68  1517               	bsf	23,2	;volatile
  5454                           
  5455                           ;Timer4.c: 11: TMR4IF = 0;
  5456  0D69  0020               	movlb	0	; select bank0
  5457  0D6A  1093               	bcf	19,1	;volatile
  5458                           
  5459                           ;Timer4.c: 12: TMR4IE = 1;
  5460  0D6B  0021               	movlb	1	; select bank1
  5461  0D6C  1493               	bsf	19,1	;volatile
  5462                           
  5463                           ;Timer4.c: 13: PEIE = 1;
  5464  0D6D  170B               	bsf	11,6	;volatile
  5465                           
  5466                           ;Timer4.c: 14: GIE = 1;
  5467  0D6E  178B               	bsf	11,7	;volatile
  5468  0D6F  0008               	return
  5469  0D70                     __end_of_Timer4_Init:	
  5470                           
  5471                           	psect	text15
  5472  0D4C                     __ptext15:	
  5473 ;; *************** function _Timer1_SumRead *****************
  5474 ;; Defined at:
  5475 ;;		line 29 in file "Timer1.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  4    0[BANK0 ] unsigned long 
  5482 ;; Registers used:
  5483 ;;		wreg
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5489 ;;      Params:         0       4       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0
  5492 ;;      Totals:         0       4       0       0       0       0
  5493 ;;Total ram usage:        4 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    3
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_main
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _Timer1_SumRead
  5505  0D4C                     _Timer1_SumRead:	
  5506                           
  5507                           ;Timer1.c: 31: return countsum;
  5508                           
  5509                           ;incstack = 0
  5510                           ; Regs used in _Timer1_SumRead: [wreg]
  5511  0D4C  0021               	movlb	1	; select bank1
  5512  0D4D  0823               	movf	(_countsum+3)^(0+128),w
  5513  0D4E  0020               	movlb	0	; select bank0
  5514  0D4F  00A3               	movwf	?_Timer1_SumRead+3
  5515  0D50  0021               	movlb	1	; select bank1
  5516  0D51  0822               	movf	(_countsum+2)^(0+128),w
  5517  0D52  0020               	movlb	0	; select bank0
  5518  0D53  00A2               	movwf	?_Timer1_SumRead+2
  5519  0D54  0021               	movlb	1	; select bank1
  5520  0D55  0821               	movf	(_countsum+1)^(0+128),w
  5521  0D56  0020               	movlb	0	; select bank0
  5522  0D57  00A1               	movwf	?_Timer1_SumRead+1
  5523  0D58  0021               	movlb	1	; select bank1
  5524  0D59  0820               	movf	_countsum^(0+128),w
  5525  0D5A  0020               	movlb	0	; select bank0
  5526  0D5B  00A0               	movwf	?_Timer1_SumRead
  5527  0D5C  0008               	return
  5528  0D5D                     __end_of_Timer1_SumRead:	
  5529                           
  5530                           	psect	text16
  5531  0CB9                     __ptext16:	
  5532 ;; *************** function _Timer1_ResultRead *****************
  5533 ;; Defined at:
  5534 ;;		line 34 in file "Timer1.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2    0[BANK0 ] unsigned int 
  5541 ;; Registers used:
  5542 ;;		wreg
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5548 ;;      Params:         0       2       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0
  5551 ;;      Totals:         0       2       0       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    3
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _Timer1_ResultRead
  5564  0CB9                     _Timer1_ResultRead:	
  5565                           
  5566                           ;Timer1.c: 36: return resulttime;
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _Timer1_ResultRead: [wreg]
  5570  0CB9  0021               	movlb	1	; select bank1
  5571  0CBA  0831               	movf	(_resulttime+1)^(0+128),w
  5572  0CBB  0020               	movlb	0	; select bank0
  5573  0CBC  00A1               	movwf	?_Timer1_ResultRead+1
  5574  0CBD  0021               	movlb	1	; select bank1
  5575  0CBE  0830               	movf	_resulttime^(0+128),w
  5576  0CBF  0020               	movlb	0	; select bank0
  5577  0CC0  00A0               	movwf	?_Timer1_ResultRead
  5578  0CC1  0008               	return
  5579  0CC2                     __end_of_Timer1_ResultRead:	
  5580                           
  5581                           	psect	text17
  5582  0E36                     __ptext17:	
  5583 ;; *************** function _Timer1_Init *****************
  5584 ;; Defined at:
  5585 ;;		line 6 in file "Timer1.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5599 ;;      Params:         0       0       0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0
  5601 ;;      Temps:          0       1       0       0       0       0
  5602 ;;      Totals:         0       1       0       0       0       0
  5603 ;;Total ram usage:        1 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    3
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_main
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _Timer1_Init
  5615  0E36                     _Timer1_Init:	
  5616                           
  5617                           ;Timer1.c: 8: TRISB |= (1<<6);
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5621  0E36  0021               	movlb	1	; select bank1
  5622  0E37  170D               	bsf	13,6	;volatile
  5623                           
  5624                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5625  0E38  30BF               	movlw	191
  5626  0E39  0020               	movlb	0	; select bank0
  5627  0E3A  00A0               	movwf	??_Timer1_Init
  5628  0E3B  0820               	movf	??_Timer1_Init,w
  5629  0E3C  0023               	movlb	3	; select bank3
  5630  0E3D  058D               	andwf	13,f	;volatile
  5631                           
  5632                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  5633  0E3E  0020               	movlb	0	; select bank0
  5634  0E3F  1518               	bsf	24,2	;volatile
  5635                           
  5636                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  5637  0E40  30F7               	movlw	247
  5638  0E41  00A0               	movwf	??_Timer1_Init
  5639  0E42  0820               	movf	??_Timer1_Init,w
  5640  0E43  0598               	andwf	24,f	;volatile
  5641                           
  5642                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  5643  0E44  0818               	movf	24,w	;volatile
  5644                           
  5645                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  5646  0E45  1798               	bsf	24,7	;volatile
  5647                           
  5648                           ;Timer1.c: 16: T1GCON = 0x00;
  5649  0E46  0199               	clrf	25	;volatile
  5650                           
  5651                           ;Timer1.c: 18: TMR1 = 0xFFFF-100;
  5652  0E47  30FF               	movlw	255
  5653  0E48  0097               	movwf	23	;volatile
  5654  0E49  309B               	movlw	155
  5655  0E4A  0096               	movwf	22	;volatile
  5656                           
  5657                           ;Timer1.c: 19: count10us = 0x0000;
  5658  0E4B  0021               	movlb	1	; select bank1
  5659  0E4C  01B2               	clrf	_count10us^(0+128)
  5660  0E4D  01B3               	clrf	(_count10us+1)^(0+128)
  5661                           
  5662                           ;Timer1.c: 21: TMR1IF = 0;
  5663  0E4E  0020               	movlb	0	; select bank0
  5664  0E4F  1011               	bcf	17,0	;volatile
  5665                           
  5666                           ;Timer1.c: 22: TMR1IE = 1;
  5667  0E50  0021               	movlb	1	; select bank1
  5668  0E51  1411               	bsf	17,0	;volatile
  5669                           
  5670                           ;Timer1.c: 23: PEIE = 1;
  5671  0E52  170B               	bsf	11,6	;volatile
  5672                           
  5673                           ;Timer1.c: 24: GIE = 1;
  5674  0E53  178B               	bsf	11,7	;volatile
  5675  0E54  0008               	return
  5676  0E55                     __end_of_Timer1_Init:	
  5677                           
  5678                           	psect	text18
  5679  05BA                     __ptext18:	
  5680 ;; *************** function _LCD_Init *****************
  5681 ;; Defined at:
  5682 ;;		line 28 in file "LCD.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      void 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5696 ;;      Params:         0       0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0       0
  5698 ;;      Temps:          0       2       0       0       0       0
  5699 ;;      Totals:         0       2       0       0       0       0
  5700 ;;Total ram usage:        2 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    5
  5703 ;; This function calls:
  5704 ;;		_LCD_DisplayClear
  5705 ;;		_LCD_WriteData
  5706 ;; This function is called by:
  5707 ;;		_main
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function _LCD_Init
  5713  05BA                     _LCD_Init:	
  5714                           
  5715                           ;LCD.c: 30: LATA3 = 0;
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5719  05BA  0022               	movlb	2	; select bank2
  5720  05BB  118C               	bcf	12,3	;volatile
  5721                           
  5722                           ;LCD.c: 31: LATA4 = 0;
  5723  05BC  120C               	bcf	12,4	;volatile
  5724                           
  5725                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5726  05BD  3002               	movlw	2
  5727  05BE  0020               	movlb	0	; select bank0
  5728  05BF  00A5               	movwf	??_LCD_Init+1
  5729  05C0  3038               	movlw	56
  5730  05C1  00A4               	movwf	??_LCD_Init
  5731  05C2  30AD               	movlw	173
  5732  05C3                     u5087:	
  5733  05C3  0B89               	decfsz	9,f
  5734  05C4  2DC3               	goto	u5087
  5735  05C5  0BA4               	decfsz	??_LCD_Init,f
  5736  05C6  2DC3               	goto	u5087
  5737  05C7  0BA5               	decfsz	??_LCD_Init+1,f
  5738  05C8  2DC3               	goto	u5087
  5739                           
  5740                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5741  05C9  3003               	movlw	3
  5742  05CA  0020               	movlb	0	; select bank0
  5743  05CB  008D               	movwf	13	;volatile
  5744                           
  5745                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5746  05CC  0022               	movlb	2	; select bank2
  5747  05CD  160C               	bsf	12,4	;volatile
  5748  05CE  3200               	nop2	;2 cycle nop
  5749  05CF  3200               	nop2	;2 cycle nop
  5750  05D0  3200               	nop2	;2 cycle nop
  5751  05D1  3200               	nop2	;2 cycle nop
  5752  05D2  0022               	movlb	2	; select bank2
  5753  05D3  120C               	bcf	12,4	;volatile
  5754  05D4  3200               	nop2	;2 cycle nop
  5755  05D5  3200               	nop2	;2 cycle nop
  5756  05D6  3200               	nop2	;2 cycle nop
  5757  05D7  3200               	nop2	;2 cycle nop
  5758                           
  5759                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5760  05D8  3034               	movlw	52
  5761  05D9  0020               	movlb	0	; select bank0
  5762  05DA  00A4               	movwf	??_LCD_Init
  5763  05DB  30F1               	movlw	241
  5764  05DC                     u5097:	
  5765  05DC  0B89               	decfsz	9,f
  5766  05DD  2DDC               	goto	u5097
  5767  05DE  0BA4               	decfsz	??_LCD_Init,f
  5768  05DF  2DDC               	goto	u5097
  5769  05E0  3200               	nop2
  5770                           
  5771                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5772  05E1  0022               	movlb	2	; select bank2
  5773  05E2  160C               	bsf	12,4	;volatile
  5774  05E3  3200               	nop2	;2 cycle nop
  5775  05E4  3200               	nop2	;2 cycle nop
  5776  05E5  3200               	nop2	;2 cycle nop
  5777  05E6  3200               	nop2	;2 cycle nop
  5778  05E7  0022               	movlb	2	; select bank2
  5779  05E8  120C               	bcf	12,4	;volatile
  5780  05E9  3200               	nop2	;2 cycle nop
  5781  05EA  3200               	nop2	;2 cycle nop
  5782  05EB  3200               	nop2	;2 cycle nop
  5783  05EC  3200               	nop2	;2 cycle nop
  5784                           
  5785                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5786  05ED  3005               	movlw	5
  5787  05EE  0020               	movlb	0	; select bank0
  5788  05EF  00A4               	movwf	??_LCD_Init
  5789  05F0  3026               	movlw	38
  5790  05F1                     u5107:	
  5791  05F1  0B89               	decfsz	9,f
  5792  05F2  2DF1               	goto	u5107
  5793  05F3  0BA4               	decfsz	??_LCD_Init,f
  5794  05F4  2DF1               	goto	u5107
  5795  05F5  0000               	nop
  5796                           
  5797                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5798  05F6  0022               	movlb	2	; select bank2
  5799  05F7  160C               	bsf	12,4	;volatile
  5800  05F8  3200               	nop2	;2 cycle nop
  5801  05F9  3200               	nop2	;2 cycle nop
  5802  05FA  3200               	nop2	;2 cycle nop
  5803  05FB  3200               	nop2	;2 cycle nop
  5804  05FC  0022               	movlb	2	; select bank2
  5805  05FD  120C               	bcf	12,4	;volatile
  5806  05FE  3200               	nop2	;2 cycle nop
  5807  05FF  3200               	nop2	;2 cycle nop
  5808  0600  3200               	nop2	;2 cycle nop
  5809  0601  3200               	nop2	;2 cycle nop
  5810                           
  5811                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5812  0602  3005               	movlw	5
  5813  0603  0020               	movlb	0	; select bank0
  5814  0604  00A4               	movwf	??_LCD_Init
  5815  0605  3026               	movlw	38
  5816  0606                     u5117:	
  5817  0606  0B89               	decfsz	9,f
  5818  0607  2E06               	goto	u5117
  5819  0608  0BA4               	decfsz	??_LCD_Init,f
  5820  0609  2E06               	goto	u5117
  5821  060A  0000               	nop
  5822                           
  5823                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5824  060B  3002               	movlw	2
  5825  060C  0020               	movlb	0	; select bank0
  5826  060D  008D               	movwf	13	;volatile
  5827                           
  5828                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5829  060E  0022               	movlb	2	; select bank2
  5830  060F  160C               	bsf	12,4	;volatile
  5831  0610  3200               	nop2	;2 cycle nop
  5832  0611  3200               	nop2	;2 cycle nop
  5833  0612  3200               	nop2	;2 cycle nop
  5834  0613  3200               	nop2	;2 cycle nop
  5835  0614  0022               	movlb	2	; select bank2
  5836  0615  120C               	bcf	12,4	;volatile
  5837  0616  3200               	nop2	;2 cycle nop
  5838  0617  3200               	nop2	;2 cycle nop
  5839  0618  3200               	nop2	;2 cycle nop
  5840  0619  3200               	nop2	;2 cycle nop
  5841                           
  5842                           ;LCD.c: 44: LCD_WriteData(0x28);
  5843  061A  3028               	movlw	40
  5844  061B  318F  2780  3185   	fcall	_LCD_WriteData
  5845                           
  5846                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5847  061E  300C               	movlw	12
  5848  061F  318F  2780  3185   	fcall	_LCD_WriteData
  5849                           
  5850                           ;LCD.c: 46: LCD_DisplayClear();
  5851  0622  318D  252B  3185   	fcall	_LCD_DisplayClear
  5852                           
  5853                           ;LCD.c: 47: LCD_WriteData(0x06);
  5854  0625  3006               	movlw	6
  5855  0626  318F  2780         	fcall	_LCD_WriteData
  5856  0628  0008               	return
  5857  0629                     __end_of_LCD_Init:	
  5858                           
  5859                           	psect	text19
  5860  0D2B                     __ptext19:	
  5861 ;; *************** function _LCD_DisplayClear *****************
  5862 ;; Defined at:
  5863 ;;		line 64 in file "LCD.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, pclath, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5877 ;;      Params:         0       0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0       0
  5879 ;;      Temps:          0       1       0       0       0       0
  5880 ;;      Totals:         0       1       0       0       0       0
  5881 ;;Total ram usage:        1 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    4
  5884 ;; This function calls:
  5885 ;;		_LCD_WriteData
  5886 ;; This function is called by:
  5887 ;;		_LCD_Init
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _LCD_DisplayClear
  5893  0D2B                     _LCD_DisplayClear:	
  5894                           
  5895                           ;LCD.c: 66: LATA3 = 0;
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5899  0D2B  0022               	movlb	2	; select bank2
  5900  0D2C  118C               	bcf	12,3	;volatile
  5901                           
  5902                           ;LCD.c: 67: LCD_WriteData(0x01);
  5903  0D2D  3001               	movlw	1
  5904  0D2E  318F  2780  318D   	fcall	_LCD_WriteData
  5905                           
  5906                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  5907  0D31  3015               	movlw	21
  5908  0D32  0020               	movlb	0	; select bank0
  5909  0D33  00A3               	movwf	??_LCD_DisplayClear
  5910  0D34  30C6               	movlw	198
  5911  0D35                     u5127:	
  5912  0D35  0B89               	decfsz	9,f
  5913  0D36  2D35               	goto	u5127
  5914  0D37  0BA3               	decfsz	??_LCD_DisplayClear,f
  5915  0D38  2D35               	goto	u5127
  5916  0D39  0000               	nop
  5917  0D3A  0008               	return
  5918  0D3B                     __end_of_LCD_DisplayClear:	
  5919                           
  5920                           	psect	text20
  5921  0D1B                     __ptext20:	
  5922 ;; *************** function _LCD_CursorHome *****************
  5923 ;; Defined at:
  5924 ;;		line 75 in file "LCD.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, pclath, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5938 ;;      Params:         0       0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0
  5940 ;;      Temps:          0       1       0       0       0       0
  5941 ;;      Totals:         0       1       0       0       0       0
  5942 ;;Total ram usage:        1 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    4
  5945 ;; This function calls:
  5946 ;;		_LCD_WriteData
  5947 ;; This function is called by:
  5948 ;;		_main
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _LCD_CursorHome
  5954  0D1B                     _LCD_CursorHome:	
  5955                           
  5956                           ;LCD.c: 77: LATA3 = 0;
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5960  0D1B  0022               	movlb	2	; select bank2
  5961  0D1C  118C               	bcf	12,3	;volatile
  5962                           
  5963                           ;LCD.c: 78: LCD_WriteData(0x02);
  5964  0D1D  3002               	movlw	2
  5965  0D1E  318F  2780  318D   	fcall	_LCD_WriteData
  5966                           
  5967                           ;LCD.c: 79: _delay((unsigned long)((2)*(32000000/4000.0)));
  5968  0D21  3015               	movlw	21
  5969  0D22  0020               	movlb	0	; select bank0
  5970  0D23  00A3               	movwf	??_LCD_CursorHome
  5971  0D24  30C6               	movlw	198
  5972  0D25                     u5137:	
  5973  0D25  0B89               	decfsz	9,f
  5974  0D26  2D25               	goto	u5137
  5975  0D27  0BA3               	decfsz	??_LCD_CursorHome,f
  5976  0D28  2D25               	goto	u5137
  5977  0D29  0000               	nop
  5978  0D2A  0008               	return
  5979  0D2B                     __end_of_LCD_CursorHome:	
  5980                           
  5981                           	psect	text21
  5982  0F80                     __ptext21:	
  5983 ;; *************** function _LCD_WriteData *****************
  5984 ;; Defined at:
  5985 ;;		line 15 in file "LCD.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  point           1    wreg     char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  point           1    2[BANK0 ] char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5999 ;;      Params:         0       0       0       0       0       0
  6000 ;;      Locals:         0       1       0       0       0       0
  6001 ;;      Temps:          0       2       0       0       0       0
  6002 ;;      Totals:         0       3       0       0       0       0
  6003 ;;Total ram usage:        3 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    3
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_LCD_Init
  6010 ;;		_LCD_Put
  6011 ;;		_LCD_DisplayClear
  6012 ;;		_LCD_CursorHome
  6013 ;;		_LCD_CursorPosition
  6014 ;;		_LCD_CursorShift
  6015 ;;		_LCD_DispShift
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _LCD_WriteData
  6021  0F80                     _LCD_WriteData:	
  6022                           
  6023                           ;incstack = 0
  6024                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  6025                           ;LCD_WriteData@point stored from wreg
  6026  0F80  0020               	movlb	0	; select bank0
  6027  0F81  00A2               	movwf	LCD_WriteData@point
  6028                           
  6029                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  6030  0F82  30D5               	movlw	213
  6031  0F83                     u5147:	
  6032  0F83  0B89               	decfsz	9,f
  6033  0F84  2F83               	goto	u5147
  6034  0F85  0000               	nop
  6035                           
  6036                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  6037  0F86  0020               	movlb	0	; select bank0
  6038  0F87  0822               	movf	LCD_WriteData@point,w
  6039  0F88  00A0               	movwf	??_LCD_WriteData
  6040  0F89  3004               	movlw	4
  6041  0F8A                     u3535:	
  6042  0F8A  1003               	clrc
  6043  0F8B  1BA0               	btfsc	??_LCD_WriteData,7
  6044  0F8C  1403               	setc
  6045  0F8D  0CA0               	rrf	??_LCD_WriteData,f
  6046  0F8E  0B89               	decfsz	9,f
  6047  0F8F  2F8A               	goto	u3535
  6048  0F90  3003               	movlw	3
  6049  0F91  0520               	andwf	??_LCD_WriteData,w
  6050  0F92  00A1               	movwf	??_LCD_WriteData+1
  6051  0F93  0E22               	swapf	LCD_WriteData@point,w
  6052  0F94  390F               	andlw	15
  6053  0F95  1989               	btfsc	9,3
  6054  0F96  38F0               	iorlw	240
  6055  0F97  390C               	andlw	12
  6056  0F98  0709               	addwf	9,w
  6057  0F99  0421               	iorwf	??_LCD_WriteData+1,w
  6058  0F9A  008D               	movwf	13	;volatile
  6059                           
  6060                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6061  0F9B  0022               	movlb	2	; select bank2
  6062  0F9C  160C               	bsf	12,4	;volatile
  6063  0F9D  3200               	nop2	;2 cycle nop
  6064  0F9E  3200               	nop2	;2 cycle nop
  6065  0F9F  3200               	nop2	;2 cycle nop
  6066  0FA0  3200               	nop2	;2 cycle nop
  6067  0FA1  0022               	movlb	2	; select bank2
  6068  0FA2  120C               	bcf	12,4	;volatile
  6069  0FA3  3200               	nop2	;2 cycle nop
  6070  0FA4  3200               	nop2	;2 cycle nop
  6071  0FA5  3200               	nop2	;2 cycle nop
  6072  0FA6  3200               	nop2	;2 cycle nop
  6073                           
  6074                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  6075  0FA7  3003               	movlw	3
  6076  0FA8  0020               	movlb	0	; select bank0
  6077  0FA9  0522               	andwf	LCD_WriteData@point,w
  6078  0FAA  00A0               	movwf	??_LCD_WriteData
  6079  0FAB  0822               	movf	LCD_WriteData@point,w
  6080  0FAC  390C               	andlw	12
  6081  0FAD  0709               	addwf	9,w
  6082  0FAE  0420               	iorwf	??_LCD_WriteData,w
  6083  0FAF  008D               	movwf	13	;volatile
  6084                           
  6085                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6086  0FB0  0022               	movlb	2	; select bank2
  6087  0FB1  160C               	bsf	12,4	;volatile
  6088  0FB2  3200               	nop2	;2 cycle nop
  6089  0FB3  3200               	nop2	;2 cycle nop
  6090  0FB4  3200               	nop2	;2 cycle nop
  6091  0FB5  3200               	nop2	;2 cycle nop
  6092  0FB6  0022               	movlb	2	; select bank2
  6093  0FB7  120C               	bcf	12,4	;volatile
  6094  0FB8  3200               	nop2	;2 cycle nop
  6095  0FB9  3200               	nop2	;2 cycle nop
  6096  0FBA  3200               	nop2	;2 cycle nop
  6097  0FBB  3200               	nop2	;2 cycle nop
  6098  0FBC  0008               	return
  6099  0FBD                     __end_of_LCD_WriteData:	
  6100                           
  6101                           	psect	text22
  6102  0E55                     __ptext22:	
  6103 ;; *************** function _DAC_Initialize *****************
  6104 ;; Defined at:
  6105 ;;		line 14 in file "MCP4726.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6119 ;;      Params:         0       0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0
  6121 ;;      Temps:          0       2       0       0       0       0
  6122 ;;      Totals:         0       2       0       0       0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    6
  6126 ;; This function calls:
  6127 ;;		_I2C_Init
  6128 ;;		_I2C_Transmit
  6129 ;; This function is called by:
  6130 ;;		_main
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function _DAC_Initialize
  6136  0E55                     _DAC_Initialize:	
  6137                           
  6138                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  6139                           
  6140                           ;incstack = 0
  6141                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6142  0E55  0020               	movlb	0	; select bank0
  6143  0E56  01A5               	clrf	I2C_Init@address
  6144  0E57  01A6               	clrf	I2C_Init@mode
  6145  0E58  01A7               	clrf	I2C_Init@Speed
  6146  0E59  3001               	movlw	1
  6147  0E5A  318E  26C2  318E   	fcall	_I2C_Init
  6148                           
  6149                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  6150  0E5D  0020               	movlb	0	; select bank0
  6151  0E5E  086F               	movf	_ConfigReg,w
  6152  0E5F  391F               	andlw	-225
  6153  0E60  3880               	iorlw	128
  6154  0E61  00EF               	movwf	_ConfigReg
  6155                           
  6156                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  6157  0E62  106F               	bcf	_ConfigReg,0
  6158                           
  6159                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  6160  0E63  30F9               	movlw	-7
  6161  0E64  05EF               	andwf	_ConfigReg,f
  6162                           
  6163                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  6164  0E65  30E7               	movlw	-25
  6165  0E66  05EF               	andwf	_ConfigReg,f
  6166                           
  6167                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  6168  0E67  3060               	movlw	96
  6169  0E68  00B0               	movwf	??_DAC_Initialize
  6170  0E69  0830               	movf	??_DAC_Initialize,w
  6171  0E6A  00A8               	movwf	I2C_Transmit@address
  6172  0E6B  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  6173  0E6C  00B1               	movwf	??_DAC_Initialize+1
  6174  0E6D  0831               	movf	??_DAC_Initialize+1,w
  6175  0E6E  00A9               	movwf	I2C_Transmit@pData
  6176  0E6F  01AA               	clrf	I2C_Transmit@size
  6177  0E70  0AAA               	incf	I2C_Transmit@size,f
  6178  0E71  3001               	movlw	1
  6179  0E72  318E  26EC         	fcall	_I2C_Transmit
  6180  0E74  0008               	return
  6181  0E75                     __end_of_DAC_Initialize:	
  6182                           
  6183                           	psect	text23
  6184  0EEC                     __ptext23:	
  6185 ;; *************** function _I2C_Transmit *****************
  6186 ;; Defined at:
  6187 ;;		line 23 in file "I2C_Common.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  I2Cx            1    wreg     enum E3082
  6190 ;;  address         1    8[BANK0 ] unsigned char 
  6191 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  6192 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6193 ;;  size            1   10[BANK0 ] unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  I2Cx            1   14[BANK0 ] enum E3082
  6196 ;;  result          1   15[BANK0 ] char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      char 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6206 ;;      Params:         0       3       0       0       0       0
  6207 ;;      Locals:         0       2       0       0       0       0
  6208 ;;      Temps:          0       3       0       0       0       0
  6209 ;;      Totals:         0       8       0       0       0       0
  6210 ;;Total ram usage:        8 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    4
  6213 ;; This function calls:
  6214 ;;		_I2C1_Transmit
  6215 ;;		_I2C2_Transmit
  6216 ;; This function is called by:
  6217 ;;		_DAC_Initialize
  6218 ;;		_DAC_WriteVoltage
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           
  6223                           ;psect for function _I2C_Transmit
  6224  0EEC                     _I2C_Transmit:	
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6228                           ;I2C_Transmit@I2Cx stored from wreg
  6229  0EEC  0020               	movlb	0	; select bank0
  6230  0EED  00AE               	movwf	I2C_Transmit@I2Cx
  6231                           
  6232                           ;I2C_Common.c: 25: int8_t result;
  6233                           ;I2C_Common.c: 27: switch(I2Cx)
  6234  0EEE  2F0D               	goto	l4147
  6235  0EEF                     l4141:	
  6236                           ;I2C_Common.c: 28: {
  6237                           ;I2C_Common.c: 29: case I2C1_MODULE:
  6238                           
  6239                           
  6240                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  6241  0EEF  0829               	movf	I2C_Transmit@pData,w
  6242  0EF0  00AB               	movwf	??_I2C_Transmit
  6243  0EF1  082B               	movf	??_I2C_Transmit,w
  6244  0EF2  00A0               	movwf	I2C1_Transmit@pData
  6245  0EF3  082A               	movf	I2C_Transmit@size,w
  6246  0EF4  00AC               	movwf	??_I2C_Transmit+1
  6247  0EF5  082C               	movf	??_I2C_Transmit+1,w
  6248  0EF6  00A1               	movwf	I2C1_Transmit@size
  6249  0EF7  0828               	movf	I2C_Transmit@address,w
  6250  0EF8  3184  2494  318E   	fcall	_I2C1_Transmit
  6251  0EFB  2F08               	goto	L7
  6252  0EFC                     l4143:	
  6253                           ;I2C_Common.c: 33: case I2C2_MODULE:
  6254                           
  6255                           ;I2C_Common.c: 31: break;
  6256                           
  6257                           
  6258                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  6259  0EFC  0829               	movf	I2C_Transmit@pData,w
  6260  0EFD  00AB               	movwf	??_I2C_Transmit
  6261  0EFE  082B               	movf	??_I2C_Transmit,w
  6262  0EFF  00A0               	movwf	I2C2_Transmit@pData
  6263  0F00  082A               	movf	I2C_Transmit@size,w
  6264  0F01  00AC               	movwf	??_I2C_Transmit+1
  6265  0F02  082C               	movf	??_I2C_Transmit+1,w
  6266  0F03  00A1               	movwf	I2C2_Transmit@size
  6267  0F04  0828               	movf	I2C_Transmit@address,w
  6268  0F05  3183  23FC  318E   	fcall	_I2C2_Transmit
  6269  0F08                     L7:	
  6270  0F08  0020               	movlb	0	; select bank0
  6271  0F09  00AD               	movwf	??_I2C_Transmit+2
  6272  0F0A  082D               	movf	??_I2C_Transmit+2,w
  6273  0F0B  00AF               	movwf	I2C_Transmit@result
  6274                           
  6275                           ;I2C_Common.c: 36: }
  6276                           
  6277                           ;I2C_Common.c: 35: break;
  6278  0F0C  2F15               	goto	l4149
  6279  0F0D                     l4147:	
  6280  0F0D  082E               	movf	I2C_Transmit@I2Cx,w
  6281                           
  6282                           ; Switch size 1, requested type "space"
  6283                           ; Number of cases is 2, Range of values is 0 to 1
  6284                           ; switch strategies available:
  6285                           ; Name         Instructions Cycles
  6286                           ; simple_byte            7     4 (average)
  6287                           ; direct_byte           10     6 (fixed)
  6288                           ; jumptable            260     6 (fixed)
  6289                           ;	Chosen strategy is simple_byte
  6290  0F0E  3A00               	xorlw	0	; case 0
  6291  0F0F  1903               	skipnz
  6292  0F10  2EEF               	goto	l4141
  6293  0F11  3A01               	xorlw	1	; case 1
  6294  0F12  1903               	skipnz
  6295  0F13  2EFC               	goto	l4143
  6296  0F14  2F15               	goto	l4149
  6297  0F15                     l4149:	
  6298                           
  6299                           ;I2C_Common.c: 37: return result;
  6300  0F15  082F               	movf	I2C_Transmit@result,w
  6301  0F16  0008               	return
  6302  0F17                     __end_of_I2C_Transmit:	
  6303                           
  6304                           	psect	text24
  6305  03FC                     __ptext24:	
  6306 ;; *************** function _I2C2_Transmit *****************
  6307 ;; Defined at:
  6308 ;;		line 52 in file "I2C2.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  address         1    wreg     unsigned char 
  6311 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6312 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6313 ;;  size            1    1[BANK0 ] unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  address         1    4[BANK0 ] unsigned char 
  6316 ;;  i               1    6[BANK0 ] unsigned char 
  6317 ;;  i               1    5[BANK0 ] unsigned char 
  6318 ;;  result          1    7[BANK0 ] char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      char 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6328 ;;      Params:         0       2       0       0       0       0
  6329 ;;      Locals:         0       4       0       0       0       0
  6330 ;;      Temps:          0       2       0       0       0       0
  6331 ;;      Totals:         0       8       0       0       0       0
  6332 ;;Total ram usage:        8 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_I2C_Transmit
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _I2C2_Transmit
  6344  03FC                     _I2C2_Transmit:	
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  6348                           ;I2C2_Transmit@address stored from wreg
  6349  03FC  0020               	movlb	0	; select bank0
  6350  03FD  00A4               	movwf	I2C2_Transmit@address
  6351                           
  6352                           ;I2C2.c: 54: int8_t result = 0;
  6353  03FE  01A7               	clrf	I2C2_Transmit@result
  6354                           
  6355                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  6356  03FF  2C88               	goto	l4053
  6357  0400                     l4009:	
  6358                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6359                           
  6360                           ;I2C2.c: 57: {
  6361                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6362                           
  6363  0400  3005               	movlw	5
  6364  0401  0024               	movlb	4	; select bank4
  6365  0402  051C               	andwf	28,w	;volatile
  6366  0403  0020               	movlb	0	; select bank0
  6367  0404  00A2               	movwf	??_I2C2_Transmit
  6368  0405  0024               	movlb	4	; select bank4
  6369  0406  081E               	movf	30,w	;volatile
  6370  0407  391F               	andlw	31
  6371  0408  0020               	movlb	0	; select bank0
  6372  0409  0422               	iorwf	??_I2C2_Transmit,w
  6373  040A  1D03               	btfss	3,2
  6374  040B  2C00               	goto	l4009
  6375                           
  6376                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6377  040C  0024               	movlb	4	; select bank4
  6378  040D  141E               	bsf	30,0	;volatile
  6379  040E                     l4011:	
  6380                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6381                           
  6382  040E  3005               	movlw	5
  6383  040F  0024               	movlb	4	; select bank4
  6384  0410  051C               	andwf	28,w	;volatile
  6385  0411  0020               	movlb	0	; select bank0
  6386  0412  00A2               	movwf	??_I2C2_Transmit
  6387  0413  0024               	movlb	4	; select bank4
  6388  0414  081E               	movf	30,w	;volatile
  6389  0415  391F               	andlw	31
  6390  0416  0020               	movlb	0	; select bank0
  6391  0417  0422               	iorwf	??_I2C2_Transmit,w
  6392  0418  1D03               	btfss	3,2
  6393  0419  2C0E               	goto	l4011
  6394                           
  6395                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6396  041A  3524               	lslf	I2C2_Transmit@address,w
  6397  041B  0024               	movlb	4	; select bank4
  6398  041C  0099               	movwf	25	;volatile
  6399  041D                     l228:	
  6400                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6401                           
  6402  041D  191C               	btfsc	28,2	;volatile
  6403  041E  2C1D               	goto	l228
  6404                           
  6405                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6406  041F  3000               	movlw	0
  6407  0420  1B1E               	btfsc	30,6	;volatile
  6408  0421  3001               	movlw	1
  6409  0422  0020               	movlb	0	; select bank0
  6410  0423  00A7               	movwf	I2C2_Transmit@result
  6411                           
  6412                           ;I2C2.c: 67: if (!result)
  6413  0424  0827               	movf	I2C2_Transmit@result,w
  6414  0425  1D03               	btfss	3,2
  6415  0426  2C54               	goto	l4035
  6416                           
  6417                           ;I2C2.c: 68: {
  6418                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6419  0427  01A5               	clrf	I2C2_Transmit@i
  6420  0428  2C2D               	goto	l4033
  6421  0429                     l4031:	
  6422                           ;I2C2.c: 79: break;
  6423                           
  6424  0429  3001               	movlw	1
  6425  042A  00A2               	movwf	??_I2C2_Transmit
  6426  042B  0822               	movf	??_I2C2_Transmit,w
  6427  042C  07A5               	addwf	I2C2_Transmit@i,f
  6428  042D                     l4033:	
  6429  042D  0821               	movf	I2C2_Transmit@size,w
  6430  042E  0225               	subwf	I2C2_Transmit@i,w
  6431  042F  1803               	btfsc	3,0
  6432  0430  2C54               	goto	l4035
  6433  0431                     l4021:	
  6434                           ;I2C2.c: 70: {
  6435                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6436                           
  6437  0431  3005               	movlw	5
  6438  0432  0024               	movlb	4	; select bank4
  6439  0433  051C               	andwf	28,w	;volatile
  6440  0434  0020               	movlb	0	; select bank0
  6441  0435  00A2               	movwf	??_I2C2_Transmit
  6442  0436  0024               	movlb	4	; select bank4
  6443  0437  081E               	movf	30,w	;volatile
  6444  0438  391F               	andlw	31
  6445  0439  0020               	movlb	0	; select bank0
  6446  043A  0422               	iorwf	??_I2C2_Transmit,w
  6447  043B  1D03               	btfss	3,2
  6448  043C  2C31               	goto	l4021
  6449                           
  6450                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6451  043D  0825               	movf	I2C2_Transmit@i,w
  6452  043E  0720               	addwf	I2C2_Transmit@pData,w
  6453  043F  00A2               	movwf	??_I2C2_Transmit
  6454  0440  0822               	movf	??_I2C2_Transmit,w
  6455  0441  0086               	movwf	6
  6456  0442  0187               	clrf	7
  6457  0443  0801               	movf	1,w
  6458  0444  0024               	movlb	4	; select bank4
  6459  0445  0099               	movwf	25	;volatile
  6460  0446                     l237:	
  6461                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6462                           
  6463  0446  191C               	btfsc	28,2	;volatile
  6464  0447  2C46               	goto	l237
  6465                           
  6466                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6467  0448  3000               	movlw	0
  6468  0449  1B1E               	btfsc	30,6	;volatile
  6469  044A  3001               	movlw	1
  6470  044B  0020               	movlb	0	; select bank0
  6471  044C  00A7               	movwf	I2C2_Transmit@result
  6472                           
  6473                           ;I2C2.c: 76: if (result)
  6474  044D  0827               	movf	I2C2_Transmit@result,w
  6475  044E  1903               	btfsc	3,2
  6476  044F  2C29               	goto	l4031
  6477                           
  6478                           ;I2C2.c: 77: {
  6479                           ;I2C2.c: 78: result = 2;
  6480  0450  3002               	movlw	2
  6481  0451  00A2               	movwf	??_I2C2_Transmit
  6482  0452  0822               	movf	??_I2C2_Transmit,w
  6483  0453  00A7               	movwf	I2C2_Transmit@result
  6484  0454                     l4035:	
  6485                           ;I2C2.c: 80: }
  6486                           ;I2C2.c: 81: }
  6487                           ;I2C2.c: 82: }
  6488                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6489                           
  6490  0454  3005               	movlw	5
  6491  0455  0024               	movlb	4	; select bank4
  6492  0456  051C               	andwf	28,w	;volatile
  6493  0457  0020               	movlb	0	; select bank0
  6494  0458  00A2               	movwf	??_I2C2_Transmit
  6495  0459  0024               	movlb	4	; select bank4
  6496  045A  081E               	movf	30,w	;volatile
  6497  045B  391F               	andlw	31
  6498  045C  0020               	movlb	0	; select bank0
  6499  045D  0422               	iorwf	??_I2C2_Transmit,w
  6500  045E  1D03               	btfss	3,2
  6501  045F  2C54               	goto	l4035
  6502                           
  6503                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6504  0460  0024               	movlb	4	; select bank4
  6505  0461  151E               	bsf	30,2	;volatile
  6506                           
  6507                           ;I2C2.c: 86: break;
  6508  0462  2C91               	goto	l4055
  6509  0463                     l246:	
  6510                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6511                           
  6512                           
  6513                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6514  0463  0024               	movlb	4	; select bank4
  6515  0464  1D9C               	btfss	28,3	;volatile
  6516  0465  1E1C               	btfss	28,4	;volatile
  6517  0466  2C85               	goto	l4049
  6518                           
  6519                           ;I2C2.c: 90: {
  6520                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6521  0467  0020               	movlb	0	; select bank0
  6522  0468  01A6               	clrf	I2C2_Transmit@i_316
  6523  0469                     l4045:	
  6524  0469  0821               	movf	I2C2_Transmit@size,w
  6525  046A  0226               	subwf	I2C2_Transmit@i_316,w
  6526  046B  1803               	btfsc	3,0
  6527  046C  2C80               	goto	l4047
  6528                           
  6529                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6530  046D  0826               	movf	I2C2_Transmit@i_316,w
  6531  046E  0720               	addwf	I2C2_Transmit@pData,w
  6532  046F  00A2               	movwf	??_I2C2_Transmit
  6533  0470  0822               	movf	??_I2C2_Transmit,w
  6534  0471  0086               	movwf	6
  6535  0472  0187               	clrf	7
  6536  0473  0801               	movf	1,w
  6537  0474  00A3               	movwf	??_I2C2_Transmit+1
  6538  0475  0826               	movf	I2C2_Transmit@i_316,w
  6539  0476  3EB4               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6540  0477  0086               	movwf	6
  6541  0478  0187               	clrf	7
  6542  0479  0823               	movf	??_I2C2_Transmit+1,w
  6543  047A  0081               	movwf	1
  6544  047B  3001               	movlw	1
  6545  047C  00A2               	movwf	??_I2C2_Transmit
  6546  047D  0822               	movf	??_I2C2_Transmit,w
  6547  047E  07A6               	addwf	I2C2_Transmit@i_316,f
  6548  047F  2C69               	goto	l4045
  6549  0480                     l4047:	
  6550                           
  6551                           ;I2C2.c: 93: result = size;
  6552  0480  0821               	movf	I2C2_Transmit@size,w
  6553  0481  00A2               	movwf	??_I2C2_Transmit
  6554  0482  0822               	movf	??_I2C2_Transmit,w
  6555  0483  00A7               	movwf	I2C2_Transmit@result
  6556                           
  6557                           ;I2C2.c: 94: }
  6558  0484  2C91               	goto	l4055
  6559  0485                     l4049:	
  6560                           
  6561                           ;I2C2.c: 95: else
  6562                           ;I2C2.c: 96: result = 0;
  6563  0485  0020               	movlb	0	; select bank0
  6564  0486  01A7               	clrf	I2C2_Transmit@result
  6565                           
  6566                           ;I2C2.c: 98: }
  6567                           
  6568                           ;I2C2.c: 97: break;
  6569  0487  2C91               	goto	l4055
  6570  0488                     l4053:	
  6571  0488  0021               	movlb	1	; select bank1
  6572  0489  0846               	movf	(_I2C2_Config^(0+128)+18),w
  6573                           
  6574                           ; Switch size 1, requested type "space"
  6575                           ; Number of cases is 2, Range of values is 0 to 1
  6576                           ; switch strategies available:
  6577                           ; Name         Instructions Cycles
  6578                           ; simple_byte            7     4 (average)
  6579                           ; direct_byte           10     6 (fixed)
  6580                           ; jumptable            260     6 (fixed)
  6581                           ;	Chosen strategy is simple_byte
  6582  048A  3A00               	xorlw	0	; case 0
  6583  048B  1903               	skipnz
  6584  048C  2C00               	goto	l4009
  6585  048D  3A01               	xorlw	1	; case 1
  6586  048E  1903               	skipnz
  6587  048F  2C63               	goto	l246
  6588  0490  2C91               	goto	l4055
  6589  0491                     l4055:	
  6590                           
  6591                           ;I2C2.c: 100: return result;
  6592  0491  0020               	movlb	0	; select bank0
  6593  0492  0827               	movf	I2C2_Transmit@result,w
  6594  0493  0008               	return
  6595  0494                     __end_of_I2C2_Transmit:	
  6596                           
  6597                           	psect	text25
  6598  0494                     __ptext25:	
  6599 ;; *************** function _I2C1_Transmit *****************
  6600 ;; Defined at:
  6601 ;;		line 52 in file "I2C1.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  address         1    wreg     unsigned char 
  6604 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6605 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6606 ;;  size            1    1[BANK0 ] unsigned char 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  address         1    4[BANK0 ] unsigned char 
  6609 ;;  i               1    6[BANK0 ] unsigned char 
  6610 ;;  i               1    5[BANK0 ] unsigned char 
  6611 ;;  result          1    7[BANK0 ] char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      char 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6621 ;;      Params:         0       2       0       0       0       0
  6622 ;;      Locals:         0       4       0       0       0       0
  6623 ;;      Temps:          0       2       0       0       0       0
  6624 ;;      Totals:         0       8       0       0       0       0
  6625 ;;Total ram usage:        8 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    3
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_I2C_Transmit
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function _I2C1_Transmit
  6637  0494                     _I2C1_Transmit:	
  6638                           
  6639                           ;incstack = 0
  6640                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6641                           ;I2C1_Transmit@address stored from wreg
  6642  0494  0020               	movlb	0	; select bank0
  6643  0495  00A4               	movwf	I2C1_Transmit@address
  6644                           
  6645                           ;I2C1.c: 54: int8_t result;
  6646                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6647  0496  2D1F               	goto	l3967
  6648  0497                     l3923:	
  6649                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6650                           
  6651                           ;I2C1.c: 57: {
  6652                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6653                           
  6654  0497  3005               	movlw	5
  6655  0498  0024               	movlb	4	; select bank4
  6656  0499  0514               	andwf	20,w	;volatile
  6657  049A  0020               	movlb	0	; select bank0
  6658  049B  00A2               	movwf	??_I2C1_Transmit
  6659  049C  0024               	movlb	4	; select bank4
  6660  049D  0816               	movf	22,w	;volatile
  6661  049E  391F               	andlw	31
  6662  049F  0020               	movlb	0	; select bank0
  6663  04A0  0422               	iorwf	??_I2C1_Transmit,w
  6664  04A1  1D03               	btfss	3,2
  6665  04A2  2C97               	goto	l3923
  6666                           
  6667                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6668  04A3  0024               	movlb	4	; select bank4
  6669  04A4  1416               	bsf	22,0	;volatile
  6670  04A5                     l3925:	
  6671                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6672                           
  6673  04A5  3005               	movlw	5
  6674  04A6  0024               	movlb	4	; select bank4
  6675  04A7  0514               	andwf	20,w	;volatile
  6676  04A8  0020               	movlb	0	; select bank0
  6677  04A9  00A2               	movwf	??_I2C1_Transmit
  6678  04AA  0024               	movlb	4	; select bank4
  6679  04AB  0816               	movf	22,w	;volatile
  6680  04AC  391F               	andlw	31
  6681  04AD  0020               	movlb	0	; select bank0
  6682  04AE  0422               	iorwf	??_I2C1_Transmit,w
  6683  04AF  1D03               	btfss	3,2
  6684  04B0  2CA5               	goto	l3925
  6685                           
  6686                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6687  04B1  3524               	lslf	I2C1_Transmit@address,w
  6688  04B2  0024               	movlb	4	; select bank4
  6689  04B3  0091               	movwf	17	;volatile
  6690  04B4                     l91:	
  6691                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6692                           
  6693  04B4  1914               	btfsc	20,2	;volatile
  6694  04B5  2CB4               	goto	l91
  6695                           
  6696                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6697  04B6  3000               	movlw	0
  6698  04B7  1B16               	btfsc	22,6	;volatile
  6699  04B8  3001               	movlw	1
  6700  04B9  0020               	movlb	0	; select bank0
  6701  04BA  00A7               	movwf	I2C1_Transmit@result
  6702                           
  6703                           ;I2C1.c: 67: if (!result)
  6704  04BB  0827               	movf	I2C1_Transmit@result,w
  6705  04BC  1D03               	btfss	3,2
  6706  04BD  2CEB               	goto	l3949
  6707                           
  6708                           ;I2C1.c: 68: {
  6709                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6710  04BE  01A5               	clrf	I2C1_Transmit@i
  6711  04BF  2CC4               	goto	l3947
  6712  04C0                     l3945:	
  6713                           ;I2C1.c: 79: break;
  6714                           
  6715  04C0  3001               	movlw	1
  6716  04C1  00A2               	movwf	??_I2C1_Transmit
  6717  04C2  0822               	movf	??_I2C1_Transmit,w
  6718  04C3  07A5               	addwf	I2C1_Transmit@i,f
  6719  04C4                     l3947:	
  6720  04C4  0821               	movf	I2C1_Transmit@size,w
  6721  04C5  0225               	subwf	I2C1_Transmit@i,w
  6722  04C6  1803               	btfsc	3,0
  6723  04C7  2CEB               	goto	l3949
  6724  04C8                     l3935:	
  6725                           ;I2C1.c: 70: {
  6726                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6727                           
  6728  04C8  3005               	movlw	5
  6729  04C9  0024               	movlb	4	; select bank4
  6730  04CA  0514               	andwf	20,w	;volatile
  6731  04CB  0020               	movlb	0	; select bank0
  6732  04CC  00A2               	movwf	??_I2C1_Transmit
  6733  04CD  0024               	movlb	4	; select bank4
  6734  04CE  0816               	movf	22,w	;volatile
  6735  04CF  391F               	andlw	31
  6736  04D0  0020               	movlb	0	; select bank0
  6737  04D1  0422               	iorwf	??_I2C1_Transmit,w
  6738  04D2  1D03               	btfss	3,2
  6739  04D3  2CC8               	goto	l3935
  6740                           
  6741                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6742  04D4  0825               	movf	I2C1_Transmit@i,w
  6743  04D5  0720               	addwf	I2C1_Transmit@pData,w
  6744  04D6  00A2               	movwf	??_I2C1_Transmit
  6745  04D7  0822               	movf	??_I2C1_Transmit,w
  6746  04D8  0086               	movwf	6
  6747  04D9  0187               	clrf	7
  6748  04DA  0801               	movf	1,w
  6749  04DB  0024               	movlb	4	; select bank4
  6750  04DC  0091               	movwf	17	;volatile
  6751  04DD                     l100:	
  6752                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6753                           
  6754  04DD  1914               	btfsc	20,2	;volatile
  6755  04DE  2CDD               	goto	l100
  6756                           
  6757                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6758  04DF  3000               	movlw	0
  6759  04E0  1B16               	btfsc	22,6	;volatile
  6760  04E1  3001               	movlw	1
  6761  04E2  0020               	movlb	0	; select bank0
  6762  04E3  00A7               	movwf	I2C1_Transmit@result
  6763                           
  6764                           ;I2C1.c: 76: if (result)
  6765  04E4  0827               	movf	I2C1_Transmit@result,w
  6766  04E5  1903               	btfsc	3,2
  6767  04E6  2CC0               	goto	l3945
  6768                           
  6769                           ;I2C1.c: 77: {
  6770                           ;I2C1.c: 78: result = 2;
  6771  04E7  3002               	movlw	2
  6772  04E8  00A2               	movwf	??_I2C1_Transmit
  6773  04E9  0822               	movf	??_I2C1_Transmit,w
  6774  04EA  00A7               	movwf	I2C1_Transmit@result
  6775  04EB                     l3949:	
  6776                           ;I2C1.c: 80: }
  6777                           ;I2C1.c: 81: }
  6778                           ;I2C1.c: 82: }
  6779                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6780                           
  6781  04EB  3005               	movlw	5
  6782  04EC  0024               	movlb	4	; select bank4
  6783  04ED  0514               	andwf	20,w	;volatile
  6784  04EE  0020               	movlb	0	; select bank0
  6785  04EF  00A2               	movwf	??_I2C1_Transmit
  6786  04F0  0024               	movlb	4	; select bank4
  6787  04F1  0816               	movf	22,w	;volatile
  6788  04F2  391F               	andlw	31
  6789  04F3  0020               	movlb	0	; select bank0
  6790  04F4  0422               	iorwf	??_I2C1_Transmit,w
  6791  04F5  1D03               	btfss	3,2
  6792  04F6  2CEB               	goto	l3949
  6793                           
  6794                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6795  04F7  0024               	movlb	4	; select bank4
  6796  04F8  1516               	bsf	22,2	;volatile
  6797                           
  6798                           ;I2C1.c: 86: break;
  6799  04F9  2D28               	goto	l3969
  6800  04FA                     l109:	
  6801                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6802                           
  6803                           
  6804                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6805  04FA  0024               	movlb	4	; select bank4
  6806  04FB  1D94               	btfss	20,3	;volatile
  6807  04FC  1E14               	btfss	20,4	;volatile
  6808  04FD  2D1C               	goto	l3963
  6809                           
  6810                           ;I2C1.c: 90: {
  6811                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6812  04FE  0020               	movlb	0	; select bank0
  6813  04FF  01A6               	clrf	I2C1_Transmit@i_172
  6814  0500                     l3959:	
  6815  0500  0821               	movf	I2C1_Transmit@size,w
  6816  0501  0226               	subwf	I2C1_Transmit@i_172,w
  6817  0502  1803               	btfsc	3,0
  6818  0503  2D17               	goto	l3961
  6819                           
  6820                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6821  0504  0826               	movf	I2C1_Transmit@i_172,w
  6822  0505  0720               	addwf	I2C1_Transmit@pData,w
  6823  0506  00A2               	movwf	??_I2C1_Transmit
  6824  0507  0822               	movf	??_I2C1_Transmit,w
  6825  0508  0086               	movwf	6
  6826  0509  0187               	clrf	7
  6827  050A  0801               	movf	1,w
  6828  050B  00A3               	movwf	??_I2C1_Transmit+1
  6829  050C  0826               	movf	I2C1_Transmit@i_172,w
  6830  050D  3EC7               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6831  050E  0086               	movwf	6
  6832  050F  0187               	clrf	7
  6833  0510  0823               	movf	??_I2C1_Transmit+1,w
  6834  0511  0081               	movwf	1
  6835  0512  3001               	movlw	1
  6836  0513  00A2               	movwf	??_I2C1_Transmit
  6837  0514  0822               	movf	??_I2C1_Transmit,w
  6838  0515  07A6               	addwf	I2C1_Transmit@i_172,f
  6839  0516  2D00               	goto	l3959
  6840  0517                     l3961:	
  6841                           
  6842                           ;I2C1.c: 93: result = size;
  6843  0517  0821               	movf	I2C1_Transmit@size,w
  6844  0518  00A2               	movwf	??_I2C1_Transmit
  6845  0519  0822               	movf	??_I2C1_Transmit,w
  6846  051A  00A7               	movwf	I2C1_Transmit@result
  6847                           
  6848                           ;I2C1.c: 94: }
  6849  051B  2D28               	goto	l3969
  6850  051C                     l3963:	
  6851                           
  6852                           ;I2C1.c: 95: else
  6853                           ;I2C1.c: 96: result = 0;
  6854  051C  0020               	movlb	0	; select bank0
  6855  051D  01A7               	clrf	I2C1_Transmit@result
  6856                           
  6857                           ;I2C1.c: 98: }
  6858                           
  6859                           ;I2C1.c: 97: break;
  6860  051E  2D28               	goto	l3969
  6861  051F                     l3967:	
  6862  051F  0021               	movlb	1	; select bank1
  6863  0520  0859               	movf	(_I2C1_Config^(0+128)+18),w
  6864                           
  6865                           ; Switch size 1, requested type "space"
  6866                           ; Number of cases is 2, Range of values is 0 to 1
  6867                           ; switch strategies available:
  6868                           ; Name         Instructions Cycles
  6869                           ; simple_byte            7     4 (average)
  6870                           ; direct_byte           10     6 (fixed)
  6871                           ; jumptable            260     6 (fixed)
  6872                           ;	Chosen strategy is simple_byte
  6873  0521  3A00               	xorlw	0	; case 0
  6874  0522  1903               	skipnz
  6875  0523  2C97               	goto	l3923
  6876  0524  3A01               	xorlw	1	; case 1
  6877  0525  1903               	skipnz
  6878  0526  2CFA               	goto	l109
  6879  0527  2D28               	goto	l3969
  6880  0528                     l3969:	
  6881                           
  6882                           ;I2C1.c: 100: return result;
  6883  0528  0020               	movlb	0	; select bank0
  6884  0529  0827               	movf	I2C1_Transmit@result,w
  6885  052A  0008               	return
  6886  052B                     __end_of_I2C1_Transmit:	
  6887                           
  6888                           	psect	text26
  6889  0EC2                     __ptext26:	
  6890 ;; *************** function _I2C_Init *****************
  6891 ;; Defined at:
  6892 ;;		line 6 in file "I2C_Common.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  I2Cx            1    wreg     enum E3082
  6895 ;;  address         1    5[BANK0 ] unsigned char 
  6896 ;;  mode            1    6[BANK0 ] enum E3073
  6897 ;;  Speed           1    7[BANK0 ] enum E3077
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  I2Cx            1   10[BANK0 ] enum E3082
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6909 ;;      Params:         0       3       0       0       0       0
  6910 ;;      Locals:         0       1       0       0       0       0
  6911 ;;      Temps:          0       2       0       0       0       0
  6912 ;;      Totals:         0       6       0       0       0       0
  6913 ;;Total ram usage:        6 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    5
  6916 ;; This function calls:
  6917 ;;		_I2C1_Setting
  6918 ;;		_I2C2_Setting
  6919 ;; This function is called by:
  6920 ;;		_DAC_Initialize
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function _I2C_Init
  6926  0EC2                     _I2C_Init:	
  6927                           
  6928                           ;incstack = 0
  6929                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6930                           ;I2C_Init@I2Cx stored from wreg
  6931  0EC2  0020               	movlb	0	; select bank0
  6932  0EC3  00AA               	movwf	I2C_Init@I2Cx
  6933                           
  6934                           ;I2C_Common.c: 8: switch(I2Cx)
  6935  0EC4  2EE0               	goto	l4137
  6936  0EC5                     l4131:	
  6937                           ;I2C_Common.c: 9: {
  6938                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6939                           
  6940                           
  6941                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6942  0EC5  0826               	movf	I2C_Init@mode,w
  6943  0EC6  00A8               	movwf	??_I2C_Init
  6944  0EC7  0828               	movf	??_I2C_Init,w
  6945  0EC8  00A1               	movwf	I2C1_Setting@mode
  6946  0EC9  0827               	movf	I2C_Init@Speed,w
  6947  0ECA  00A9               	movwf	??_I2C_Init+1
  6948  0ECB  0829               	movf	??_I2C_Init+1,w
  6949  0ECC  00A2               	movwf	I2C1_Setting@Speed
  6950  0ECD  0825               	movf	I2C_Init@address,w
  6951  0ECE  3187  27AC  318E   	fcall	_I2C1_Setting
  6952                           
  6953                           ;I2C_Common.c: 12: break;
  6954  0ED1  2EE9               	goto	l338
  6955  0ED2                     l4133:	
  6956                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6957                           
  6958                           
  6959                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6960  0ED2  0020               	movlb	0	; select bank0
  6961  0ED3  0826               	movf	I2C_Init@mode,w
  6962  0ED4  00A8               	movwf	??_I2C_Init
  6963  0ED5  0828               	movf	??_I2C_Init,w
  6964  0ED6  00A1               	movwf	I2C2_Setting@mode
  6965  0ED7  0827               	movf	I2C_Init@Speed,w
  6966  0ED8  00A9               	movwf	??_I2C_Init+1
  6967  0ED9  0829               	movf	??_I2C_Init+1,w
  6968  0EDA  00A2               	movwf	I2C2_Setting@Speed
  6969  0EDB  0825               	movf	I2C_Init@address,w
  6970  0EDC  3187  2768  318E   	fcall	_I2C2_Setting
  6971                           
  6972                           ;I2C_Common.c: 17: }
  6973                           
  6974                           ;I2C_Common.c: 16: break;
  6975  0EDF  2EE9               	goto	l338
  6976  0EE0                     l4137:	
  6977  0EE0  0020               	movlb	0	; select bank0
  6978  0EE1  082A               	movf	I2C_Init@I2Cx,w
  6979                           
  6980                           ; Switch size 1, requested type "space"
  6981                           ; Number of cases is 2, Range of values is 0 to 1
  6982                           ; switch strategies available:
  6983                           ; Name         Instructions Cycles
  6984                           ; simple_byte            7     4 (average)
  6985                           ; direct_byte           10     6 (fixed)
  6986                           ; jumptable            260     6 (fixed)
  6987                           ;	Chosen strategy is simple_byte
  6988  0EE2  3A00               	xorlw	0	; case 0
  6989  0EE3  1903               	skipnz
  6990  0EE4  2EC5               	goto	l4131
  6991  0EE5  3A01               	xorlw	1	; case 1
  6992  0EE6  1903               	skipnz
  6993  0EE7  2ED2               	goto	l4133
  6994  0EE8  2EE9               	goto	l338
  6995  0EE9                     l338:	
  6996                           
  6997                           ;I2C_Common.c: 19: PEIE = 1;
  6998  0EE9  170B               	bsf	11,6	;volatile
  6999                           
  7000                           ;I2C_Common.c: 20: GIE = 1;
  7001  0EEA  178B               	bsf	11,7	;volatile
  7002  0EEB  0008               	return
  7003  0EEC                     __end_of_I2C_Init:	
  7004                           
  7005                           	psect	text27
  7006  0768                     __ptext27:	
  7007 ;; *************** function _I2C2_Setting *****************
  7008 ;; Defined at:
  7009 ;;		line 15 in file "I2C2.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  address         1    wreg     unsigned char 
  7012 ;;  mode            1    1[BANK0 ] enum E3073
  7013 ;;  Speed           1    2[BANK0 ] enum E3077
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  address         1    4[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      void 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7025 ;;      Params:         0       2       0       0       0       0
  7026 ;;      Locals:         0       1       0       0       0       0
  7027 ;;      Temps:          0       1       0       0       0       0
  7028 ;;      Totals:         0       4       0       0       0       0
  7029 ;;Total ram usage:        4 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    4
  7032 ;; This function calls:
  7033 ;;		_I2C2_PinInit
  7034 ;; This function is called by:
  7035 ;;		_I2C_Init
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _I2C2_Setting
  7041  0768                     _I2C2_Setting:	
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7045                           ;I2C2_Setting@address stored from wreg
  7046  0768  0020               	movlb	0	; select bank0
  7047  0769  00A4               	movwf	I2C2_Setting@address
  7048                           
  7049                           ;I2C2.c: 17: I2C2_PinInit();
  7050  076A  318C  24E4  3187   	fcall	_I2C2_PinInit
  7051                           
  7052                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  7053  076D  0020               	movlb	0	; select bank0
  7054  076E  0821               	movf	I2C2_Setting@mode,w
  7055  076F  00A3               	movwf	??_I2C2_Setting
  7056  0770  0823               	movf	??_I2C2_Setting,w
  7057  0771  0021               	movlb	1	; select bank1
  7058  0772  00C6               	movwf	(_I2C2_Config^(0+128)+18)
  7059                           
  7060                           ;I2C2.c: 20: switch(mode)
  7061  0773  2F9C               	goto	l4005
  7062  0774                     l211:	
  7063                           ;I2C2.c: 21: {
  7064                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  7065                           
  7066                           
  7067                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  7068  0774  0024               	movlb	4	; select bank4
  7069  0775  159D               	bsf	29,3	;volatile
  7070                           
  7071                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  7072  0776  0020               	movlb	0	; select bank0
  7073  0777  0822               	movf	I2C2_Setting@Speed,w
  7074  0778  1D03               	btfss	3,2
  7075  0779  2F7E               	goto	l3983
  7076                           
  7077                           ;I2C2.c: 25: {
  7078                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  7079  077A  0024               	movlb	4	; select bank4
  7080  077B  179C               	bsf	28,7	;volatile
  7081                           
  7082                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  7083  077C  304F               	movlw	79
  7084  077D  2F88               	goto	L8
  7085  077E                     l3983:	
  7086                           ;I2C2.c: 28: }
  7087                           
  7088                           
  7089                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  7090  077E  0020               	movlb	0	; select bank0
  7091  077F  0322               	decf	I2C2_Setting@Speed,w
  7092  0780  1D03               	btfss	3,2
  7093  0781  2F89               	goto	l3989
  7094                           
  7095                           ;I2C2.c: 30: {
  7096                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  7097  0782  307F               	movlw	127
  7098  0783  00A3               	movwf	??_I2C2_Setting
  7099  0784  0823               	movf	??_I2C2_Setting,w
  7100  0785  0024               	movlb	4	; select bank4
  7101  0786  059C               	andwf	28,f	;volatile
  7102                           
  7103                           ;I2C2.c: 32: SSP2ADD = 0x13;
  7104  0787  3013               	movlw	19
  7105  0788                     L8:	
  7106  0788  009A               	movwf	26	;volatile
  7107  0789                     l3989:	
  7108                           
  7109                           ;I2C2.c: 33: }
  7110                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  7111  0789  0024               	movlb	4	; select bank4
  7112  078A  2F9A               	goto	l4001
  7113  078B                     l3991:	
  7114                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  7115                           
  7116                           ;I2C2.c: 35: break;
  7117                           
  7118                           
  7119                           ;I2C2.c: 38: SSP2STAT = 0x00;
  7120  078B  0024               	movlb	4	; select bank4
  7121  078C  019C               	clrf	28	;volatile
  7122                           
  7123                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  7124  078D  3006               	movlw	6
  7125  078E  0020               	movlb	0	; select bank0
  7126  078F  00A3               	movwf	??_I2C2_Setting
  7127  0790  0823               	movf	??_I2C2_Setting,w
  7128  0791  0024               	movlb	4	; select bank4
  7129  0792  049D               	iorwf	29,f	;volatile
  7130                           
  7131                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  7132  0793  141E               	bsf	30,0	;volatile
  7133                           
  7134                           ;I2C2.c: 41: SSP2ADD = address << 1;
  7135  0794  0020               	movlb	0	; select bank0
  7136  0795  3524               	lslf	I2C2_Setting@address,w
  7137  0796  0024               	movlb	4	; select bank4
  7138  0797  009A               	movwf	26	;volatile
  7139                           
  7140                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  7141  0798  30FE               	movlw	254
  7142  0799  009B               	movwf	27	;volatile
  7143  079A                     l4001:	
  7144                           
  7145                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  7146  079A  169D               	bsf	29,5	;volatile
  7147                           
  7148                           ;I2C2.c: 45: }
  7149                           
  7150                           ;I2C2.c: 44: break;
  7151  079B  2FA5               	goto	l215
  7152  079C                     l4005:	
  7153  079C  0020               	movlb	0	; select bank0
  7154  079D  0821               	movf	I2C2_Setting@mode,w
  7155                           
  7156                           ; Switch size 1, requested type "space"
  7157                           ; Number of cases is 2, Range of values is 0 to 1
  7158                           ; switch strategies available:
  7159                           ; Name         Instructions Cycles
  7160                           ; simple_byte            7     4 (average)
  7161                           ; direct_byte           10     6 (fixed)
  7162                           ; jumptable            260     6 (fixed)
  7163                           ;	Chosen strategy is simple_byte
  7164  079E  3A00               	xorlw	0	; case 0
  7165  079F  1903               	skipnz
  7166  07A0  2F74               	goto	l211
  7167  07A1  3A01               	xorlw	1	; case 1
  7168  07A2  1903               	skipnz
  7169  07A3  2F8B               	goto	l3991
  7170  07A4  2FA5               	goto	l215
  7171  07A5                     l215:	
  7172                           
  7173                           ;I2C2.c: 46: SSP2IE = 1;
  7174  07A5  0021               	movlb	1	; select bank1
  7175  07A6  1414               	bsf	20,0	;volatile
  7176                           
  7177                           ;I2C2.c: 47: BCL2IE = 1;
  7178  07A7  1494               	bsf	20,1	;volatile
  7179                           
  7180                           ;I2C2.c: 48: SSP2IF = 0;
  7181  07A8  0020               	movlb	0	; select bank0
  7182  07A9  1014               	bcf	20,0	;volatile
  7183                           
  7184                           ;I2C2.c: 49: BCL2IF = 0;
  7185  07AA  1094               	bcf	20,1	;volatile
  7186  07AB  0008               	return
  7187  07AC                     __end_of_I2C2_Setting:	
  7188                           
  7189                           	psect	text28
  7190  0CE4                     __ptext28:	
  7191 ;; *************** function _I2C2_PinInit *****************
  7192 ;; Defined at:
  7193 ;;		line 9 in file "I2C2.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, status,2, status,0
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7207 ;;      Params:         0       0       0       0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0
  7209 ;;      Temps:          0       1       0       0       0       0
  7210 ;;      Totals:         0       1       0       0       0       0
  7211 ;;Total ram usage:        1 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    3
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_I2C2_Setting
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _I2C2_PinInit
  7223  0CE4                     _I2C2_PinInit:	
  7224                           
  7225                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  7229  0CE4  3024               	movlw	36
  7230  0CE5  0020               	movlb	0	; select bank0
  7231  0CE6  00A0               	movwf	??_I2C2_PinInit
  7232  0CE7  0820               	movf	??_I2C2_PinInit,w
  7233  0CE8  0021               	movlb	1	; select bank1
  7234  0CE9  048D               	iorwf	13,f	;volatile
  7235                           
  7236                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  7237  0CEA  30DB               	movlw	219
  7238  0CEB  0020               	movlb	0	; select bank0
  7239  0CEC  00A0               	movwf	??_I2C2_PinInit
  7240  0CED  0820               	movf	??_I2C2_PinInit,w
  7241  0CEE  0023               	movlb	3	; select bank3
  7242  0CEF  058D               	andwf	13,f	;volatile
  7243  0CF0  0008               	return
  7244  0CF1                     __end_of_I2C2_PinInit:	
  7245                           
  7246                           	psect	text29
  7247  07AC                     __ptext29:	
  7248 ;; *************** function _I2C1_Setting *****************
  7249 ;; Defined at:
  7250 ;;		line 15 in file "I2C1.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  address         1    wreg     unsigned char 
  7253 ;;  mode            1    1[BANK0 ] enum E3073
  7254 ;;  Speed           1    2[BANK0 ] enum E3077
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  address         1    4[BANK0 ] unsigned char 
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7266 ;;      Params:         0       2       0       0       0       0
  7267 ;;      Locals:         0       1       0       0       0       0
  7268 ;;      Temps:          0       1       0       0       0       0
  7269 ;;      Totals:         0       4       0       0       0       0
  7270 ;;Total ram usage:        4 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    4
  7273 ;; This function calls:
  7274 ;;		_I2C1_PinInit
  7275 ;; This function is called by:
  7276 ;;		_I2C_Init
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           
  7281                           ;psect for function _I2C1_Setting
  7282  07AC                     _I2C1_Setting:	
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7286                           ;I2C1_Setting@address stored from wreg
  7287  07AC  0020               	movlb	0	; select bank0
  7288  07AD  00A4               	movwf	I2C1_Setting@address
  7289                           
  7290                           ;I2C1.c: 17: I2C1_PinInit();
  7291  07AE  318C  24D7  3187   	fcall	_I2C1_PinInit
  7292                           
  7293                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  7294  07B1  0020               	movlb	0	; select bank0
  7295  07B2  0821               	movf	I2C1_Setting@mode,w
  7296  07B3  00A3               	movwf	??_I2C1_Setting
  7297  07B4  0823               	movf	??_I2C1_Setting,w
  7298  07B5  0021               	movlb	1	; select bank1
  7299  07B6  00D9               	movwf	(_I2C1_Config^(0+128)+18)
  7300                           
  7301                           ;I2C1.c: 20: switch(mode)
  7302  07B7  2FE0               	goto	l3919
  7303  07B8                     l74:	
  7304                           ;I2C1.c: 21: {
  7305                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  7306                           
  7307                           
  7308                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  7309  07B8  0024               	movlb	4	; select bank4
  7310  07B9  1595               	bsf	21,3	;volatile
  7311                           
  7312                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  7313  07BA  0020               	movlb	0	; select bank0
  7314  07BB  0822               	movf	I2C1_Setting@Speed,w
  7315  07BC  1D03               	btfss	3,2
  7316  07BD  2FC2               	goto	l3897
  7317                           
  7318                           ;I2C1.c: 25: {
  7319                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  7320  07BE  0024               	movlb	4	; select bank4
  7321  07BF  1794               	bsf	20,7	;volatile
  7322                           
  7323                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  7324  07C0  304F               	movlw	79
  7325  07C1  2FCC               	goto	L9
  7326  07C2                     l3897:	
  7327                           ;I2C1.c: 28: }
  7328                           
  7329                           
  7330                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  7331  07C2  0020               	movlb	0	; select bank0
  7332  07C3  0322               	decf	I2C1_Setting@Speed,w
  7333  07C4  1D03               	btfss	3,2
  7334  07C5  2FCD               	goto	l3903
  7335                           
  7336                           ;I2C1.c: 30: {
  7337                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  7338  07C6  307F               	movlw	127
  7339  07C7  00A3               	movwf	??_I2C1_Setting
  7340  07C8  0823               	movf	??_I2C1_Setting,w
  7341  07C9  0024               	movlb	4	; select bank4
  7342  07CA  0594               	andwf	20,f	;volatile
  7343                           
  7344                           ;I2C1.c: 32: SSP1ADD = 0x13;
  7345  07CB  3013               	movlw	19
  7346  07CC                     L9:	
  7347  07CC  0092               	movwf	18	;volatile
  7348  07CD                     l3903:	
  7349                           
  7350                           ;I2C1.c: 33: }
  7351                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  7352  07CD  0024               	movlb	4	; select bank4
  7353  07CE  2FDE               	goto	l3915
  7354  07CF                     l3905:	
  7355                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  7356                           
  7357                           ;I2C1.c: 35: break;
  7358                           
  7359                           
  7360                           ;I2C1.c: 38: SSP1STAT = 0x00;
  7361  07CF  0024               	movlb	4	; select bank4
  7362  07D0  0194               	clrf	20	;volatile
  7363                           
  7364                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  7365  07D1  3006               	movlw	6
  7366  07D2  0020               	movlb	0	; select bank0
  7367  07D3  00A3               	movwf	??_I2C1_Setting
  7368  07D4  0823               	movf	??_I2C1_Setting,w
  7369  07D5  0024               	movlb	4	; select bank4
  7370  07D6  0495               	iorwf	21,f	;volatile
  7371                           
  7372                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  7373  07D7  1416               	bsf	22,0	;volatile
  7374                           
  7375                           ;I2C1.c: 41: SSP1ADD = address << 1;
  7376  07D8  0020               	movlb	0	; select bank0
  7377  07D9  3524               	lslf	I2C1_Setting@address,w
  7378  07DA  0024               	movlb	4	; select bank4
  7379  07DB  0092               	movwf	18	;volatile
  7380                           
  7381                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  7382  07DC  30FE               	movlw	254
  7383  07DD  0093               	movwf	19	;volatile
  7384  07DE                     l3915:	
  7385                           
  7386                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  7387  07DE  1695               	bsf	21,5	;volatile
  7388                           
  7389                           ;I2C1.c: 45: }
  7390                           
  7391                           ;I2C1.c: 44: break;
  7392  07DF  2FE9               	goto	l78
  7393  07E0                     l3919:	
  7394  07E0  0020               	movlb	0	; select bank0
  7395  07E1  0821               	movf	I2C1_Setting@mode,w
  7396                           
  7397                           ; Switch size 1, requested type "space"
  7398                           ; Number of cases is 2, Range of values is 0 to 1
  7399                           ; switch strategies available:
  7400                           ; Name         Instructions Cycles
  7401                           ; simple_byte            7     4 (average)
  7402                           ; direct_byte           10     6 (fixed)
  7403                           ; jumptable            260     6 (fixed)
  7404                           ;	Chosen strategy is simple_byte
  7405  07E2  3A00               	xorlw	0	; case 0
  7406  07E3  1903               	skipnz
  7407  07E4  2FB8               	goto	l74
  7408  07E5  3A01               	xorlw	1	; case 1
  7409  07E6  1903               	skipnz
  7410  07E7  2FCF               	goto	l3905
  7411  07E8  2FE9               	goto	l78
  7412  07E9                     l78:	
  7413                           
  7414                           ;I2C1.c: 46: SSP1IE = 1;
  7415  07E9  0021               	movlb	1	; select bank1
  7416  07EA  1591               	bsf	17,3	;volatile
  7417                           
  7418                           ;I2C1.c: 47: BCL1IE = 1;
  7419  07EB  1592               	bsf	18,3	;volatile
  7420                           
  7421                           ;I2C1.c: 48: SSP1IF = 0;
  7422  07EC  0020               	movlb	0	; select bank0
  7423  07ED  1191               	bcf	17,3	;volatile
  7424                           
  7425                           ;I2C1.c: 49: BCL1IF = 0;
  7426  07EE  1192               	bcf	18,3	;volatile
  7427  07EF  0008               	return
  7428  07F0                     __end_of_I2C1_Setting:	
  7429                           
  7430                           	psect	text30
  7431  0CD7                     __ptext30:	
  7432 ;; *************** function _I2C1_PinInit *****************
  7433 ;; Defined at:
  7434 ;;		line 9 in file "I2C1.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7448 ;;      Params:         0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0
  7450 ;;      Temps:          0       1       0       0       0       0
  7451 ;;      Totals:         0       1       0       0       0       0
  7452 ;;Total ram usage:        1 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    3
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_I2C1_Setting
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _I2C1_PinInit
  7464  0CD7                     _I2C1_PinInit:	
  7465                           
  7466                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  7467                           
  7468                           ;incstack = 0
  7469                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  7470  0CD7  3012               	movlw	18
  7471  0CD8  0020               	movlb	0	; select bank0
  7472  0CD9  00A0               	movwf	??_I2C1_PinInit
  7473  0CDA  0820               	movf	??_I2C1_PinInit,w
  7474  0CDB  0021               	movlb	1	; select bank1
  7475  0CDC  048D               	iorwf	13,f	;volatile
  7476                           
  7477                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  7478  0CDD  30ED               	movlw	237
  7479  0CDE  0020               	movlb	0	; select bank0
  7480  0CDF  00A0               	movwf	??_I2C1_PinInit
  7481  0CE0  0820               	movf	??_I2C1_PinInit,w
  7482  0CE1  0023               	movlb	3	; select bank3
  7483  0CE2  058D               	andwf	13,f	;volatile
  7484  0CE3  0008               	return
  7485  0CE4                     __end_of_I2C1_PinInit:	
  7486                           
  7487                           	psect	text31
  7488  0E9A                     __ptext31:	
  7489 ;; *************** function _Buzzer_Init *****************
  7490 ;; Defined at:
  7491 ;;		line 11 in file "Buzzer.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7505 ;;      Params:         0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0
  7507 ;;      Temps:          0       1       0       0       0       0
  7508 ;;      Totals:         0       1       0       0       0       0
  7509 ;;Total ram usage:        1 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    3
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_main
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function _Buzzer_Init
  7521  0E9A                     _Buzzer_Init:	
  7522                           
  7523                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7527  0E9A  307F               	movlw	127
  7528  0E9B  0020               	movlb	0	; select bank0
  7529  0E9C  00A0               	movwf	??_Buzzer_Init
  7530  0E9D  0820               	movf	??_Buzzer_Init,w
  7531  0E9E  0021               	movlb	1	; select bank1
  7532  0E9F  058C               	andwf	12,f	;volatile
  7533                           
  7534                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7535  0EA0  307F               	movlw	127
  7536  0EA1  0020               	movlb	0	; select bank0
  7537  0EA2  00A0               	movwf	??_Buzzer_Init
  7538  0EA3  0820               	movf	??_Buzzer_Init,w
  7539  0EA4  0023               	movlb	3	; select bank3
  7540  0EA5  058C               	andwf	12,f	;volatile
  7541                           
  7542                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7543  0EA6  0022               	movlb	2	; select bank2
  7544  0EA7  159D               	bsf	29,3	;volatile
  7545                           
  7546                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7547  0EA8  0020               	movlb	0	; select bank0
  7548  0EA9  081C               	movf	28,w	;volatile
  7549                           
  7550                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7551  0EAA  149C               	bsf	28,1	;volatile
  7552                           
  7553                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7554  0EAB  151C               	bsf	28,2	;volatile
  7555                           
  7556                           ;Buzzer.c: 21: TMR2 = 0x00;
  7557  0EAC  019A               	clrf	26	;volatile
  7558                           
  7559                           ;Buzzer.c: 22: PR2 = 0xFF;
  7560  0EAD  30FF               	movlw	255
  7561  0EAE  009B               	movwf	27	;volatile
  7562                           
  7563                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7564  0EAF  303F               	movlw	63
  7565  0EB0  00A0               	movwf	??_Buzzer_Init
  7566  0EB1  0820               	movf	??_Buzzer_Init,w
  7567  0EB2  0025               	movlb	5	; select bank5
  7568  0EB3  059A               	andwf	26,f	;volatile
  7569                           
  7570                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7571  0EB4  300C               	movlw	12
  7572  0EB5  0020               	movlb	0	; select bank0
  7573  0EB6  00A0               	movwf	??_Buzzer_Init
  7574  0EB7  0820               	movf	??_Buzzer_Init,w
  7575  0EB8  0025               	movlb	5	; select bank5
  7576  0EB9  049A               	iorwf	26,f	;volatile
  7577                           
  7578                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7579  0EBA  30F3               	movlw	243
  7580  0EBB  0020               	movlb	0	; select bank0
  7581  0EBC  00A0               	movwf	??_Buzzer_Init
  7582  0EBD  0820               	movf	??_Buzzer_Init,w
  7583  0EBE  0025               	movlb	5	; select bank5
  7584  0EBF  059E               	andwf	30,f	;volatile
  7585                           
  7586                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7587  0EC0  0198               	clrf	24	;volatile
  7588  0EC1  0008               	return
  7589  0EC2                     __end_of_Buzzer_Init:	
  7590                           
  7591                           	psect	text32
  7592  0D98                     __ptext32:	
  7593 ;; *************** function _Basic_Init *****************
  7594 ;; Defined at:
  7595 ;;		line 62 in file "main.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7609 ;;      Params:         0       0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0
  7612 ;;      Totals:         0       0       0       0       0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    3
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_main
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _Basic_Init
  7625  0D98                     _Basic_Init:	
  7626                           
  7627                           ;main.c: 64: OSCCON = 0xF0;
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _Basic_Init: [wreg+status,2]
  7631  0D98  30F0               	movlw	240
  7632  0D99  0021               	movlb	1	; select bank1
  7633  0D9A  0099               	movwf	25	;volatile
  7634                           
  7635                           ;main.c: 68: TRISA = 0x07;
  7636  0D9B  3007               	movlw	7
  7637  0D9C  008C               	movwf	12	;volatile
  7638                           
  7639                           ;main.c: 69: ANSELA = 0x07;
  7640  0D9D  3007               	movlw	7
  7641  0D9E  0023               	movlb	3	; select bank3
  7642  0D9F  008C               	movwf	12	;volatile
  7643                           
  7644                           ;main.c: 71: TRISB = 0x40;
  7645  0DA0  3040               	movlw	64
  7646  0DA1  0021               	movlb	1	; select bank1
  7647  0DA2  008D               	movwf	13	;volatile
  7648                           
  7649                           ;main.c: 72: ANSELB = 0x00;
  7650  0DA3  0023               	movlb	3	; select bank3
  7651  0DA4  018D               	clrf	13	;volatile
  7652                           
  7653                           ;main.c: 74: APFCON0 = 0x08;
  7654  0DA5  3008               	movlw	8
  7655  0DA6  0022               	movlb	2	; select bank2
  7656  0DA7  009D               	movwf	29	;volatile
  7657                           
  7658                           ;main.c: 75: APFCON1 = 0x00;
  7659  0DA8  019E               	clrf	30	;volatile
  7660                           
  7661                           ;main.c: 77: PORTA = 0x00;
  7662  0DA9  0020               	movlb	0	; select bank0
  7663  0DAA  018C               	clrf	12	;volatile
  7664                           
  7665                           ;main.c: 78: PORTB = 0x00;
  7666  0DAB  018D               	clrf	13	;volatile
  7667  0DAC  0008               	return
  7668  0DAD                     __end_of_Basic_Init:	
  7669                           ;main.c: 80: return 0;
  7670                           ;	Return value of _Basic_Init is never used
  7671                           
  7672                           
  7673                           	psect	intentry
  7674  0004                     __pintentry:	
  7675 ;; *************** function _Handler *****************
  7676 ;; Defined at:
  7677 ;;		line 83 in file "main.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7691 ;;      Params:         0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0
  7693 ;;      Temps:          1       0       0       0       0       0
  7694 ;;      Totals:         1       0       0       0       0       0
  7695 ;;Total ram usage:        1 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    2
  7698 ;; This function calls:
  7699 ;;		_Buzzer_Handler
  7700 ;;		_CPSx_Read
  7701 ;;		_I2C_CommonInterrupt
  7702 ;;		_Timer1_Count10us
  7703 ;;		_Timer1_DetectAssignCount
  7704 ;;		_Timer4_Handler
  7705 ;;		_Timer6_Handler
  7706 ;;		_mTouch_IntervalDecrement
  7707 ;; This function is called by:
  7708 ;;		Interrupt level 1
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712  0004                     _Handler:	
  7713                           
  7714                           ;incstack = 0
  7715  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7716                           
  7717                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7718  0005  3180               	pagesel	$
  7719  0006  0020               	movlb	0	; select bank0
  7720  0007  087F               	movf	127,w
  7721  0008  00F5               	movwf	??_Handler
  7722                           
  7723                           ;main.c: 85: if(Timer6_Handler())
  7724  0009  318D  250C  3180   	fcall	_Timer6_Handler
  7725  000C  0870               	movf	?_Timer6_Handler,w
  7726  000D  0471               	iorwf	?_Timer6_Handler+1,w
  7727  000E  1903               	btfsc	3,2
  7728  000F  2813               	goto	i1l3739
  7729                           
  7730                           ;main.c: 86: {
  7731                           ;main.c: 87: Timer1_Count10us();
  7732  0010  318C  24A0  3180   	fcall	_Timer1_Count10us
  7733  0013                     i1l3739:	
  7734                           
  7735                           ;main.c: 88: }
  7736                           ;main.c: 89: if(Timer4_Handler())
  7737  0013  318C  24CC  3180   	fcall	_Timer4_Handler
  7738  0016  3A00               	xorlw	0
  7739  0017  1903               	skipnz
  7740  0018  2822               	goto	i1l3747
  7741                           
  7742                           ;main.c: 90: {
  7743                           ;main.c: 91: CPSx_Read();
  7744  0019  318E  2675  3180   	fcall	_CPSx_Read
  7745                           
  7746                           ;main.c: 92: Buzzer_Handler();
  7747  001C  318D  2583  3180   	fcall	_Buzzer_Handler
  7748                           
  7749                           ;main.c: 93: mTouch_IntervalDecrement();
  7750  001F  318D  253B  3180   	fcall	_mTouch_IntervalDecrement
  7751  0022                     i1l3747:	
  7752                           
  7753                           ;main.c: 94: }
  7754                           ;main.c: 95: if(Timer1_DetectAssignCount())
  7755  0022  318D  25FA  3180   	fcall	_Timer1_DetectAssignCount
  7756  0025  3A00               	xorlw	0
  7757  0026  1903               	skipnz
  7758  0027  282B               	goto	i1l3751
  7759                           
  7760                           ;main.c: 96: LATA6 = !LATA6;
  7761  0028  3040               	movlw	64
  7762  0029  0022               	movlb	2	; select bank2
  7763  002A  068C               	xorwf	12,f
  7764  002B                     i1l3751:	
  7765                           
  7766                           ;main.c: 98: I2C_CommonInterrupt();
  7767  002B  318C  249A         	fcall	_I2C_CommonInterrupt
  7768  002D  0875               	movf	??_Handler,w
  7769  002E  0020               	movlb	0	; select bank0
  7770  002F  00FF               	movwf	127
  7771  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7772  0031  0009               	retfie
  7773  0032                     __end_of_Handler:	
  7774                           
  7775                           	psect	text34
  7776  0D3B                     __ptext34:	
  7777 ;; *************** function _mTouch_IntervalDecrement *****************
  7778 ;; Defined at:
  7779 ;;		line 101 in file "main.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;		None
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7793 ;;      Params:         0       0       0       0       0       0
  7794 ;;      Locals:         0       0       0       0       0       0
  7795 ;;      Temps:          0       0       0       0       0       0
  7796 ;;      Totals:         0       0       0       0       0       0
  7797 ;;Total ram usage:        0 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_Handler
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function _mTouch_IntervalDecrement
  7808  0D3B                     _mTouch_IntervalDecrement:	
  7809                           
  7810                           ;main.c: 103: if(mTouch_Interval[0]>0)
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7814  0D3B  0021               	movlb	1	; select bank1
  7815  0D3C  0824               	movf	_mTouch_Interval^(0+128),w
  7816  0D3D  1903               	btfsc	3,2
  7817  0D3E  2D41               	goto	i1l625
  7818                           
  7819                           ;main.c: 104: mTouch_Interval[0]--;
  7820  0D3F  3001               	movlw	1
  7821  0D40  02A4               	subwf	_mTouch_Interval^(0+128),f
  7822  0D41                     i1l625:	
  7823                           
  7824                           ;main.c: 105: if(mTouch_Interval[1]>0)
  7825  0D41  0825               	movf	(_mTouch_Interval^(0+128)+1),w
  7826  0D42  1903               	btfsc	3,2
  7827  0D43  2D46               	goto	i1l626
  7828                           
  7829                           ;main.c: 106: mTouch_Interval[1]--;
  7830  0D44  3001               	movlw	1
  7831  0D45  02A5               	subwf	(_mTouch_Interval^(0+128)+1),f
  7832  0D46                     i1l626:	
  7833                           
  7834                           ;main.c: 107: if(mTouch_Interval[2]>0)
  7835  0D46  0826               	movf	(_mTouch_Interval^(0+128)+2),w
  7836  0D47  1903               	btfsc	3,2
  7837  0D48  0008               	return
  7838                           
  7839                           ;main.c: 108: mTouch_Interval[2]--;
  7840  0D49  3001               	movlw	1
  7841  0D4A  02A6               	subwf	(_mTouch_Interval^(0+128)+2),f
  7842  0D4B  0008               	return
  7843  0D4C                     __end_of_mTouch_IntervalDecrement:	
  7844                           
  7845                           	psect	text35
  7846  0D0C                     __ptext35:	
  7847 ;; *************** function _Timer6_Handler *****************
  7848 ;; Defined at:
  7849 ;;		line 17 in file "Timer6.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  2    0[COMMON] int 
  7856 ;; Registers used:
  7857 ;;		status,2
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7863 ;;      Params:         2       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0
  7866 ;;      Totals:         2       0       0       0       0       0
  7867 ;;Total ram usage:        2 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_Handler
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function _Timer6_Handler
  7878  0D0C                     _Timer6_Handler:	
  7879                           
  7880                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _Timer6_Handler: [status,2]
  7884  0D0C  0021               	movlb	1	; select bank1
  7885  0D0D  1D93               	btfss	19,3	;volatile
  7886  0D0E  2D18               	goto	i1l3589
  7887  0D0F  0020               	movlb	0	; select bank0
  7888  0D10  1D93               	btfss	19,3	;volatile
  7889  0D11  2D18               	goto	i1l3589
  7890                           
  7891                           ;Timer6.c: 20: {
  7892                           ;Timer6.c: 21: TMR6IF = 0;
  7893  0D12  1193               	bcf	19,3	;volatile
  7894                           
  7895                           ;Timer6.c: 22: return 1;
  7896  0D13  3000               	movlw	0
  7897  0D14  00F1               	movwf	?_Timer6_Handler+1
  7898  0D15  3001               	movlw	1
  7899  0D16  00F0               	movwf	?_Timer6_Handler
  7900  0D17  0008               	return
  7901  0D18                     i1l3589:	
  7902                           
  7903                           ;Timer6.c: 23: }
  7904                           ;Timer6.c: 24: return 0;
  7905  0D18  01F0               	clrf	?_Timer6_Handler
  7906  0D19  01F1               	clrf	?_Timer6_Handler+1
  7907  0D1A  0008               	return
  7908  0D1B                     __end_of_Timer6_Handler:	
  7909                           
  7910                           	psect	text36
  7911  0CCC                     __ptext36:	
  7912 ;; *************** function _Timer4_Handler *****************
  7913 ;; Defined at:
  7914 ;;		line 17 in file "Timer4.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      unsigned char 
  7921 ;; Registers used:
  7922 ;;		wreg
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7928 ;;      Params:         0       0       0       0       0       0
  7929 ;;      Locals:         0       0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0
  7931 ;;      Totals:         0       0       0       0       0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_Handler
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _Timer4_Handler
  7943  0CCC                     _Timer4_Handler:	
  7944                           
  7945                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _Timer4_Handler: [wreg]
  7949  0CCC  0021               	movlb	1	; select bank1
  7950  0CCD  1C93               	btfss	19,1	;volatile
  7951  0CCE  2CD5               	goto	i1l2209
  7952  0CCF  0020               	movlb	0	; select bank0
  7953  0CD0  1C93               	btfss	19,1	;volatile
  7954  0CD1  2CD5               	goto	i1l2209
  7955                           
  7956                           ;Timer4.c: 20: {
  7957                           ;Timer4.c: 21: TMR4IF = 0;
  7958  0CD2  1093               	bcf	19,1	;volatile
  7959                           
  7960                           ;Timer4.c: 22: return 1;
  7961  0CD3  3001               	movlw	1
  7962  0CD4  0008               	return
  7963  0CD5                     i1l2209:	
  7964                           
  7965                           ;Timer4.c: 23: }
  7966                           ;Timer4.c: 24: return 0;
  7967  0CD5  3000               	movlw	0
  7968  0CD6  0008               	return
  7969  0CD7                     __end_of_Timer4_Handler:	
  7970                           
  7971                           	psect	text37
  7972  0DFA                     __ptext37:	
  7973 ;; *************** function _Timer1_DetectAssignCount *****************
  7974 ;; Defined at:
  7975 ;;		line 44 in file "Timer1.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      unsigned char 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7989 ;;      Params:         0       0       0       0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0
  7992 ;;      Totals:         0       0       0       0       0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_Handler
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function _Timer1_DetectAssignCount
  8004  0DFA                     _Timer1_DetectAssignCount:	
  8005                           
  8006                           ;Timer1.c: 46: if(TMR1IF&&TMR1IE)
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _Timer1_DetectAssignCount: [wreg+status,2]
  8010  0DFA  0020               	movlb	0	; select bank0
  8011  0DFB  1C11               	btfss	17,0	;volatile
  8012  0DFC  2E16               	goto	i1l3475
  8013  0DFD  0021               	movlb	1	; select bank1
  8014  0DFE  1C11               	btfss	17,0	;volatile
  8015  0DFF  2E16               	goto	i1l3475
  8016                           
  8017                           ;Timer1.c: 47: {
  8018                           ;Timer1.c: 48: countsum += 100;
  8019  0E00  3064               	movlw	100
  8020  0E01  07A0               	addwf	_countsum^(0+128),f
  8021  0E02  3000               	movlw	0
  8022  0E03  3DA1               	addwfc	(_countsum+1)^(0+128),f
  8023  0E04  3000               	movlw	0
  8024  0E05  3DA2               	addwfc	(_countsum+2)^(0+128),f
  8025  0E06  3000               	movlw	0
  8026  0E07  3DA3               	addwfc	(_countsum+3)^(0+128),f
  8027                           
  8028                           ;Timer1.c: 49: resulttime = count10us;
  8029  0E08  0833               	movf	(_count10us+1)^(0+128),w
  8030  0E09  00B1               	movwf	(_resulttime+1)^(0+128)
  8031  0E0A  0832               	movf	_count10us^(0+128),w
  8032  0E0B  00B0               	movwf	_resulttime^(0+128)
  8033                           
  8034                           ;Timer1.c: 50: count10us = 0;
  8035  0E0C  01B2               	clrf	_count10us^(0+128)
  8036  0E0D  01B3               	clrf	(_count10us+1)^(0+128)
  8037                           
  8038                           ;Timer1.c: 51: TMR1 = 0xFFFF-100;
  8039  0E0E  30FF               	movlw	255
  8040  0E0F  0020               	movlb	0	; select bank0
  8041  0E10  0097               	movwf	23	;volatile
  8042  0E11  309B               	movlw	155
  8043  0E12  0096               	movwf	22	;volatile
  8044                           
  8045                           ;Timer1.c: 52: TMR1IF = 0;
  8046  0E13  1011               	bcf	17,0	;volatile
  8047                           
  8048                           ;Timer1.c: 53: return 1;
  8049  0E14  3001               	movlw	1
  8050  0E15  0008               	return
  8051  0E16                     i1l3475:	
  8052                           
  8053                           ;Timer1.c: 54: }
  8054                           ;Timer1.c: 55: return 0;
  8055  0E16  3000               	movlw	0
  8056  0E17  0008               	return
  8057  0E18                     __end_of_Timer1_DetectAssignCount:	
  8058                           
  8059                           	psect	text38
  8060  0CA0                     __ptext38:	
  8061 ;; *************** function _Timer1_Count10us *****************
  8062 ;; Defined at:
  8063 ;;		line 39 in file "Timer1.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8077 ;;      Params:         0       0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_Handler
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _Timer1_Count10us
  8092  0CA0                     _Timer1_Count10us:	
  8093                           
  8094                           ;Timer1.c: 41: count10us++;
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _Timer1_Count10us: [wreg]
  8098  0CA0  3001               	movlw	1
  8099  0CA1  0021               	movlb	1	; select bank1
  8100  0CA2  07B2               	addwf	_count10us^(0+128),f
  8101  0CA3  3000               	movlw	0
  8102  0CA4  3DB3               	addwfc	(_count10us+1)^(0+128),f
  8103  0CA5  0008               	return
  8104  0CA6                     __end_of_Timer1_Count10us:	
  8105                           
  8106                           	psect	text39
  8107  0C9A                     __ptext39:	
  8108 ;; *************** function _I2C_CommonInterrupt *****************
  8109 ;; Defined at:
  8110 ;;		line 58 in file "I2C_Common.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8124 ;;      Params:         0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    1
  8131 ;; This function calls:
  8132 ;;		_I2C1_Interrupt
  8133 ;;		_I2C2_Interrupt
  8134 ;; This function is called by:
  8135 ;;		_Handler
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _I2C_CommonInterrupt
  8141  0C9A                     _I2C_CommonInterrupt:	
  8142                           
  8143                           ;I2C_Common.c: 60: I2C1_Interrupt();
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8147  0C9A  3186  267D  318C   	fcall	_I2C1_Interrupt
  8148                           
  8149                           ;I2C_Common.c: 61: I2C2_Interrupt();
  8150  0C9D  3186  2629         	fcall	_I2C2_Interrupt
  8151  0C9F  0008               	return
  8152  0CA0                     __end_of_I2C_CommonInterrupt:	
  8153                           
  8154                           	psect	text40
  8155  0629                     __ptext40:	
  8156 ;; *************** function _I2C2_Interrupt *****************
  8157 ;; Defined at:
  8158 ;;		line 152 in file "I2C2.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8172 ;;      Params:         0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0
  8174 ;;      Temps:          1       0       0       0       0       0
  8175 ;;      Totals:         1       0       0       0       0       0
  8176 ;;Total ram usage:        1 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_I2C_CommonInterrupt
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function _I2C2_Interrupt
  8187  0629                     _I2C2_Interrupt:	
  8188                           
  8189                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  8190                           
  8191                           ;incstack = 0
  8192                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8193  0629  0020               	movlb	0	; select bank0
  8194  062A  1C14               	btfss	20,0	;volatile
  8195  062B  2E75               	goto	i1l3035
  8196  062C  0021               	movlb	1	; select bank1
  8197  062D  1C14               	btfss	20,0	;volatile
  8198  062E  2E75               	goto	i1l3035
  8199                           
  8200                           ;I2C2.c: 155: {
  8201                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  8202  062F  0024               	movlb	4	; select bank4
  8203  0630  1E9C               	btfss	28,5	;volatile
  8204  0631  2E4C               	goto	i1l294
  8205                           
  8206                           ;I2C2.c: 157: {
  8207                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  8208  0632  1D1C               	btfss	28,2	;volatile
  8209  0633  2E3F               	goto	i1l3011
  8210                           
  8211                           ;I2C2.c: 159: {
  8212                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8213  0634  1B1E               	btfsc	30,6	;volatile
  8214  0635  2E73               	goto	i1l3033
  8215  0636                     i1l3003:	
  8216                           ;I2C2.c: 161: {
  8217                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8218                           
  8219  0636  081C               	movf	28,w	;volatile
  8220  0637  3901               	andlw	1
  8221  0638  00F0               	movwf	??_I2C2_Interrupt
  8222  0639  0E1D               	swapf	29,w	;volatile
  8223  063A  3901               	andlw	1
  8224  063B  0470               	iorwf	??_I2C2_Interrupt,w
  8225  063C  1D03               	btfss	3,2
  8226  063D  2E36               	goto	i1l3003
  8227  063E  2E5F               	goto	L10
  8228  063F                     i1l3011:	
  8229                           ;I2C2.c: 166: }
  8230                           ;I2C2.c: 167: }
  8231                           
  8232                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8233                           
  8234                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8235                           
  8236                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8237                           
  8238                           
  8239                           ;I2C2.c: 168: else
  8240                           ;I2C2.c: 169: {
  8241                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8242  063F  0819               	movf	25,w	;volatile
  8243  0640  00F0               	movwf	??_I2C2_Interrupt
  8244  0641  0021               	movlb	1	; select bank1
  8245  0642  0845               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8246  0643  0086               	movwf	6
  8247  0644  0187               	clrf	7
  8248  0645  0870               	movf	??_I2C2_Interrupt,w
  8249  0646  0081               	movwf	1
  8250                           
  8251                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8252  0647  3001               	movlw	1
  8253  0648  00F0               	movwf	??_I2C2_Interrupt
  8254  0649  0870               	movf	??_I2C2_Interrupt,w
  8255  064A  07C5               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8256  064B  2E71               	goto	i1l3031
  8257  064C                     i1l294:	
  8258                           ;I2C2.c: 173: }
  8259                           ;I2C2.c: 174: }
  8260                           
  8261                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8262                           
  8263                           
  8264                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8265  064C  1A9C               	btfsc	28,5	;volatile
  8266  064D  2E73               	goto	i1l3033
  8267                           
  8268                           ;I2C2.c: 176: {
  8269                           ;I2C2.c: 177: SSP2BUF;
  8270  064E  0819               	movf	25,w	;volatile
  8271                           
  8272                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8273  064F  1D1C               	btfss	28,2	;volatile
  8274  0650  2E6C               	goto	i1l3029
  8275                           
  8276                           ;I2C2.c: 180: {
  8277                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8278  0651  30B4               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8279  0652  00F0               	movwf	??_I2C2_Interrupt
  8280  0653  0870               	movf	??_I2C2_Interrupt,w
  8281  0654  0021               	movlb	1	; select bank1
  8282  0655  00C4               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8283  0656                     i1l3023:	
  8284                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8285                           
  8286  0656  0024               	movlb	4	; select bank4
  8287  0657  081C               	movf	28,w	;volatile
  8288  0658  3901               	andlw	1
  8289  0659  00F0               	movwf	??_I2C2_Interrupt
  8290  065A  0E1D               	swapf	29,w	;volatile
  8291  065B  3901               	andlw	1
  8292  065C  0470               	iorwf	??_I2C2_Interrupt,w
  8293  065D  1D03               	btfss	3,2
  8294  065E  2E56               	goto	i1l3023
  8295  065F                     L10:	
  8296                           
  8297                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8298  065F  0021               	movlb	1	; select bank1
  8299  0660  0844               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8300  0661  0086               	movwf	6
  8301  0662  0187               	clrf	7
  8302  0663  0801               	movf	1,w
  8303  0664  0024               	movlb	4	; select bank4
  8304  0665  0099               	movwf	25	;volatile
  8305                           
  8306                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8307  0666  3001               	movlw	1
  8308  0667  00F0               	movwf	??_I2C2_Interrupt
  8309  0668  0870               	movf	??_I2C2_Interrupt,w
  8310  0669  0021               	movlb	1	; select bank1
  8311  066A  07C4               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8312                           
  8313                           ;I2C2.c: 186: }
  8314  066B  2E71               	goto	i1l3031
  8315  066C                     i1l3029:	
  8316                           
  8317                           ;I2C2.c: 187: else
  8318                           ;I2C2.c: 188: {
  8319                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8320  066C  30BC               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8321  066D  00F0               	movwf	??_I2C2_Interrupt
  8322  066E  0870               	movf	??_I2C2_Interrupt,w
  8323  066F  0021               	movlb	1	; select bank1
  8324  0670  00C5               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8325  0671                     i1l3031:	
  8326                           
  8327                           ;I2C2.c: 190: }
  8328                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8329  0671  0024               	movlb	4	; select bank4
  8330  0672  161D               	bsf	29,4	;volatile
  8331  0673                     i1l3033:	
  8332                           
  8333                           ;I2C2.c: 192: }
  8334                           ;I2C2.c: 193: SSP2IF = 0;
  8335  0673  0020               	movlb	0	; select bank0
  8336  0674  1014               	bcf	20,0	;volatile
  8337  0675                     i1l3035:	
  8338                           
  8339                           ;I2C2.c: 194: }
  8340                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8341  0675  0021               	movlb	1	; select bank1
  8342  0676  1C94               	btfss	20,1	;volatile
  8343  0677  0008               	return
  8344  0678  0020               	movlb	0	; select bank0
  8345  0679  1C94               	btfss	20,1	;volatile
  8346  067A  0008               	return
  8347                           
  8348                           ;I2C2.c: 197: BCL2IF = 0;
  8349  067B  1094               	bcf	20,1	;volatile
  8350  067C  0008               	return
  8351  067D                     __end_of_I2C2_Interrupt:	
  8352                           
  8353                           	psect	text41
  8354  067D                     __ptext41:	
  8355 ;; *************** function _I2C1_Interrupt *****************
  8356 ;; Defined at:
  8357 ;;		line 152 in file "I2C1.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;		None
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  1    wreg      void 
  8364 ;; Registers used:
  8365 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8371 ;;      Params:         0       0       0       0       0       0
  8372 ;;      Locals:         0       0       0       0       0       0
  8373 ;;      Temps:          1       0       0       0       0       0
  8374 ;;      Totals:         1       0       0       0       0       0
  8375 ;;Total ram usage:        1 bytes
  8376 ;; Hardware stack levels used:    1
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_I2C_CommonInterrupt
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           
  8385                           ;psect for function _I2C1_Interrupt
  8386  067D                     _I2C1_Interrupt:	
  8387                           
  8388                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  8389                           
  8390                           ;incstack = 0
  8391                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8392  067D  0020               	movlb	0	; select bank0
  8393  067E  1D91               	btfss	17,3	;volatile
  8394  067F  2EC9               	goto	i1l2985
  8395  0680  0021               	movlb	1	; select bank1
  8396  0681  1D91               	btfss	17,3	;volatile
  8397  0682  2EC9               	goto	i1l2985
  8398                           
  8399                           ;I2C1.c: 155: {
  8400                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  8401  0683  0024               	movlb	4	; select bank4
  8402  0684  1E94               	btfss	20,5	;volatile
  8403  0685  2EA0               	goto	i1l157
  8404                           
  8405                           ;I2C1.c: 157: {
  8406                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  8407  0686  1D14               	btfss	20,2	;volatile
  8408  0687  2E93               	goto	i1l2961
  8409                           
  8410                           ;I2C1.c: 159: {
  8411                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  8412  0688  1B16               	btfsc	22,6	;volatile
  8413  0689  2EC7               	goto	i1l2983
  8414  068A                     i1l2953:	
  8415                           ;I2C1.c: 161: {
  8416                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8417                           
  8418  068A  0814               	movf	20,w	;volatile
  8419  068B  3901               	andlw	1
  8420  068C  00F0               	movwf	??_I2C1_Interrupt
  8421  068D  0E15               	swapf	21,w	;volatile
  8422  068E  3901               	andlw	1
  8423  068F  0470               	iorwf	??_I2C1_Interrupt,w
  8424  0690  1D03               	btfss	3,2
  8425  0691  2E8A               	goto	i1l2953
  8426  0692  2EB3               	goto	L11
  8427  0693                     i1l2961:	
  8428                           ;I2C1.c: 166: }
  8429                           ;I2C1.c: 167: }
  8430                           
  8431                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  8432                           
  8433                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  8434                           
  8435                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  8436                           
  8437                           
  8438                           ;I2C1.c: 168: else
  8439                           ;I2C1.c: 169: {
  8440                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  8441  0693  0811               	movf	17,w	;volatile
  8442  0694  00F0               	movwf	??_I2C1_Interrupt
  8443  0695  0021               	movlb	1	; select bank1
  8444  0696  0858               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  8445  0697  0086               	movwf	6
  8446  0698  0187               	clrf	7
  8447  0699  0870               	movf	??_I2C1_Interrupt,w
  8448  069A  0081               	movwf	1
  8449                           
  8450                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  8451  069B  3001               	movlw	1
  8452  069C  00F0               	movwf	??_I2C1_Interrupt
  8453  069D  0870               	movf	??_I2C1_Interrupt,w
  8454  069E  07D8               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  8455  069F  2EC5               	goto	i1l2981
  8456  06A0                     i1l157:	
  8457                           ;I2C1.c: 173: }
  8458                           ;I2C1.c: 174: }
  8459                           
  8460                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  8461                           
  8462                           
  8463                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  8464  06A0  1A94               	btfsc	20,5	;volatile
  8465  06A1  2EC7               	goto	i1l2983
  8466                           
  8467                           ;I2C1.c: 176: {
  8468                           ;I2C1.c: 177: SSP1BUF;
  8469  06A2  0811               	movf	17,w	;volatile
  8470                           
  8471                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  8472  06A3  1D14               	btfss	20,2	;volatile
  8473  06A4  2EC0               	goto	i1l2979
  8474                           
  8475                           ;I2C1.c: 180: {
  8476                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  8477  06A5  30C7               	movlw	(low (_I2C1_Config| 0))& (0+255)
  8478  06A6  00F0               	movwf	??_I2C1_Interrupt
  8479  06A7  0870               	movf	??_I2C1_Interrupt,w
  8480  06A8  0021               	movlb	1	; select bank1
  8481  06A9  00D7               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  8482  06AA                     i1l2973:	
  8483                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8484                           
  8485  06AA  0024               	movlb	4	; select bank4
  8486  06AB  0814               	movf	20,w	;volatile
  8487  06AC  3901               	andlw	1
  8488  06AD  00F0               	movwf	??_I2C1_Interrupt
  8489  06AE  0E15               	swapf	21,w	;volatile
  8490  06AF  3901               	andlw	1
  8491  06B0  0470               	iorwf	??_I2C1_Interrupt,w
  8492  06B1  1D03               	btfss	3,2
  8493  06B2  2EAA               	goto	i1l2973
  8494  06B3                     L11:	
  8495                           
  8496                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  8497  06B3  0021               	movlb	1	; select bank1
  8498  06B4  0857               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  8499  06B5  0086               	movwf	6
  8500  06B6  0187               	clrf	7
  8501  06B7  0801               	movf	1,w
  8502  06B8  0024               	movlb	4	; select bank4
  8503  06B9  0091               	movwf	17	;volatile
  8504                           
  8505                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  8506  06BA  3001               	movlw	1
  8507  06BB  00F0               	movwf	??_I2C1_Interrupt
  8508  06BC  0870               	movf	??_I2C1_Interrupt,w
  8509  06BD  0021               	movlb	1	; select bank1
  8510  06BE  07D7               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  8511                           
  8512                           ;I2C1.c: 186: }
  8513  06BF  2EC5               	goto	i1l2981
  8514  06C0                     i1l2979:	
  8515                           
  8516                           ;I2C1.c: 187: else
  8517                           ;I2C1.c: 188: {
  8518                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  8519  06C0  30CF               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  8520  06C1  00F0               	movwf	??_I2C1_Interrupt
  8521  06C2  0870               	movf	??_I2C1_Interrupt,w
  8522  06C3  0021               	movlb	1	; select bank1
  8523  06C4  00D8               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  8524  06C5                     i1l2981:	
  8525                           
  8526                           ;I2C1.c: 190: }
  8527                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  8528  06C5  0024               	movlb	4	; select bank4
  8529  06C6  1615               	bsf	21,4	;volatile
  8530  06C7                     i1l2983:	
  8531                           
  8532                           ;I2C1.c: 192: }
  8533                           ;I2C1.c: 193: SSP1IF = 0;
  8534  06C7  0020               	movlb	0	; select bank0
  8535  06C8  1191               	bcf	17,3	;volatile
  8536  06C9                     i1l2985:	
  8537                           
  8538                           ;I2C1.c: 194: }
  8539                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  8540  06C9  0021               	movlb	1	; select bank1
  8541  06CA  1D92               	btfss	18,3	;volatile
  8542  06CB  0008               	return
  8543  06CC  0020               	movlb	0	; select bank0
  8544  06CD  1D92               	btfss	18,3	;volatile
  8545  06CE  0008               	return
  8546                           
  8547                           ;I2C1.c: 197: BCL1IF = 0;
  8548  06CF  1192               	bcf	18,3	;volatile
  8549  06D0  0008               	return
  8550  06D1                     __end_of_I2C1_Interrupt:	
  8551                           
  8552                           	psect	text42
  8553  0E75                     __ptext42:	
  8554 ;; *************** function _CPSx_Read *****************
  8555 ;; Defined at:
  8556 ;;		line 29 in file "mTouch.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;		None
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      void 
  8563 ;; Registers used:
  8564 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8570 ;;      Params:         0       0       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0
  8572 ;;      Temps:          1       0       0       0       0       0
  8573 ;;      Totals:         1       0       0       0       0       0
  8574 ;;Total ram usage:        1 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_Handler
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function _CPSx_Read
  8585  0E75                     _CPSx_Read:	
  8586                           
  8587                           ;mTouch.c: 31: static uint8_t channel=0;
  8588                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  8589                           
  8590                           ;incstack = 0
  8591                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8592  0E75  087A               	movf	CPSx_Read@channel,w
  8593  0E76  3EA7               	addlw	(low (_CPS_Data| 0))& (0+255)
  8594  0E77  0086               	movwf	6
  8595  0E78  0187               	clrf	7
  8596  0E79  0801               	movf	1,w
  8597  0E7A  00F0               	movwf	??_CPSx_Read
  8598  0E7B  087A               	movf	CPSx_Read@channel,w
  8599  0E7C  3EAA               	addlw	(low (_CPS_PreData| 0))& (0+255)
  8600  0E7D  0086               	movwf	6
  8601  0E7E  0187               	clrf	7
  8602  0E7F  0870               	movf	??_CPSx_Read,w
  8603  0E80  0081               	movwf	1
  8604                           
  8605                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  8606  0E81  307F               	movlw	127
  8607  0E82  00F0               	movwf	??_CPSx_Read
  8608  0E83  0870               	movf	??_CPSx_Read,w
  8609  0E84  0020               	movlb	0	; select bank0
  8610  0E85  059E               	andwf	30,f	;volatile
  8611                           
  8612                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  8613  0E86  0815               	movf	21,w	;volatile
  8614  0E87  00F0               	movwf	??_CPSx_Read
  8615  0E88  087A               	movf	CPSx_Read@channel,w
  8616  0E89  3EA7               	addlw	(low (_CPS_Data| 0))& (0+255)
  8617  0E8A  0086               	movwf	6
  8618  0E8B  0187               	clrf	7
  8619  0E8C  0870               	movf	??_CPSx_Read,w
  8620  0E8D  0081               	movwf	1
  8621                           
  8622                           ;mTouch.c: 36: TMR0 = 0x00;
  8623  0E8E  0195               	clrf	21	;volatile
  8624                           
  8625                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  8626  0E8F  179E               	bsf	30,7	;volatile
  8627                           
  8628                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  8629  0E90  087A               	movf	CPSx_Read@channel,w
  8630  0E91  0AFA               	incf	CPSx_Read@channel,f
  8631  0E92  00F0               	movwf	??_CPSx_Read
  8632  0E93  3003               	movlw	3
  8633  0E94  0270               	subwf	??_CPSx_Read,w
  8634  0E95  1803               	btfsc	3,0
  8635  0E96  01FA               	clrf	CPSx_Read@channel
  8636                           
  8637                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  8638  0E97  087A               	movf	CPSx_Read@channel,w
  8639  0E98  009F               	movwf	31	;volatile
  8640  0E99  0008               	return
  8641  0E9A                     __end_of_CPSx_Read:	
  8642                           
  8643                           	psect	text43
  8644  0D83                     __ptext43:	
  8645 ;; *************** function _Buzzer_Handler *****************
  8646 ;; Defined at:
  8647 ;;		line 44 in file "Buzzer.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;		None
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0, pclath, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8661 ;;      Params:         0       0       0       0       0       0
  8662 ;;      Locals:         0       0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0
  8664 ;;      Totals:         0       0       0       0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    1
  8668 ;; This function calls:
  8669 ;;		_Buzzer_SetDuty
  8670 ;; This function is called by:
  8671 ;;		_Handler
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           
  8676                           ;psect for function _Buzzer_Handler
  8677  0D83                     _Buzzer_Handler:	
  8678                           
  8679                           ;Buzzer.c: 46: if(count>0)
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  8683  0D83  0878               	movf	_count,w
  8684  0D84  0479               	iorwf	_count+1,w
  8685  0D85  1903               	btfsc	3,2
  8686  0D86  2D92               	goto	i1l3263
  8687                           
  8688                           ;Buzzer.c: 47: {
  8689                           ;Buzzer.c: 48: count--;
  8690  0D87  3001               	movlw	1
  8691  0D88  02F8               	subwf	_count,f
  8692  0D89  3000               	movlw	0
  8693  0D8A  3BF9               	subwfb	_count+1,f
  8694                           
  8695                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8696  0D8B  30FF               	movlw	255
  8697  0D8C  00F0               	movwf	Buzzer_SetDuty@duty
  8698  0D8D  3001               	movlw	1
  8699  0D8E  00F1               	movwf	Buzzer_SetDuty@duty+1
  8700  0D8F  318D  25C2         	fcall	_Buzzer_SetDuty
  8701                           
  8702                           ;Buzzer.c: 50: }
  8703  0D91  0008               	return
  8704  0D92                     i1l3263:	
  8705                           
  8706                           ;Buzzer.c: 51: else
  8707                           ;Buzzer.c: 52: {
  8708                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8709  0D92  3000               	movlw	0
  8710  0D93  00F0               	movwf	Buzzer_SetDuty@duty
  8711  0D94  00F1               	movwf	Buzzer_SetDuty@duty+1
  8712  0D95  318D  25C2         	fcall	_Buzzer_SetDuty
  8713  0D97  0008               	return
  8714  0D98                     __end_of_Buzzer_Handler:	
  8715                           
  8716                           	psect	text44
  8717  0DC2                     __ptext44:	
  8718 ;; *************** function _Buzzer_SetDuty *****************
  8719 ;; Defined at:
  8720 ;;		line 31 in file "Buzzer.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;  duty            2    0[COMMON] unsigned int 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      void 
  8727 ;; Registers used:
  8728 ;;		wreg, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8734 ;;      Params:         2       0       0       0       0       0
  8735 ;;      Locals:         1       0       0       0       0       0
  8736 ;;      Temps:          2       0       0       0       0       0
  8737 ;;      Totals:         5       0       0       0       0       0
  8738 ;;Total ram usage:        5 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_Buzzer_Handler
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function _Buzzer_SetDuty
  8749  0DC2                     _Buzzer_SetDuty:	
  8750                           
  8751                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8752                           
  8753                           ;incstack = 0
  8754                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8755  0DC2  0025               	movlb	5	; select bank5
  8756  0DC3  081A               	movf	26,w	;volatile
  8757  0DC4  39CF               	andlw	207
  8758  0DC5  00F2               	movwf	??_Buzzer_SetDuty
  8759  0DC6  0872               	movf	??_Buzzer_SetDuty,w
  8760  0DC7  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8761                           
  8762                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8763  0DC8  0871               	movf	Buzzer_SetDuty@duty+1,w
  8764  0DC9  00F3               	movwf	??_Buzzer_SetDuty+1
  8765  0DCA  0870               	movf	Buzzer_SetDuty@duty,w
  8766  0DCB  00F2               	movwf	??_Buzzer_SetDuty
  8767  0DCC  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8768  0DCD  0CF2               	rrf	??_Buzzer_SetDuty,f
  8769  0DCE  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8770  0DCF  0CF2               	rrf	??_Buzzer_SetDuty,f
  8771  0DD0  0872               	movf	??_Buzzer_SetDuty,w
  8772  0DD1  0098               	movwf	24	;volatile
  8773                           
  8774                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8775  0DD2  0870               	movf	Buzzer_SetDuty@duty,w
  8776  0DD3  3903               	andlw	3
  8777  0DD4  00F2               	movwf	??_Buzzer_SetDuty
  8778  0DD5  3003               	movlw	3
  8779  0DD6                     u237_25:	
  8780  0DD6  35F2               	lslf	??_Buzzer_SetDuty,f
  8781  0DD7  3EFF               	addlw	-1
  8782  0DD8  1D03               	skipz
  8783  0DD9  2DD6               	goto	u237_25
  8784  0DDA  3572               	lslf	??_Buzzer_SetDuty,w
  8785  0DDB  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8786  0DDC  009A               	movwf	26	;volatile
  8787  0DDD  0008               	return
  8788  0DDE                     __end_of_Buzzer_SetDuty:	
  8789  007E                     btemp	set	126	;btemp
  8790  007E                     int$flags	set	126
  8791  007E                     wtemp0	set	126


Data Sizes:
    Strings     336
    Constant    30
    Data        90
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     72      80
    BANK1            80      1      59
    BANK2            80      0      60
    BANK3            80      0      30
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[6]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[6]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10219
                                              0 BANK1      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                        _Timer1_Init
                  _Timer1_ResultRead
                     _Timer1_SumRead
                        _Timer4_Init
                        _Timer6_Init
                        _mTouch_Init
                        _mTouch_Read
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                             10     2      8    6569
                                             62 BANK0     10     2      8
                  _Timer1_ResultRead (ARG)
                     _Timer1_SumRead (ARG)
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5683
                                             14 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     263
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_SumRead                                       4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_ResultRead                                    2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                   _Timer1_Count10us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
                     _Timer6_Handler
           _mTouch_IntervalDecrement
 ---------------------------------------------------------------------------------
 (8) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer6_Handler                                       2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Count10us                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer1_ResultRead
   _Timer1_SumRead
   _Timer4_Init
   _Timer6_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _xprintf
     _Timer1_ResultRead (ARG)
     _Timer1_SumRead (ARG)
     _xvprintf (ARG)
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count10us
   _Timer1_DetectAssignCount
   _Timer4_Handler
   _Timer6_Handler
   _mTouch_IntervalDecrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     48      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      3B       8       73.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      1E      12       37.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      F0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 16 14:35:05 2017

                   _LCD_CursorHome 0D1B                        __CFG_CP$OFF 0000  
                               l74 07B8                                 l91 04B4  
                               l78 07E9                     I2C2_Transmit@i 0025  
            ??_I2C_CommonInterrupt 0071                ___wmul@multiplicand 0022  
                              l100 04DD                                l211 0774  
                              l109 04FA                                l215 07A5  
                              l228 041D                                l237 0446  
                              l246 0463                                l338 0EE9  
                              l703 017B                                l726 0232  
                              l670 0064                                l685 00E0  
                              l969 0DE7                                _GIE 005F  
                              _PR2 001B                                _PR4 0416  
                     __CFG_CPD$OFF 0000                                _PR6 041D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                       _Basic_Init 0D98                       __CFG_LVP$OFF 0000  
                  __end_of_LCD_Put 0CB9         ??_Timer1_DetectAssignCount 0070  
                             l4001 079A                               l4011 040E  
                             l4005 079C                               l4021 0431  
                             l4101 071B                               l4031 0429  
                             l4111 0FC6                               l4033 042D  
                             l4009 0400                               l4113 0FD4  
                             l4121 0FF7                               l4131 0EC5  
                             l4035 0454                               l5011 05A1  
                             l5003 056E                               l4133 0ED2  
                             l4045 0469                               l4053 0488  
                             l4141 0EEF                               l4117 0FEC  
                             l5005 0572                               l4047 0480  
                             l4055 0491                               l4143 0EFC  
                             l5007 058F                               l5015 05AA  
                             l4137 0EE0                               l4049 0485  
                             l5009 0598                               l4147 0F0D  
                             l4149 0F15                               l4069 0DE1  
                             l4087 06E2                               l4097 0710  
                             l4089 06F0                               l4507 072C  
                             l3903 07CD                               l4519 0766  
                             l3905 07CF                               l3915 07DE  
                             l3923 0497                               l3925 04A5  
                             l4805 00D0                               l3919 07E0  
                             l3935 04C8                               l4751 0F36  
                             l4743 0F26                               l4911 0248  
                             l4831 0108                               l3961 0517  
                             l3945 04C0                               l4761 0DAF  
                             l4913 0251                               l4905 0240  
                             l4833 0116                               l4825 00FB  
                             l4817 00ED                               l4809 00D8  
                             l3963 051C                               l3947 04C4  
                             l4923 0279                               l4915 0255  
                             l4851 0157                               l4843 0130  
                             l4835 011A                               l3949 04EB  
                             l4925 027D                               l4853 0159  
                             l4845 0145                               l3991 078B  
                             l3983 077E                               l3959 0500  
                             l3967 051F                               l4919 0267  
                             l4871 01C3                               l4855 015E  
                             l4847 0152                               l4839 012C  
                             l4775 007D                               l3897 07C2  
                             l3969 0528                               l4865 0195  
                             l4849 0155                               l4867 01AA  
                             l4859 0163                               l3989 0789  
                             l4893 0218                               l4877 01D4  
                             l4869 01B3                               l4797 00A6  
                             l4789 0092                               l4879 01D6  
                             l4799 00A9                               l4991 054E  
                             l4889 0210                               l4997 0561  
                             STR_1 03A9                               STR_2 02AC  
                             STR_3 02D9                               STR_4 02B7  
                             STR_5 03E1                               STR_6 038B  
                             STR_7 03E6                               STR_8 0391  
                             STR_9 03EB                               u4005 0FE2  
                             u4015 0FED                               u5107 05F1  
                             u5117 0606                               u3535 0F8A  
                             u5127 0D35                               u4335 074C  
                             u5137 0D25                               u5147 0F83  
                             _PEIE 005E                               u5087 05C3  
                             u5097 05DC                               u3915 06E5  
                             u3935 06F1                               u3945 0705  
                             u4745 012A                               u3955 0711  
                             u3875 0DE8                               u4755 013E  
                             u3885 0DED                               u3985 0FC9  
                             u4875 0265                               u4895 028B  
            Buzzer_MiliSecond@time 0020                               _TMR0 0015  
                             _TMR1 0016                               _TMR2 001A  
                             _TMR4 0415                               _TMR6 041C  
                  ??_I2C1_Transmit 0022                       __CFG_WRT$OFF 0000  
                             _main 052B                               _mode 0068  
                 __end_of_I2C_Init 0EEC                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                    ??_I2C2_Transmit 0022  
                 ??_I2C1_Interrupt 0070                               start 0032  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 0032  
           __end_of_LCD_CursorHome 0D2B                      _LCD_WriteData 0F80  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0070  
               __size_of_CPSx_Read 0025           __end_of_LCD_DisplayClear 0D3B  
            __size_of_I2C_Transmit 002B                   __end_of_LCD_Init 0629  
                    __CFG_PLLEN$ON 0000                        LCD_Put@word 0023  
                            ?_main 0070                              STR_10 0397  
                            STR_11 03F0                              STR_12 039D  
                            STR_20 03C3                              STR_13 03F5  
                            STR_21 03BE                              STR_14 03A3  
                            STR_30 02EF                              STR_22 03CD  
                            STR_15 03D2                              STR_31 0335  
                            STR_23 0379                              STR_40 0367  
                            STR_16 037F                              STR_32 02D1  
                            STR_24 034F                              STR_41 036D  
                            STR_17 03D7                              STR_33 02C9  
                            STR_25 035B                      __CFG_WDTE$OFF 0000  
                            STR_50 03FA                              STR_42 0355  
                            STR_18 0385                              STR_34 02C1  
                            STR_26 0373                              STR_51 02E1  
                            STR_43 0304                              STR_35 03AF  
                            STR_19 03DC                              STR_27 0320  
                            STR_52 0343                              STR_44 032E  
                            STR_36 03B4                              STR_28 0319  
                            STR_53 0349                              STR_45 030B  
                            STR_37 03C8                              STR_29 0327  
                            STR_54 02E8                              STR_46 0312  
                            STR_38 03B9                              STR_47 033C  
                            STR_39 0361                              STR_48 02F6  
                            STR_49 02FD                    __end_of___lldiv 0724  
                            _T1CON 0018                    __end_of___llmod 1000  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T4CON 0417                              _T6CON 041E  
                            i1l157 06A0                              i1l294 064C  
                            i1l625 0D41                              i1l626 0D46  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                      __CFG_PWRTE$ON 0000  
                   __CFG_FCMEN$OFF 0000                              _count 0078  
                    ??_Buzzer_Init 0020                              _xputc 0F17  
                            _xputs 0DAD                              pclath 000A  
                            status 0003                              wtemp0 007E  
                _Buzzer_MiliSecond 0CC2                    __end_of_xprintf 0800  
                     _I2C_Transmit 0EEC                     ?_LCD_WriteData 0070  
               ?_Buzzer_MiliSecond 0020                   ??_DAC_Initialize 0030  
                  ?_LCD_CursorHome 0070                    __initialization 0034  
                     __end_of_main 05BA                ??_Buzzer_MiliSecond 0022  
                           ??_main 00DA                          ??_LCD_Put 0024  
                 CPSx_Read@channel 007A                        ?_Basic_Init 0070  
                           _BCL1IE 0493                             _BCL1IF 0093  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                 ___llmod@dividend 0024               __size_of_mTouch_Init 0013  
             __size_of_mTouch_Read 0044                             _CCPR2L 0298  
                           _ANSELA 018C                             _ANSELB 018D  
                           _T1GCON 0019                  __end_of_CPSx_Read 0E9A  
                           ?_xputc 0070                             ?_xputs 0070  
                           i1l3003 0636                             i1l3011 063F  
                           i1l3031 0671                             i1l3023 0656  
                           i1l3033 0673                             i1l2209 0CD5  
                           i1l3035 0675                             i1l3029 066C  
                           i1l3263 0D92                             i1l3475 0E16  
               I2C2_Transmit@i_316 0026                             i1l3751 002B  
                           i1l2953 068A                             i1l2961 0693  
                           i1l3747 0022                             i1l3739 0013  
                           i1l2981 06C5                             i1l2973 06AA  
                           i1l3589 0D18                             i1l2983 06C7  
                  _mTouch_Interval 00A4                             i1l2985 06C9  
                           i1l2979 06C0          __end_of_Buzzer_MiliSecond 0CCC  
                           u237_25 0DD6                             _OSCCON 0099  
               I2C2_Transmit@pData 0020                     _Timer4_Handler 0CCC  
                           _TMR1IE 0488                             _TMR1IF 0088  
                        ??_Handler 0075                             _TMR4IE 0499  
                           _TMR4IF 0099                             _TMR6IE 049B  
                           _TMR1ON 00C0                             _TMR6IF 009B  
                           _SSP1IE 048B                             _SSP1IF 008B  
                           _SSP2IE 04A0                             _SSP2IF 00A0  
         _mTouch_IntervalDecrement 0D3B                     _Timer1_SumRead 0D4C  
                   _Timer6_Handler 0D0C                    _mTouch_PortInit 0CF1  
                    ??_Timer1_Init 0020                      ??_Timer4_Init 0020  
              __end_of_Buzzer_Init 0EC2                      ??_Timer6_Init 0020  
                ?_Timer1_Count10us 0070                             ___wmul 0DDE  
                        ??___lldiv 0028                          ??___llmod 0028  
               ??_Timer1_Count10us 0070                             _outptr 006C  
                 I2C_Transmit@I2Cx 002E                          ?_I2C_Init 0025  
                 I2C_Transmit@size 002A             __end_of_Timer4_Handler 0CD7  
                           xputc@c 0025                          ??_xprintf 0066  
           __end_of_Timer1_SumRead 0D5D            __end_of__initialization 0060  
           __end_of_Timer6_Handler 0D1B                          ?_LCD_Init 0070  
                  ??_LCD_WriteData 0020                   __end_of_xvprintf 028E  
                       _VoltageReg 006D                 Buzzer_SetDuty@duty 0070  
                   __pcstackCOMMON 0070                __size_of_Basic_Init 0015  
                     __pidataBANK2 0F44                       __pidataBANK3 0E18  
              __end_of_Timer1_Init 0E55                __end_of_Timer4_Init 0D70  
                    __end_of_xputc 0F44                      __end_of_xputs 0DC2  
              __end_of_Timer6_Init 0D0C          Buzzer_SetDuty@CCP2CON_Pre 0074  
                       ??_I2C_Init 0028                I2C1_Transmit@result 0027  
          __size_of_Buzzer_Handler 0015                    ?_Timer4_Handler 0070  
          __end_of_mTouch_PortInit 0CFE                            ??_xputc 0024  
                          ??_xputs 0026                         __pbssBANK0 0068  
                       __pbssBANK1 00A0         __size_of_Buzzer_MiliSecond 000A  
                      _Buzzer_Init 0E9A                    ?_Timer1_SumRead 0020  
                       ??_LCD_Init 0024                    ?_Timer6_Handler 0070  
          __size_of_Buzzer_SetDuty 001C                      _DAC_DataTable 028E  
                     I2C_Init@I2Cx 002A        __end_of_I2C_CommonInterrupt 0CA0  
                     I2C_Init@mode 0026                         __pmaintext 052B  
                          ?___wmul 0020                         __pintentry 0004  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0070  
                          _APFCON0 011D                            _APFCON1 011E  
                          _CCPTMRS 029E                 ??_LCD_DisplayClear 0023  
                          _CPSCON0 001E                            _CPSCON1 001F  
                          _LCD_Put 0CB2                       _xvprintf$763 0045  
                     _xvprintf$764 0049                       _xvprintf$765 004B  
                          _SSP1ADD 0212                            _SSP2ADD 021A  
                          _SSP1BUF 0211                            _SSP2BUF 0219  
                          _SSP1MSK 0213                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004              __end_of_I2C1_Transmit 052B  
            __end_of_I2C2_Transmit 0494                        _Timer1_Init 0E36  
                      _Timer4_Init 0D5D                        _Timer6_Init 0CFE  
__size_of_Timer1_DetectAssignCount 001E          ?_Timer1_DetectAssignCount 0070  
                          ___lldiv 06D1                    __size_of___wmul 001C  
                          ___llmod 0FBD                    __CFG_STVREN$OFF 0000  
                          __ptext1 07F0                            __ptext2 0064  
                          __ptext3 0DAD                            __ptext4 0F17  
                          __ptext5 0CB2                            __ptext6 0DDE  
                          __ptext7 0FBD                            __ptext8 06D1  
                          __ptext9 0724                    mTouch_Read@chan 0027  
                        ?_xvprintf 002E                       ??_Basic_Init 0020  
       ??_mTouch_IntervalDecrement 0070                            clrloop0 0CA7  
             end_of_initialization 0060                   ?_mTouch_PortInit 0070  
                          _xprintf 07F0                      ?_I2C1_PinInit 0070  
                          init_ram 0CAC                            initloop 0CAD  
                    ?_I2C2_PinInit 0070                        _I2C1_Config 00C7  
                        _CPSx_Read 0E75                        _I2C2_Config 00B4  
                    ?_I2C1_Setting 0021                    ___lldiv@divisor 0020  
                    ?_I2C2_Setting 0021                    ___lldiv@counter 002D  
                I2C_Transmit@pData 0029                 __end_of_Basic_Init 0DAD  
                 _DAC_VoltageTable 013E                       __pstringtext 028E  
          __size_of_I2C1_Interrupt 0054                         _resulttime 00B0  
                 __CFG_FOSC$INTOSC 0000                      ??_mTouch_Init 0021  
                    ??_mTouch_Read 0022                         ??_xvprintf 0031  
          __size_of_I2C2_Interrupt 0054          __size_of_Timer1_Count10us 0006  
                __size_of_I2C_Init 002A                I2C1_Setting@address 0024  
                _Timer1_ResultRead 0CB9                     _Buzzer_Handler 0D83  
               ?_Timer1_ResultRead 0020                     ??_I2C1_PinInit 0020  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 0DC2  
                   ??_I2C1_Setting 0023                         ?_CPSx_Read 0070  
                   ??_I2C2_Setting 0023                      _H7826_01_Gain 01A0  
                __size_of_LCD_Init 006F                ??_Timer1_ResultRead 0022  
                   __end_of___wmul 0DFA                          _ConfigReg 006F  
          __size_of_DAC_Initialize 0020                   ??_Timer4_Handler 0070  
        __end_of_Timer1_ResultRead 0CC2                start_initialization 0034  
           __end_of_Buzzer_Handler 0D98                   ??_Timer1_SumRead 0024  
                 ??_Timer6_Handler 0072               I2C1_Transmit@address 0024  
                        _MemoryReg 00AD             __end_of_Buzzer_SetDuty 0DDE  
                     ?_Buzzer_Init 0070                __end_of_mTouch_Init 0D83  
              __end_of_mTouch_Read 0768                I2C2_Setting@address 0024  
                  ___llmod@divisor 0020                    ___llmod@counter 0029  
            __end_of_LCD_WriteData 0FBD                           ??___wmul 0024  
                      __pdataBANK2 0120                        __pdataBANK3 01A0  
                I2C1_Setting@Speed 0022                           ?_LCD_Put 0023  
                      __pbssCOMMON 0076                          ___latbits 0001  
                    __pcstackBANK0 0020                      __pcstackBANK1 00DA  
 __end_of_mTouch_IntervalDecrement 0D4C                    ?_Buzzer_Handler 0070  
               I2C1_Transmit@i_172 0026                 I2C1_Transmit@pData 0020  
        __size_of_LCD_DisplayClear 0010                    ?_Buzzer_SetDuty 0070  
 __end_of_Timer1_DetectAssignCount 0E18                    I2C_Init@address 0025  
                         ?_Handler 0070                        ??_CPSx_Read 0070  
                    ?_I2C_Transmit 0028                      I2C_Init@Speed 0027  
                     ?_Timer1_Init 0070                       ?_Timer4_Init 0070  
                     ?_Timer6_Init 0070                           ?___lldiv 0020  
                         ?___llmod 0020                     _I2C1_Interrupt 067D  
             __end_of_I2C1_PinInit 0CE4       __size_of_I2C_CommonInterrupt 0006  
                        _count10us 00B2               __end_of_I2C2_PinInit 0CF1  
             __end_of_I2C1_Setting 07F0                           _I2C_Init 0EC2  
             __end_of_I2C2_Setting 07AC         __size_of_Timer1_ResultRead 0009  
                   _I2C2_Interrupt 0629                         _H7826_Gain 0120  
                      _mTouch_Init 0D70                        _mTouch_Read 0724  
                 _Timer1_Count10us 0CA0                  __size_of_xvprintf 022A  
                         ?_xprintf 005E                     __size_of_xputc 002D  
                   __size_of_xputs 0015                           _LCD_Init 05BA  
                   ___wmul@product 0024                           _CPS_Data 00A7  
                   ??_I2C_Transmit 002B                          clear_ram0 0CA6  
           __end_of_I2C1_Interrupt 06D1                           _SSP1CON1 0215  
                         _SSP1CON2 0216               I2C2_Transmit@address 0024  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP1STAT 0214                           _SSP2STAT 021C  
                ___wmul@multiplier 0020                     _DAC_Initialize 0E55  
           __end_of_I2C2_Interrupt 067D             __size_of_I2C1_Transmit 0097  
                        _xfunc_out 006A                   __size_of_LCD_Put 0007  
           __size_of_I2C2_Transmit 0098                        _CPS_PreData 00AA  
                 __size_of_Handler 002E               __size_of_Buzzer_Init 0028  
         _Timer1_DetectAssignCount 0DFA           __size_of_mTouch_PortInit 000D  
__size_of_mTouch_IntervalDecrement 0011          ?_mTouch_IntervalDecrement 0070  
                  ?_I2C1_Interrupt 0070            __size_of_LCD_CursorHome 0010  
           __end_of_DAC_Initialize 0E75                   __size_of___lldiv 0053  
                 __size_of___llmod 0043                   I2C1_Setting@mode 0021  
               LCD_WriteData@point 0022                    ?_I2C2_Interrupt 0070  
                I2C1_Transmit@size 0021                           __ptext10 0CC2  
                         __ptext11 0D70                           __ptext20 0D1B  
                         __ptext12 0CF1                           __ptext21 0F80  
                         __ptext13 0CFE                           __ptext30 0CD7  
                         __ptext22 0E55                           __ptext14 0D5D  
                         __ptext31 0E9A                           __ptext23 0EEC  
                         __ptext15 0D4C                           __ptext40 0629  
                         __ptext32 0D98                           __ptext24 03FC  
                         __ptext16 0CB9                           __ptext41 067D  
                         __ptext25 0494                           __ptext17 0E36  
                         __ptext42 0E75                           __ptext34 0D3B  
                         __ptext26 0EC2                           __ptext18 05BA  
                         __ptext43 0D83                           __ptext35 0D0C  
                         __ptext27 0768                           __ptext19 0D2B  
                         __ptext44 0DC2                           __ptext36 0CCC  
                         __ptext28 0CE4                           __ptext37 0DFA  
                         __ptext29 07AC                           __ptext38 0CA0  
                         __ptext39 0C9A                       _SSP1CON1bits 0215  
                     _SSP1CON2bits 0216                   _LCD_DisplayClear 0D2B  
                     _SSP2CON1bits 021D                       _SSP2CON2bits 021E  
                         _countsum 00A0                   __size_of_xprintf 0010  
            __end_of_DAC_DataTable 02AC                      __size_of_main 008F  
                    _I2C1_Transmit 0494                      _I2C2_Transmit 03FC  
            __size_of_I2C1_PinInit 000D               __size_of_Timer1_Init 001F  
                         int$flags 007E              __size_of_I2C2_PinInit 000D  
             __size_of_Timer4_Init 0013                I2C_Transmit@address 0028  
             __size_of_Timer6_Init 000E              __size_of_I2C1_Setting 0044  
                  ?_DAC_Initialize 0070                       _SSP1STATbits 0214  
                         _xfunc_in 0076              __size_of_I2C2_Setting 0044  
                     _SSP2STATbits 021C                   ??_Buzzer_Handler 0075  
             __end_of_I2C_Transmit 0F17                  I2C2_Setting@Speed 0022  
                 ??_Buzzer_SetDuty 0072                           _xvprintf 0064  
                       xprintf@arp 0067                         xprintf@fmt 005E  
                         intlevel1 0000                _I2C_CommonInterrupt 0C9A  
                     _I2C1_PinInit 0CD7                   ___lldiv@dividend 0024  
                   ?_I2C1_Transmit 0020                  __CFG_CLKOUTEN$OFF 0000  
                     _I2C2_PinInit 0CE4                       _I2C1_Setting 07AC  
                   ?_I2C2_Transmit 0020                       _I2C2_Setting 0768  
         __end_of_Timer1_Count10us 0CA6                        xvprintf@arp 0030  
                      xvprintf@fmt 002E                 I2C_Transmit@result 002F  
                ??_mTouch_PortInit 0020                   I2C2_Setting@mode 0021  
             ?_I2C_CommonInterrupt 0070                         _OPTION_REG 0095  
                 ___lldiv@quotient 0029                       ?_mTouch_Init 0070  
                     ?_mTouch_Read 0070             __size_of_LCD_WriteData 003D  
                   I2C1_Transmit@i 0025                           xputs@str 0027  
                        xvprintf@c 005D                          xvprintf@d 005C  
                        xvprintf@f 0058                          xvprintf@i 005A  
                        xvprintf@j 0052                          xvprintf@p 004D  
                        xvprintf@r 004E                          xvprintf@s 0035  
                        xvprintf@v 0054                          xvprintf@w 0050  
          __size_of_Timer4_Handler 000B            __size_of_Timer1_SumRead 0011  
          __size_of_Timer6_Handler 000F  
