

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 14 12:11:18 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.41
    45                           ; Generated 25/01/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  029E                     	;# 
   202  029E                     	;# 
   203  0311                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0318                     	;# 
   208  0318                     	;# 
   209  0319                     	;# 
   210  031A                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  039A                     	;# 
   215  039C                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0415                     	;# 
   220  0416                     	;# 
   221  0417                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  0FE4                     	;# 
   226  0FE5                     	;# 
   227  0FE6                     	;# 
   228  0FE7                     	;# 
   229  0FE8                     	;# 
   230  0FE9                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020D                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0219                     	;# 
   337  021A                     	;# 
   338  021B                     	;# 
   339  021C                     	;# 
   340  021D                     	;# 
   341  021E                     	;# 
   342  021F                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029C                     	;# 
   358  029D                     	;# 
   359  029E                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  0415                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  041C                     	;# 
   381  041D                     	;# 
   382  041E                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019C                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  020D                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0219                     	;# 
   495  021A                     	;# 
   496  021B                     	;# 
   497  021C                     	;# 
   498  021D                     	;# 
   499  021E                     	;# 
   500  021F                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  029E                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0318                     	;# 
   524  0318                     	;# 
   525  0319                     	;# 
   526  031A                     	;# 
   527  0394                     	;# 
   528  0395                     	;# 
   529  0396                     	;# 
   530  039A                     	;# 
   531  039C                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0415                     	;# 
   536  0416                     	;# 
   537  0417                     	;# 
   538  041C                     	;# 
   539  041D                     	;# 
   540  041E                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0014                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0097                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011A                     	;# 
   610  011B                     	;# 
   611  011D                     	;# 
   612  011E                     	;# 
   613  018C                     	;# 
   614  018D                     	;# 
   615  0191                     	;# 
   616  0191                     	;# 
   617  0192                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0194                     	;# 
   622  0195                     	;# 
   623  0196                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  0211                     	;# 
   638  0211                     	;# 
   639  0212                     	;# 
   640  0212                     	;# 
   641  0213                     	;# 
   642  0213                     	;# 
   643  0214                     	;# 
   644  0214                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0216                     	;# 
   649  0216                     	;# 
   650  0217                     	;# 
   651  0217                     	;# 
   652  0219                     	;# 
   653  021A                     	;# 
   654  021B                     	;# 
   655  021C                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  0291                     	;# 
   660  0291                     	;# 
   661  0292                     	;# 
   662  0293                     	;# 
   663  0294                     	;# 
   664  0295                     	;# 
   665  0295                     	;# 
   666  0296                     	;# 
   667  0298                     	;# 
   668  0298                     	;# 
   669  0299                     	;# 
   670  029A                     	;# 
   671  029B                     	;# 
   672  029C                     	;# 
   673  029C                     	;# 
   674  029D                     	;# 
   675  029E                     	;# 
   676  029E                     	;# 
   677  0311                     	;# 
   678  0311                     	;# 
   679  0312                     	;# 
   680  0313                     	;# 
   681  0318                     	;# 
   682  0318                     	;# 
   683  0319                     	;# 
   684  031A                     	;# 
   685  0394                     	;# 
   686  0395                     	;# 
   687  0396                     	;# 
   688  039A                     	;# 
   689  039C                     	;# 
   690  039D                     	;# 
   691  039E                     	;# 
   692  039F                     	;# 
   693  0415                     	;# 
   694  0416                     	;# 
   695  0417                     	;# 
   696  041C                     	;# 
   697  041D                     	;# 
   698  041E                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0014                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0094                     	;# 
   745  0095                     	;# 
   746  0096                     	;# 
   747  0097                     	;# 
   748  0098                     	;# 
   749  0099                     	;# 
   750  009A                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0113                     	;# 
   761  0114                     	;# 
   762  0115                     	;# 
   763  0116                     	;# 
   764  0117                     	;# 
   765  0118                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011B                     	;# 
   769  011D                     	;# 
   770  011E                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020C                     	;# 
   794  020D                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0219                     	;# 
   811  021A                     	;# 
   812  021B                     	;# 
   813  021C                     	;# 
   814  021D                     	;# 
   815  021E                     	;# 
   816  021F                     	;# 
   817  0291                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0293                     	;# 
   821  0294                     	;# 
   822  0295                     	;# 
   823  0295                     	;# 
   824  0296                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029C                     	;# 
   832  029D                     	;# 
   833  029E                     	;# 
   834  029E                     	;# 
   835  0311                     	;# 
   836  0311                     	;# 
   837  0312                     	;# 
   838  0313                     	;# 
   839  0318                     	;# 
   840  0318                     	;# 
   841  0319                     	;# 
   842  031A                     	;# 
   843  0394                     	;# 
   844  0395                     	;# 
   845  0396                     	;# 
   846  039A                     	;# 
   847  039C                     	;# 
   848  039D                     	;# 
   849  039E                     	;# 
   850  039F                     	;# 
   851  0415                     	;# 
   852  0416                     	;# 
   853  0417                     	;# 
   854  041C                     	;# 
   855  041D                     	;# 
   856  041E                     	;# 
   857  0FE4                     	;# 
   858  0FE5                     	;# 
   859  0FE6                     	;# 
   860  0FE7                     	;# 
   861  0FE8                     	;# 
   862  0FE9                     	;# 
   863  0FEA                     	;# 
   864  0FEB                     	;# 
   865  0FED                     	;# 
   866  0FEE                     	;# 
   867  0FEF                     	;# 
   868  0000                     	;# 
   869  0001                     	;# 
   870  0002                     	;# 
   871  0003                     	;# 
   872  0004                     	;# 
   873  0005                     	;# 
   874  0006                     	;# 
   875  0007                     	;# 
   876  0008                     	;# 
   877  0009                     	;# 
   878  000A                     	;# 
   879  000B                     	;# 
   880  000C                     	;# 
   881  000D                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  008C                     	;# 
   898  008D                     	;# 
   899  0091                     	;# 
   900  0092                     	;# 
   901  0093                     	;# 
   902  0094                     	;# 
   903  0095                     	;# 
   904  0096                     	;# 
   905  0097                     	;# 
   906  0098                     	;# 
   907  0099                     	;# 
   908  009A                     	;# 
   909  009B                     	;# 
   910  009B                     	;# 
   911  009C                     	;# 
   912  009D                     	;# 
   913  009E                     	;# 
   914  010C                     	;# 
   915  010D                     	;# 
   916  0111                     	;# 
   917  0112                     	;# 
   918  0113                     	;# 
   919  0114                     	;# 
   920  0115                     	;# 
   921  0116                     	;# 
   922  0117                     	;# 
   923  0118                     	;# 
   924  0119                     	;# 
   925  011A                     	;# 
   926  011B                     	;# 
   927  011D                     	;# 
   928  011E                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  0191                     	;# 
   932  0191                     	;# 
   933  0192                     	;# 
   934  0193                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0199                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019E                     	;# 
   950  019F                     	;# 
   951  020C                     	;# 
   952  020D                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0219                     	;# 
   969  021A                     	;# 
   970  021B                     	;# 
   971  021C                     	;# 
   972  021D                     	;# 
   973  021E                     	;# 
   974  021F                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0298                     	;# 
   984  0298                     	;# 
   985  0299                     	;# 
   986  029A                     	;# 
   987  029B                     	;# 
   988  029C                     	;# 
   989  029C                     	;# 
   990  029D                     	;# 
   991  029E                     	;# 
   992  029E                     	;# 
   993  0311                     	;# 
   994  0311                     	;# 
   995  0312                     	;# 
   996  0313                     	;# 
   997  0318                     	;# 
   998  0318                     	;# 
   999  0319                     	;# 
  1000  031A                     	;# 
  1001  0394                     	;# 
  1002  0395                     	;# 
  1003  0396                     	;# 
  1004  039A                     	;# 
  1005  039C                     	;# 
  1006  039D                     	;# 
  1007  039E                     	;# 
  1008  039F                     	;# 
  1009  0415                     	;# 
  1010  0416                     	;# 
  1011  0417                     	;# 
  1012  041C                     	;# 
  1013  041D                     	;# 
  1014  041E                     	;# 
  1015  0FE4                     	;# 
  1016  0FE5                     	;# 
  1017  0FE6                     	;# 
  1018  0FE7                     	;# 
  1019  0FE8                     	;# 
  1020  0FE9                     	;# 
  1021  0FEA                     	;# 
  1022  0FEB                     	;# 
  1023  0FED                     	;# 
  1024  0FEE                     	;# 
  1025  0FEF                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001E                     	;# 
  1054  001F                     	;# 
  1055  008C                     	;# 
  1056  008D                     	;# 
  1057  0091                     	;# 
  1058  0092                     	;# 
  1059  0093                     	;# 
  1060  0094                     	;# 
  1061  0095                     	;# 
  1062  0096                     	;# 
  1063  0097                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009A                     	;# 
  1067  009B                     	;# 
  1068  009B                     	;# 
  1069  009C                     	;# 
  1070  009D                     	;# 
  1071  009E                     	;# 
  1072  010C                     	;# 
  1073  010D                     	;# 
  1074  0111                     	;# 
  1075  0112                     	;# 
  1076  0113                     	;# 
  1077  0114                     	;# 
  1078  0115                     	;# 
  1079  0116                     	;# 
  1080  0117                     	;# 
  1081  0118                     	;# 
  1082  0119                     	;# 
  1083  011A                     	;# 
  1084  011B                     	;# 
  1085  011D                     	;# 
  1086  011E                     	;# 
  1087  018C                     	;# 
  1088  018D                     	;# 
  1089  0191                     	;# 
  1090  0191                     	;# 
  1091  0192                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0194                     	;# 
  1096  0195                     	;# 
  1097  0196                     	;# 
  1098  0199                     	;# 
  1099  019A                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019C                     	;# 
  1105  019C                     	;# 
  1106  019D                     	;# 
  1107  019E                     	;# 
  1108  019F                     	;# 
  1109  020C                     	;# 
  1110  020D                     	;# 
  1111  0211                     	;# 
  1112  0211                     	;# 
  1113  0212                     	;# 
  1114  0212                     	;# 
  1115  0213                     	;# 
  1116  0213                     	;# 
  1117  0214                     	;# 
  1118  0214                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0216                     	;# 
  1123  0216                     	;# 
  1124  0217                     	;# 
  1125  0217                     	;# 
  1126  0219                     	;# 
  1127  021A                     	;# 
  1128  021B                     	;# 
  1129  021C                     	;# 
  1130  021D                     	;# 
  1131  021E                     	;# 
  1132  021F                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0294                     	;# 
  1138  0295                     	;# 
  1139  0295                     	;# 
  1140  0296                     	;# 
  1141  0298                     	;# 
  1142  0298                     	;# 
  1143  0299                     	;# 
  1144  029A                     	;# 
  1145  029B                     	;# 
  1146  029C                     	;# 
  1147  029C                     	;# 
  1148  029D                     	;# 
  1149  029E                     	;# 
  1150  029E                     	;# 
  1151  0311                     	;# 
  1152  0311                     	;# 
  1153  0312                     	;# 
  1154  0313                     	;# 
  1155  0318                     	;# 
  1156  0318                     	;# 
  1157  0319                     	;# 
  1158  031A                     	;# 
  1159  0394                     	;# 
  1160  0395                     	;# 
  1161  0396                     	;# 
  1162  039A                     	;# 
  1163  039C                     	;# 
  1164  039D                     	;# 
  1165  039E                     	;# 
  1166  039F                     	;# 
  1167  0415                     	;# 
  1168  0416                     	;# 
  1169  0417                     	;# 
  1170  041C                     	;# 
  1171  041D                     	;# 
  1172  041E                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  0011                     	;# 
  1199  0012                     	;# 
  1200  0013                     	;# 
  1201  0014                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001E                     	;# 
  1212  001F                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0094                     	;# 
  1219  0095                     	;# 
  1220  0096                     	;# 
  1221  0097                     	;# 
  1222  0098                     	;# 
  1223  0099                     	;# 
  1224  009A                     	;# 
  1225  009B                     	;# 
  1226  009B                     	;# 
  1227  009C                     	;# 
  1228  009D                     	;# 
  1229  009E                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  0111                     	;# 
  1233  0112                     	;# 
  1234  0113                     	;# 
  1235  0114                     	;# 
  1236  0115                     	;# 
  1237  0116                     	;# 
  1238  0117                     	;# 
  1239  0118                     	;# 
  1240  0119                     	;# 
  1241  011A                     	;# 
  1242  011B                     	;# 
  1243  011D                     	;# 
  1244  011E                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0199                     	;# 
  1257  019A                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019C                     	;# 
  1263  019C                     	;# 
  1264  019D                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  020C                     	;# 
  1268  020D                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0214                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0216                     	;# 
  1281  0216                     	;# 
  1282  0217                     	;# 
  1283  0217                     	;# 
  1284  0219                     	;# 
  1285  021A                     	;# 
  1286  021B                     	;# 
  1287  021C                     	;# 
  1288  021D                     	;# 
  1289  021E                     	;# 
  1290  021F                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0295                     	;# 
  1298  0296                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  029A                     	;# 
  1303  029B                     	;# 
  1304  029C                     	;# 
  1305  029C                     	;# 
  1306  029D                     	;# 
  1307  029E                     	;# 
  1308  029E                     	;# 
  1309  0311                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  0394                     	;# 
  1318  0395                     	;# 
  1319  0396                     	;# 
  1320  039A                     	;# 
  1321  039C                     	;# 
  1322  039D                     	;# 
  1323  039E                     	;# 
  1324  039F                     	;# 
  1325  0415                     	;# 
  1326  0416                     	;# 
  1327  0417                     	;# 
  1328  041C                     	;# 
  1329  041D                     	;# 
  1330  041E                     	;# 
  1331  0FE4                     	;# 
  1332  0FE5                     	;# 
  1333  0FE6                     	;# 
  1334  0FE7                     	;# 
  1335  0FE8                     	;# 
  1336  0FE9                     	;# 
  1337  0FEA                     	;# 
  1338  0FEB                     	;# 
  1339  0FED                     	;# 
  1340  0FEE                     	;# 
  1341  0FEF                     	;# 
  1342  0000                     	;# 
  1343  0001                     	;# 
  1344  0002                     	;# 
  1345  0003                     	;# 
  1346  0004                     	;# 
  1347  0005                     	;# 
  1348  0006                     	;# 
  1349  0007                     	;# 
  1350  0008                     	;# 
  1351  0009                     	;# 
  1352  000A                     	;# 
  1353  000B                     	;# 
  1354  000C                     	;# 
  1355  000D                     	;# 
  1356  0011                     	;# 
  1357  0012                     	;# 
  1358  0013                     	;# 
  1359  0014                     	;# 
  1360  0015                     	;# 
  1361  0016                     	;# 
  1362  0016                     	;# 
  1363  0017                     	;# 
  1364  0018                     	;# 
  1365  0019                     	;# 
  1366  001A                     	;# 
  1367  001B                     	;# 
  1368  001C                     	;# 
  1369  001E                     	;# 
  1370  001F                     	;# 
  1371  008C                     	;# 
  1372  008D                     	;# 
  1373  0091                     	;# 
  1374  0092                     	;# 
  1375  0093                     	;# 
  1376  0094                     	;# 
  1377  0095                     	;# 
  1378  0096                     	;# 
  1379  0097                     	;# 
  1380  0098                     	;# 
  1381  0099                     	;# 
  1382  009A                     	;# 
  1383  009B                     	;# 
  1384  009B                     	;# 
  1385  009C                     	;# 
  1386  009D                     	;# 
  1387  009E                     	;# 
  1388  010C                     	;# 
  1389  010D                     	;# 
  1390  0111                     	;# 
  1391  0112                     	;# 
  1392  0113                     	;# 
  1393  0114                     	;# 
  1394  0115                     	;# 
  1395  0116                     	;# 
  1396  0117                     	;# 
  1397  0118                     	;# 
  1398  0119                     	;# 
  1399  011A                     	;# 
  1400  011B                     	;# 
  1401  011D                     	;# 
  1402  011E                     	;# 
  1403  018C                     	;# 
  1404  018D                     	;# 
  1405  0191                     	;# 
  1406  0191                     	;# 
  1407  0192                     	;# 
  1408  0193                     	;# 
  1409  0193                     	;# 
  1410  0193                     	;# 
  1411  0194                     	;# 
  1412  0195                     	;# 
  1413  0196                     	;# 
  1414  0199                     	;# 
  1415  019A                     	;# 
  1416  019B                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019C                     	;# 
  1422  019D                     	;# 
  1423  019E                     	;# 
  1424  019F                     	;# 
  1425  020C                     	;# 
  1426  020D                     	;# 
  1427  0211                     	;# 
  1428  0211                     	;# 
  1429  0212                     	;# 
  1430  0212                     	;# 
  1431  0213                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0214                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0215                     	;# 
  1438  0216                     	;# 
  1439  0216                     	;# 
  1440  0217                     	;# 
  1441  0217                     	;# 
  1442  0219                     	;# 
  1443  021A                     	;# 
  1444  021B                     	;# 
  1445  021C                     	;# 
  1446  021D                     	;# 
  1447  021E                     	;# 
  1448  021F                     	;# 
  1449  0291                     	;# 
  1450  0291                     	;# 
  1451  0292                     	;# 
  1452  0293                     	;# 
  1453  0294                     	;# 
  1454  0295                     	;# 
  1455  0295                     	;# 
  1456  0296                     	;# 
  1457  0298                     	;# 
  1458  0298                     	;# 
  1459  0299                     	;# 
  1460  029A                     	;# 
  1461  029B                     	;# 
  1462  029C                     	;# 
  1463  029C                     	;# 
  1464  029D                     	;# 
  1465  029E                     	;# 
  1466  029E                     	;# 
  1467  0311                     	;# 
  1468  0311                     	;# 
  1469  0312                     	;# 
  1470  0313                     	;# 
  1471  0318                     	;# 
  1472  0318                     	;# 
  1473  0319                     	;# 
  1474  031A                     	;# 
  1475  0394                     	;# 
  1476  0395                     	;# 
  1477  0396                     	;# 
  1478  039A                     	;# 
  1479  039C                     	;# 
  1480  039D                     	;# 
  1481  039E                     	;# 
  1482  039F                     	;# 
  1483  0415                     	;# 
  1484  0416                     	;# 
  1485  0417                     	;# 
  1486  041C                     	;# 
  1487  041D                     	;# 
  1488  041E                     	;# 
  1489  0FE4                     	;# 
  1490  0FE5                     	;# 
  1491  0FE6                     	;# 
  1492  0FE7                     	;# 
  1493  0FE8                     	;# 
  1494  0FE9                     	;# 
  1495  0FEA                     	;# 
  1496  0FEB                     	;# 
  1497  0FED                     	;# 
  1498  0FEE                     	;# 
  1499  0FEF                     	;# 
  1500  0016                     _TMR1	set	22
  1501  001B                     _PR2	set	27
  1502  001A                     _TMR2	set	26
  1503  001C                     _T2CON	set	28
  1504  0019                     _T1GCON	set	25
  1505  0018                     _T1CON	set	24
  1506  000D                     _PORTB	set	13
  1507  000C                     _PORTA	set	12
  1508  00A1                     _BCL2IF	set	161
  1509  00A0                     _SSP2IF	set	160
  1510  0093                     _BCL1IF	set	147
  1511  008B                     _SSP1IF	set	139
  1512  005F                     _GIE	set	95
  1513  005E                     _PEIE	set	94
  1514  0088                     _TMR1IF	set	136
  1515  00C0                     _TMR1ON	set	192
  1516  008D                     _TRISB	set	141
  1517  008C                     _TRISA	set	140
  1518  0099                     _OSCCON	set	153
  1519  04A1                     _BCL2IE	set	1185
  1520  04A0                     _SSP2IE	set	1184
  1521  0493                     _BCL1IE	set	1171
  1522  048B                     _SSP1IE	set	1163
  1523  0488                     _TMR1IE	set	1160
  1524  011E                     _APFCON1	set	286
  1525  011D                     _APFCON0	set	285
  1526  0863                     _LATA3	set	2147
  1527  0864                     _LATA4	set	2148
  1528  0866                     _LATA6	set	2150
  1529  018D                     _ANSELB	set	397
  1530  018C                     _ANSELA	set	396
  1531  021C                     _SSP2STATbits	set	540
  1532  0219                     _SSP2BUF	set	537
  1533  021E                     _SSP2CON2	set	542
  1534  021B                     _SSP2MSK	set	539
  1535  021E                     _SSP2CON2bits	set	542
  1536  021D                     _SSP2CON1bits	set	541
  1537  021A                     _SSP2ADD	set	538
  1538  021C                     _SSP2STAT	set	540
  1539  021D                     _SSP2CON1	set	541
  1540  0214                     _SSP1STATbits	set	532
  1541  0211                     _SSP1BUF	set	529
  1542  0216                     _SSP1CON2	set	534
  1543  0213                     _SSP1MSK	set	531
  1544  0216                     _SSP1CON2bits	set	534
  1545  0215                     _SSP1CON1bits	set	533
  1546  0212                     _SSP1ADD	set	530
  1547  0214                     _SSP1STAT	set	532
  1548  0215                     _SSP1CON1	set	533
  1549  0298                     _CCPR2L	set	664
  1550  029E                     _CCPTMRS	set	670
  1551  029A                     _CCP2CON	set	666
  1552                           
  1553                           	psect	stringtext
  1554  0633                     __pstringtext:	
  1555  0633                     STR_1:	
  1556  0633  3448               	retlw	72	;'H'
  1557  0634  3465               	retlw	101	;'e'
  1558  0635  346C               	retlw	108	;'l'
  1559  0636  346C               	retlw	108	;'l'
  1560  0637  346F               	retlw	111	;'o'
  1561  0638  3477               	retlw	119	;'w'
  1562  0639  3420               	retlw	32	;' '
  1563  063A  3457               	retlw	87	;'W'
  1564  063B  346F               	retlw	111	;'o'
  1565  063C  3472               	retlw	114	;'r'
  1566  063D  346C               	retlw	108	;'l'
  1567  063E  3464               	retlw	100	;'d'
  1568  063F  3400               	retlw	0
  1569  0640                     STR_3:	
  1570  0640  3425               	retlw	37	;'%'
  1571  0641  3430               	retlw	48	;'0'
  1572  0642  3438               	retlw	56	;'8'
  1573  0643  346C               	retlw	108	;'l'
  1574  0644  3458               	retlw	88	;'X'
  1575  0645  3420               	retlw	32	;' '
  1576  0646  3400               	retlw	0
  1577  0647                     STR_6:	
  1578  0647  3420               	retlw	32	;' '
  1579  0648  3425               	retlw	37	;'%'
  1580  0649  3430               	retlw	48	;'0'
  1581  064A  3438               	retlw	56	;'8'
  1582  064B  344C               	retlw	76	;'L'
  1583  064C  3458               	retlw	88	;'X'
  1584  064D  3400               	retlw	0
  1585  064E                     STR_4:	
  1586  064E  3420               	retlw	32	;' '
  1587  064F  3425               	retlw	37	;'%'
  1588  0650  3430               	retlw	48	;'0'
  1589  0651  3432               	retlw	50	;'2'
  1590  0652  3458               	retlw	88	;'X'
  1591  0653  3400               	retlw	0
  1592  0654                     STR_5:	
  1593  0654  3420               	retlw	32	;' '
  1594  0655  3425               	retlw	37	;'%'
  1595  0656  3430               	retlw	48	;'0'
  1596  0657  3434               	retlw	52	;'4'
  1597  0658  3458               	retlw	88	;'X'
  1598  0659  3400               	retlw	0
  1599  065A                     STR_2:	
  1600  065A  340D               	retlw	13
  1601  065B  3400               	retlw	0
  1602                           
  1603                           ; #config settings
  1604  0000                     
  1605                           	psect	cinit
  1606  0015                     start_initialization:	
  1607  0015                     __initialization:	
  1608                           
  1609                           ; Clear objects allocated to COMMON
  1610  0015  01FB               	clrf	__pbssCOMMON& (0+127)
  1611                           
  1612                           ; Clear objects allocated to BANK0
  1613  0016  305F               	movlw	low __pbssBANK0
  1614  0017  0084               	movwf	4
  1615  0018  3000               	movlw	high __pbssBANK0
  1616  0019  0085               	movwf	5
  1617  001A  300A               	movlw	10
  1618  001B  3187  2775  3180   	fcall	clear_ram0
  1619                           
  1620                           ; Clear objects allocated to BANK1
  1621  001E  30A0               	movlw	low __pbssBANK1
  1622  001F  0084               	movwf	4
  1623  0020  3000               	movlw	high __pbssBANK1
  1624  0021  0085               	movwf	5
  1625  0022  3026               	movlw	38
  1626  0023  3187  2775         	fcall	clear_ram0
  1627  0025                     end_of_initialization:	
  1628                           ;End of C runtime variable initialization code
  1629                           
  1630  0025                     __end_of__initialization:	
  1631  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1632  0026  0020               	movlb	0
  1633  0027  3185  2DA5         	ljmp	_main	;jump to C main() function
  1634                           
  1635                           	psect	bssCOMMON
  1636  007B                     __pbssCOMMON:	
  1637  007B                     _outptr:	
  1638  007B                     	ds	1
  1639                           
  1640                           	psect	bssBANK0
  1641  005F                     __pbssBANK0:	
  1642  005F                     _MemoryReg:	
  1643  005F                     	ds	3
  1644  0062                     _xfunc_in:	
  1645  0062                     	ds	2
  1646  0064                     _xfunc_out:	
  1647  0064                     	ds	2
  1648  0066                     _VoltageReg:	
  1649  0066                     	ds	2
  1650  0068                     _ConfigReg:	
  1651  0068                     	ds	1
  1652                           
  1653                           	psect	bssBANK1
  1654  00A0                     __pbssBANK1:	
  1655  00A0                     _I2C2_Config:	
  1656  00A0                     	ds	19
  1657  00B3                     _I2C1_Config:	
  1658  00B3                     	ds	19
  1659                           
  1660                           	psect	clrtext
  1661  0775                     clear_ram0:	
  1662                           ;	Called with FSR0 containing the base address, and
  1663                           ;	WREG with the size to clear
  1664                           
  1665  0775  0064               	clrwdt	;clear the watchdog before getting into this loop
  1666  0776                     clrloop0:	
  1667  0776  0180               	clrf	0	;clear RAM location pointed to by FSR
  1668  0777  3101               	addfsr 0,1
  1669  0778  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1670  0779  2F76               	goto	clrloop0	;have we reached the end yet?
  1671  077A  3400               	retlw	0	;all done for this memory range, return
  1672                           
  1673                           	psect	cstackCOMMON
  1674  0070                     __pcstackCOMMON:	
  1675  0070                     ?_Basic_Init:	
  1676  0070                     ?_LCD_Init:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_Timer1_Init:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_Buzer_Init:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_DAC_Initialize:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_Timer1_Handler:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ??_Timer1_Handler:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_I2C_CommonInterrupt:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_LCD_DisplayClear:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_main:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_Handler:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_LCD_WriteData:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ?_xputc:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_xputs:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_I2C1_PinInit:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_I2C1_Interrupt:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ??_I2C1_Interrupt:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_I2C2_PinInit:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ?_I2C2_Interrupt:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ??_I2C2_Interrupt:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733                           
  1734                           ; 1 bytes @ 0x0
  1735  0070                     	ds	1
  1736  0071                     ??_I2C_CommonInterrupt:	
  1737  0071                     ??_Handler:	
  1738                           ; 1 bytes @ 0x1
  1739                           
  1740                           
  1741                           ; 1 bytes @ 0x1
  1742  0071                     	ds	1
  1743  0072                     ??_Basic_Init:	
  1744  0072                     ??_Timer1_Init:	
  1745                           ; 1 bytes @ 0x2
  1746                           
  1747  0072                     ??_Buzer_Init:	
  1748                           ; 1 bytes @ 0x2
  1749                           
  1750  0072                     ??_LCD_WriteData:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753  0072                     ??_I2C1_PinInit:	
  1754                           ; 1 bytes @ 0x2
  1755                           
  1756  0072                     ?_I2C1_Transmit:	
  1757                           ; 1 bytes @ 0x2
  1758                           
  1759  0072                     ??_I2C2_PinInit:	
  1760                           ; 1 bytes @ 0x2
  1761                           
  1762  0072                     ?_I2C2_Transmit:	
  1763                           ; 1 bytes @ 0x2
  1764                           
  1765  0072                     ?___wmul:	
  1766                           ; 1 bytes @ 0x2
  1767                           
  1768  0072                     ?___lldiv:	
  1769                           ; 2 bytes @ 0x2
  1770                           
  1771  0072                     ?___llmod:	
  1772                           ; 4 bytes @ 0x2
  1773                           
  1774  0072                     I2C1_Transmit@pData:	
  1775                           ; 4 bytes @ 0x2
  1776                           
  1777  0072                     I2C2_Transmit@pData:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0072                     ___wmul@multiplier:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783  0072                     ___lldiv@divisor:	
  1784                           ; 2 bytes @ 0x2
  1785                           
  1786  0072                     ___llmod@divisor:	
  1787                           ; 4 bytes @ 0x2
  1788                           
  1789                           
  1790                           ; 4 bytes @ 0x2
  1791  0072                     	ds	1
  1792  0073                     ?_I2C1_Setting:	
  1793  0073                     ?_I2C2_Setting:	
  1794                           ; 1 bytes @ 0x3
  1795                           
  1796  0073                     I2C1_Setting@mode:	
  1797                           ; 1 bytes @ 0x3
  1798                           
  1799  0073                     I2C1_Transmit@size:	
  1800                           ; 1 bytes @ 0x3
  1801                           
  1802  0073                     I2C2_Setting@mode:	
  1803                           ; 1 bytes @ 0x3
  1804                           
  1805  0073                     I2C2_Transmit@size:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810  0073                     	ds	1
  1811  0074                     ??_I2C1_Transmit:	
  1812  0074                     ??_I2C2_Transmit:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815  0074                     LCD_WriteData@point:	
  1816                           ; 1 bytes @ 0x4
  1817                           
  1818  0074                     I2C1_Setting@Speed:	
  1819                           ; 1 bytes @ 0x4
  1820                           
  1821  0074                     I2C2_Setting@Speed:	
  1822                           ; 1 bytes @ 0x4
  1823                           
  1824  0074                     ___wmul@multiplicand:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827                           
  1828                           ; 2 bytes @ 0x4
  1829  0074                     	ds	1
  1830  0075                     ?_LCD_Put:	
  1831  0075                     ?_LCD_CursorPosition:	
  1832                           ; 1 bytes @ 0x5
  1833                           
  1834  0075                     ??_LCD_DisplayClear:	
  1835                           ; 1 bytes @ 0x5
  1836                           
  1837  0075                     ??_I2C1_Setting:	
  1838                           ; 1 bytes @ 0x5
  1839                           
  1840  0075                     ??_I2C2_Setting:	
  1841                           ; 1 bytes @ 0x5
  1842                           
  1843  0075                     LCD_Put@word:	
  1844                           ; 1 bytes @ 0x5
  1845                           
  1846  0075                     LCD_CursorPosition@ty:	
  1847                           ; 1 bytes @ 0x5
  1848                           
  1849                           
  1850                           ; 1 bytes @ 0x5
  1851  0075                     	ds	1
  1852  0076                     ??_LCD_Init:	
  1853  0076                     ??_LCD_Put:	
  1854                           ; 1 bytes @ 0x6
  1855                           
  1856  0076                     ??_LCD_CursorPosition:	
  1857                           ; 1 bytes @ 0x6
  1858                           
  1859  0076                     ??_xputc:	
  1860                           ; 1 bytes @ 0x6
  1861                           
  1862  0076                     ??___wmul:	
  1863                           ; 1 bytes @ 0x6
  1864                           
  1865  0076                     I2C1_Setting@address:	
  1866                           ; 1 bytes @ 0x6
  1867                           
  1868  0076                     I2C1_Transmit@address:	
  1869                           ; 1 bytes @ 0x6
  1870                           
  1871  0076                     I2C2_Setting@address:	
  1872                           ; 1 bytes @ 0x6
  1873                           
  1874  0076                     I2C2_Transmit@address:	
  1875                           ; 1 bytes @ 0x6
  1876                           
  1877  0076                     ___wmul@product:	
  1878                           ; 1 bytes @ 0x6
  1879                           
  1880  0076                     ___lldiv@dividend:	
  1881                           ; 2 bytes @ 0x6
  1882                           
  1883  0076                     ___llmod@dividend:	
  1884                           ; 4 bytes @ 0x6
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x6
  1888  0076                     	ds	1
  1889  0077                     ?_I2C_Init:	
  1890  0077                     LCD_CursorPosition@tx:	
  1891                           ; 1 bytes @ 0x7
  1892                           
  1893  0077                     xputc@c:	
  1894                           ; 1 bytes @ 0x7
  1895                           
  1896  0077                     I2C1_Transmit@i:	
  1897                           ; 1 bytes @ 0x7
  1898                           
  1899  0077                     I2C2_Transmit@i:	
  1900                           ; 1 bytes @ 0x7
  1901                           
  1902  0077                     I2C_Init@address:	
  1903                           ; 1 bytes @ 0x7
  1904                           
  1905                           
  1906                           ; 1 bytes @ 0x7
  1907  0077                     	ds	1
  1908  0078                     ??_xputs:	
  1909  0078                     I2C1_Transmit@i_411:	
  1910                           ; 1 bytes @ 0x8
  1911                           
  1912  0078                     I2C2_Transmit@i_555:	
  1913                           ; 1 bytes @ 0x8
  1914                           
  1915  0078                     I2C_Init@mode:	
  1916                           ; 1 bytes @ 0x8
  1917                           
  1918                           
  1919                           ; 1 bytes @ 0x8
  1920  0078                     	ds	1
  1921  0079                     xputs@str:	
  1922  0079                     I2C1_Transmit@result:	
  1923                           ; 1 bytes @ 0x9
  1924                           
  1925  0079                     I2C2_Transmit@result:	
  1926                           ; 1 bytes @ 0x9
  1927                           
  1928  0079                     I2C_Init@Speed:	
  1929                           ; 1 bytes @ 0x9
  1930                           
  1931                           
  1932                           ; 1 bytes @ 0x9
  1933  0079                     	ds	1
  1934  007A                     ??___lldiv:	
  1935  007A                     ??___llmod:	
  1936                           ; 1 bytes @ 0xA
  1937                           
  1938  007A                     I2C_Init@I2Cx:	
  1939                           ; 1 bytes @ 0xA
  1940                           
  1941                           
  1942                           ; 1 bytes @ 0xA
  1943  007A                     	ds	1
  1944                           
  1945                           	psect	cstackBANK0
  1946  0020                     __pcstackBANK0:	
  1947  0020                     ??_I2C_Init:	
  1948  0020                     ?_I2C_Transmit:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0020                     I2C_Transmit@address:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0020                     ___llmod@counter:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0020                     ___lldiv@quotient:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960                           
  1961                           ; 4 bytes @ 0x0
  1962  0020                     	ds	1
  1963  0021                     I2C_Transmit@pData:	
  1964                           
  1965                           ; 1 bytes @ 0x1
  1966  0021                     	ds	1
  1967  0022                     I2C_Transmit@size:	
  1968                           
  1969                           ; 1 bytes @ 0x2
  1970  0022                     	ds	1
  1971  0023                     ??_I2C_Transmit:	
  1972                           
  1973                           ; 1 bytes @ 0x3
  1974  0023                     	ds	1
  1975  0024                     ___lldiv@counter:	
  1976                           
  1977                           ; 1 bytes @ 0x4
  1978  0024                     	ds	1
  1979  0025                     ?_xvprintf:	
  1980  0025                     xvprintf@fmt:	
  1981                           ; 1 bytes @ 0x5
  1982                           
  1983                           
  1984                           ; 2 bytes @ 0x5
  1985  0025                     	ds	1
  1986  0026                     I2C_Transmit@I2Cx:	
  1987                           
  1988                           ; 1 bytes @ 0x6
  1989  0026                     	ds	1
  1990  0027                     xvprintf@arp:	
  1991  0027                     I2C_Transmit@result:	
  1992                           ; 1 bytes @ 0x7
  1993                           
  1994                           
  1995                           ; 1 bytes @ 0x7
  1996  0027                     	ds	1
  1997  0028                     ??_DAC_Initialize:	
  1998  0028                     ??_xvprintf:	
  1999                           ; 1 bytes @ 0x8
  2000                           
  2001                           
  2002                           ; 1 bytes @ 0x8
  2003  0028                     	ds	4
  2004  002C                     xvprintf@s:	
  2005                           
  2006                           ; 16 bytes @ 0xC
  2007  002C                     	ds	16
  2008  003C                     _xvprintf$180:	
  2009                           
  2010                           ; 4 bytes @ 0x1C
  2011  003C                     	ds	4
  2012  0040                     _xvprintf$181:	
  2013                           
  2014                           ; 2 bytes @ 0x20
  2015  0040                     	ds	2
  2016  0042                     _xvprintf$182:	
  2017                           
  2018                           ; 2 bytes @ 0x22
  2019  0042                     	ds	2
  2020  0044                     xvprintf@p:	
  2021                           
  2022                           ; 1 bytes @ 0x24
  2023  0044                     	ds	1
  2024  0045                     xvprintf@r:	
  2025                           
  2026                           ; 2 bytes @ 0x25
  2027  0045                     	ds	2
  2028  0047                     xvprintf@w:	
  2029                           
  2030                           ; 2 bytes @ 0x27
  2031  0047                     	ds	2
  2032  0049                     xvprintf@j:	
  2033                           
  2034                           ; 2 bytes @ 0x29
  2035  0049                     	ds	2
  2036  004B                     xvprintf@v:	
  2037                           
  2038                           ; 4 bytes @ 0x2B
  2039  004B                     	ds	4
  2040  004F                     xvprintf@f:	
  2041                           
  2042                           ; 2 bytes @ 0x2F
  2043  004F                     	ds	2
  2044  0051                     xvprintf@i:	
  2045                           
  2046                           ; 2 bytes @ 0x31
  2047  0051                     	ds	2
  2048  0053                     xvprintf@d:	
  2049                           
  2050                           ; 1 bytes @ 0x33
  2051  0053                     	ds	1
  2052  0054                     xvprintf@c:	
  2053                           
  2054                           ; 1 bytes @ 0x34
  2055  0054                     	ds	1
  2056  0055                     ?_xprintf:	
  2057  0055                     xprintf@fmt:	
  2058                           ; 1 bytes @ 0x35
  2059                           
  2060                           
  2061                           ; 2 bytes @ 0x35
  2062  0055                     	ds	6
  2063  005B                     ??_xprintf:	
  2064                           
  2065                           ; 1 bytes @ 0x3B
  2066  005B                     	ds	1
  2067  005C                     xprintf@arp:	
  2068                           
  2069                           ; 1 bytes @ 0x3C
  2070  005C                     	ds	1
  2071  005D                     ??_main:	
  2072                           
  2073                           ; 1 bytes @ 0x3D
  2074  005D                     	ds	2
  2075                           
  2076                           	psect	maintext
  2077  05A5                     __pmaintext:	
  2078 ;;
  2079 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2080 ;;
  2081 ;; *************** function _main *****************
  2082 ;; Defined at:
  2083 ;;		line 10 in file "main.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      char 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : B1F/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2097 ;;      Params:         0       0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0
  2099 ;;      Temps:          0       2       0       0       0       0
  2100 ;;      Totals:         0       2       0       0       0       0
  2101 ;;Total ram usage:        2 bytes
  2102 ;; Hardware stack levels required when called:    9
  2103 ;; This function calls:
  2104 ;;		_Basic_Init
  2105 ;;		_Buzer_Init
  2106 ;;		_DAC_Initialize
  2107 ;;		_LCD_CursorPosition
  2108 ;;		_LCD_Init
  2109 ;;		_Timer1_Init
  2110 ;;		_xprintf
  2111 ;; This function is called by:
  2112 ;;		Startup code after reset
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _main
  2118  05A5                     _main:	
  2119                           
  2120                           ;main.c: 12: Basic_Init();
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2124  05A5  3187  270F  3185   	fcall	_Basic_Init
  2125                           
  2126                           ;main.c: 14: LATA6 = 1;
  2127  05A8  0022               	movlb	2	; select bank2
  2128  05A9  170C               	bsf	12,6	;volatile
  2129                           
  2130                           ;main.c: 16: LCD_Init();
  2131  05AA  3183  2350  3185   	fcall	_LCD_Init
  2132                           
  2133                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2134  05AD  307B               	movlw	low _LCD_Put
  2135  05AE  0020               	movlb	0	; select bank0
  2136  05AF  00E4               	movwf	_xfunc_out
  2137  05B0  3007               	movlw	high _LCD_Put
  2138  05B1  00E5               	movwf	_xfunc_out+1
  2139                           
  2140                           ;main.c: 19: Timer1_Init();
  2141  05B2  3186  26E1  3185   	fcall	_Timer1_Init
  2142                           
  2143                           ;main.c: 20: TMR1ON = 1;;
  2144  05B5  0020               	movlb	0	; select bank0
  2145  05B6  1418               	bsf	24,0	;volatile
  2146                           
  2147                           ;main.c: 22: Buzer_Init();
  2148  05B7  3186  2685  3185   	fcall	_Buzer_Init
  2149                           
  2150                           ;main.c: 24: DAC_Initialize();
  2151  05BA  3186  26A7  3185   	fcall	_DAC_Initialize
  2152  05BD                     l3709:	
  2153                           ;main.c: 26: while(1)
  2154                           
  2155                           
  2156                           ;main.c: 27: {
  2157                           ;main.c: 28: LATA6 ^= 1;
  2158  05BD  0022               	movlb	2	; select bank2
  2159  05BE  3040               	movlw	64
  2160  05BF  068C               	xorwf	12,f
  2161                           
  2162                           ;main.c: 29: _delay((unsigned long)((500)*(32000000/4000.0)));
  2163  05C0  3015               	movlw	21
  2164  05C1  0020               	movlb	0	; select bank0
  2165  05C2  00DE               	movwf	??_main+1
  2166  05C3  304B               	movlw	75
  2167  05C4  00DD               	movwf	??_main
  2168  05C5  30BE               	movlw	190
  2169  05C6                     u3807:	
  2170  05C6  0B89               	decfsz	9,f
  2171  05C7  2DC6               	goto	u3807
  2172  05C8  0BDD               	decfsz	??_main,f
  2173  05C9  2DC6               	goto	u3807
  2174  05CA  0BDE               	decfsz	??_main+1,f
  2175  05CB  2DC6               	goto	u3807
  2176  05CC  0000               	nop
  2177                           
  2178                           ;main.c: 31: LCD_CursorPosition(0,0);
  2179  05CD  01F5               	clrf	LCD_CursorPosition@ty
  2180  05CE  3000               	movlw	0
  2181  05CF  3186  26FA  3185   	fcall	_LCD_CursorPosition
  2182                           
  2183                           ;main.c: 32: xprintf("Hellow World");
  2184  05D2  3033               	movlw	low (STR_1| (0+32768))
  2185  05D3  0020               	movlb	0	; select bank0
  2186  05D4  00D5               	movwf	xprintf@fmt
  2187  05D5  3086               	movlw	high (STR_1| (0+32768))
  2188  05D6  00D6               	movwf	xprintf@fmt+1
  2189  05D7  3187  2737  3185   	fcall	_xprintf
  2190  05DA  2DBD               	goto	l3709
  2191  05DB                     __end_of_main:	
  2192                           ;main.c: 33: }
  2193                           ;main.c: 35: return 0;
  2194                           ;	Return value of _main is never used
  2195                           
  2196                           
  2197                           	psect	text1
  2198  0737                     __ptext1:	
  2199 ;; *************** function _xprintf *****************
  2200 ;; Defined at:
  2201 ;;		line 165 in file "xprintf.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  2204 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2205 ;;		 -> STR_1(13), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  arp             1   60[BANK0 ] PTR void [1]
  2208 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2218 ;;      Params:         0       6       0       0       0       0
  2219 ;;      Locals:         0       1       0       0       0       0
  2220 ;;      Temps:          0       1       0       0       0       0
  2221 ;;      Totals:         0       8       0       0       0       0
  2222 ;;Total ram usage:        8 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    8
  2225 ;; This function calls:
  2226 ;;		_xvprintf
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;;		_put_dump
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _xprintf
  2235  0737                     _xprintf:	
  2236                           
  2237                           ;xprintf.c: 170: va_list arp;
  2238                           ;xprintf.c: 173: *arp = __va_start();
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2242  0737  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2243  0738  0020               	movlb	0	; select bank0
  2244  0739  00DB               	movwf	??_xprintf
  2245  073A  085B               	movf	??_xprintf,w
  2246  073B  00DC               	movwf	xprintf@arp
  2247                           
  2248                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2249  073C  0856               	movf	xprintf@fmt+1,w
  2250  073D  00A6               	movwf	xvprintf@fmt+1
  2251  073E  0855               	movf	xprintf@fmt,w
  2252  073F  00A5               	movwf	xvprintf@fmt
  2253  0740  305C               	movlw	(low (xprintf@arp| 0))& (0+255)
  2254  0741  00DB               	movwf	??_xprintf
  2255  0742  085B               	movf	??_xprintf,w
  2256  0743  00A7               	movwf	xvprintf@arp
  2257  0744  3180  2029         	fcall	_xvprintf
  2258  0746  0008               	return
  2259  0747                     __end_of_xprintf:	
  2260                           
  2261                           	psect	text2
  2262  0029                     __ptext2:	
  2263 ;; *************** function _xvprintf *****************
  2264 ;; Defined at:
  2265 ;;		line 88 in file "xprintf.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  2268 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2269 ;;		 -> STR_1(13), 
  2270 ;;  arp             1    7[BANK0 ] PTR PTR void 
  2271 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  s              16   12[BANK0 ] unsigned char [16]
  2274 ;;  v               4   43[BANK0 ] unsigned long 
  2275 ;;  i               2   49[BANK0 ] unsigned int 
  2276 ;;  f               2   47[BANK0 ] unsigned int 
  2277 ;;  j               2   41[BANK0 ] unsigned int 
  2278 ;;  w               2   39[BANK0 ] unsigned int 
  2279 ;;  r               2   37[BANK0 ] unsigned int 
  2280 ;;  c               1   52[BANK0 ] unsigned char 
  2281 ;;  d               1   51[BANK0 ] unsigned char 
  2282 ;;  p               1   36[BANK0 ] PTR unsigned char 
  2283 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2293 ;;      Params:         0       3       0       0       0       0
  2294 ;;      Locals:         0      41       0       0       0       0
  2295 ;;      Temps:          0       4       0       0       0       0
  2296 ;;      Totals:         0      48       0       0       0       0
  2297 ;;Total ram usage:       48 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    7
  2300 ;; This function calls:
  2301 ;;		___lldiv
  2302 ;;		___llmod
  2303 ;;		___wmul
  2304 ;;		_xputc
  2305 ;;		_xputs
  2306 ;; This function is called by:
  2307 ;;		_xprintf
  2308 ;;		_xsprintf
  2309 ;;		_xfprintf
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _xvprintf
  2315  0029                     _xvprintf:	
  2316  0029                     l127:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2319                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2320                           ;xprintf.c: 94: unsigned long v;
  2321                           ;xprintf.c: 95: char s[16], c, d, *p;
  2322                           ;xprintf.c: 98: for (;;) {
  2323                           
  2324                           
  2325                           ;xprintf.c: 99: c = *fmt++;
  2326  0029  0020               	movlb	0	; select bank0
  2327  002A  0825               	movf	xvprintf@fmt,w
  2328  002B  0084               	movwf	4
  2329  002C  0826               	movf	xvprintf@fmt+1,w
  2330  002D  0085               	movwf	5
  2331  002E  0800               	movf	0,w	;code access
  2332  002F  00A8               	movwf	??_xvprintf
  2333  0030  0828               	movf	??_xvprintf,w
  2334  0031  00D4               	movwf	xvprintf@c
  2335  0032  3001               	movlw	1
  2336  0033  07A5               	addwf	xvprintf@fmt,f
  2337  0034  3000               	movlw	0
  2338  0035  3DA6               	addwfc	xvprintf@fmt+1,f
  2339                           
  2340                           ;xprintf.c: 100: if (!c) break;
  2341  0036  0854               	movf	xvprintf@c,w
  2342  0037  1903               	btfsc	3,2
  2343  0038  0008               	return
  2344                           
  2345                           ;xprintf.c: 101: if (c != '%') {
  2346  0039  3025               	movlw	37
  2347  003A  0654               	xorwf	xvprintf@c,w
  2348  003B  1903               	btfsc	3,2
  2349  003C  2842               	goto	l3503
  2350                           
  2351                           ;xprintf.c: 102: xputc(c); continue;
  2352  003D  0854               	movf	xvprintf@c,w
  2353  003E  3185  25DB  3180   	fcall	_xputc
  2354  0041  2829               	goto	l127
  2355  0042                     l3503:	
  2356                           
  2357                           ;xprintf.c: 103: }
  2358                           ;xprintf.c: 104: f = 0;
  2359  0042  0020               	movlb	0	; select bank0
  2360  0043  01CF               	clrf	xvprintf@f
  2361  0044  01D0               	clrf	xvprintf@f+1
  2362                           
  2363                           ;xprintf.c: 105: c = *fmt++;
  2364  0045  0825               	movf	xvprintf@fmt,w
  2365  0046  0084               	movwf	4
  2366  0047  0826               	movf	xvprintf@fmt+1,w
  2367  0048  0085               	movwf	5
  2368  0049  0800               	movf	0,w	;code access
  2369  004A  00A8               	movwf	??_xvprintf
  2370  004B  0828               	movf	??_xvprintf,w
  2371  004C  00D4               	movwf	xvprintf@c
  2372  004D  3001               	movlw	1
  2373  004E  07A5               	addwf	xvprintf@fmt,f
  2374  004F  3000               	movlw	0
  2375  0050  3DA6               	addwfc	xvprintf@fmt+1,f
  2376                           
  2377                           ;xprintf.c: 106: if (c == '0') {
  2378  0051  3030               	movlw	48
  2379  0052  0654               	xorwf	xvprintf@c,w
  2380  0053  1D03               	btfss	3,2
  2381  0054  2857               	goto	l3517
  2382                           
  2383                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2384  0055  3001               	movlw	1
  2385  0056  285C               	goto	L6
  2386  0057                     l3517:	
  2387                           ;xprintf.c: 108: } else {
  2388                           
  2389                           
  2390                           ;xprintf.c: 109: if (c == '-') {
  2391  0057  302D               	movlw	45
  2392  0058  0654               	xorwf	xvprintf@c,w
  2393  0059  1D03               	btfss	3,2
  2394  005A  286B               	goto	l3525
  2395                           
  2396                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2397  005B  3002               	movlw	2
  2398  005C                     L6:	
  2399  005C  00CF               	movwf	xvprintf@f
  2400  005D  3000               	movlw	0
  2401  005E  00D0               	movwf	xvprintf@f+1
  2402  005F  0825               	movf	xvprintf@fmt,w
  2403  0060  0084               	movwf	4
  2404  0061  0826               	movf	xvprintf@fmt+1,w
  2405  0062  0085               	movwf	5
  2406  0063  0800               	movf	0,w	;code access
  2407  0064  00A8               	movwf	??_xvprintf
  2408  0065  0828               	movf	??_xvprintf,w
  2409  0066  00D4               	movwf	xvprintf@c
  2410  0067  3001               	movlw	1
  2411  0068  07A5               	addwf	xvprintf@fmt,f
  2412  0069  3000               	movlw	0
  2413  006A  3DA6               	addwfc	xvprintf@fmt+1,f
  2414  006B                     l3525:	
  2415                           
  2416                           ;xprintf.c: 111: }
  2417                           ;xprintf.c: 112: }
  2418                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2419  006B  01C7               	clrf	xvprintf@w
  2420  006C  01C8               	clrf	xvprintf@w+1
  2421  006D  2895               	goto	l3533
  2422  006E                     l3527:	
  2423                           
  2424                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2425  006E  0854               	movf	xvprintf@c,w
  2426  006F  00A8               	movwf	??_xvprintf
  2427  0070  01A9               	clrf	??_xvprintf+1
  2428  0071  0848               	movf	xvprintf@w+1,w
  2429  0072  00F3               	movwf	___wmul@multiplier+1
  2430  0073  0847               	movf	xvprintf@w,w
  2431  0074  00F2               	movwf	___wmul@multiplier
  2432  0075  300A               	movlw	10
  2433  0076  00F4               	movwf	___wmul@multiplicand
  2434  0077  3000               	movlw	0
  2435  0078  00F5               	movwf	___wmul@multiplicand+1
  2436  0079  3186  26C6  3180   	fcall	___wmul
  2437  007C  0020               	movlb	0	; select bank0
  2438  007D  0828               	movf	??_xvprintf,w
  2439  007E  0772               	addwf	?___wmul,w
  2440  007F  00AA               	movwf	??_xvprintf+2
  2441  0080  0829               	movf	??_xvprintf+1,w
  2442  0081  3D73               	addwfc	?___wmul+1,w
  2443  0082  00AB               	movwf	??_xvprintf+3
  2444  0083  082A               	movf	??_xvprintf+2,w
  2445  0084  3ED0               	addlw	208
  2446  0085  00C7               	movwf	xvprintf@w
  2447  0086  30FF               	movlw	255
  2448  0087  3D2B               	addwfc	??_xvprintf+3,w
  2449  0088  00C8               	movwf	xvprintf@w+1
  2450  0089  0825               	movf	xvprintf@fmt,w
  2451  008A  0084               	movwf	4
  2452  008B  0826               	movf	xvprintf@fmt+1,w
  2453  008C  0085               	movwf	5
  2454  008D  0800               	movf	0,w	;code access
  2455  008E  00A8               	movwf	??_xvprintf
  2456  008F  0828               	movf	??_xvprintf,w
  2457  0090  00D4               	movwf	xvprintf@c
  2458  0091  3001               	movlw	1
  2459  0092  07A5               	addwf	xvprintf@fmt,f
  2460  0093  3000               	movlw	0
  2461  0094  3DA6               	addwfc	xvprintf@fmt+1,f
  2462  0095                     l3533:	
  2463  0095  3030               	movlw	48
  2464  0096  0254               	subwf	xvprintf@c,w
  2465  0097  1C03               	skipc
  2466  0098  289D               	goto	l3537
  2467  0099  303A               	movlw	58
  2468  009A  0254               	subwf	xvprintf@c,w
  2469  009B  1C03               	skipc
  2470  009C  286E               	goto	l3527
  2471  009D                     l3537:	
  2472                           
  2473                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2474  009D  306C               	movlw	108
  2475  009E  0654               	xorwf	xvprintf@c,w
  2476  009F  1903               	btfsc	3,2
  2477  00A0  28A5               	goto	l142
  2478  00A1  304C               	movlw	76
  2479  00A2  0654               	xorwf	xvprintf@c,w
  2480  00A3  1D03               	btfss	3,2
  2481  00A4  28B2               	goto	l3545
  2482  00A5                     l142:	
  2483                           
  2484                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  2485  00A5  154F               	bsf	xvprintf@f,2
  2486  00A6  0825               	movf	xvprintf@fmt,w
  2487  00A7  0084               	movwf	4
  2488  00A8  0826               	movf	xvprintf@fmt+1,w
  2489  00A9  0085               	movwf	5
  2490  00AA  0800               	movf	0,w	;code access
  2491  00AB  00A8               	movwf	??_xvprintf
  2492  00AC  0828               	movf	??_xvprintf,w
  2493  00AD  00D4               	movwf	xvprintf@c
  2494  00AE  3001               	movlw	1
  2495  00AF  07A5               	addwf	xvprintf@fmt,f
  2496  00B0  3000               	movlw	0
  2497  00B1  3DA6               	addwfc	xvprintf@fmt+1,f
  2498  00B2                     l3545:	
  2499                           
  2500                           ;xprintf.c: 117: }
  2501                           ;xprintf.c: 118: if (!c) break;
  2502  00B2  0854               	movf	xvprintf@c,w
  2503  00B3  1903               	btfsc	3,2
  2504  00B4  0008               	return
  2505                           
  2506                           ;xprintf.c: 119: d = c;
  2507  00B5  0854               	movf	xvprintf@c,w
  2508  00B6  00A8               	movwf	??_xvprintf
  2509  00B7  0828               	movf	??_xvprintf,w
  2510  00B8  00D3               	movwf	xvprintf@d
  2511                           
  2512                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2513  00B9  3061               	movlw	97
  2514  00BA  0253               	subwf	xvprintf@d,w
  2515  00BB  1C03               	skipc
  2516  00BC  2928               	goto	l3587
  2517  00BD  3020               	movlw	32
  2518  00BE  02D3               	subwf	xvprintf@d,f
  2519                           
  2520                           ;xprintf.c: 121: switch (d) {
  2521  00BF  2928               	goto	l3587
  2522  00C0                     l3553:	
  2523                           ;xprintf.c: 122: case 'S' :
  2524                           
  2525                           
  2526                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  2527  00C0  0827               	movf	xvprintf@arp,w
  2528  00C1  0086               	movwf	6
  2529  00C2  0187               	clrf	7
  2530  00C3  3F40               	moviw [0]fsr1
  2531  00C4  0084               	movwf	4
  2532  00C5  0185               	clrf	5
  2533  00C6  0A81               	incf	1,f
  2534  00C7  0800               	movf	0,w
  2535  00C8  00A8               	movwf	??_xvprintf
  2536  00C9  0828               	movf	??_xvprintf,w
  2537  00CA  00C4               	movwf	xvprintf@p
  2538                           
  2539                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  2540  00CB  01C9               	clrf	xvprintf@j
  2541  00CC  01CA               	clrf	xvprintf@j+1
  2542  00CD                     l3559:	
  2543  00CD  0849               	movf	xvprintf@j,w
  2544  00CE  0744               	addwf	xvprintf@p,w
  2545  00CF  00A8               	movwf	??_xvprintf
  2546  00D0  0828               	movf	??_xvprintf,w
  2547  00D1  0086               	movwf	6
  2548  00D2  0187               	clrf	7
  2549  00D3  0801               	movf	1,w
  2550  00D4  1903               	btfsc	3,2
  2551  00D5  28DF               	goto	l3563
  2552  00D6  3001               	movlw	1
  2553  00D7  07C9               	addwf	xvprintf@j,f
  2554  00D8  3000               	movlw	0
  2555  00D9  3DCA               	addwfc	xvprintf@j+1,f
  2556  00DA  28CD               	goto	l3559
  2557  00DB                     l3561:	
  2558                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  2559                           
  2560  00DB  3020               	movlw	32
  2561  00DC  3185  25DB  3180   	fcall	_xputc
  2562  00DF                     l3563:	
  2563  00DF  0020               	movlb	0	; select bank0
  2564  00E0  18CF               	btfsc	xvprintf@f,1
  2565  00E1  28F1               	goto	l3567
  2566  00E2  084A               	movf	xvprintf@j+1,w
  2567  00E3  00A9               	movwf	??_xvprintf+1
  2568  00E4  0849               	movf	xvprintf@j,w
  2569  00E5  00A8               	movwf	??_xvprintf
  2570  00E6  0AC9               	incf	xvprintf@j,f
  2571  00E7  1903               	skipnz
  2572  00E8  0ACA               	incf	xvprintf@j+1,f
  2573  00E9  0848               	movf	xvprintf@w+1,w
  2574  00EA  0229               	subwf	??_xvprintf+1,w
  2575  00EB  1D03               	skipz
  2576  00EC  28EF               	goto	u3585
  2577  00ED  0847               	movf	xvprintf@w,w
  2578  00EE  0228               	subwf	??_xvprintf,w
  2579  00EF                     u3585:	
  2580  00EF  1C03               	skipc
  2581  00F0  28DB               	goto	l3561
  2582  00F1                     l3567:	
  2583                           
  2584                           ;xprintf.c: 126: xputs(p);
  2585  00F1  0844               	movf	xvprintf@p,w
  2586  00F2  3187  2724  3180   	fcall	_xputs
  2587  00F5                     l3571:	
  2588                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  2589                           
  2590  00F5  0020               	movlb	0	; select bank0
  2591  00F6  084A               	movf	xvprintf@j+1,w
  2592  00F7  00A9               	movwf	??_xvprintf+1
  2593  00F8  0849               	movf	xvprintf@j,w
  2594  00F9  00A8               	movwf	??_xvprintf
  2595  00FA  0AC9               	incf	xvprintf@j,f
  2596  00FB  1903               	skipnz
  2597  00FC  0ACA               	incf	xvprintf@j+1,f
  2598  00FD  0848               	movf	xvprintf@w+1,w
  2599  00FE  0229               	subwf	??_xvprintf+1,w
  2600  00FF  1D03               	skipz
  2601  0100  2903               	goto	u3595
  2602  0101  0847               	movf	xvprintf@w,w
  2603  0102  0228               	subwf	??_xvprintf,w
  2604  0103                     u3595:	
  2605  0103  1803               	btfsc	3,0
  2606  0104  2829               	goto	l127
  2607  0105  3020               	movlw	32
  2608  0106  3185  25DB  3180   	fcall	_xputc
  2609  0109  28F5               	goto	l3571
  2610  010A                     l3573:	
  2611                           ;xprintf.c: 129: case 'C' :
  2612                           
  2613                           ;xprintf.c: 128: continue;
  2614                           
  2615                           
  2616                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  2617  010A  0827               	movf	xvprintf@arp,w
  2618  010B  0086               	movwf	6
  2619  010C  0187               	clrf	7
  2620  010D  0801               	movf	1,w
  2621  010E  0084               	movwf	4
  2622  010F  0185               	clrf	5
  2623  0110  3002               	movlw	2
  2624  0111  0781               	addwf	1,f
  2625  0112  0800               	movf	0,w
  2626  0113  3185  25DB  3180   	fcall	_xputc
  2627  0116  2829               	goto	l127
  2628  0117                     l3575:	
  2629                           ;xprintf.c: 131: case 'B' :
  2630                           
  2631                           
  2632                           ;xprintf.c: 132: r = 2; break;
  2633  0117  3002               	movlw	2
  2634  0118  0020               	movlb	0	; select bank0
  2635  0119  291F               	goto	L3
  2636  011A                     l3577:	
  2637                           ;xprintf.c: 133: case 'O' :
  2638                           
  2639                           
  2640                           ;xprintf.c: 134: r = 8; break;
  2641  011A  3008               	movlw	8
  2642  011B  291F               	goto	L3
  2643  011C                     l3579:	
  2644                           ;xprintf.c: 135: case 'D' :
  2645                           
  2646                           
  2647                           ;xprintf.c: 136: case 'U' :
  2648                           ;xprintf.c: 137: r = 10; break;
  2649  011C  300A               	movlw	10
  2650  011D  291F               	goto	L3
  2651  011E                     l3581:	
  2652                           ;xprintf.c: 138: case 'X' :
  2653                           
  2654                           
  2655                           ;xprintf.c: 139: r = 16; break;
  2656  011E  3010               	movlw	16
  2657  011F                     L3:	
  2658  011F  00C5               	movwf	xvprintf@r
  2659  0120  3000               	movlw	0
  2660  0121  00C6               	movwf	xvprintf@r+1
  2661  0122  2940               	goto	l160
  2662  0123                     l3583:	
  2663                           ;xprintf.c: 140: default:
  2664                           
  2665                           
  2666                           ;xprintf.c: 141: xputc(c); continue;
  2667  0123  0854               	movf	xvprintf@c,w
  2668  0124  3185  25DB  3180   	fcall	_xputc
  2669  0127  2829               	goto	l127
  2670  0128                     l3587:	
  2671                           ;xprintf.c: 142: }
  2672                           
  2673  0128  0020               	movlb	0	; select bank0
  2674  0129  0853               	movf	xvprintf@d,w
  2675                           
  2676                           ; Switch size 1, requested type "space"
  2677                           ; Number of cases is 7, Range of values is 66 to 88
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte           22    12 (average)
  2681                           ; direct_byte           55     9 (fixed)
  2682                           ; jumptable            263     9 (fixed)
  2683                           ;	Chosen strategy is simple_byte
  2684  012A  3A42               	xorlw	66	; case 66
  2685  012B  1903               	skipnz
  2686  012C  2917               	goto	l3575
  2687  012D  3A01               	xorlw	1	; case 67
  2688  012E  1903               	skipnz
  2689  012F  290A               	goto	l3573
  2690  0130  3A07               	xorlw	7	; case 68
  2691  0131  1903               	skipnz
  2692  0132  291C               	goto	l3579
  2693  0133  3A0B               	xorlw	11	; case 79
  2694  0134  1903               	skipnz
  2695  0135  291A               	goto	l3577
  2696  0136  3A1C               	xorlw	28	; case 83
  2697  0137  1903               	skipnz
  2698  0138  28C0               	goto	l3553
  2699  0139  3A06               	xorlw	6	; case 85
  2700  013A  1903               	skipnz
  2701  013B  291C               	goto	l3579
  2702  013C  3A0D               	xorlw	13	; case 88
  2703  013D  1903               	skipnz
  2704  013E  291E               	goto	l3581
  2705  013F  2923               	goto	l3583
  2706  0140                     l160:	
  2707                           
  2708                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  2709  0140  0020               	movlb	0	; select bank0
  2710  0141  194F               	btfsc	xvprintf@f,2
  2711  0142  2978               	goto	l3597
  2712  0143  3044               	movlw	68
  2713  0144  0653               	xorwf	xvprintf@d,w
  2714  0145  1903               	btfsc	3,2
  2715  0146  295A               	goto	l3593
  2716  0147  0827               	movf	xvprintf@arp,w
  2717  0148  0086               	movwf	6
  2718  0149  0187               	clrf	7
  2719  014A  0801               	movf	1,w
  2720  014B  0084               	movwf	4
  2721  014C  0185               	clrf	5
  2722  014D  3002               	movlw	2
  2723  014E  0781               	addwf	1,f
  2724  014F  3F00               	moviw [0]fsr0
  2725  0150  00A8               	movwf	??_xvprintf
  2726  0151  3F01               	moviw [1]fsr0
  2727  0152  00A9               	movwf	??_xvprintf+1
  2728  0153  0828               	movf	??_xvprintf,w
  2729  0154  00BC               	movwf	_xvprintf$180
  2730  0155  0829               	movf	??_xvprintf+1,w
  2731  0156  00BD               	movwf	_xvprintf$180+1
  2732  0157  01BE               	clrf	_xvprintf$180+2
  2733  0158  01BF               	clrf	_xvprintf$180+3
  2734  0159  296F               	goto	l3595
  2735  015A                     l3593:	
  2736  015A  0827               	movf	xvprintf@arp,w
  2737  015B  0086               	movwf	6
  2738  015C  0187               	clrf	7
  2739  015D  0801               	movf	1,w
  2740  015E  0084               	movwf	4
  2741  015F  0185               	clrf	5
  2742  0160  3002               	movlw	2
  2743  0161  0781               	addwf	1,f
  2744  0162  3F00               	moviw [0]fsr0
  2745  0163  00A8               	movwf	??_xvprintf
  2746  0164  3F01               	moviw [1]fsr0
  2747  0165  00A9               	movwf	??_xvprintf+1
  2748  0166  0828               	movf	??_xvprintf,w
  2749  0167  00BC               	movwf	_xvprintf$180
  2750  0168  0829               	movf	??_xvprintf+1,w
  2751  0169  00BD               	movwf	_xvprintf$180+1
  2752  016A  0D89               	rlf	9,f
  2753  016B  3B89               	subwfb	9,f
  2754  016C  0989               	comf	9,f
  2755  016D  00BE               	movwf	_xvprintf$180+2
  2756  016E  00BF               	movwf	_xvprintf$180+3
  2757  016F                     l3595:	
  2758  016F  083F               	movf	_xvprintf$180+3,w
  2759  0170  00CE               	movwf	xvprintf@v+3
  2760  0171  083E               	movf	_xvprintf$180+2,w
  2761  0172  00CD               	movwf	xvprintf@v+2
  2762  0173  083D               	movf	_xvprintf$180+1,w
  2763  0174  00CC               	movwf	xvprintf@v+1
  2764  0175  083C               	movf	_xvprintf$180,w
  2765  0176  00CB               	movwf	xvprintf@v
  2766  0177  2988               	goto	l3599
  2767  0178                     l3597:	
  2768  0178  0827               	movf	xvprintf@arp,w
  2769  0179  0086               	movwf	6
  2770  017A  0187               	clrf	7
  2771  017B  0801               	movf	1,w
  2772  017C  0084               	movwf	4
  2773  017D  0185               	clrf	5
  2774  017E  3004               	movlw	4
  2775  017F  0781               	addwf	1,f
  2776  0180  3F00               	moviw [0]fsr0
  2777  0181  00CB               	movwf	xvprintf@v
  2778  0182  3F01               	moviw [1]fsr0
  2779  0183  00CC               	movwf	xvprintf@v+1
  2780  0184  3F02               	moviw [2]fsr0
  2781  0185  00CD               	movwf	xvprintf@v+2
  2782  0186  3F03               	moviw [3]fsr0
  2783  0187  00CE               	movwf	xvprintf@v+3
  2784  0188                     l3599:	
  2785                           
  2786                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  2787  0188  3044               	movlw	68
  2788  0189  0653               	xorwf	xvprintf@d,w
  2789  018A  1903               	btfsc	3,2
  2790  018B  1FCE               	btfss	xvprintf@v+3,7
  2791  018C  2999               	goto	l3605
  2792                           
  2793                           ;xprintf.c: 147: v = 0 - v;
  2794  018D  09CB               	comf	xvprintf@v,f
  2795  018E  09CC               	comf	xvprintf@v+1,f
  2796  018F  09CD               	comf	xvprintf@v+2,f
  2797  0190  09CE               	comf	xvprintf@v+3,f
  2798  0191  0ACB               	incf	xvprintf@v,f
  2799  0192  1903               	skipnz
  2800  0193  0ACC               	incf	xvprintf@v+1,f
  2801  0194  1903               	skipnz
  2802  0195  0ACD               	incf	xvprintf@v+2,f
  2803  0196  1903               	skipnz
  2804  0197  0ACE               	incf	xvprintf@v+3,f
  2805                           
  2806                           ;xprintf.c: 148: f |= 8;
  2807  0198  15CF               	bsf	xvprintf@f,3
  2808  0199                     l3605:	
  2809                           
  2810                           ;xprintf.c: 149: }
  2811                           ;xprintf.c: 150: i = 0;
  2812  0199  01D1               	clrf	xvprintf@i
  2813  019A  01D2               	clrf	xvprintf@i+1
  2814  019B                     l3607:	
  2815                           ;xprintf.c: 151: do {
  2816                           
  2817                           
  2818                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  2819  019B  0845               	movf	xvprintf@r,w
  2820  019C  00F2               	movwf	___llmod@divisor
  2821  019D  0846               	movf	xvprintf@r+1,w
  2822  019E  00F3               	movwf	___llmod@divisor+1
  2823  019F  01F4               	clrf	___llmod@divisor+2
  2824  01A0  01F5               	clrf	___llmod@divisor+3
  2825  01A1  084E               	movf	xvprintf@v+3,w
  2826  01A2  00F9               	movwf	___llmod@dividend+3
  2827  01A3  084D               	movf	xvprintf@v+2,w
  2828  01A4  00F8               	movwf	___llmod@dividend+2
  2829  01A5  084C               	movf	xvprintf@v+1,w
  2830  01A6  00F7               	movwf	___llmod@dividend+1
  2831  01A7  084B               	movf	xvprintf@v,w
  2832  01A8  00F6               	movwf	___llmod@dividend
  2833  01A9  3184  24B6  3180   	fcall	___llmod
  2834  01AC  0872               	movf	?___llmod,w
  2835  01AD  0020               	movlb	0	; select bank0
  2836  01AE  00A8               	movwf	??_xvprintf
  2837  01AF  0828               	movf	??_xvprintf,w
  2838  01B0  00D3               	movwf	xvprintf@d
  2839  01B1  0845               	movf	xvprintf@r,w
  2840  01B2  00F2               	movwf	___lldiv@divisor
  2841  01B3  0846               	movf	xvprintf@r+1,w
  2842  01B4  00F3               	movwf	___lldiv@divisor+1
  2843  01B5  01F4               	clrf	___lldiv@divisor+2
  2844  01B6  01F5               	clrf	___lldiv@divisor+3
  2845  01B7  084E               	movf	xvprintf@v+3,w
  2846  01B8  00F9               	movwf	___lldiv@dividend+3
  2847  01B9  084D               	movf	xvprintf@v+2,w
  2848  01BA  00F8               	movwf	___lldiv@dividend+2
  2849  01BB  084C               	movf	xvprintf@v+1,w
  2850  01BC  00F7               	movwf	___lldiv@dividend+1
  2851  01BD  084B               	movf	xvprintf@v,w
  2852  01BE  00F6               	movwf	___lldiv@dividend
  2853  01BF  3184  2463  3180   	fcall	___lldiv
  2854  01C2  0875               	movf	?___lldiv+3,w
  2855  01C3  0020               	movlb	0	; select bank0
  2856  01C4  00CE               	movwf	xvprintf@v+3
  2857  01C5  0874               	movf	?___lldiv+2,w
  2858  01C6  00CD               	movwf	xvprintf@v+2
  2859  01C7  0873               	movf	?___lldiv+1,w
  2860  01C8  00CC               	movwf	xvprintf@v+1
  2861  01C9  0872               	movf	?___lldiv,w
  2862  01CA  00CB               	movwf	xvprintf@v
  2863                           
  2864                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  2865  01CB  300A               	movlw	10
  2866  01CC  0253               	subwf	xvprintf@d,w
  2867  01CD  1C03               	skipc
  2868  01CE  29DD               	goto	l3621
  2869  01CF  3078               	movlw	120
  2870  01D0  0654               	xorwf	xvprintf@c,w
  2871  01D1  1903               	btfsc	3,2
  2872  01D2  29D5               	goto	l3617
  2873  01D3  3007               	movlw	7
  2874  01D4  29D6               	goto	L4
  2875  01D5                     l3617:	
  2876  01D5  3027               	movlw	39
  2877  01D6                     L4:	
  2878  01D6  00C0               	movwf	_xvprintf$181
  2879  01D7  3000               	movlw	0
  2880  01D8  00C1               	movwf	_xvprintf$181+1
  2881  01D9  0840               	movf	_xvprintf$181,w
  2882  01DA  00A8               	movwf	??_xvprintf
  2883  01DB  0828               	movf	??_xvprintf,w
  2884  01DC  07D3               	addwf	xvprintf@d,f
  2885  01DD                     l3621:	
  2886                           
  2887                           ;xprintf.c: 154: s[i++] = d + '0';
  2888  01DD  0853               	movf	xvprintf@d,w
  2889  01DE  3E30               	addlw	48
  2890  01DF  00A8               	movwf	??_xvprintf
  2891  01E0  0851               	movf	xvprintf@i,w
  2892  01E1  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2893  01E2  0086               	movwf	6
  2894  01E3  0187               	clrf	7
  2895  01E4  0828               	movf	??_xvprintf,w
  2896  01E5  0081               	movwf	1
  2897  01E6  3001               	movlw	1
  2898  01E7  07D1               	addwf	xvprintf@i,f
  2899  01E8  3000               	movlw	0
  2900  01E9  3DD2               	addwfc	xvprintf@i+1,f
  2901                           
  2902                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  2903  01EA  084E               	movf	xvprintf@v+3,w
  2904  01EB  044D               	iorwf	xvprintf@v+2,w
  2905  01EC  044C               	iorwf	xvprintf@v+1,w
  2906  01ED  044B               	iorwf	xvprintf@v,w
  2907  01EE  1903               	skipnz
  2908  01EF  29F7               	goto	l183
  2909  01F0  3000               	movlw	0
  2910  01F1  0252               	subwf	xvprintf@i+1,w
  2911  01F2  3010               	movlw	16
  2912  01F3  1903               	skipnz
  2913  01F4  0251               	subwf	xvprintf@i,w
  2914  01F5  1C03               	skipc
  2915  01F6  299B               	goto	l3607
  2916  01F7                     l183:	
  2917                           
  2918                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  2919  01F7  1DCF               	btfss	xvprintf@f,3
  2920  01F8  2A05               	goto	l3633
  2921  01F9  302D               	movlw	45
  2922  01FA  00A8               	movwf	??_xvprintf
  2923  01FB  0851               	movf	xvprintf@i,w
  2924  01FC  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2925  01FD  0086               	movwf	6
  2926  01FE  0187               	clrf	7
  2927  01FF  0828               	movf	??_xvprintf,w
  2928  0200  0081               	movwf	1
  2929  0201  3001               	movlw	1
  2930  0202  07D1               	addwf	xvprintf@i,f
  2931  0203  3000               	movlw	0
  2932  0204  3DD2               	addwfc	xvprintf@i+1,f
  2933  0205                     l3633:	
  2934                           
  2935                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  2936  0205  0852               	movf	xvprintf@i+1,w
  2937  0206  00CA               	movwf	xvprintf@j+1
  2938  0207  0851               	movf	xvprintf@i,w
  2939  0208  00C9               	movwf	xvprintf@j
  2940  0209  184F               	btfsc	xvprintf@f,0
  2941  020A  2A0D               	goto	l3639
  2942  020B  3020               	movlw	32
  2943  020C  2A0E               	goto	L5
  2944  020D                     l3639:	
  2945  020D  3030               	movlw	48
  2946  020E                     L5:	
  2947  020E  00C2               	movwf	_xvprintf$182
  2948  020F  3000               	movlw	0
  2949  0210  00C3               	movwf	_xvprintf$182+1
  2950  0211  0842               	movf	_xvprintf$182,w
  2951  0212  00A8               	movwf	??_xvprintf
  2952  0213  0828               	movf	??_xvprintf,w
  2953  0214  00D3               	movwf	xvprintf@d
  2954                           
  2955                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  2956  0215  2A1A               	goto	l3643
  2957  0216                     l3641:	
  2958  0216  0853               	movf	xvprintf@d,w
  2959  0217  3185  25DB  3180   	fcall	_xputc
  2960  021A                     l3643:	
  2961  021A  0020               	movlb	0	; select bank0
  2962  021B  18CF               	btfsc	xvprintf@f,1
  2963  021C  2A2C               	goto	l3647
  2964  021D  084A               	movf	xvprintf@j+1,w
  2965  021E  00A9               	movwf	??_xvprintf+1
  2966  021F  0849               	movf	xvprintf@j,w
  2967  0220  00A8               	movwf	??_xvprintf
  2968  0221  0AC9               	incf	xvprintf@j,f
  2969  0222  1903               	skipnz
  2970  0223  0ACA               	incf	xvprintf@j+1,f
  2971  0224  0848               	movf	xvprintf@w+1,w
  2972  0225  0229               	subwf	??_xvprintf+1,w
  2973  0226  1D03               	skipz
  2974  0227  2A2A               	goto	u3715
  2975  0228  0847               	movf	xvprintf@w,w
  2976  0229  0228               	subwf	??_xvprintf,w
  2977  022A                     u3715:	
  2978  022A  1C03               	skipc
  2979  022B  2A16               	goto	l3641
  2980  022C                     l3647:	
  2981                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  2982                           
  2983  022C  3001               	movlw	1
  2984  022D  02D1               	subwf	xvprintf@i,f
  2985  022E  3000               	movlw	0
  2986  022F  3BD2               	subwfb	xvprintf@i+1,f
  2987  0230  0851               	movf	xvprintf@i,w
  2988  0231  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2989  0232  0086               	movwf	6
  2990  0233  0187               	clrf	7
  2991  0234  0801               	movf	1,w
  2992  0235  3185  25DB  3180   	fcall	_xputc
  2993  0238  0020               	movlb	0	; select bank0
  2994  0239  0851               	movf	xvprintf@i,w
  2995  023A  0452               	iorwf	xvprintf@i+1,w
  2996  023B  1903               	btfsc	3,2
  2997  023C  2A42               	goto	l3653
  2998  023D  2A2C               	goto	l3647
  2999  023E                     l3651:	
  3000                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3001                           
  3002  023E  3020               	movlw	32
  3003  023F  3185  25DB  3180   	fcall	_xputc
  3004  0242                     l3653:	
  3005  0242  0020               	movlb	0	; select bank0
  3006  0243  084A               	movf	xvprintf@j+1,w
  3007  0244  00A9               	movwf	??_xvprintf+1
  3008  0245  0849               	movf	xvprintf@j,w
  3009  0246  00A8               	movwf	??_xvprintf
  3010  0247  0AC9               	incf	xvprintf@j,f
  3011  0248  1903               	skipnz
  3012  0249  0ACA               	incf	xvprintf@j+1,f
  3013  024A  0848               	movf	xvprintf@w+1,w
  3014  024B  0229               	subwf	??_xvprintf+1,w
  3015  024C  1D03               	skipz
  3016  024D  2A50               	goto	u3735
  3017  024E  0847               	movf	xvprintf@w,w
  3018  024F  0228               	subwf	??_xvprintf,w
  3019  0250                     u3735:	
  3020  0250  1803               	btfsc	3,0
  3021  0251  2829               	goto	l127
  3022  0252  2A3E               	goto	l3651
  3023  0253                     __end_of_xvprintf:	
  3024                           ;xprintf.c: 161: }
  3025                           
  3026                           
  3027                           	psect	text3
  3028  0724                     __ptext3:	
  3029 ;; *************** function _xputs *****************
  3030 ;; Defined at:
  3031 ;;		line 44 in file "xprintf.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  str             1    wreg     PTR const unsigned char 
  3034 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  str             1    9[COMMON] PTR const unsigned char 
  3037 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3047 ;;      Params:         0       0       0       0       0       0
  3048 ;;      Locals:         1       0       0       0       0       0
  3049 ;;      Temps:          1       0       0       0       0       0
  3050 ;;      Totals:         2       0       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    6
  3054 ;; This function calls:
  3055 ;;		_xputc
  3056 ;; This function is called by:
  3057 ;;		_xvprintf
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _xputs
  3063  0724                     _xputs:	
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3067                           ;xputs@str stored from wreg
  3068  0724  00F9               	movwf	xputs@str
  3069  0725                     l2353:	
  3070                           ;xprintf.c: 48: while (*str)
  3071                           
  3072  0725  0879               	movf	xputs@str,w
  3073  0726  0086               	movwf	6
  3074  0727  0187               	clrf	7
  3075  0728  0801               	movf	1,w
  3076  0729  1903               	btfsc	3,2
  3077  072A  0008               	return
  3078                           
  3079                           ;xprintf.c: 49: xputc(*str++);
  3080  072B  0879               	movf	xputs@str,w
  3081  072C  0086               	movwf	6
  3082  072D  0187               	clrf	7
  3083  072E  0801               	movf	1,w
  3084  072F  3185  25DB  3187   	fcall	_xputc
  3085  0732  3001               	movlw	1
  3086  0733  00F8               	movwf	??_xputs
  3087  0734  0878               	movf	??_xputs,w
  3088  0735  07F9               	addwf	xputs@str,f
  3089  0736  2F25               	goto	l2353
  3090  0737                     __end_of_xputs:	
  3091                           
  3092                           	psect	text4
  3093  05DB                     __ptext4:	
  3094 ;; *************** function _xputc *****************
  3095 ;; Defined at:
  3096 ;;		line 26 in file "xprintf.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  c               1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  c               1    7[COMMON] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3110 ;;      Params:         0       0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0       0
  3112 ;;      Temps:          1       0       0       0       0       0
  3113 ;;      Totals:         2       0       0       0       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    5
  3117 ;; This function calls:
  3118 ;;		Absolute function
  3119 ;;		_LCD_Put
  3120 ;; This function is called by:
  3121 ;;		_xputs
  3122 ;;		_xvprintf
  3123 ;;		_xfputs
  3124 ;;		_put_dump
  3125 ;;		_xgets
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _xputc
  3131  05DB                     _xputc:	
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3135                           ;xputc@c stored from wreg
  3136  05DB  00F7               	movwf	xputc@c
  3137  05DC  300A               	movlw	10
  3138  05DD  0677               	xorwf	xputc@c,w
  3139  05DE  1D03               	btfss	3,2
  3140  05DF  2DEA               	goto	l2331
  3141  05E0  305A               	movlw	(low (STR_2| (0+32768)))& (0+255)
  3142  05E1  00F6               	movwf	??_xputc
  3143  05E2  0876               	movf	??_xputc,w
  3144  05E3  00F5               	movwf	LCD_Put@word
  3145  05E4  0020               	movlb	0	; select bank0
  3146  05E5  0865               	movf	_xfunc_out+1,w
  3147  05E6  008A               	movwf	10
  3148  05E7  0864               	movf	_xfunc_out,w
  3149  05E8  000A               	callw
  3150  05E9  3185               	pagesel	$
  3151  05EA                     l2331:	
  3152                           
  3153                           ;xprintf.c: 30: if (outptr) {
  3154  05EA  087B               	movf	_outptr,w
  3155  05EB  1903               	btfsc	3,2
  3156  05EC  2DF9               	goto	l2339
  3157                           
  3158                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3159  05ED  0877               	movf	xputc@c,w
  3160  05EE  00F6               	movwf	??_xputc
  3161  05EF  087B               	movf	_outptr,w
  3162  05F0  0086               	movwf	6
  3163  05F1  0187               	clrf	7
  3164  05F2  0876               	movf	??_xputc,w
  3165  05F3  0081               	movwf	1
  3166  05F4  3001               	movlw	1
  3167  05F5  00F6               	movwf	??_xputc
  3168  05F6  0876               	movf	??_xputc,w
  3169  05F7  07FB               	addwf	_outptr,f
  3170                           
  3171                           ;xprintf.c: 32: return;
  3172  05F8  0008               	return
  3173  05F9                     l2339:	
  3174                           
  3175                           ;xprintf.c: 33: }
  3176                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3177  05F9  0020               	movlb	0	; select bank0
  3178  05FA  0864               	movf	_xfunc_out,w
  3179  05FB  0465               	iorwf	_xfunc_out+1,w
  3180  05FC  1903               	btfsc	3,2
  3181  05FD  0008               	return
  3182  05FE  0877               	movf	xputc@c,w
  3183  05FF  00F6               	movwf	??_xputc
  3184  0600  0876               	movf	??_xputc,w
  3185  0601  00F5               	movwf	LCD_Put@word
  3186  0602  0865               	movf	_xfunc_out+1,w
  3187  0603  008A               	movwf	10
  3188  0604  0864               	movf	_xfunc_out,w
  3189  0605  000A               	callw
  3190  0606  3185               	pagesel	$
  3191  0607  0008               	return
  3192  0608                     __end_of_xputc:	
  3193                           
  3194                           	psect	text5
  3195  077B                     __ptext5:	
  3196 ;; *************** function _LCD_Put *****************
  3197 ;; Defined at:
  3198 ;;		line 54 in file "LCD.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  word            1    5[COMMON] char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3212 ;;      Params:         1       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0
  3215 ;;      Totals:         1       0       0       0       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    4
  3219 ;; This function calls:
  3220 ;;		_LCD_WriteData
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;;		_xputc
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _LCD_Put
  3229  077B                     _LCD_Put:	
  3230                           
  3231                           ;LCD.c: 56: LATA3 = 1;
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3235  077B  0022               	movlb	2	; select bank2
  3236  077C  158C               	bsf	12,3	;volatile
  3237                           
  3238                           ;LCD.c: 57: LCD_WriteData(word);
  3239  077D  0875               	movf	LCD_Put@word,w
  3240  077E  3184  24F9         	fcall	_LCD_WriteData
  3241  0780  0008               	return
  3242  0781                     __end_of_LCD_Put:	
  3243                           
  3244                           	psect	text6
  3245  06C6                     __ptext6:	
  3246 ;; *************** function ___wmul *****************
  3247 ;; Defined at:
  3248 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  multiplier      2    2[COMMON] unsigned int 
  3251 ;;  multiplicand    2    4[COMMON] unsigned int 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  product         2    6[COMMON] unsigned int 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2    2[COMMON] unsigned int 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3263 ;;      Params:         4       0       0       0       0       0
  3264 ;;      Locals:         2       0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0
  3266 ;;      Totals:         6       0       0       0       0       0
  3267 ;;Total ram usage:        6 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    3
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_xvprintf
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function ___wmul
  3279  06C6                     ___wmul:	
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3283  06C6  01F6               	clrf	___wmul@product
  3284  06C7  01F7               	clrf	___wmul@product+1
  3285  06C8                     l2529:	
  3286  06C8  1C72               	btfss	___wmul@multiplier,0
  3287  06C9  2ECE               	goto	l815
  3288  06CA  0874               	movf	___wmul@multiplicand,w
  3289  06CB  07F6               	addwf	___wmul@product,f
  3290  06CC  0875               	movf	___wmul@multiplicand+1,w
  3291  06CD  3DF7               	addwfc	___wmul@product+1,f
  3292  06CE                     l815:	
  3293  06CE  3001               	movlw	1
  3294  06CF                     u2015:	
  3295  06CF  35F4               	lslf	___wmul@multiplicand,f
  3296  06D0  0DF5               	rlf	___wmul@multiplicand+1,f
  3297  06D1  0B89               	decfsz	9,f
  3298  06D2  2ECF               	goto	u2015
  3299  06D3  3001               	movlw	1
  3300  06D4                     u2025:	
  3301  06D4  36F3               	lsrf	___wmul@multiplier+1,f
  3302  06D5  0CF2               	rrf	___wmul@multiplier,f
  3303  06D6  0B89               	decfsz	9,f
  3304  06D7  2ED4               	goto	u2025
  3305  06D8  0872               	movf	___wmul@multiplier,w
  3306  06D9  0473               	iorwf	___wmul@multiplier+1,w
  3307  06DA  1D03               	btfss	3,2
  3308  06DB  2EC8               	goto	l2529
  3309  06DC  0877               	movf	___wmul@product+1,w
  3310  06DD  00F3               	movwf	?___wmul+1
  3311  06DE  0876               	movf	___wmul@product,w
  3312  06DF  00F2               	movwf	?___wmul
  3313  06E0  0008               	return
  3314  06E1                     __end_of___wmul:	
  3315                           
  3316                           	psect	text7
  3317  04B6                     __ptext7:	
  3318 ;; *************** function ___llmod *****************
  3319 ;; Defined at:
  3320 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  divisor         4    2[COMMON] unsigned long 
  3323 ;;  dividend        4    6[COMMON] unsigned long 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  counter         1    0[BANK0 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  4    2[COMMON] unsigned long 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3335 ;;      Params:         8       0       0       0       0       0
  3336 ;;      Locals:         0       1       0       0       0       0
  3337 ;;      Temps:          1       0       0       0       0       0
  3338 ;;      Totals:         9       1       0       0       0       0
  3339 ;;Total ram usage:       10 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    3
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_xvprintf
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function ___llmod
  3351  04B6                     ___llmod:	
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3355  04B6  0875               	movf	___llmod@divisor+3,w
  3356  04B7  0474               	iorwf	___llmod@divisor+2,w
  3357  04B8  0473               	iorwf	___llmod@divisor+1,w
  3358  04B9  0472               	iorwf	___llmod@divisor,w
  3359  04BA  1903               	skipnz
  3360  04BB  2CF0               	goto	l3487
  3361  04BC  0020               	movlb	0	; select bank0
  3362  04BD  01A0               	clrf	___llmod@counter
  3363  04BE  0AA0               	incf	___llmod@counter,f
  3364  04BF                     l3477:	
  3365  04BF  1BF5               	btfsc	___llmod@divisor+3,7
  3366  04C0  2CCD               	goto	l3479
  3367  04C1  3001               	movlw	1
  3368  04C2                     u3415:	
  3369  04C2  35F2               	lslf	___llmod@divisor,f
  3370  04C3  0DF3               	rlf	___llmod@divisor+1,f
  3371  04C4  0DF4               	rlf	___llmod@divisor+2,f
  3372  04C5  0DF5               	rlf	___llmod@divisor+3,f
  3373  04C6  0B89               	decfsz	9,f
  3374  04C7  2CC2               	goto	u3415
  3375  04C8  3001               	movlw	1
  3376  04C9  00FA               	movwf	??___llmod
  3377  04CA  087A               	movf	??___llmod,w
  3378  04CB  07A0               	addwf	___llmod@counter,f
  3379  04CC  2CBF               	goto	l3477
  3380  04CD                     l3479:	
  3381  04CD  0875               	movf	___llmod@divisor+3,w
  3382  04CE  0279               	subwf	___llmod@dividend+3,w
  3383  04CF  1D03               	skipz
  3384  04D0  2CDB               	goto	u3435
  3385  04D1  0874               	movf	___llmod@divisor+2,w
  3386  04D2  0278               	subwf	___llmod@dividend+2,w
  3387  04D3  1D03               	skipz
  3388  04D4  2CDB               	goto	u3435
  3389  04D5  0873               	movf	___llmod@divisor+1,w
  3390  04D6  0277               	subwf	___llmod@dividend+1,w
  3391  04D7  1D03               	skipz
  3392  04D8  2CDB               	goto	u3435
  3393  04D9  0872               	movf	___llmod@divisor,w
  3394  04DA  0276               	subwf	___llmod@dividend,w
  3395  04DB                     u3435:	
  3396  04DB  1C03               	skipc
  3397  04DC  2CE5               	goto	l3483
  3398  04DD  0872               	movf	___llmod@divisor,w
  3399  04DE  02F6               	subwf	___llmod@dividend,f
  3400  04DF  0873               	movf	___llmod@divisor+1,w
  3401  04E0  3BF7               	subwfb	___llmod@dividend+1,f
  3402  04E1  0874               	movf	___llmod@divisor+2,w
  3403  04E2  3BF8               	subwfb	___llmod@dividend+2,f
  3404  04E3  0875               	movf	___llmod@divisor+3,w
  3405  04E4  3BF9               	subwfb	___llmod@dividend+3,f
  3406  04E5                     l3483:	
  3407  04E5  3001               	movlw	1
  3408  04E6                     u3445:	
  3409  04E6  36F5               	lsrf	___llmod@divisor+3,f
  3410  04E7  0CF4               	rrf	___llmod@divisor+2,f
  3411  04E8  0CF3               	rrf	___llmod@divisor+1,f
  3412  04E9  0CF2               	rrf	___llmod@divisor,f
  3413  04EA  0B89               	decfsz	9,f
  3414  04EB  2CE6               	goto	u3445
  3415  04EC  3001               	movlw	1
  3416  04ED  02A0               	subwf	___llmod@counter,f
  3417  04EE  1D03               	btfss	3,2
  3418  04EF  2CCD               	goto	l3479
  3419  04F0                     l3487:	
  3420  04F0  0879               	movf	___llmod@dividend+3,w
  3421  04F1  00F5               	movwf	?___llmod+3
  3422  04F2  0878               	movf	___llmod@dividend+2,w
  3423  04F3  00F4               	movwf	?___llmod+2
  3424  04F4  0877               	movf	___llmod@dividend+1,w
  3425  04F5  00F3               	movwf	?___llmod+1
  3426  04F6  0876               	movf	___llmod@dividend,w
  3427  04F7  00F2               	movwf	?___llmod
  3428  04F8  0008               	return
  3429  04F9                     __end_of___llmod:	
  3430                           
  3431                           	psect	text8
  3432  0463                     __ptext8:	
  3433 ;; *************** function ___lldiv *****************
  3434 ;; Defined at:
  3435 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  divisor         4    2[COMMON] unsigned long 
  3438 ;;  dividend        4    6[COMMON] unsigned long 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        4    0[BANK0 ] unsigned long 
  3441 ;;  counter         1    4[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  4    2[COMMON] unsigned long 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3451 ;;      Params:         8       0       0       0       0       0
  3452 ;;      Locals:         0       5       0       0       0       0
  3453 ;;      Temps:          1       0       0       0       0       0
  3454 ;;      Totals:         9       5       0       0       0       0
  3455 ;;Total ram usage:       14 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    3
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_xvprintf
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function ___lldiv
  3467  0463                     ___lldiv:	
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3471  0463  3000               	movlw	0
  3472  0464  0020               	movlb	0	; select bank0
  3473  0465  00A3               	movwf	___lldiv@quotient+3
  3474  0466  3000               	movlw	0
  3475  0467  00A2               	movwf	___lldiv@quotient+2
  3476  0468  3000               	movlw	0
  3477  0469  00A1               	movwf	___lldiv@quotient+1
  3478  046A  3000               	movlw	0
  3479  046B  00A0               	movwf	___lldiv@quotient
  3480  046C  0875               	movf	___lldiv@divisor+3,w
  3481  046D  0474               	iorwf	___lldiv@divisor+2,w
  3482  046E  0473               	iorwf	___lldiv@divisor+1,w
  3483  046F  0472               	iorwf	___lldiv@divisor,w
  3484  0470  1903               	skipnz
  3485  0471  2CAD               	goto	l2561
  3486  0472  01A4               	clrf	___lldiv@counter
  3487  0473  0AA4               	incf	___lldiv@counter,f
  3488  0474                     l2547:	
  3489  0474  1BF5               	btfsc	___lldiv@divisor+3,7
  3490  0475  2C82               	goto	l2549
  3491  0476  3001               	movlw	1
  3492  0477                     u2055:	
  3493  0477  35F2               	lslf	___lldiv@divisor,f
  3494  0478  0DF3               	rlf	___lldiv@divisor+1,f
  3495  0479  0DF4               	rlf	___lldiv@divisor+2,f
  3496  047A  0DF5               	rlf	___lldiv@divisor+3,f
  3497  047B  0B89               	decfsz	9,f
  3498  047C  2C77               	goto	u2055
  3499  047D  3001               	movlw	1
  3500  047E  00FA               	movwf	??___lldiv
  3501  047F  087A               	movf	??___lldiv,w
  3502  0480  07A4               	addwf	___lldiv@counter,f
  3503  0481  2C74               	goto	l2547
  3504  0482                     l2549:	
  3505  0482  3001               	movlw	1
  3506  0483                     u2075:	
  3507  0483  35A0               	lslf	___lldiv@quotient,f
  3508  0484  0DA1               	rlf	___lldiv@quotient+1,f
  3509  0485  0DA2               	rlf	___lldiv@quotient+2,f
  3510  0486  0DA3               	rlf	___lldiv@quotient+3,f
  3511  0487  0B89               	decfsz	9,f
  3512  0488  2C83               	goto	u2075
  3513  0489  0875               	movf	___lldiv@divisor+3,w
  3514  048A  0279               	subwf	___lldiv@dividend+3,w
  3515  048B  1D03               	skipz
  3516  048C  2C97               	goto	u2085
  3517  048D  0874               	movf	___lldiv@divisor+2,w
  3518  048E  0278               	subwf	___lldiv@dividend+2,w
  3519  048F  1D03               	skipz
  3520  0490  2C97               	goto	u2085
  3521  0491  0873               	movf	___lldiv@divisor+1,w
  3522  0492  0277               	subwf	___lldiv@dividend+1,w
  3523  0493  1D03               	skipz
  3524  0494  2C97               	goto	u2085
  3525  0495  0872               	movf	___lldiv@divisor,w
  3526  0496  0276               	subwf	___lldiv@dividend,w
  3527  0497                     u2085:	
  3528  0497  1C03               	skipc
  3529  0498  2CA2               	goto	l2557
  3530  0499  0872               	movf	___lldiv@divisor,w
  3531  049A  02F6               	subwf	___lldiv@dividend,f
  3532  049B  0873               	movf	___lldiv@divisor+1,w
  3533  049C  3BF7               	subwfb	___lldiv@dividend+1,f
  3534  049D  0874               	movf	___lldiv@divisor+2,w
  3535  049E  3BF8               	subwfb	___lldiv@dividend+2,f
  3536  049F  0875               	movf	___lldiv@divisor+3,w
  3537  04A0  3BF9               	subwfb	___lldiv@dividend+3,f
  3538  04A1  1420               	bsf	___lldiv@quotient,0
  3539  04A2                     l2557:	
  3540  04A2  3001               	movlw	1
  3541  04A3                     u2095:	
  3542  04A3  36F5               	lsrf	___lldiv@divisor+3,f
  3543  04A4  0CF4               	rrf	___lldiv@divisor+2,f
  3544  04A5  0CF3               	rrf	___lldiv@divisor+1,f
  3545  04A6  0CF2               	rrf	___lldiv@divisor,f
  3546  04A7  0B89               	decfsz	9,f
  3547  04A8  2CA3               	goto	u2095
  3548  04A9  3001               	movlw	1
  3549  04AA  02A4               	subwf	___lldiv@counter,f
  3550  04AB  1D03               	btfss	3,2
  3551  04AC  2C82               	goto	l2549
  3552  04AD                     l2561:	
  3553  04AD  0823               	movf	___lldiv@quotient+3,w
  3554  04AE  00F5               	movwf	?___lldiv+3
  3555  04AF  0822               	movf	___lldiv@quotient+2,w
  3556  04B0  00F4               	movwf	?___lldiv+2
  3557  04B1  0821               	movf	___lldiv@quotient+1,w
  3558  04B2  00F3               	movwf	?___lldiv+1
  3559  04B3  0820               	movf	___lldiv@quotient,w
  3560  04B4  00F2               	movwf	?___lldiv
  3561  04B5  0008               	return
  3562  04B6                     __end_of___lldiv:	
  3563                           
  3564                           	psect	text9
  3565  06E1                     __ptext9:	
  3566 ;; *************** function _Timer1_Init *****************
  3567 ;; Defined at:
  3568 ;;		line 3 in file "Timer1.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3582 ;;      Params:         0       0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0
  3584 ;;      Temps:          1       0       0       0       0       0
  3585 ;;      Totals:         1       0       0       0       0       0
  3586 ;;Total ram usage:        1 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _Timer1_Init
  3598  06E1                     _Timer1_Init:	
  3599                           
  3600                           ;Timer1.c: 5: TRISB |= (1<<6);
  3601                           
  3602                           ;incstack = 0
  3603                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  3604  06E1  0021               	movlb	1	; select bank1
  3605  06E2  170D               	bsf	13,6	;volatile
  3606                           
  3607                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  3608  06E3  30BF               	movlw	191
  3609  06E4  00F2               	movwf	??_Timer1_Init
  3610  06E5  0872               	movf	??_Timer1_Init,w
  3611  06E6  0023               	movlb	3	; select bank3
  3612  06E7  058D               	andwf	13,f	;volatile
  3613                           
  3614                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  3615  06E8  0020               	movlb	0	; select bank0
  3616  06E9  1518               	bsf	24,2	;volatile
  3617                           
  3618                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  3619  06EA  30F7               	movlw	247
  3620  06EB  00F2               	movwf	??_Timer1_Init
  3621  06EC  0872               	movf	??_Timer1_Init,w
  3622  06ED  0598               	andwf	24,f	;volatile
  3623                           
  3624                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  3625  06EE  0818               	movf	24,w	;volatile
  3626                           
  3627                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  3628  06EF  1798               	bsf	24,7	;volatile
  3629                           
  3630                           ;Timer1.c: 13: T1GCON = 0x00;
  3631  06F0  0199               	clrf	25	;volatile
  3632                           
  3633                           ;Timer1.c: 15: TMR1 = 0x0000;
  3634  06F1  0196               	clrf	22	;volatile
  3635  06F2  0197               	clrf	23	;volatile
  3636                           
  3637                           ;Timer1.c: 17: TMR1IE = 1;
  3638  06F3  0021               	movlb	1	; select bank1
  3639  06F4  1411               	bsf	17,0	;volatile
  3640                           
  3641                           ;Timer1.c: 18: TMR1IF = 0;
  3642  06F5  0020               	movlb	0	; select bank0
  3643  06F6  1011               	bcf	17,0	;volatile
  3644                           
  3645                           ;Timer1.c: 19: PEIE = 1;
  3646  06F7  170B               	bsf	11,6	;volatile
  3647                           
  3648                           ;Timer1.c: 20: GIE = 1;
  3649  06F8  178B               	bsf	11,7	;volatile
  3650  06F9  0008               	return
  3651  06FA                     __end_of_Timer1_Init:	
  3652                           
  3653                           	psect	text10
  3654  0350                     __ptext10:	
  3655 ;; *************** function _LCD_Init *****************
  3656 ;; Defined at:
  3657 ;;		line 28 in file "LCD.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3671 ;;      Params:         0       0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0
  3673 ;;      Temps:          2       0       0       0       0       0
  3674 ;;      Totals:         2       0       0       0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    5
  3678 ;; This function calls:
  3679 ;;		_LCD_DisplayClear
  3680 ;;		_LCD_WriteData
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _LCD_Init
  3688  0350                     _LCD_Init:	
  3689                           
  3690                           ;LCD.c: 30: LATA3 = 0;
  3691                           
  3692                           ;incstack = 0
  3693                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3694  0350  0022               	movlb	2	; select bank2
  3695  0351  118C               	bcf	12,3	;volatile
  3696                           
  3697                           ;LCD.c: 31: LATA4 = 0;
  3698  0352  120C               	bcf	12,4	;volatile
  3699                           
  3700                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  3701  0353  3002               	movlw	2
  3702  0354  00F7               	movwf	??_LCD_Init+1
  3703  0355  3038               	movlw	56
  3704  0356  00F6               	movwf	??_LCD_Init
  3705  0357  30AD               	movlw	173
  3706  0358                     u3817:	
  3707  0358  0B89               	decfsz	9,f
  3708  0359  2B58               	goto	u3817
  3709  035A  0BF6               	decfsz	??_LCD_Init,f
  3710  035B  2B58               	goto	u3817
  3711  035C  0BF7               	decfsz	??_LCD_Init+1,f
  3712  035D  2B58               	goto	u3817
  3713  035E  0000               	nop
  3714                           
  3715                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  3716  035F  3003               	movlw	3
  3717  0360  0020               	movlb	0	; select bank0
  3718  0361  008D               	movwf	13	;volatile
  3719                           
  3720                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  3721  0362  0022               	movlb	2	; select bank2
  3722  0363  160C               	bsf	12,4	;volatile
  3723  0364  3200               	nop2	;2 cycle nop
  3724  0365  3200               	nop2	;2 cycle nop
  3725  0366  3200               	nop2	;2 cycle nop
  3726  0367  3200               	nop2	;2 cycle nop
  3727  0368  0022               	movlb	2	; select bank2
  3728  0369  120C               	bcf	12,4	;volatile
  3729  036A  3200               	nop2	;2 cycle nop
  3730  036B  3200               	nop2	;2 cycle nop
  3731  036C  3200               	nop2	;2 cycle nop
  3732  036D  3200               	nop2	;2 cycle nop
  3733                           
  3734                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  3735  036E  3034               	movlw	52
  3736  036F  00F6               	movwf	??_LCD_Init
  3737  0370  30F2               	movlw	242
  3738  0371                     u3827:	
  3739  0371  0B89               	decfsz	9,f
  3740  0372  2B71               	goto	u3827
  3741  0373  0BF6               	decfsz	??_LCD_Init,f
  3742  0374  2B71               	goto	u3827
  3743                           
  3744                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  3745  0375  0022               	movlb	2	; select bank2
  3746  0376  160C               	bsf	12,4	;volatile
  3747  0377  3200               	nop2	;2 cycle nop
  3748  0378  3200               	nop2	;2 cycle nop
  3749  0379  3200               	nop2	;2 cycle nop
  3750  037A  3200               	nop2	;2 cycle nop
  3751  037B  0022               	movlb	2	; select bank2
  3752  037C  120C               	bcf	12,4	;volatile
  3753  037D  3200               	nop2	;2 cycle nop
  3754  037E  3200               	nop2	;2 cycle nop
  3755  037F  3200               	nop2	;2 cycle nop
  3756  0380  3200               	nop2	;2 cycle nop
  3757                           
  3758                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3759  0381  3005               	movlw	5
  3760  0382  00F6               	movwf	??_LCD_Init
  3761  0383  3026               	movlw	38
  3762  0384                     u3837:	
  3763  0384  0B89               	decfsz	9,f
  3764  0385  2B84               	goto	u3837
  3765  0386  0BF6               	decfsz	??_LCD_Init,f
  3766  0387  2B84               	goto	u3837
  3767  0388  3200               	nop2
  3768                           
  3769                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  3770  0389  0022               	movlb	2	; select bank2
  3771  038A  160C               	bsf	12,4	;volatile
  3772  038B  3200               	nop2	;2 cycle nop
  3773  038C  3200               	nop2	;2 cycle nop
  3774  038D  3200               	nop2	;2 cycle nop
  3775  038E  3200               	nop2	;2 cycle nop
  3776  038F  0022               	movlb	2	; select bank2
  3777  0390  120C               	bcf	12,4	;volatile
  3778  0391  3200               	nop2	;2 cycle nop
  3779  0392  3200               	nop2	;2 cycle nop
  3780  0393  3200               	nop2	;2 cycle nop
  3781  0394  3200               	nop2	;2 cycle nop
  3782                           
  3783                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3784  0395  3005               	movlw	5
  3785  0396  00F6               	movwf	??_LCD_Init
  3786  0397  3026               	movlw	38
  3787  0398                     u3847:	
  3788  0398  0B89               	decfsz	9,f
  3789  0399  2B98               	goto	u3847
  3790  039A  0BF6               	decfsz	??_LCD_Init,f
  3791  039B  2B98               	goto	u3847
  3792  039C  3200               	nop2
  3793                           
  3794                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  3795  039D  3002               	movlw	2
  3796  039E  0020               	movlb	0	; select bank0
  3797  039F  008D               	movwf	13	;volatile
  3798                           
  3799                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  3800  03A0  0022               	movlb	2	; select bank2
  3801  03A1  160C               	bsf	12,4	;volatile
  3802  03A2  3200               	nop2	;2 cycle nop
  3803  03A3  3200               	nop2	;2 cycle nop
  3804  03A4  3200               	nop2	;2 cycle nop
  3805  03A5  3200               	nop2	;2 cycle nop
  3806  03A6  0022               	movlb	2	; select bank2
  3807  03A7  120C               	bcf	12,4	;volatile
  3808  03A8  3200               	nop2	;2 cycle nop
  3809  03A9  3200               	nop2	;2 cycle nop
  3810  03AA  3200               	nop2	;2 cycle nop
  3811  03AB  3200               	nop2	;2 cycle nop
  3812                           
  3813                           ;LCD.c: 44: LCD_WriteData(0x28);
  3814  03AC  3028               	movlw	40
  3815  03AD  3184  24F9  3183   	fcall	_LCD_WriteData
  3816                           
  3817                           ;LCD.c: 45: LCD_WriteData(0x0c);
  3818  03B0  300C               	movlw	12
  3819  03B1  3184  24F9  3183   	fcall	_LCD_WriteData
  3820                           
  3821                           ;LCD.c: 46: LCD_DisplayClear();
  3822  03B4  3187  2747  3183   	fcall	_LCD_DisplayClear
  3823                           
  3824                           ;LCD.c: 47: LCD_WriteData(0x06);
  3825  03B7  3006               	movlw	6
  3826  03B8  3184  24F9         	fcall	_LCD_WriteData
  3827  03BA  0008               	return
  3828  03BB                     __end_of_LCD_Init:	
  3829                           
  3830                           	psect	text11
  3831  0747                     __ptext11:	
  3832 ;; *************** function _LCD_DisplayClear *****************
  3833 ;; Defined at:
  3834 ;;		line 64 in file "LCD.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3848 ;;      Params:         0       0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0
  3850 ;;      Temps:          1       0       0       0       0       0
  3851 ;;      Totals:         1       0       0       0       0       0
  3852 ;;Total ram usage:        1 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    4
  3855 ;; This function calls:
  3856 ;;		_LCD_WriteData
  3857 ;; This function is called by:
  3858 ;;		_LCD_Init
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _LCD_DisplayClear
  3864  0747                     _LCD_DisplayClear:	
  3865                           
  3866                           ;LCD.c: 66: LATA3 = 0;
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  3870  0747  0022               	movlb	2	; select bank2
  3871  0748  118C               	bcf	12,3	;volatile
  3872                           
  3873                           ;LCD.c: 67: LCD_WriteData(0x01);
  3874  0749  3001               	movlw	1
  3875  074A  3184  24F9  3187   	fcall	_LCD_WriteData
  3876                           
  3877                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  3878  074D  3015               	movlw	21
  3879  074E  00F5               	movwf	??_LCD_DisplayClear
  3880  074F  30C6               	movlw	198
  3881  0750                     u3857:	
  3882  0750  0B89               	decfsz	9,f
  3883  0751  2F50               	goto	u3857
  3884  0752  0BF5               	decfsz	??_LCD_DisplayClear,f
  3885  0753  2F50               	goto	u3857
  3886  0754  3200               	nop2
  3887  0755  0008               	return
  3888  0756                     __end_of_LCD_DisplayClear:	
  3889                           
  3890                           	psect	text12
  3891  06FA                     __ptext12:	
  3892 ;; *************** function _LCD_CursorPosition *****************
  3893 ;; Defined at:
  3894 ;;		line 86 in file "LCD.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  tx              1    wreg     unsigned char 
  3897 ;;  ty              1    5[COMMON] unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  tx              1    7[COMMON] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3909 ;;      Params:         1       0       0       0       0       0
  3910 ;;      Locals:         1       0       0       0       0       0
  3911 ;;      Temps:          1       0       0       0       0       0
  3912 ;;      Totals:         3       0       0       0       0       0
  3913 ;;Total ram usage:        3 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    4
  3916 ;; This function calls:
  3917 ;;		_LCD_WriteData
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _LCD_CursorPosition
  3925  06FA                     _LCD_CursorPosition:	
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3929                           ;LCD_CursorPosition@tx stored from wreg
  3930  06FA  00F7               	movwf	LCD_CursorPosition@tx
  3931                           
  3932                           ;LCD.c: 88: LATA3 = 0;
  3933  06FB  0022               	movlb	2	; select bank2
  3934  06FC  118C               	bcf	12,3	;volatile
  3935                           
  3936                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  3937  06FD  0875               	movf	LCD_CursorPosition@ty,w
  3938  06FE  00F6               	movwf	??_LCD_CursorPosition
  3939  06FF  3005               	movlw	5
  3940  0700                     u2675:	
  3941  0700  35F6               	lslf	??_LCD_CursorPosition,f
  3942  0701  3EFF               	addlw	-1
  3943  0702  1D03               	skipz
  3944  0703  2F00               	goto	u2675
  3945  0704  3576               	lslf	??_LCD_CursorPosition,w
  3946  0705  0477               	iorwf	LCD_CursorPosition@tx,w
  3947  0706  3880               	iorlw	-128
  3948  0707  3184  24F9  3186   	fcall	_LCD_WriteData
  3949                           
  3950                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  3951  070A  306A               	movlw	106
  3952  070B                     u3867:	
  3953  070B  0B89               	decfsz	9,f
  3954  070C  2F0B               	goto	u3867
  3955  070D  3200               	nop2
  3956  070E  0008               	return
  3957  070F                     __end_of_LCD_CursorPosition:	
  3958                           
  3959                           	psect	text13
  3960  04F9                     __ptext13:	
  3961 ;; *************** function _LCD_WriteData *****************
  3962 ;; Defined at:
  3963 ;;		line 15 in file "LCD.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  point           1    wreg     char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  point           1    4[COMMON] char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3977 ;;      Params:         0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0
  3979 ;;      Temps:          2       0       0       0       0       0
  3980 ;;      Totals:         3       0       0       0       0       0
  3981 ;;Total ram usage:        3 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_LCD_Init
  3988 ;;		_LCD_Put
  3989 ;;		_LCD_DisplayClear
  3990 ;;		_LCD_CursorPosition
  3991 ;;		_LCD_CursorHome
  3992 ;;		_LCD_CursorShift
  3993 ;;		_LCD_DispShift
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _LCD_WriteData
  3999  04F9                     _LCD_WriteData:	
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4003                           ;LCD_WriteData@point stored from wreg
  4004  04F9  00F4               	movwf	LCD_WriteData@point
  4005                           
  4006                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4007  04FA  30D5               	movlw	213
  4008  04FB                     u3877:	
  4009  04FB  0B89               	decfsz	9,f
  4010  04FC  2CFB               	goto	u3877
  4011  04FD  0000               	nop
  4012                           
  4013                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4014  04FE  0874               	movf	LCD_WriteData@point,w
  4015  04FF  00F2               	movwf	??_LCD_WriteData
  4016  0500  3004               	movlw	4
  4017  0501                     u1675:	
  4018  0501  1003               	clrc
  4019  0502  1BF2               	btfsc	??_LCD_WriteData,7
  4020  0503  1403               	setc
  4021  0504  0CF2               	rrf	??_LCD_WriteData,f
  4022  0505  0B89               	decfsz	9,f
  4023  0506  2D01               	goto	u1675
  4024  0507  3003               	movlw	3
  4025  0508  0572               	andwf	??_LCD_WriteData,w
  4026  0509  00F3               	movwf	??_LCD_WriteData+1
  4027  050A  0E74               	swapf	LCD_WriteData@point,w
  4028  050B  390F               	andlw	15
  4029  050C  1989               	btfsc	9,3
  4030  050D  38F0               	iorlw	240
  4031  050E  390C               	andlw	12
  4032  050F  0709               	addwf	9,w
  4033  0510  0473               	iorwf	??_LCD_WriteData+1,w
  4034  0511  0020               	movlb	0	; select bank0
  4035  0512  008D               	movwf	13	;volatile
  4036                           
  4037                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4038  0513  0022               	movlb	2	; select bank2
  4039  0514  160C               	bsf	12,4	;volatile
  4040  0515  3200               	nop2	;2 cycle nop
  4041  0516  3200               	nop2	;2 cycle nop
  4042  0517  3200               	nop2	;2 cycle nop
  4043  0518  3200               	nop2	;2 cycle nop
  4044  0519  0022               	movlb	2	; select bank2
  4045  051A  120C               	bcf	12,4	;volatile
  4046  051B  3200               	nop2	;2 cycle nop
  4047  051C  3200               	nop2	;2 cycle nop
  4048  051D  3200               	nop2	;2 cycle nop
  4049  051E  3200               	nop2	;2 cycle nop
  4050                           
  4051                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4052  051F  3003               	movlw	3
  4053  0520  0574               	andwf	LCD_WriteData@point,w
  4054  0521  00F2               	movwf	??_LCD_WriteData
  4055  0522  0874               	movf	LCD_WriteData@point,w
  4056  0523  390C               	andlw	12
  4057  0524  0709               	addwf	9,w
  4058  0525  0472               	iorwf	??_LCD_WriteData,w
  4059  0526  0020               	movlb	0	; select bank0
  4060  0527  008D               	movwf	13	;volatile
  4061                           
  4062                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4063  0528  0022               	movlb	2	; select bank2
  4064  0529  160C               	bsf	12,4	;volatile
  4065  052A  3200               	nop2	;2 cycle nop
  4066  052B  3200               	nop2	;2 cycle nop
  4067  052C  3200               	nop2	;2 cycle nop
  4068  052D  3200               	nop2	;2 cycle nop
  4069  052E  0022               	movlb	2	; select bank2
  4070  052F  120C               	bcf	12,4	;volatile
  4071  0530  3200               	nop2	;2 cycle nop
  4072  0531  3200               	nop2	;2 cycle nop
  4073  0532  3200               	nop2	;2 cycle nop
  4074  0533  3200               	nop2	;2 cycle nop
  4075  0534  0008               	return
  4076  0535                     __end_of_LCD_WriteData:	
  4077                           
  4078                           	psect	text14
  4079  06A7                     __ptext14:	
  4080 ;; *************** function _DAC_Initialize *****************
  4081 ;; Defined at:
  4082 ;;		line 14 in file "MCP4726.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4096 ;;      Params:         0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0
  4098 ;;      Temps:          0       2       0       0       0       0
  4099 ;;      Totals:         0       2       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    6
  4103 ;; This function calls:
  4104 ;;		_I2C_Init
  4105 ;;		_I2C_Transmit
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _DAC_Initialize
  4113  06A7                     _DAC_Initialize:	
  4114                           
  4115                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4119  06A7  01F7               	clrf	I2C_Init@address
  4120  06A8  01F8               	clrf	I2C_Init@mode
  4121  06A9  01F9               	clrf	I2C_Init@Speed
  4122  06AA  3001               	movlw	1
  4123  06AB  3186  265C  3186   	fcall	_I2C_Init
  4124                           
  4125                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4126  06AE  0020               	movlb	0	; select bank0
  4127  06AF  0868               	movf	_ConfigReg,w
  4128  06B0  391F               	andlw	-225
  4129  06B1  3880               	iorlw	128
  4130  06B2  00E8               	movwf	_ConfigReg
  4131                           
  4132                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4133  06B3  1068               	bcf	_ConfigReg,0
  4134                           
  4135                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4136  06B4  30F9               	movlw	-7
  4137  06B5  05E8               	andwf	_ConfigReg,f
  4138                           
  4139                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4140  06B6  30E7               	movlw	-25
  4141  06B7  05E8               	andwf	_ConfigReg,f
  4142                           
  4143                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4144  06B8  3060               	movlw	96
  4145  06B9  00A8               	movwf	??_DAC_Initialize
  4146  06BA  0828               	movf	??_DAC_Initialize,w
  4147  06BB  00A0               	movwf	I2C_Transmit@address
  4148  06BC  3068               	movlw	(low (_ConfigReg| 0))& (0+255)
  4149  06BD  00A9               	movwf	??_DAC_Initialize+1
  4150  06BE  0829               	movf	??_DAC_Initialize+1,w
  4151  06BF  00A1               	movwf	I2C_Transmit@pData
  4152  06C0  01A2               	clrf	I2C_Transmit@size
  4153  06C1  0AA2               	incf	I2C_Transmit@size,f
  4154  06C2  3001               	movlw	1
  4155  06C3  3186  2608         	fcall	_I2C_Transmit
  4156  06C5  0008               	return
  4157  06C6                     __end_of_DAC_Initialize:	
  4158                           
  4159                           	psect	text15
  4160  0608                     __ptext15:	
  4161 ;; *************** function _I2C_Transmit *****************
  4162 ;; Defined at:
  4163 ;;		line 23 in file "I2C_Common.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  I2Cx            1    wreg     enum E3054
  4166 ;;  address         1    0[BANK0 ] unsigned char 
  4167 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4168 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4169 ;;  size            1    2[BANK0 ] unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  I2Cx            1    6[BANK0 ] enum E3054
  4172 ;;  result          1    7[BANK0 ] char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      char 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4182 ;;      Params:         0       3       0       0       0       0
  4183 ;;      Locals:         0       2       0       0       0       0
  4184 ;;      Temps:          0       3       0       0       0       0
  4185 ;;      Totals:         0       8       0       0       0       0
  4186 ;;Total ram usage:        8 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    4
  4189 ;; This function calls:
  4190 ;;		_I2C1_Transmit
  4191 ;;		_I2C2_Transmit
  4192 ;; This function is called by:
  4193 ;;		_DAC_Initialize
  4194 ;;		_DAC_WriteVoltage
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _I2C_Transmit
  4200  0608                     _I2C_Transmit:	
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4204                           ;I2C_Transmit@I2Cx stored from wreg
  4205  0608  0020               	movlb	0	; select bank0
  4206  0609  00A6               	movwf	I2C_Transmit@I2Cx
  4207                           
  4208                           ;I2C_Common.c: 25: int8_t result;
  4209                           ;I2C_Common.c: 27: switch(I2Cx)
  4210  060A  2E29               	goto	l3673
  4211  060B                     l3667:	
  4212                           ;I2C_Common.c: 28: {
  4213                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4214                           
  4215                           
  4216                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4217  060B  0821               	movf	I2C_Transmit@pData,w
  4218  060C  00A3               	movwf	??_I2C_Transmit
  4219  060D  0823               	movf	??_I2C_Transmit,w
  4220  060E  00F2               	movwf	I2C1_Transmit@pData
  4221  060F  0822               	movf	I2C_Transmit@size,w
  4222  0610  00A4               	movwf	??_I2C_Transmit+1
  4223  0611  0824               	movf	??_I2C_Transmit+1,w
  4224  0612  00F3               	movwf	I2C1_Transmit@size
  4225  0613  0820               	movf	I2C_Transmit@address,w
  4226  0614  3182  22D2  3186   	fcall	_I2C1_Transmit
  4227  0617  2E24               	goto	L7
  4228  0618                     l3669:	
  4229                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4230                           
  4231                           ;I2C_Common.c: 31: break;
  4232                           
  4233                           
  4234                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4235  0618  0821               	movf	I2C_Transmit@pData,w
  4236  0619  00A3               	movwf	??_I2C_Transmit
  4237  061A  0823               	movf	??_I2C_Transmit,w
  4238  061B  00F2               	movwf	I2C2_Transmit@pData
  4239  061C  0822               	movf	I2C_Transmit@size,w
  4240  061D  00A4               	movwf	??_I2C_Transmit+1
  4241  061E  0824               	movf	??_I2C_Transmit+1,w
  4242  061F  00F3               	movwf	I2C2_Transmit@size
  4243  0620  0820               	movf	I2C_Transmit@address,w
  4244  0621  3182  2253  3186   	fcall	_I2C2_Transmit
  4245  0624                     L7:	
  4246  0624  0020               	movlb	0	; select bank0
  4247  0625  00A5               	movwf	??_I2C_Transmit+2
  4248  0626  0825               	movf	??_I2C_Transmit+2,w
  4249  0627  00A7               	movwf	I2C_Transmit@result
  4250                           
  4251                           ;I2C_Common.c: 36: }
  4252                           
  4253                           ;I2C_Common.c: 35: break;
  4254  0628  2E31               	goto	l3675
  4255  0629                     l3673:	
  4256  0629  0826               	movf	I2C_Transmit@I2Cx,w
  4257                           
  4258                           ; Switch size 1, requested type "space"
  4259                           ; Number of cases is 2, Range of values is 0 to 1
  4260                           ; switch strategies available:
  4261                           ; Name         Instructions Cycles
  4262                           ; simple_byte            7     4 (average)
  4263                           ; direct_byte           10     6 (fixed)
  4264                           ; jumptable            260     6 (fixed)
  4265                           ;	Chosen strategy is simple_byte
  4266  062A  3A00               	xorlw	0	; case 0
  4267  062B  1903               	skipnz
  4268  062C  2E0B               	goto	l3667
  4269  062D  3A01               	xorlw	1	; case 1
  4270  062E  1903               	skipnz
  4271  062F  2E18               	goto	l3669
  4272  0630  2E31               	goto	l3675
  4273  0631                     l3675:	
  4274                           
  4275                           ;I2C_Common.c: 37: return result;
  4276  0631  0827               	movf	I2C_Transmit@result,w
  4277  0632  0008               	return
  4278  0633                     __end_of_I2C_Transmit:	
  4279                           
  4280                           	psect	text16
  4281  0253                     __ptext16:	
  4282 ;; *************** function _I2C2_Transmit *****************
  4283 ;; Defined at:
  4284 ;;		line 52 in file "I2C2.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  address         1    wreg     unsigned char 
  4287 ;;  pData           1    2[COMMON] PTR unsigned char 
  4288 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4289 ;;  size            1    3[COMMON] unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  address         1    6[COMMON] unsigned char 
  4292 ;;  i               1    8[COMMON] unsigned char 
  4293 ;;  i               1    7[COMMON] unsigned char 
  4294 ;;  result          1    9[COMMON] char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      char 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4304 ;;      Params:         2       0       0       0       0       0
  4305 ;;      Locals:         4       0       0       0       0       0
  4306 ;;      Temps:          2       0       0       0       0       0
  4307 ;;      Totals:         8       0       0       0       0       0
  4308 ;;Total ram usage:        8 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    3
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_I2C_Transmit
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _I2C2_Transmit
  4320  0253                     _I2C2_Transmit:	
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  4324                           ;I2C2_Transmit@address stored from wreg
  4325  0253  00F6               	movwf	I2C2_Transmit@address
  4326                           
  4327                           ;I2C2.c: 54: int8_t result = 0;
  4328  0254  01F9               	clrf	I2C2_Transmit@result
  4329                           
  4330                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  4331  0255  2AC7               	goto	l3465
  4332  0256                     l3421:	
  4333                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4334                           
  4335                           ;I2C2.c: 57: {
  4336                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  4337                           
  4338  0256  3005               	movlw	5
  4339  0257  0024               	movlb	4	; select bank4
  4340  0258  051C               	andwf	28,w	;volatile
  4341  0259  00F4               	movwf	??_I2C2_Transmit
  4342  025A  081E               	movf	30,w	;volatile
  4343  025B  391F               	andlw	31
  4344  025C  0474               	iorwf	??_I2C2_Transmit,w
  4345  025D  1D03               	btfss	3,2
  4346  025E  2A56               	goto	l3421
  4347                           
  4348                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  4349  025F  141E               	bsf	30,0	;volatile
  4350  0260                     l3423:	
  4351                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4352                           
  4353  0260  3005               	movlw	5
  4354  0261  051C               	andwf	28,w	;volatile
  4355  0262  00F4               	movwf	??_I2C2_Transmit
  4356  0263  081E               	movf	30,w	;volatile
  4357  0264  391F               	andlw	31
  4358  0265  0474               	iorwf	??_I2C2_Transmit,w
  4359  0266  1D03               	btfss	3,2
  4360  0267  2A60               	goto	l3423
  4361                           
  4362                           ;I2C2.c: 63: SSP2BUF = address << 1;
  4363  0268  3576               	lslf	I2C2_Transmit@address,w
  4364  0269  0099               	movwf	25	;volatile
  4365  026A                     l527:	
  4366                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  4367                           
  4368  026A  191C               	btfsc	28,2	;volatile
  4369  026B  2A6A               	goto	l527
  4370                           
  4371                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  4372  026C  3000               	movlw	0
  4373  026D  1B1E               	btfsc	30,6	;volatile
  4374  026E  3001               	movlw	1
  4375  026F  00F9               	movwf	I2C2_Transmit@result
  4376                           
  4377                           ;I2C2.c: 67: if (!result)
  4378  0270  0879               	movf	I2C2_Transmit@result,w
  4379  0271  1D03               	btfss	3,2
  4380  0272  2A9A               	goto	l3447
  4381                           
  4382                           ;I2C2.c: 68: {
  4383                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  4384  0273  01F7               	clrf	I2C2_Transmit@i
  4385  0274  2A79               	goto	l3445
  4386  0275                     l3443:	
  4387                           ;I2C2.c: 79: break;
  4388                           
  4389  0275  3001               	movlw	1
  4390  0276  00F4               	movwf	??_I2C2_Transmit
  4391  0277  0874               	movf	??_I2C2_Transmit,w
  4392  0278  07F7               	addwf	I2C2_Transmit@i,f
  4393  0279                     l3445:	
  4394  0279  0873               	movf	I2C2_Transmit@size,w
  4395  027A  0277               	subwf	I2C2_Transmit@i,w
  4396  027B  1803               	btfsc	3,0
  4397  027C  2A9A               	goto	l3447
  4398  027D                     l3433:	
  4399                           ;I2C2.c: 70: {
  4400                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4401                           
  4402  027D  3005               	movlw	5
  4403  027E  051C               	andwf	28,w	;volatile
  4404  027F  00F4               	movwf	??_I2C2_Transmit
  4405  0280  081E               	movf	30,w	;volatile
  4406  0281  391F               	andlw	31
  4407  0282  0474               	iorwf	??_I2C2_Transmit,w
  4408  0283  1D03               	btfss	3,2
  4409  0284  2A7D               	goto	l3433
  4410                           
  4411                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  4412  0285  0877               	movf	I2C2_Transmit@i,w
  4413  0286  0772               	addwf	I2C2_Transmit@pData,w
  4414  0287  00F4               	movwf	??_I2C2_Transmit
  4415  0288  0874               	movf	??_I2C2_Transmit,w
  4416  0289  0086               	movwf	6
  4417  028A  0187               	clrf	7
  4418  028B  0801               	movf	1,w
  4419  028C  0099               	movwf	25	;volatile
  4420  028D                     l536:	
  4421                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  4422                           
  4423  028D  191C               	btfsc	28,2	;volatile
  4424  028E  2A8D               	goto	l536
  4425                           
  4426                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  4427  028F  3000               	movlw	0
  4428  0290  1B1E               	btfsc	30,6	;volatile
  4429  0291  3001               	movlw	1
  4430  0292  00F9               	movwf	I2C2_Transmit@result
  4431                           
  4432                           ;I2C2.c: 76: if (result)
  4433  0293  0879               	movf	I2C2_Transmit@result,w
  4434  0294  1903               	btfsc	3,2
  4435  0295  2A75               	goto	l3443
  4436                           
  4437                           ;I2C2.c: 77: {
  4438                           ;I2C2.c: 78: result = 2;
  4439  0296  3002               	movlw	2
  4440  0297  00F4               	movwf	??_I2C2_Transmit
  4441  0298  0874               	movf	??_I2C2_Transmit,w
  4442  0299  00F9               	movwf	I2C2_Transmit@result
  4443  029A                     l3447:	
  4444                           ;I2C2.c: 80: }
  4445                           ;I2C2.c: 81: }
  4446                           ;I2C2.c: 82: }
  4447                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4448                           
  4449  029A  3005               	movlw	5
  4450  029B  051C               	andwf	28,w	;volatile
  4451  029C  00F4               	movwf	??_I2C2_Transmit
  4452  029D  081E               	movf	30,w	;volatile
  4453  029E  391F               	andlw	31
  4454  029F  0474               	iorwf	??_I2C2_Transmit,w
  4455  02A0  1D03               	btfss	3,2
  4456  02A1  2A9A               	goto	l3447
  4457                           
  4458                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  4459  02A2  151E               	bsf	30,2	;volatile
  4460                           
  4461                           ;I2C2.c: 86: break;
  4462  02A3  2AD0               	goto	l3467
  4463  02A4                     l545:	
  4464                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  4465                           
  4466                           
  4467                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  4468  02A4  0024               	movlb	4	; select bank4
  4469  02A5  1D9C               	btfss	28,3	;volatile
  4470  02A6  1E1C               	btfss	28,4	;volatile
  4471  02A7  2AC5               	goto	l3461
  4472                           
  4473                           ;I2C2.c: 90: {
  4474                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  4475  02A8  01F8               	clrf	I2C2_Transmit@i_555
  4476  02A9                     l3457:	
  4477  02A9  0873               	movf	I2C2_Transmit@size,w
  4478  02AA  0278               	subwf	I2C2_Transmit@i_555,w
  4479  02AB  1803               	btfsc	3,0
  4480  02AC  2AC0               	goto	l3459
  4481                           
  4482                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  4483  02AD  0878               	movf	I2C2_Transmit@i_555,w
  4484  02AE  0772               	addwf	I2C2_Transmit@pData,w
  4485  02AF  00F4               	movwf	??_I2C2_Transmit
  4486  02B0  0874               	movf	??_I2C2_Transmit,w
  4487  02B1  0086               	movwf	6
  4488  02B2  0187               	clrf	7
  4489  02B3  0801               	movf	1,w
  4490  02B4  00F5               	movwf	??_I2C2_Transmit+1
  4491  02B5  0878               	movf	I2C2_Transmit@i_555,w
  4492  02B6  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  4493  02B7  0086               	movwf	6
  4494  02B8  0187               	clrf	7
  4495  02B9  0875               	movf	??_I2C2_Transmit+1,w
  4496  02BA  0081               	movwf	1
  4497  02BB  3001               	movlw	1
  4498  02BC  00F4               	movwf	??_I2C2_Transmit
  4499  02BD  0874               	movf	??_I2C2_Transmit,w
  4500  02BE  07F8               	addwf	I2C2_Transmit@i_555,f
  4501  02BF  2AA9               	goto	l3457
  4502  02C0                     l3459:	
  4503                           
  4504                           ;I2C2.c: 93: result = size;
  4505  02C0  0873               	movf	I2C2_Transmit@size,w
  4506  02C1  00F4               	movwf	??_I2C2_Transmit
  4507  02C2  0874               	movf	??_I2C2_Transmit,w
  4508  02C3  00F9               	movwf	I2C2_Transmit@result
  4509                           
  4510                           ;I2C2.c: 94: }
  4511  02C4  2AD0               	goto	l3467
  4512  02C5                     l3461:	
  4513                           
  4514                           ;I2C2.c: 95: else
  4515                           ;I2C2.c: 96: result = 0;
  4516  02C5  01F9               	clrf	I2C2_Transmit@result
  4517                           
  4518                           ;I2C2.c: 98: }
  4519                           
  4520                           ;I2C2.c: 97: break;
  4521  02C6  2AD0               	goto	l3467
  4522  02C7                     l3465:	
  4523  02C7  0021               	movlb	1	; select bank1
  4524  02C8  0832               	movf	(_I2C2_Config^(0+128)+18),w
  4525                           
  4526                           ; Switch size 1, requested type "space"
  4527                           ; Number of cases is 2, Range of values is 0 to 1
  4528                           ; switch strategies available:
  4529                           ; Name         Instructions Cycles
  4530                           ; simple_byte            7     4 (average)
  4531                           ; direct_byte           10     6 (fixed)
  4532                           ; jumptable            260     6 (fixed)
  4533                           ;	Chosen strategy is simple_byte
  4534  02C9  3A00               	xorlw	0	; case 0
  4535  02CA  1903               	skipnz
  4536  02CB  2A56               	goto	l3421
  4537  02CC  3A01               	xorlw	1	; case 1
  4538  02CD  1903               	skipnz
  4539  02CE  2AA4               	goto	l545
  4540  02CF  2AD0               	goto	l3467
  4541  02D0                     l3467:	
  4542                           
  4543                           ;I2C2.c: 100: return result;
  4544  02D0  0879               	movf	I2C2_Transmit@result,w
  4545  02D1  0008               	return
  4546  02D2                     __end_of_I2C2_Transmit:	
  4547                           
  4548                           	psect	text17
  4549  02D2                     __ptext17:	
  4550 ;; *************** function _I2C1_Transmit *****************
  4551 ;; Defined at:
  4552 ;;		line 52 in file "I2C1.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  address         1    wreg     unsigned char 
  4555 ;;  pData           1    2[COMMON] PTR unsigned char 
  4556 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4557 ;;  size            1    3[COMMON] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  address         1    6[COMMON] unsigned char 
  4560 ;;  i               1    8[COMMON] unsigned char 
  4561 ;;  i               1    7[COMMON] unsigned char 
  4562 ;;  result          1    9[COMMON] char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4572 ;;      Params:         2       0       0       0       0       0
  4573 ;;      Locals:         4       0       0       0       0       0
  4574 ;;      Temps:          2       0       0       0       0       0
  4575 ;;      Totals:         8       0       0       0       0       0
  4576 ;;Total ram usage:        8 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    3
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_I2C_Transmit
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           
  4587                           ;psect for function _I2C1_Transmit
  4588  02D2                     _I2C1_Transmit:	
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  4592                           ;I2C1_Transmit@address stored from wreg
  4593  02D2  00F6               	movwf	I2C1_Transmit@address
  4594                           
  4595                           ;I2C1.c: 54: int8_t result;
  4596                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  4597  02D3  2B45               	goto	l3379
  4598  02D4                     l3335:	
  4599                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4600                           
  4601                           ;I2C1.c: 57: {
  4602                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  4603                           
  4604  02D4  3005               	movlw	5
  4605  02D5  0024               	movlb	4	; select bank4
  4606  02D6  0514               	andwf	20,w	;volatile
  4607  02D7  00F4               	movwf	??_I2C1_Transmit
  4608  02D8  0816               	movf	22,w	;volatile
  4609  02D9  391F               	andlw	31
  4610  02DA  0474               	iorwf	??_I2C1_Transmit,w
  4611  02DB  1D03               	btfss	3,2
  4612  02DC  2AD4               	goto	l3335
  4613                           
  4614                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  4615  02DD  1416               	bsf	22,0	;volatile
  4616  02DE                     l3337:	
  4617                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4618                           
  4619  02DE  3005               	movlw	5
  4620  02DF  0514               	andwf	20,w	;volatile
  4621  02E0  00F4               	movwf	??_I2C1_Transmit
  4622  02E1  0816               	movf	22,w	;volatile
  4623  02E2  391F               	andlw	31
  4624  02E3  0474               	iorwf	??_I2C1_Transmit,w
  4625  02E4  1D03               	btfss	3,2
  4626  02E5  2ADE               	goto	l3337
  4627                           
  4628                           ;I2C1.c: 63: SSP1BUF = address << 1;
  4629  02E6  3576               	lslf	I2C1_Transmit@address,w
  4630  02E7  0091               	movwf	17	;volatile
  4631  02E8                     l390:	
  4632                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  4633                           
  4634  02E8  1914               	btfsc	20,2	;volatile
  4635  02E9  2AE8               	goto	l390
  4636                           
  4637                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  4638  02EA  3000               	movlw	0
  4639  02EB  1B16               	btfsc	22,6	;volatile
  4640  02EC  3001               	movlw	1
  4641  02ED  00F9               	movwf	I2C1_Transmit@result
  4642                           
  4643                           ;I2C1.c: 67: if (!result)
  4644  02EE  0879               	movf	I2C1_Transmit@result,w
  4645  02EF  1D03               	btfss	3,2
  4646  02F0  2B18               	goto	l3361
  4647                           
  4648                           ;I2C1.c: 68: {
  4649                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  4650  02F1  01F7               	clrf	I2C1_Transmit@i
  4651  02F2  2AF7               	goto	l3359
  4652  02F3                     l3357:	
  4653                           ;I2C1.c: 79: break;
  4654                           
  4655  02F3  3001               	movlw	1
  4656  02F4  00F4               	movwf	??_I2C1_Transmit
  4657  02F5  0874               	movf	??_I2C1_Transmit,w
  4658  02F6  07F7               	addwf	I2C1_Transmit@i,f
  4659  02F7                     l3359:	
  4660  02F7  0873               	movf	I2C1_Transmit@size,w
  4661  02F8  0277               	subwf	I2C1_Transmit@i,w
  4662  02F9  1803               	btfsc	3,0
  4663  02FA  2B18               	goto	l3361
  4664  02FB                     l3347:	
  4665                           ;I2C1.c: 70: {
  4666                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4667                           
  4668  02FB  3005               	movlw	5
  4669  02FC  0514               	andwf	20,w	;volatile
  4670  02FD  00F4               	movwf	??_I2C1_Transmit
  4671  02FE  0816               	movf	22,w	;volatile
  4672  02FF  391F               	andlw	31
  4673  0300  0474               	iorwf	??_I2C1_Transmit,w
  4674  0301  1D03               	btfss	3,2
  4675  0302  2AFB               	goto	l3347
  4676                           
  4677                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  4678  0303  0877               	movf	I2C1_Transmit@i,w
  4679  0304  0772               	addwf	I2C1_Transmit@pData,w
  4680  0305  00F4               	movwf	??_I2C1_Transmit
  4681  0306  0874               	movf	??_I2C1_Transmit,w
  4682  0307  0086               	movwf	6
  4683  0308  0187               	clrf	7
  4684  0309  0801               	movf	1,w
  4685  030A  0091               	movwf	17	;volatile
  4686  030B                     l399:	
  4687                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  4688                           
  4689  030B  1914               	btfsc	20,2	;volatile
  4690  030C  2B0B               	goto	l399
  4691                           
  4692                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  4693  030D  3000               	movlw	0
  4694  030E  1B16               	btfsc	22,6	;volatile
  4695  030F  3001               	movlw	1
  4696  0310  00F9               	movwf	I2C1_Transmit@result
  4697                           
  4698                           ;I2C1.c: 76: if (result)
  4699  0311  0879               	movf	I2C1_Transmit@result,w
  4700  0312  1903               	btfsc	3,2
  4701  0313  2AF3               	goto	l3357
  4702                           
  4703                           ;I2C1.c: 77: {
  4704                           ;I2C1.c: 78: result = 2;
  4705  0314  3002               	movlw	2
  4706  0315  00F4               	movwf	??_I2C1_Transmit
  4707  0316  0874               	movf	??_I2C1_Transmit,w
  4708  0317  00F9               	movwf	I2C1_Transmit@result
  4709  0318                     l3361:	
  4710                           ;I2C1.c: 80: }
  4711                           ;I2C1.c: 81: }
  4712                           ;I2C1.c: 82: }
  4713                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4714                           
  4715  0318  3005               	movlw	5
  4716  0319  0514               	andwf	20,w	;volatile
  4717  031A  00F4               	movwf	??_I2C1_Transmit
  4718  031B  0816               	movf	22,w	;volatile
  4719  031C  391F               	andlw	31
  4720  031D  0474               	iorwf	??_I2C1_Transmit,w
  4721  031E  1D03               	btfss	3,2
  4722  031F  2B18               	goto	l3361
  4723                           
  4724                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  4725  0320  1516               	bsf	22,2	;volatile
  4726                           
  4727                           ;I2C1.c: 86: break;
  4728  0321  2B4E               	goto	l3381
  4729  0322                     l408:	
  4730                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  4731                           
  4732                           
  4733                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4734  0322  0024               	movlb	4	; select bank4
  4735  0323  1D94               	btfss	20,3	;volatile
  4736  0324  1E14               	btfss	20,4	;volatile
  4737  0325  2B43               	goto	l3375
  4738                           
  4739                           ;I2C1.c: 90: {
  4740                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  4741  0326  01F8               	clrf	I2C1_Transmit@i_411
  4742  0327                     l3371:	
  4743  0327  0873               	movf	I2C1_Transmit@size,w
  4744  0328  0278               	subwf	I2C1_Transmit@i_411,w
  4745  0329  1803               	btfsc	3,0
  4746  032A  2B3E               	goto	l3373
  4747                           
  4748                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  4749  032B  0878               	movf	I2C1_Transmit@i_411,w
  4750  032C  0772               	addwf	I2C1_Transmit@pData,w
  4751  032D  00F4               	movwf	??_I2C1_Transmit
  4752  032E  0874               	movf	??_I2C1_Transmit,w
  4753  032F  0086               	movwf	6
  4754  0330  0187               	clrf	7
  4755  0331  0801               	movf	1,w
  4756  0332  00F5               	movwf	??_I2C1_Transmit+1
  4757  0333  0878               	movf	I2C1_Transmit@i_411,w
  4758  0334  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  4759  0335  0086               	movwf	6
  4760  0336  0187               	clrf	7
  4761  0337  0875               	movf	??_I2C1_Transmit+1,w
  4762  0338  0081               	movwf	1
  4763  0339  3001               	movlw	1
  4764  033A  00F4               	movwf	??_I2C1_Transmit
  4765  033B  0874               	movf	??_I2C1_Transmit,w
  4766  033C  07F8               	addwf	I2C1_Transmit@i_411,f
  4767  033D  2B27               	goto	l3371
  4768  033E                     l3373:	
  4769                           
  4770                           ;I2C1.c: 93: result = size;
  4771  033E  0873               	movf	I2C1_Transmit@size,w
  4772  033F  00F4               	movwf	??_I2C1_Transmit
  4773  0340  0874               	movf	??_I2C1_Transmit,w
  4774  0341  00F9               	movwf	I2C1_Transmit@result
  4775                           
  4776                           ;I2C1.c: 94: }
  4777  0342  2B4E               	goto	l3381
  4778  0343                     l3375:	
  4779                           
  4780                           ;I2C1.c: 95: else
  4781                           ;I2C1.c: 96: result = 0;
  4782  0343  01F9               	clrf	I2C1_Transmit@result
  4783                           
  4784                           ;I2C1.c: 98: }
  4785                           
  4786                           ;I2C1.c: 97: break;
  4787  0344  2B4E               	goto	l3381
  4788  0345                     l3379:	
  4789  0345  0021               	movlb	1	; select bank1
  4790  0346  0845               	movf	(_I2C1_Config^(0+128)+18),w
  4791                           
  4792                           ; Switch size 1, requested type "space"
  4793                           ; Number of cases is 2, Range of values is 0 to 1
  4794                           ; switch strategies available:
  4795                           ; Name         Instructions Cycles
  4796                           ; simple_byte            7     4 (average)
  4797                           ; direct_byte           10     6 (fixed)
  4798                           ; jumptable            260     6 (fixed)
  4799                           ;	Chosen strategy is simple_byte
  4800  0347  3A00               	xorlw	0	; case 0
  4801  0348  1903               	skipnz
  4802  0349  2AD4               	goto	l3335
  4803  034A  3A01               	xorlw	1	; case 1
  4804  034B  1903               	skipnz
  4805  034C  2B22               	goto	l408
  4806  034D  2B4E               	goto	l3381
  4807  034E                     l3381:	
  4808                           
  4809                           ;I2C1.c: 100: return result;
  4810  034E  0879               	movf	I2C1_Transmit@result,w
  4811  034F  0008               	return
  4812  0350                     __end_of_I2C1_Transmit:	
  4813                           
  4814                           	psect	text18
  4815  065C                     __ptext18:	
  4816 ;; *************** function _I2C_Init *****************
  4817 ;; Defined at:
  4818 ;;		line 6 in file "I2C_Common.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  I2Cx            1    wreg     enum E3054
  4821 ;;  address         1    7[COMMON] unsigned char 
  4822 ;;  mode            1    8[COMMON] enum E3045
  4823 ;;  Speed           1    9[COMMON] enum E3049
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  I2Cx            1   10[COMMON] enum E3054
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4835 ;;      Params:         3       0       0       0       0       0
  4836 ;;      Locals:         1       0       0       0       0       0
  4837 ;;      Temps:          0       2       0       0       0       0
  4838 ;;      Totals:         4       2       0       0       0       0
  4839 ;;Total ram usage:        6 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    5
  4842 ;; This function calls:
  4843 ;;		_I2C1_Setting
  4844 ;;		_I2C2_Setting
  4845 ;; This function is called by:
  4846 ;;		_DAC_Initialize
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _I2C_Init
  4852  065C                     _I2C_Init:	
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4856                           ;I2C_Init@I2Cx stored from wreg
  4857  065C  00FA               	movwf	I2C_Init@I2Cx
  4858                           
  4859                           ;I2C_Common.c: 8: switch(I2Cx)
  4860  065D  2E7A               	goto	l3663
  4861  065E                     l3657:	
  4862                           ;I2C_Common.c: 9: {
  4863                           ;I2C_Common.c: 10: case I2C1_MODULE:
  4864                           
  4865                           
  4866                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  4867  065E  0878               	movf	I2C_Init@mode,w
  4868  065F  0020               	movlb	0	; select bank0
  4869  0660  00A0               	movwf	??_I2C_Init
  4870  0661  0820               	movf	??_I2C_Init,w
  4871  0662  00F3               	movwf	I2C1_Setting@mode
  4872  0663  0879               	movf	I2C_Init@Speed,w
  4873  0664  00A1               	movwf	??_I2C_Init+1
  4874  0665  0821               	movf	??_I2C_Init+1,w
  4875  0666  00F4               	movwf	I2C1_Setting@Speed
  4876  0667  0877               	movf	I2C_Init@address,w
  4877  0668  3185  256D  3186   	fcall	_I2C1_Setting
  4878                           
  4879                           ;I2C_Common.c: 12: break;
  4880  066B  2E82               	goto	l637
  4881  066C                     l3659:	
  4882                           ;I2C_Common.c: 14: case I2C2_MODULE:
  4883                           
  4884                           
  4885                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  4886  066C  0878               	movf	I2C_Init@mode,w
  4887  066D  0020               	movlb	0	; select bank0
  4888  066E  00A0               	movwf	??_I2C_Init
  4889  066F  0820               	movf	??_I2C_Init,w
  4890  0670  00F3               	movwf	I2C2_Setting@mode
  4891  0671  0879               	movf	I2C_Init@Speed,w
  4892  0672  00A1               	movwf	??_I2C_Init+1
  4893  0673  0821               	movf	??_I2C_Init+1,w
  4894  0674  00F4               	movwf	I2C2_Setting@Speed
  4895  0675  0877               	movf	I2C_Init@address,w
  4896  0676  3185  2535  3186   	fcall	_I2C2_Setting
  4897                           
  4898                           ;I2C_Common.c: 17: }
  4899                           
  4900                           ;I2C_Common.c: 16: break;
  4901  0679  2E82               	goto	l637
  4902  067A                     l3663:	
  4903  067A  087A               	movf	I2C_Init@I2Cx,w
  4904                           
  4905                           ; Switch size 1, requested type "space"
  4906                           ; Number of cases is 2, Range of values is 0 to 1
  4907                           ; switch strategies available:
  4908                           ; Name         Instructions Cycles
  4909                           ; simple_byte            7     4 (average)
  4910                           ; direct_byte           10     6 (fixed)
  4911                           ; jumptable            260     6 (fixed)
  4912                           ;	Chosen strategy is simple_byte
  4913  067B  3A00               	xorlw	0	; case 0
  4914  067C  1903               	skipnz
  4915  067D  2E5E               	goto	l3657
  4916  067E  3A01               	xorlw	1	; case 1
  4917  067F  1903               	skipnz
  4918  0680  2E6C               	goto	l3659
  4919  0681  2E82               	goto	l637
  4920  0682                     l637:	
  4921                           
  4922                           ;I2C_Common.c: 19: PEIE = 1;
  4923  0682  170B               	bsf	11,6	;volatile
  4924                           
  4925                           ;I2C_Common.c: 20: GIE = 1;
  4926  0683  178B               	bsf	11,7	;volatile
  4927  0684  0008               	return
  4928  0685                     __end_of_I2C_Init:	
  4929                           
  4930                           	psect	text19
  4931  0535                     __ptext19:	
  4932 ;; *************** function _I2C2_Setting *****************
  4933 ;; Defined at:
  4934 ;;		line 15 in file "I2C2.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  address         1    wreg     unsigned char 
  4937 ;;  mode            1    3[COMMON] enum E3045
  4938 ;;  Speed           1    4[COMMON] enum E3049
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  address         1    6[COMMON] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4950 ;;      Params:         2       0       0       0       0       0
  4951 ;;      Locals:         1       0       0       0       0       0
  4952 ;;      Temps:          1       0       0       0       0       0
  4953 ;;      Totals:         4       0       0       0       0       0
  4954 ;;Total ram usage:        4 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    4
  4957 ;; This function calls:
  4958 ;;		_I2C2_PinInit
  4959 ;; This function is called by:
  4960 ;;		_I2C_Init
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function _I2C2_Setting
  4966  0535                     _I2C2_Setting:	
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4970                           ;I2C2_Setting@address stored from wreg
  4971  0535  00F6               	movwf	I2C2_Setting@address
  4972                           
  4973                           ;I2C2.c: 17: I2C2_PinInit();
  4974  0536  3187  2756  3185   	fcall	_I2C2_PinInit
  4975                           
  4976                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  4977  0539  0873               	movf	I2C2_Setting@mode,w
  4978  053A  00F5               	movwf	??_I2C2_Setting
  4979  053B  0875               	movf	??_I2C2_Setting,w
  4980  053C  0021               	movlb	1	; select bank1
  4981  053D  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  4982                           
  4983                           ;I2C2.c: 20: switch(mode)
  4984  053E  2D5E               	goto	l3417
  4985  053F                     l510:	
  4986                           ;I2C2.c: 21: {
  4987                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  4988                           
  4989                           
  4990                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  4991  053F  0024               	movlb	4	; select bank4
  4992  0540  159D               	bsf	29,3	;volatile
  4993                           
  4994                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  4995  0541  0874               	movf	I2C2_Setting@Speed,w
  4996  0542  1D03               	btfss	3,2
  4997  0543  2D47               	goto	l3395
  4998                           
  4999                           ;I2C2.c: 25: {
  5000                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5001  0544  179C               	bsf	28,7	;volatile
  5002                           
  5003                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5004  0545  304F               	movlw	79
  5005  0546  2D4F               	goto	L8
  5006  0547                     l3395:	
  5007                           ;I2C2.c: 28: }
  5008                           
  5009                           
  5010                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5011  0547  0374               	decf	I2C2_Setting@Speed,w
  5012  0548  1D03               	btfss	3,2
  5013  0549  2D5C               	goto	l3413
  5014                           
  5015                           ;I2C2.c: 30: {
  5016                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5017  054A  307F               	movlw	127
  5018  054B  00F5               	movwf	??_I2C2_Setting
  5019  054C  0875               	movf	??_I2C2_Setting,w
  5020  054D  059C               	andwf	28,f	;volatile
  5021                           
  5022                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5023  054E  3013               	movlw	19
  5024  054F                     L8:	
  5025  054F  009A               	movwf	26	;volatile
  5026  0550  2D5C               	goto	l3413
  5027  0551                     l3403:	
  5028                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5029                           
  5030                           ;I2C2.c: 35: break;
  5031                           
  5032                           ;I2C2.c: 33: }
  5033                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5034                           
  5035                           
  5036                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5037  0551  0024               	movlb	4	; select bank4
  5038  0552  019C               	clrf	28	;volatile
  5039                           
  5040                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5041  0553  3006               	movlw	6
  5042  0554  00F5               	movwf	??_I2C2_Setting
  5043  0555  0875               	movf	??_I2C2_Setting,w
  5044  0556  049D               	iorwf	29,f	;volatile
  5045                           
  5046                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5047  0557  141E               	bsf	30,0	;volatile
  5048                           
  5049                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5050  0558  3576               	lslf	I2C2_Setting@address,w
  5051  0559  009A               	movwf	26	;volatile
  5052                           
  5053                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5054  055A  30FE               	movlw	254
  5055  055B  009B               	movwf	27	;volatile
  5056  055C                     l3413:	
  5057                           
  5058                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5059  055C  169D               	bsf	29,5	;volatile
  5060                           
  5061                           ;I2C2.c: 45: }
  5062                           
  5063                           ;I2C2.c: 44: break;
  5064  055D  2D66               	goto	l514
  5065  055E                     l3417:	
  5066  055E  0873               	movf	I2C2_Setting@mode,w
  5067                           
  5068                           ; Switch size 1, requested type "space"
  5069                           ; Number of cases is 2, Range of values is 0 to 1
  5070                           ; switch strategies available:
  5071                           ; Name         Instructions Cycles
  5072                           ; simple_byte            7     4 (average)
  5073                           ; direct_byte           10     6 (fixed)
  5074                           ; jumptable            260     6 (fixed)
  5075                           ;	Chosen strategy is simple_byte
  5076  055F  3A00               	xorlw	0	; case 0
  5077  0560  1903               	skipnz
  5078  0561  2D3F               	goto	l510
  5079  0562  3A01               	xorlw	1	; case 1
  5080  0563  1903               	skipnz
  5081  0564  2D51               	goto	l3403
  5082  0565  2D66               	goto	l514
  5083  0566                     l514:	
  5084                           
  5085                           ;I2C2.c: 46: SSP2IE = 1;
  5086  0566  0021               	movlb	1	; select bank1
  5087  0567  1414               	bsf	20,0	;volatile
  5088                           
  5089                           ;I2C2.c: 47: BCL2IE = 1;
  5090  0568  1494               	bsf	20,1	;volatile
  5091                           
  5092                           ;I2C2.c: 48: SSP2IF = 0;
  5093  0569  0020               	movlb	0	; select bank0
  5094  056A  1014               	bcf	20,0	;volatile
  5095                           
  5096                           ;I2C2.c: 49: BCL2IF = 0;
  5097  056B  1094               	bcf	20,1	;volatile
  5098  056C  0008               	return
  5099  056D                     __end_of_I2C2_Setting:	
  5100                           
  5101                           	psect	text20
  5102  0756                     __ptext20:	
  5103 ;; *************** function _I2C2_PinInit *****************
  5104 ;; Defined at:
  5105 ;;		line 9 in file "I2C2.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, status,0
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5119 ;;      Params:         0       0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0
  5121 ;;      Temps:          1       0       0       0       0       0
  5122 ;;      Totals:         1       0       0       0       0       0
  5123 ;;Total ram usage:        1 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    3
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_I2C2_Setting
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _I2C2_PinInit
  5135  0756                     _I2C2_PinInit:	
  5136                           
  5137                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5141  0756  3024               	movlw	36
  5142  0757  00F2               	movwf	??_I2C2_PinInit
  5143  0758  0872               	movf	??_I2C2_PinInit,w
  5144  0759  0021               	movlb	1	; select bank1
  5145  075A  048D               	iorwf	13,f	;volatile
  5146                           
  5147                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5148  075B  30DB               	movlw	219
  5149  075C  00F2               	movwf	??_I2C2_PinInit
  5150  075D  0872               	movf	??_I2C2_PinInit,w
  5151  075E  0023               	movlb	3	; select bank3
  5152  075F  058D               	andwf	13,f	;volatile
  5153  0760  0008               	return
  5154  0761                     __end_of_I2C2_PinInit:	
  5155                           
  5156                           	psect	text21
  5157  056D                     __ptext21:	
  5158 ;; *************** function _I2C1_Setting *****************
  5159 ;; Defined at:
  5160 ;;		line 15 in file "I2C1.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  address         1    wreg     unsigned char 
  5163 ;;  mode            1    3[COMMON] enum E3045
  5164 ;;  Speed           1    4[COMMON] enum E3049
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  address         1    6[COMMON] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5176 ;;      Params:         2       0       0       0       0       0
  5177 ;;      Locals:         1       0       0       0       0       0
  5178 ;;      Temps:          1       0       0       0       0       0
  5179 ;;      Totals:         4       0       0       0       0       0
  5180 ;;Total ram usage:        4 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    4
  5183 ;; This function calls:
  5184 ;;		_I2C1_PinInit
  5185 ;; This function is called by:
  5186 ;;		_I2C_Init
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _I2C1_Setting
  5192  056D                     _I2C1_Setting:	
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5196                           ;I2C1_Setting@address stored from wreg
  5197  056D  00F6               	movwf	I2C1_Setting@address
  5198                           
  5199                           ;I2C1.c: 17: I2C1_PinInit();
  5200  056E  3187  2761  3185   	fcall	_I2C1_PinInit
  5201                           
  5202                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5203  0571  0873               	movf	I2C1_Setting@mode,w
  5204  0572  00F5               	movwf	??_I2C1_Setting
  5205  0573  0875               	movf	??_I2C1_Setting,w
  5206  0574  0021               	movlb	1	; select bank1
  5207  0575  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  5208                           
  5209                           ;I2C1.c: 20: switch(mode)
  5210  0576  2D96               	goto	l3331
  5211  0577                     l373:	
  5212                           ;I2C1.c: 21: {
  5213                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5214                           
  5215                           
  5216                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5217  0577  0024               	movlb	4	; select bank4
  5218  0578  1595               	bsf	21,3	;volatile
  5219                           
  5220                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5221  0579  0874               	movf	I2C1_Setting@Speed,w
  5222  057A  1D03               	btfss	3,2
  5223  057B  2D7F               	goto	l3309
  5224                           
  5225                           ;I2C1.c: 25: {
  5226                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5227  057C  1794               	bsf	20,7	;volatile
  5228                           
  5229                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5230  057D  304F               	movlw	79
  5231  057E  2D87               	goto	L9
  5232  057F                     l3309:	
  5233                           ;I2C1.c: 28: }
  5234                           
  5235                           
  5236                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5237  057F  0374               	decf	I2C1_Setting@Speed,w
  5238  0580  1D03               	btfss	3,2
  5239  0581  2D94               	goto	l3327
  5240                           
  5241                           ;I2C1.c: 30: {
  5242                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5243  0582  307F               	movlw	127
  5244  0583  00F5               	movwf	??_I2C1_Setting
  5245  0584  0875               	movf	??_I2C1_Setting,w
  5246  0585  0594               	andwf	20,f	;volatile
  5247                           
  5248                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5249  0586  3013               	movlw	19
  5250  0587                     L9:	
  5251  0587  0092               	movwf	18	;volatile
  5252  0588  2D94               	goto	l3327
  5253  0589                     l3317:	
  5254                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5255                           
  5256                           ;I2C1.c: 35: break;
  5257                           
  5258                           ;I2C1.c: 33: }
  5259                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5260                           
  5261                           
  5262                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5263  0589  0024               	movlb	4	; select bank4
  5264  058A  0194               	clrf	20	;volatile
  5265                           
  5266                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5267  058B  3006               	movlw	6
  5268  058C  00F5               	movwf	??_I2C1_Setting
  5269  058D  0875               	movf	??_I2C1_Setting,w
  5270  058E  0495               	iorwf	21,f	;volatile
  5271                           
  5272                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5273  058F  1416               	bsf	22,0	;volatile
  5274                           
  5275                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5276  0590  3576               	lslf	I2C1_Setting@address,w
  5277  0591  0092               	movwf	18	;volatile
  5278                           
  5279                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5280  0592  30FE               	movlw	254
  5281  0593  0093               	movwf	19	;volatile
  5282  0594                     l3327:	
  5283                           
  5284                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5285  0594  1695               	bsf	21,5	;volatile
  5286                           
  5287                           ;I2C1.c: 45: }
  5288                           
  5289                           ;I2C1.c: 44: break;
  5290  0595  2D9E               	goto	l377
  5291  0596                     l3331:	
  5292  0596  0873               	movf	I2C1_Setting@mode,w
  5293                           
  5294                           ; Switch size 1, requested type "space"
  5295                           ; Number of cases is 2, Range of values is 0 to 1
  5296                           ; switch strategies available:
  5297                           ; Name         Instructions Cycles
  5298                           ; simple_byte            7     4 (average)
  5299                           ; direct_byte           10     6 (fixed)
  5300                           ; jumptable            260     6 (fixed)
  5301                           ;	Chosen strategy is simple_byte
  5302  0597  3A00               	xorlw	0	; case 0
  5303  0598  1903               	skipnz
  5304  0599  2D77               	goto	l373
  5305  059A  3A01               	xorlw	1	; case 1
  5306  059B  1903               	skipnz
  5307  059C  2D89               	goto	l3317
  5308  059D  2D9E               	goto	l377
  5309  059E                     l377:	
  5310                           
  5311                           ;I2C1.c: 46: SSP1IE = 1;
  5312  059E  0021               	movlb	1	; select bank1
  5313  059F  1591               	bsf	17,3	;volatile
  5314                           
  5315                           ;I2C1.c: 47: BCL1IE = 1;
  5316  05A0  1592               	bsf	18,3	;volatile
  5317                           
  5318                           ;I2C1.c: 48: SSP1IF = 0;
  5319  05A1  0020               	movlb	0	; select bank0
  5320  05A2  1191               	bcf	17,3	;volatile
  5321                           
  5322                           ;I2C1.c: 49: BCL1IF = 0;
  5323  05A3  1192               	bcf	18,3	;volatile
  5324  05A4  0008               	return
  5325  05A5                     __end_of_I2C1_Setting:	
  5326                           
  5327                           	psect	text22
  5328  0761                     __ptext22:	
  5329 ;; *************** function _I2C1_PinInit *****************
  5330 ;; Defined at:
  5331 ;;		line 9 in file "I2C1.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5345 ;;      Params:         0       0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0
  5347 ;;      Temps:          1       0       0       0       0       0
  5348 ;;      Totals:         1       0       0       0       0       0
  5349 ;;Total ram usage:        1 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    3
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_I2C1_Setting
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           
  5360                           ;psect for function _I2C1_PinInit
  5361  0761                     _I2C1_PinInit:	
  5362                           
  5363                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  5364                           
  5365                           ;incstack = 0
  5366                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  5367  0761  3012               	movlw	18
  5368  0762  00F2               	movwf	??_I2C1_PinInit
  5369  0763  0872               	movf	??_I2C1_PinInit,w
  5370  0764  0021               	movlb	1	; select bank1
  5371  0765  048D               	iorwf	13,f	;volatile
  5372                           
  5373                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  5374  0766  30ED               	movlw	237
  5375  0767  00F2               	movwf	??_I2C1_PinInit
  5376  0768  0872               	movf	??_I2C1_PinInit,w
  5377  0769  0023               	movlb	3	; select bank3
  5378  076A  058D               	andwf	13,f	;volatile
  5379  076B  0008               	return
  5380  076C                     __end_of_I2C1_PinInit:	
  5381                           
  5382                           	psect	text23
  5383  0685                     __ptext23:	
  5384 ;; *************** function _Buzer_Init *****************
  5385 ;; Defined at:
  5386 ;;		line 9 in file "Buzer.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5400 ;;      Params:         0       0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0
  5402 ;;      Temps:          1       0       0       0       0       0
  5403 ;;      Totals:         1       0       0       0       0       0
  5404 ;;Total ram usage:        1 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    3
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           
  5415                           ;psect for function _Buzer_Init
  5416  0685                     _Buzer_Init:	
  5417                           
  5418                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  5419                           
  5420                           ;incstack = 0
  5421                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  5422  0685  307F               	movlw	127
  5423  0686  00F2               	movwf	??_Buzer_Init
  5424  0687  0872               	movf	??_Buzer_Init,w
  5425  0688  0021               	movlb	1	; select bank1
  5426  0689  058C               	andwf	12,f	;volatile
  5427                           
  5428                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  5429  068A  307F               	movlw	127
  5430  068B  00F2               	movwf	??_Buzer_Init
  5431  068C  0872               	movf	??_Buzer_Init,w
  5432  068D  0023               	movlb	3	; select bank3
  5433  068E  058C               	andwf	12,f	;volatile
  5434                           
  5435                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  5436  068F  0022               	movlb	2	; select bank2
  5437  0690  159D               	bsf	29,3	;volatile
  5438                           
  5439                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  5440  0691  0020               	movlb	0	; select bank0
  5441  0692  081C               	movf	28,w	;volatile
  5442                           
  5443                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  5444  0693  149C               	bsf	28,1	;volatile
  5445                           
  5446                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  5447  0694  151C               	bsf	28,2	;volatile
  5448                           
  5449                           ;Buzer.c: 19: TMR2 = 0x00;
  5450  0695  019A               	clrf	26	;volatile
  5451                           
  5452                           ;Buzer.c: 20: PR2 = 0xFF;
  5453  0696  30FF               	movlw	255
  5454  0697  009B               	movwf	27	;volatile
  5455                           
  5456                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  5457  0698  303F               	movlw	63
  5458  0699  00F2               	movwf	??_Buzer_Init
  5459  069A  0872               	movf	??_Buzer_Init,w
  5460  069B  0025               	movlb	5	; select bank5
  5461  069C  059A               	andwf	26,f	;volatile
  5462                           
  5463                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  5464  069D  300C               	movlw	12
  5465  069E  00F2               	movwf	??_Buzer_Init
  5466  069F  0872               	movf	??_Buzer_Init,w
  5467  06A0  049A               	iorwf	26,f	;volatile
  5468                           
  5469                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  5470  06A1  30F3               	movlw	243
  5471  06A2  00F2               	movwf	??_Buzer_Init
  5472  06A3  0872               	movf	??_Buzer_Init,w
  5473  06A4  059E               	andwf	30,f	;volatile
  5474                           
  5475                           ;Buzer.c: 26: CCPR2L = 0x00;
  5476  06A5  0198               	clrf	24	;volatile
  5477  06A6  0008               	return
  5478  06A7                     __end_of_Buzer_Init:	
  5479                           
  5480                           	psect	text24
  5481  070F                     __ptext24:	
  5482 ;; *************** function _Basic_Init *****************
  5483 ;; Defined at:
  5484 ;;		line 38 in file "main.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      char 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5498 ;;      Params:         0       0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0
  5501 ;;      Totals:         0       0       0       0       0       0
  5502 ;;Total ram usage:        0 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    3
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _Basic_Init
  5514  070F                     _Basic_Init:	
  5515                           
  5516                           ;main.c: 40: OSCCON = 0xF0;
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _Basic_Init: [wreg+status,2]
  5520  070F  30F0               	movlw	240
  5521  0710  0021               	movlb	1	; select bank1
  5522  0711  0099               	movwf	25	;volatile
  5523                           
  5524                           ;main.c: 44: TRISA = 0x07;
  5525  0712  3007               	movlw	7
  5526  0713  008C               	movwf	12	;volatile
  5527                           
  5528                           ;main.c: 45: ANSELA = 0x07;
  5529  0714  3007               	movlw	7
  5530  0715  0023               	movlb	3	; select bank3
  5531  0716  008C               	movwf	12	;volatile
  5532                           
  5533                           ;main.c: 47: TRISB = 0x40;
  5534  0717  3040               	movlw	64
  5535  0718  0021               	movlb	1	; select bank1
  5536  0719  008D               	movwf	13	;volatile
  5537                           
  5538                           ;main.c: 48: ANSELB = 0x00;
  5539  071A  0023               	movlb	3	; select bank3
  5540  071B  018D               	clrf	13	;volatile
  5541                           
  5542                           ;main.c: 50: APFCON0 = 0x08;
  5543  071C  3008               	movlw	8
  5544  071D  0022               	movlb	2	; select bank2
  5545  071E  009D               	movwf	29	;volatile
  5546                           
  5547                           ;main.c: 51: APFCON1 = 0x00;
  5548  071F  019E               	clrf	30	;volatile
  5549                           
  5550                           ;main.c: 53: PORTA = 0x00;
  5551  0720  0020               	movlb	0	; select bank0
  5552  0721  018C               	clrf	12	;volatile
  5553                           
  5554                           ;main.c: 54: PORTB = 0x00;
  5555  0722  018D               	clrf	13	;volatile
  5556  0723  0008               	return
  5557  0724                     __end_of_Basic_Init:	
  5558                           ;main.c: 56: return 0;
  5559                           ;	Return value of _Basic_Init is never used
  5560                           
  5561                           
  5562                           	psect	intentry
  5563  0004                     __pintentry:	
  5564 ;; *************** function _Handler *****************
  5565 ;; Defined at:
  5566 ;;		line 59 in file "main.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5580 ;;      Params:         0       0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0
  5582 ;;      Temps:          1       0       0       0       0       0
  5583 ;;      Totals:         1       0       0       0       0       0
  5584 ;;Total ram usage:        1 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    2
  5587 ;; This function calls:
  5588 ;;		_I2C_CommonInterrupt
  5589 ;;		_Timer1_Handler
  5590 ;; This function is called by:
  5591 ;;		Interrupt level 1
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595  0004                     _Handler:	
  5596                           
  5597                           ;incstack = 0
  5598  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5599                           
  5600                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5601  0005  3180               	pagesel	$
  5602  0006  0020               	movlb	0	; select bank0
  5603  0007  087F               	movf	127,w
  5604  0008  00F1               	movwf	??_Handler
  5605                           
  5606                           ;main.c: 61: Timer1_Handler();
  5607  0009  3187  276C  3180   	fcall	_Timer1_Handler
  5608                           
  5609                           ;main.c: 62: I2C_CommonInterrupt();
  5610  000C  3187  2781         	fcall	_I2C_CommonInterrupt
  5611  000E  0871               	movf	??_Handler,w
  5612  000F  0020               	movlb	0	; select bank0
  5613  0010  00FF               	movwf	127
  5614  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5615  0012  0009               	retfie
  5616  0013                     __end_of_Handler:	
  5617                           
  5618                           	psect	text26
  5619  076C                     __ptext26:	
  5620 ;; *************** function _Timer1_Handler *****************
  5621 ;; Defined at:
  5622 ;;		line 33 in file "Timer1.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      void 
  5629 ;; Registers used:
  5630 ;;		None
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5636 ;;      Params:         0       0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0
  5639 ;;      Totals:         0       0       0       0       0       0
  5640 ;;Total ram usage:        0 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_Handler
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function _Timer1_Handler
  5651  076C                     _Timer1_Handler:	
  5652                           
  5653                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  5654                           
  5655                           ;incstack = 0
  5656                           ; Regs used in _Timer1_Handler: []
  5657  076C  0020               	movlb	0	; select bank0
  5658  076D  1C11               	btfss	17,0	;volatile
  5659  076E  0008               	return
  5660  076F  0021               	movlb	1	; select bank1
  5661  0770  1C11               	btfss	17,0	;volatile
  5662  0771  0008               	return
  5663                           
  5664                           ;Timer1.c: 36: {
  5665                           ;Timer1.c: 37: TMR1IF = 0;
  5666  0772  0020               	movlb	0	; select bank0
  5667  0773  1011               	bcf	17,0	;volatile
  5668  0774  0008               	return
  5669  0775                     __end_of_Timer1_Handler:	
  5670                           
  5671                           	psect	text27
  5672  0781                     __ptext27:	
  5673 ;; *************** function _I2C_CommonInterrupt *****************
  5674 ;; Defined at:
  5675 ;;		line 58 in file "I2C_Common.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5689 ;;      Params:         0       0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0
  5692 ;;      Totals:         0       0       0       0       0       0
  5693 ;;Total ram usage:        0 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    1
  5696 ;; This function calls:
  5697 ;;		_I2C1_Interrupt
  5698 ;;		_I2C2_Interrupt
  5699 ;; This function is called by:
  5700 ;;		_Handler
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function _I2C_CommonInterrupt
  5706  0781                     _I2C_CommonInterrupt:	
  5707                           
  5708                           ;I2C_Common.c: 60: I2C1_Interrupt();
  5709                           
  5710                           ;incstack = 0
  5711                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5712  0781  3184  240F  3187   	fcall	_I2C1_Interrupt
  5713                           
  5714                           ;I2C_Common.c: 61: I2C2_Interrupt();
  5715  0784  3183  23BB         	fcall	_I2C2_Interrupt
  5716  0786  0008               	return
  5717  0787                     __end_of_I2C_CommonInterrupt:	
  5718                           
  5719                           	psect	text28
  5720  03BB                     __ptext28:	
  5721 ;; *************** function _I2C2_Interrupt *****************
  5722 ;; Defined at:
  5723 ;;		line 152 in file "I2C2.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;		None
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5737 ;;      Params:         0       0       0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0
  5739 ;;      Temps:          1       0       0       0       0       0
  5740 ;;      Totals:         1       0       0       0       0       0
  5741 ;;Total ram usage:        1 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_I2C_CommonInterrupt
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _I2C2_Interrupt
  5752  03BB                     _I2C2_Interrupt:	
  5753                           
  5754                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5758  03BB  0020               	movlb	0	; select bank0
  5759  03BC  1C14               	btfss	20,0	;volatile
  5760  03BD  2C07               	goto	i1l2849
  5761  03BE  0021               	movlb	1	; select bank1
  5762  03BF  1C14               	btfss	20,0	;volatile
  5763  03C0  2C07               	goto	i1l2849
  5764                           
  5765                           ;I2C2.c: 155: {
  5766                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  5767  03C1  0024               	movlb	4	; select bank4
  5768  03C2  1E9C               	btfss	28,5	;volatile
  5769  03C3  2BDE               	goto	i1l593
  5770                           
  5771                           ;I2C2.c: 157: {
  5772                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  5773  03C4  1D1C               	btfss	28,2	;volatile
  5774  03C5  2BD1               	goto	i1l2825
  5775                           
  5776                           ;I2C2.c: 159: {
  5777                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  5778  03C6  1B1E               	btfsc	30,6	;volatile
  5779  03C7  2C05               	goto	i1l2847
  5780  03C8                     i1l2817:	
  5781                           ;I2C2.c: 161: {
  5782                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5783                           
  5784  03C8  081C               	movf	28,w	;volatile
  5785  03C9  3901               	andlw	1
  5786  03CA  00F0               	movwf	??_I2C2_Interrupt
  5787  03CB  0E1D               	swapf	29,w	;volatile
  5788  03CC  3901               	andlw	1
  5789  03CD  0470               	iorwf	??_I2C2_Interrupt,w
  5790  03CE  1D03               	btfss	3,2
  5791  03CF  2BC8               	goto	i1l2817
  5792  03D0  2BF1               	goto	L10
  5793  03D1                     i1l2825:	
  5794                           ;I2C2.c: 166: }
  5795                           ;I2C2.c: 167: }
  5796                           
  5797                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  5798                           
  5799                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  5800                           
  5801                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  5802                           
  5803                           
  5804                           ;I2C2.c: 168: else
  5805                           ;I2C2.c: 169: {
  5806                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  5807  03D1  0819               	movf	25,w	;volatile
  5808  03D2  00F0               	movwf	??_I2C2_Interrupt
  5809  03D3  0021               	movlb	1	; select bank1
  5810  03D4  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  5811  03D5  0086               	movwf	6
  5812  03D6  0187               	clrf	7
  5813  03D7  0870               	movf	??_I2C2_Interrupt,w
  5814  03D8  0081               	movwf	1
  5815                           
  5816                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  5817  03D9  3001               	movlw	1
  5818  03DA  00F0               	movwf	??_I2C2_Interrupt
  5819  03DB  0870               	movf	??_I2C2_Interrupt,w
  5820  03DC  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  5821  03DD  2C03               	goto	i1l2845
  5822  03DE                     i1l593:	
  5823                           ;I2C2.c: 173: }
  5824                           ;I2C2.c: 174: }
  5825                           
  5826                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  5827                           
  5828                           
  5829                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  5830  03DE  1A9C               	btfsc	28,5	;volatile
  5831  03DF  2C05               	goto	i1l2847
  5832                           
  5833                           ;I2C2.c: 176: {
  5834                           ;I2C2.c: 177: SSP2BUF;
  5835  03E0  0819               	movf	25,w	;volatile
  5836                           
  5837                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  5838  03E1  1D1C               	btfss	28,2	;volatile
  5839  03E2  2BFE               	goto	i1l2843
  5840                           
  5841                           ;I2C2.c: 180: {
  5842                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  5843  03E3  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  5844  03E4  00F0               	movwf	??_I2C2_Interrupt
  5845  03E5  0870               	movf	??_I2C2_Interrupt,w
  5846  03E6  0021               	movlb	1	; select bank1
  5847  03E7  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  5848  03E8                     i1l2837:	
  5849                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5850                           
  5851  03E8  0024               	movlb	4	; select bank4
  5852  03E9  081C               	movf	28,w	;volatile
  5853  03EA  3901               	andlw	1
  5854  03EB  00F0               	movwf	??_I2C2_Interrupt
  5855  03EC  0E1D               	swapf	29,w	;volatile
  5856  03ED  3901               	andlw	1
  5857  03EE  0470               	iorwf	??_I2C2_Interrupt,w
  5858  03EF  1D03               	btfss	3,2
  5859  03F0  2BE8               	goto	i1l2837
  5860  03F1                     L10:	
  5861                           
  5862                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  5863  03F1  0021               	movlb	1	; select bank1
  5864  03F2  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  5865  03F3  0086               	movwf	6
  5866  03F4  0187               	clrf	7
  5867  03F5  0801               	movf	1,w
  5868  03F6  0024               	movlb	4	; select bank4
  5869  03F7  0099               	movwf	25	;volatile
  5870                           
  5871                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  5872  03F8  3001               	movlw	1
  5873  03F9  00F0               	movwf	??_I2C2_Interrupt
  5874  03FA  0870               	movf	??_I2C2_Interrupt,w
  5875  03FB  0021               	movlb	1	; select bank1
  5876  03FC  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  5877                           
  5878                           ;I2C2.c: 186: }
  5879  03FD  2C03               	goto	i1l2845
  5880  03FE                     i1l2843:	
  5881                           
  5882                           ;I2C2.c: 187: else
  5883                           ;I2C2.c: 188: {
  5884                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  5885  03FE  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  5886  03FF  00F0               	movwf	??_I2C2_Interrupt
  5887  0400  0870               	movf	??_I2C2_Interrupt,w
  5888  0401  0021               	movlb	1	; select bank1
  5889  0402  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  5890  0403                     i1l2845:	
  5891                           
  5892                           ;I2C2.c: 190: }
  5893                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  5894  0403  0024               	movlb	4	; select bank4
  5895  0404  161D               	bsf	29,4	;volatile
  5896  0405                     i1l2847:	
  5897                           
  5898                           ;I2C2.c: 192: }
  5899                           ;I2C2.c: 193: SSP2IF = 0;
  5900  0405  0020               	movlb	0	; select bank0
  5901  0406  1014               	bcf	20,0	;volatile
  5902  0407                     i1l2849:	
  5903                           
  5904                           ;I2C2.c: 194: }
  5905                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  5906  0407  0021               	movlb	1	; select bank1
  5907  0408  1C94               	btfss	20,1	;volatile
  5908  0409  0008               	return
  5909  040A  0020               	movlb	0	; select bank0
  5910  040B  1C94               	btfss	20,1	;volatile
  5911  040C  0008               	return
  5912                           
  5913                           ;I2C2.c: 197: BCL2IF = 0;
  5914  040D  1094               	bcf	20,1	;volatile
  5915  040E  0008               	return
  5916  040F                     __end_of_I2C2_Interrupt:	
  5917                           
  5918                           	psect	text29
  5919  040F                     __ptext29:	
  5920 ;; *************** function _I2C1_Interrupt *****************
  5921 ;; Defined at:
  5922 ;;		line 152 in file "I2C1.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5936 ;;      Params:         0       0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0
  5938 ;;      Temps:          1       0       0       0       0       0
  5939 ;;      Totals:         1       0       0       0       0       0
  5940 ;;Total ram usage:        1 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_I2C_CommonInterrupt
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function _I2C1_Interrupt
  5951  040F                     _I2C1_Interrupt:	
  5952                           
  5953                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5957  040F  0020               	movlb	0	; select bank0
  5958  0410  1D91               	btfss	17,3	;volatile
  5959  0411  2C5B               	goto	i1l2799
  5960  0412  0021               	movlb	1	; select bank1
  5961  0413  1D91               	btfss	17,3	;volatile
  5962  0414  2C5B               	goto	i1l2799
  5963                           
  5964                           ;I2C1.c: 155: {
  5965                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  5966  0415  0024               	movlb	4	; select bank4
  5967  0416  1E94               	btfss	20,5	;volatile
  5968  0417  2C32               	goto	i1l456
  5969                           
  5970                           ;I2C1.c: 157: {
  5971                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  5972  0418  1D14               	btfss	20,2	;volatile
  5973  0419  2C25               	goto	i1l2775
  5974                           
  5975                           ;I2C1.c: 159: {
  5976                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  5977  041A  1B16               	btfsc	22,6	;volatile
  5978  041B  2C59               	goto	i1l2797
  5979  041C                     i1l2767:	
  5980                           ;I2C1.c: 161: {
  5981                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  5982                           
  5983  041C  0814               	movf	20,w	;volatile
  5984  041D  3901               	andlw	1
  5985  041E  00F0               	movwf	??_I2C1_Interrupt
  5986  041F  0E15               	swapf	21,w	;volatile
  5987  0420  3901               	andlw	1
  5988  0421  0470               	iorwf	??_I2C1_Interrupt,w
  5989  0422  1D03               	btfss	3,2
  5990  0423  2C1C               	goto	i1l2767
  5991  0424  2C45               	goto	L11
  5992  0425                     i1l2775:	
  5993                           ;I2C1.c: 166: }
  5994                           ;I2C1.c: 167: }
  5995                           
  5996                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  5997                           
  5998                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  5999                           
  6000                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6001                           
  6002                           
  6003                           ;I2C1.c: 168: else
  6004                           ;I2C1.c: 169: {
  6005                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  6006  0425  0811               	movf	17,w	;volatile
  6007  0426  00F0               	movwf	??_I2C1_Interrupt
  6008  0427  0021               	movlb	1	; select bank1
  6009  0428  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  6010  0429  0086               	movwf	6
  6011  042A  0187               	clrf	7
  6012  042B  0870               	movf	??_I2C1_Interrupt,w
  6013  042C  0081               	movwf	1
  6014                           
  6015                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  6016  042D  3001               	movlw	1
  6017  042E  00F0               	movwf	??_I2C1_Interrupt
  6018  042F  0870               	movf	??_I2C1_Interrupt,w
  6019  0430  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  6020  0431  2C57               	goto	i1l2795
  6021  0432                     i1l456:	
  6022                           ;I2C1.c: 173: }
  6023                           ;I2C1.c: 174: }
  6024                           
  6025                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  6026                           
  6027                           
  6028                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  6029  0432  1A94               	btfsc	20,5	;volatile
  6030  0433  2C59               	goto	i1l2797
  6031                           
  6032                           ;I2C1.c: 176: {
  6033                           ;I2C1.c: 177: SSP1BUF;
  6034  0434  0811               	movf	17,w	;volatile
  6035                           
  6036                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6037  0435  1D14               	btfss	20,2	;volatile
  6038  0436  2C52               	goto	i1l2793
  6039                           
  6040                           ;I2C1.c: 180: {
  6041                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6042  0437  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6043  0438  00F0               	movwf	??_I2C1_Interrupt
  6044  0439  0870               	movf	??_I2C1_Interrupt,w
  6045  043A  0021               	movlb	1	; select bank1
  6046  043B  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6047  043C                     i1l2787:	
  6048                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6049                           
  6050  043C  0024               	movlb	4	; select bank4
  6051  043D  0814               	movf	20,w	;volatile
  6052  043E  3901               	andlw	1
  6053  043F  00F0               	movwf	??_I2C1_Interrupt
  6054  0440  0E15               	swapf	21,w	;volatile
  6055  0441  3901               	andlw	1
  6056  0442  0470               	iorwf	??_I2C1_Interrupt,w
  6057  0443  1D03               	btfss	3,2
  6058  0444  2C3C               	goto	i1l2787
  6059  0445                     L11:	
  6060                           
  6061                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6062  0445  0021               	movlb	1	; select bank1
  6063  0446  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6064  0447  0086               	movwf	6
  6065  0448  0187               	clrf	7
  6066  0449  0801               	movf	1,w
  6067  044A  0024               	movlb	4	; select bank4
  6068  044B  0091               	movwf	17	;volatile
  6069                           
  6070                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6071  044C  3001               	movlw	1
  6072  044D  00F0               	movwf	??_I2C1_Interrupt
  6073  044E  0870               	movf	??_I2C1_Interrupt,w
  6074  044F  0021               	movlb	1	; select bank1
  6075  0450  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6076                           
  6077                           ;I2C1.c: 186: }
  6078  0451  2C57               	goto	i1l2795
  6079  0452                     i1l2793:	
  6080                           
  6081                           ;I2C1.c: 187: else
  6082                           ;I2C1.c: 188: {
  6083                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6084  0452  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6085  0453  00F0               	movwf	??_I2C1_Interrupt
  6086  0454  0870               	movf	??_I2C1_Interrupt,w
  6087  0455  0021               	movlb	1	; select bank1
  6088  0456  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6089  0457                     i1l2795:	
  6090                           
  6091                           ;I2C1.c: 190: }
  6092                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6093  0457  0024               	movlb	4	; select bank4
  6094  0458  1615               	bsf	21,4	;volatile
  6095  0459                     i1l2797:	
  6096                           
  6097                           ;I2C1.c: 192: }
  6098                           ;I2C1.c: 193: SSP1IF = 0;
  6099  0459  0020               	movlb	0	; select bank0
  6100  045A  1191               	bcf	17,3	;volatile
  6101  045B                     i1l2799:	
  6102                           
  6103                           ;I2C1.c: 194: }
  6104                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6105  045B  0021               	movlb	1	; select bank1
  6106  045C  1D92               	btfss	18,3	;volatile
  6107  045D  0008               	return
  6108  045E  0020               	movlb	0	; select bank0
  6109  045F  1D92               	btfss	18,3	;volatile
  6110  0460  0008               	return
  6111                           
  6112                           ;I2C1.c: 197: BCL1IF = 0;
  6113  0461  1192               	bcf	18,3	;volatile
  6114  0462  0008               	return
  6115  0463                     __end_of_I2C1_Interrupt:	
  6116  007E                     btemp	set	126	;btemp
  6117  007E                     int$flags	set	126
  6118  007E                     wtemp0	set	126


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     63      73
    BANK1            80      0      38
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S285$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S285$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[13]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[13]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8082
                                             61 BANK0      2     2      0
                         _Basic_Init
                         _Buzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    4695
                                             53 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4215
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
                     _Timer1_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3F      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      26       8       47.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      7B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 14 12:11:18 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l142 00A5                           l127 0029  
                         l160 0140                           l510 053F                           l183 01F7  
                         l408 0322                           l514 0566                           l373 0577  
                         l390 02E8                           l527 026A                           l536 028D  
                         l377 059E                           l545 02A4                           l637 0682  
                         l399 030B                           l815 06CE                           _GIE 005F  
                         _PR2 001B                  __CFG_CPD$OFF 0000                  __CFG_BORV$LO 0000  
                         wreg 0009                    _Basic_Init 070F                  __CFG_LVP$OFF 0000  
             __end_of_LCD_Put 0781                          l2331 05EA                          l2353 0725  
                        l3331 0596                          l3403 0551                          l2339 05F9  
                        l3317 0589                          l3309 057F                          l3413 055C  
                        l3421 0256                          l3327 0594                          l3335 02D4  
                        l3423 0260                          l3503 0042                          l3417 055E  
                        l3361 0318                          l3337 02DE                          l3433 027D  
                        l2561 04AD                          l2529 06C8                          l3371 0327  
                        l3347 02FB                          l3443 0275                          l2547 0474  
                        l3373 033E                          l3381 034E                          l3357 02F3  
                        l3461 02C5                          l3445 0279                          l2557 04A2  
                        l2549 0482                          l3621 01DD                          l3605 0199  
                        l3533 0095                          l3525 006B                          l3517 0057  
                        l3375 0343                          l3359 02F7                          l3447 029A  
                        l3607 019B                          l3527 006E                          l3457 02A9  
                        l3465 02C7                          l3641 0216                          l3633 0205  
                        l3617 01D5                          l3561 00DB                          l3553 00C0  
                        l3545 00B2                          l3537 009D                          l3395 0547  
                        l3379 0345                          l3459 02C0                          l3467 02D0  
                        l3483 04E5                          l3651 023E                          l3643 021A  
                        l3571 00F5                          l3563 00DF                          l3477 04BF  
                        l3653 0242                          l3581 011E                          l3573 010A  
                        l3709 05BD                          l3663 067A                          l3479 04CD  
                        l3487 04F0                          l3647 022C                          l3639 020D  
                        l3583 0123                          l3575 0117                          l3567 00F1  
                        l3559 00CD                          l3657 065E                          l3673 0629  
                        l3593 015A                          l3577 011A                          l3659 066C  
                        l3675 0631                          l3667 060B                          l3595 016F  
                        l3579 011C                          l3587 0128                          l3669 0618  
                        l3597 0178                          l3599 0188                          STR_1 0633  
                        STR_2 065A                          STR_3 0640                          STR_4 064E  
                        STR_5 0654                          STR_6 0647                          u2015 06CF  
                        u2025 06D4                          u2055 0477                          u2075 0483  
                        u2085 0497                          u2095 04A3                          u3415 04C2  
                        u1675 0501                          u3435 04DB                          u3445 04E6  
                        u2675 0700                          u3715 022A                          _PEIE 005E  
                        u3735 0250                          u3807 05C6                          u3817 0358  
                        u3585 00EF                          u3827 0371                          u3595 0103  
                        u3837 0384                          u3847 0398                          u3857 0750  
                        u3867 070B                          u3877 04FB                          _TMR1 0016  
                        _TMR2 001A               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _main 05A5              __end_of_I2C_Init 0685                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074              ??_I2C1_Interrupt 0070  
                        start 0013                 __CFG_IESO$OFF 0000               __end_of_Handler 0013  
               _LCD_WriteData 04F9                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
    __end_of_LCD_DisplayClear 0756         __size_of_I2C_Transmit 002B              __end_of_LCD_Init 03BB  
               __CFG_PLLEN$ON 0000                   LCD_Put@word 0075                         ?_main 0070  
               __CFG_WDTE$OFF 0000               __end_of___lldiv 04B6                         _T1CON 0018  
             __end_of___llmod 04F9                         _T2CON 001C                         _LATA3 0863  
                       _LATA4 0864                         _LATA6 0866                         i1l456 0432  
                       i1l593 03DE                         _PORTA 000C                         _PORTB 000D  
                       _TRISA 008C                         _TRISB 008D             I2C2_Transmit@size 0073  
               __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000                         _xputc 05DB  
                       _xputs 0724                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_xprintf 0747                  _I2C_Transmit 0608  
          _LCD_CursorPosition 06FA                ?_LCD_WriteData 0070              ??_DAC_Initialize 0028  
             __initialization 0015                    _Buzer_Init 0685                  __end_of_main 05DB  
         ?_LCD_CursorPosition 0075                        ??_main 005D                     ??_LCD_Put 0076  
                 ?_Basic_Init 0070                        _BCL1IE 0493                        _BCL1IF 0093  
                      _BCL2IE 04A1                        _BCL2IF 00A1                _Timer1_Handler 076C  
            ___llmod@dividend 0076                        _CCPR2L 0298          ??_LCD_CursorPosition 0076  
                      _ANSELA 018C                        _ANSELB 018D                        _T1GCON 0019  
                      ?_xputc 0070                        ?_xputs 0070                        i1l2817 03C8  
                      i1l2825 03D1                        i1l2843 03FE                        i1l2845 0403  
                      i1l2837 03E8                        i1l2767 041C                        i1l2775 0425  
                      i1l2847 0405                        i1l2793 0452                        i1l2849 0407  
                      i1l2795 0457                        i1l2787 043C                        i1l2797 0459  
                      i1l2799 045B            I2C2_Transmit@i_555 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _TMR1IE 0488                        _TMR1IF 0088  
                   ??_Handler 0071                        _TMR1ON 00C0                        _SSP1IE 048B  
                      _SSP1IF 008B                        _SSP2IE 04A0                        _SSP2IF 00A0  
               ??_Timer1_Init 0072                        ___wmul 06C6                     ??___lldiv 007A  
                   ??___llmod 007A                        _outptr 007B              I2C_Transmit@I2Cx 0026  
                   ?_I2C_Init 0077        __end_of_Timer1_Handler 0775              I2C_Transmit@size 0022  
                      xputc@c 0077                     ??_xprintf 005B       __end_of__initialization 0025  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0072              __end_of_xvprintf 0253  
                  _VoltageReg 0066                __pcstackCOMMON 0070                   ?_Buzer_Init 0070  
         __size_of_Basic_Init 0015           __end_of_Timer1_Init 06FA                 __end_of_xputc 0608  
               __end_of_xputs 0737                    ??_I2C_Init 0020               ?_Timer1_Handler 0070  
         I2C1_Transmit@result 0079                       ??_xputc 0076                       ??_xputs 0078  
                  __pbssBANK0 005F                    __pbssBANK1 00A0                    ??_LCD_Init 0076  
                I2C_Init@I2Cx 007A   __end_of_I2C_CommonInterrupt 0787                  I2C_Init@mode 0078  
                  __pmaintext 05A5                       ?___wmul 0072                    __pintentry 0004  
                     _CCP2CON 029A             ?_LCD_DisplayClear 0070                       _APFCON0 011D  
                     _APFCON1 011E                       _CCPTMRS 029E            ??_LCD_DisplayClear 0075  
                     _LCD_Put 077B                  _xvprintf$180 003C                  _xvprintf$181 0040  
                _xvprintf$182 0042                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           __size_of_Buzer_Init 0022           I2C2_Transmit@result 0079  
                     _Handler 0004         __end_of_I2C1_Transmit 0350         __end_of_I2C2_Transmit 02D2  
                 _Timer1_Init 06E1                       ___lldiv 0463               __size_of___wmul 001B  
                     ___llmod 04B6               __CFG_STVREN$OFF 0000                       __ptext1 0737  
                     __ptext2 0029                       __ptext3 0724                       __ptext4 05DB  
                     __ptext5 077B                       __ptext6 06C6                       __ptext7 04B6  
                     __ptext8 0463                       __ptext9 06E1                     ?_xvprintf 0025  
                ??_Basic_Init 0072                       clrloop0 0776          end_of_initialization 0025  
                     _xprintf 0737                 ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070  
                 _I2C1_Config 00B3                   _I2C2_Config 00A0                 ?_I2C1_Setting 0073  
             ___lldiv@divisor 0072                 ?_I2C2_Setting 0073               ___lldiv@counter 0024  
           I2C_Transmit@pData 0021            __end_of_Basic_Init 0724                  __pstringtext 0633  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                    ??_xvprintf 0028  
     __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 0029           I2C1_Setting@address 0076  
 __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072                ??_I2C2_PinInit 0072  
              ??_I2C1_Setting 0075                ??_I2C2_Setting 0075             __size_of_LCD_Init 006B  
                ??_Buzer_Init 0072                __end_of___wmul 06E1                     _ConfigReg 0068  
            ??_Timer1_Handler 0070       __size_of_DAC_Initialize 001F           start_initialization 0015  
        I2C1_Transmit@address 0076                     _MemoryReg 005F            __end_of_Buzer_Init 06A7  
         I2C2_Setting@address 0076               ___llmod@divisor 0072               ___llmod@counter 0020  
        LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075         __end_of_LCD_WriteData 0535  
                    ??___wmul 0076             I2C1_Setting@Speed 0074                      ?_LCD_Put 0075  
                 __pbssCOMMON 007B                     ___latbits 0001                 __pcstackBANK0 0020  
          I2C1_Transmit@i_411 0078            I2C1_Transmit@pData 0072     __size_of_LCD_DisplayClear 000F  
             I2C_Init@address 0077                      ?_Handler 0070                 ?_I2C_Transmit 0020  
               I2C_Init@Speed 0079                  ?_Timer1_Init 0070                      ?___lldiv 0072  
                    ?___llmod 0072                _I2C1_Interrupt 040F          __end_of_I2C1_PinInit 076C  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0761          __end_of_I2C1_Setting 05A5  
                    _I2C_Init 065C          __end_of_I2C2_Setting 056D                _I2C2_Interrupt 03BB  
           __size_of_xvprintf 022A                      ?_xprintf 0055                __size_of_xputc 002D  
              __size_of_xputs 0013                      _LCD_Init 0350                ___wmul@product 0076  
              ??_I2C_Transmit 0023                     clear_ram0 0775        __end_of_I2C1_Interrupt 0463  
                    _SSP1CON1 0215                      _SSP1CON2 0216          I2C2_Transmit@address 0076  
                    _SSP2CON1 021D                      _SSP2CON2 021E                      _SSP1STAT 0214  
                    _SSP2STAT 021C             ___wmul@multiplier 0072                _DAC_Initialize 06A7  
      __end_of_I2C2_Interrupt 040F        __size_of_I2C1_Transmit 007E                     _xfunc_out 0064  
            __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007F              __size_of_Handler 000F  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 06C6              __size_of___lldiv 0053  
            __size_of___llmod 0043              I2C1_Setting@mode 0073            LCD_WriteData@point 0074  
             ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073    __end_of_LCD_CursorPosition 070F  
                    __ptext10 0350                      __ptext11 0747                      __ptext20 0756  
                    __ptext12 06FA                      __ptext21 056D                      __ptext13 04F9  
                    __ptext22 0761                      __ptext14 06A7                      __ptext23 0685  
                    __ptext15 0608                      __ptext24 070F                      __ptext16 0253  
                    __ptext17 02D2                      __ptext26 076C                      __ptext18 065C  
                    __ptext27 0781                      __ptext19 0535                      __ptext28 03BB  
                    __ptext29 040F                  _SSP1CON1bits 0215                  _SSP1CON2bits 0216  
            _LCD_DisplayClear 0747                  _SSP2CON1bits 021D                  _SSP2CON2bits 021E  
            __size_of_xprintf 0010                 __size_of_main 0036                 _I2C1_Transmit 02D2  
               _I2C2_Transmit 0253         __size_of_I2C1_PinInit 000B          __size_of_Timer1_Init 0019  
                    int$flags 007E         __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0020  
       __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0062         __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C  
        __end_of_I2C_Transmit 0633             I2C2_Setting@Speed 0074                      _xvprintf 0029  
                  xprintf@arp 005C                    xprintf@fmt 0055                      intlevel1 0000  
         _I2C_CommonInterrupt 0781                  _I2C1_PinInit 0761              ___lldiv@dividend 0076  
              ?_I2C1_Transmit 0072             __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0756  
                _I2C1_Setting 056D                ?_I2C2_Transmit 0072                  _I2C2_Setting 0535  
                 xvprintf@arp 0027                   xvprintf@fmt 0025            I2C_Transmit@result 0027  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070              ___lldiv@quotient 0020  
      __size_of_LCD_WriteData 003C       __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0077  
                    xputs@str 0079                     xvprintf@c 0054                     xvprintf@d 0053  
                   xvprintf@f 004F                     xvprintf@i 0051                     xvprintf@j 0049  
                   xvprintf@p 0044                     xvprintf@r 0045                     xvprintf@s 002C  
                   xvprintf@v 004B                     xvprintf@w 0047  
