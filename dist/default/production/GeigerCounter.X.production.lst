

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 21 00:37:35 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1827 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029E                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  0211                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0217                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021B                     	;# 
   312  021C                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029E                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  039A                     	;# 
   346  039C                     	;# 
   347  039D                     	;# 
   348  039E                     	;# 
   349  039F                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  000C                     _PORTA	set	12
   368  000D                     _PORTB	set	13
   369  0063                     _RA3	set	99
   370  0064                     _RA4	set	100
   371  008D                     _TRISB	set	141
   372  008C                     _TRISA	set	140
   373  0099                     _OSCCON	set	153
   374  011E                     _APFCON1	set	286
   375  011D                     _APFCON0	set	285
   376  018D                     _ANSELB	set	397
   377  018C                     _ANSELA	set	396
   378                           
   379                           	psect	stringtext
   380  0800                     __pstringtext:	
   381  0800                     STR_1:	
   382  0800  3448               	retlw	72	;'H'
   383  0801  3465               	retlw	101	;'e'
   384  0802  346C               	retlw	108	;'l'
   385  0803  346C               	retlw	108	;'l'
   386  0804  346F               	retlw	111	;'o'
   387  0805  3477               	retlw	119	;'w'
   388  0806  3420               	retlw	32	;' '
   389  0807  3457               	retlw	87	;'W'
   390  0808  346F               	retlw	111	;'o'
   391  0809  3472               	retlw	114	;'r'
   392  080A  346C               	retlw	108	;'l'
   393  080B  3464               	retlw	100	;'d'
   394  080C  3400               	retlw	0
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  07FD                     start_initialization:	
   400  07FD                     __initialization:	
   401  07FD                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  07FD                     __end_of__initialization:	
   405  07FD  0020               	movlb	0
   406  07FE  3187  2F02         	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	cstackCOMMON
   409  0070                     __pcstackCOMMON:	
   410  0070                     ?_LCD_DisplayClear:	
   411  0070                     ?_Basic_Init:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_Basic_Init:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_LCD_WriteData:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_LCD_WriteData:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_LCD_Init:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_putch:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	2
   435  0072                     LCD_WriteData@point:	
   436                           
   437                           ; 1 bytes @ 0x2
   438  0072                     	ds	1
   439  0073                     ??_LCD_DisplayClear:	
   440  0073                     ??_putch:	
   441                           ; 1 bytes @ 0x3
   442                           
   443  0073                     ?_LCD_CursorPosition:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     putch@c:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     LCD_CursorPosition@ty:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0073                     	ds	1
   455  0074                     ??_LCD_Init:	
   456  0074                     ??_LCD_CursorPosition:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0074                     ?_printf:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     printf@f:	
   463                           ; 2 bytes @ 0x4
   464                           
   465                           
   466                           ; 2 bytes @ 0x4
   467  0074                     	ds	1
   468  0075                     LCD_CursorPosition@tx:	
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     ??_printf:	
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	3
   476  0079                     printf@ap:	
   477                           
   478                           ; 1 bytes @ 0x9
   479  0079                     	ds	1
   480  007A                     printf@c:	
   481                           
   482                           ; 1 bytes @ 0xA
   483  007A                     	ds	1
   484  007B                     ??_main:	
   485                           
   486                           	psect	maintext
   487  0702                     __pmaintext:	
   488                           ; 1 bytes @ 0xB
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 12 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      char 
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : B1F/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   508 ;;      Params:         0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels required when called:    3
   514 ;; This function calls:
   515 ;;		_Basic_Init
   516 ;;		_LCD_CursorPosition
   517 ;;		_LCD_Init
   518 ;;		_printf
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _main
   526  0702                     _main:	
   527                           
   528                           ;main.c: 14: Basic_Init();
   529                           
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532  0702  3187  2715  3187   	fcall	_Basic_Init
   533                           
   534                           ;main.c: 15: LCD_Init();
   535  0705  3187  2794  3187   	fcall	_LCD_Init
   536  0708                     l72:	
   537                           ;main.c: 17: while(1)
   538                           
   539                           
   540                           ;main.c: 18: {
   541                           ;main.c: 19: LCD_CursorPosition(0,0);
   542  0708  01F3               	clrf	LCD_CursorPosition@ty
   543  0709  3000               	movlw	0
   544  070A  3187  272A  3187   	fcall	_LCD_CursorPosition
   545                           
   546                           ;main.c: 20: printf("Hellow World");
   547  070D  3000               	movlw	low (STR_1| (0+32768))
   548  070E  00F4               	movwf	printf@f
   549  070F  3088               	movlw	high (STR_1| (0+32768))
   550  0710  00F5               	movwf	printf@f+1
   551  0711  3187  273F  3187   	fcall	_printf
   552  0714  2F08               	goto	l72
   553  0715                     __end_of_main:	
   554                           ;main.c: 21: }
   555                           ;main.c: 22: return 0;
   556                           ;	Return value of _main is never used
   557                           
   558                           
   559                           	psect	text1
   560  073F                     __ptext1:	
   561 ;; *************** function _printf *****************
   562 ;; Defined at:
   563 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  f               2    4[COMMON] PTR const unsigned char 
   566 ;;		 -> STR_1(13), 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  tmpval          4    0        struct .
   569 ;;  cp              2    0        PTR const unsigned char 
   570 ;;  len             2    0        unsigned int 
   571 ;;  val             2    0        unsigned int 
   572 ;;  c               1   10[COMMON] char 
   573 ;;  ap              1    9[COMMON] PTR void [1]
   574 ;;		 -> ?_printf(2), 
   575 ;;  flag            1    0        unsigned char 
   576 ;;  prec            1    0        char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  2    4[COMMON] int 
   579 ;; Registers used:
   580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   586 ;;      Params:         2       0       0       0       0       0
   587 ;;      Locals:         2       0       0       0       0       0
   588 ;;      Temps:          3       0       0       0       0       0
   589 ;;      Totals:         7       0       0       0       0       0
   590 ;;Total ram usage:        7 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    2
   593 ;; This function calls:
   594 ;;		_putch
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _printf
   602  073F                     _printf:	
   603                           
   604                           ;doprnt.c: 466: va_list ap;
   605                           ;doprnt.c: 499: signed char c;
   606                           ;doprnt.c: 506: signed char prec;
   607                           ;doprnt.c: 508: unsigned char flag;
   608                           ;doprnt.c: 523: union {
   609                           ;doprnt.c: 524: unsigned long vd;
   610                           ;doprnt.c: 525: double integ;
   611                           ;doprnt.c: 526: } tmpval;
   612                           ;doprnt.c: 528: unsigned int val;
   613                           ;doprnt.c: 529: unsigned len;
   614                           ;doprnt.c: 530: const char * cp;
   615                           ;doprnt.c: 533: *ap = __va_start();
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   619  073F  3076               	movlw	(low ((?_printf| 0+2)))& (0+255)
   620  0740  00F6               	movwf	??_printf
   621  0741  0876               	movf	??_printf,w
   622  0742  00F9               	movwf	printf@ap
   623  0743                     l692:	
   624                           ;doprnt.c: 543: }
   625                           ;doprnt.c: 1422: {
   626                           
   627                           ;doprnt.c: 542: continue;
   628                           
   629                           ;doprnt.c: 536: while(c = *f++) {
   630                           
   631  0743  0875               	movf	printf@f+1,w
   632  0744  00F7               	movwf	??_printf+1
   633  0745  0874               	movf	printf@f,w
   634  0746  00F6               	movwf	??_printf
   635  0747  0AF4               	incf	printf@f,f
   636  0748  1903               	skipnz
   637  0749  0AF5               	incf	printf@f+1,f
   638  074A  0876               	movf	??_printf,w
   639  074B  0084               	movwf	4
   640  074C  0877               	movf	??_printf+1,w
   641  074D  0085               	movwf	5
   642  074E  0800               	movf	0,w	;code access
   643  074F  00F8               	movwf	??_printf+2
   644  0750  0878               	movf	??_printf+2,w
   645  0751  00FA               	movwf	printf@c
   646  0752  087A               	movf	printf@c,w
   647  0753  1903               	btfsc	3,2
   648  0754  0008               	return
   649                           
   650                           ;doprnt.c: 540: {
   651                           ;doprnt.c: 541: (putch(c) );
   652  0755  087A               	movf	printf@c,w
   653  0756  3186  26EC  3187   	fcall	_putch
   654  0759  2F43               	goto	l692
   655  075A                     __end_of_printf:	
   656                           ;doprnt.c: 1469: }
   657                           ;doprnt.c: 1533: }
   658                           ;doprnt.c: 1540: return 0;
   659                           ;	Return value of _printf is never used
   660                           
   661                           
   662                           	psect	text2
   663  06EC                     __ptext2:	
   664 ;; *************** function _putch *****************
   665 ;; Defined at:
   666 ;;		line 64 in file "LCD.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  c               1    wreg     unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  c               1    3[COMMON] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   680 ;;      Params:         0       0       0       0       0       0
   681 ;;      Locals:         1       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0
   683 ;;      Totals:         1       0       0       0       0       0
   684 ;;Total ram usage:        1 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    1
   687 ;; This function calls:
   688 ;;		_LCD_WriteData
   689 ;; This function is called by:
   690 ;;		_printf
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _putch
   696  06EC                     _putch:	
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   700                           ;putch@c stored from wreg
   701  06EC  00F3               	movwf	putch@c
   702                           
   703                           ;LCD.c: 66: RA3 = 1;
   704  06ED  0020               	movlb	0	; select bank0
   705  06EE  158C               	bsf	12,3	;volatile
   706                           
   707                           ;LCD.c: 67: LCD_WriteData(c);
   708  06EF  0873               	movf	putch@c,w
   709  06F0  3187  275A         	fcall	_LCD_WriteData
   710  06F2  0008               	return
   711  06F3                     __end_of_putch:	
   712                           
   713                           	psect	text3
   714  0794                     __ptext3:	
   715 ;; *************** function _LCD_Init *****************
   716 ;; Defined at:
   717 ;;		line 28 in file "LCD.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   731 ;;      Params:         0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0
   733 ;;      Temps:          2       0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		_LCD_DisplayClear
   740 ;;		_LCD_WriteData
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _LCD_Init
   748  0794                     _LCD_Init:	
   749                           
   750                           ;LCD.c: 30: RA3 = 0;
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   754  0794  0020               	movlb	0	; select bank0
   755  0795  118C               	bcf	12,3	;volatile
   756                           
   757                           ;LCD.c: 31: RA4 = 0;
   758  0796  120C               	bcf	12,4	;volatile
   759                           
   760                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
   761  0797  3002               	movlw	2
   762  0798  00F5               	movwf	??_LCD_Init+1
   763  0799  3038               	movlw	56
   764  079A  00F4               	movwf	??_LCD_Init
   765  079B  30AD               	movlw	173
   766  079C                     u107:	
   767  079C  0B89               	decfsz	9,f
   768  079D  2F9C               	goto	u107
   769  079E  0BF4               	decfsz	??_LCD_Init,f
   770  079F  2F9C               	goto	u107
   771  07A0  0BF5               	decfsz	??_LCD_Init+1,f
   772  07A1  2F9C               	goto	u107
   773  07A2  0000               	nop
   774                           
   775                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
   776  07A3  3003               	movlw	3
   777  07A4  0020               	movlb	0	; select bank0
   778  07A5  008D               	movwf	13	;volatile
   779                           
   780                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   781  07A6  160C               	bsf	12,4	;volatile
   782  07A7  3200               	nop2	;2 cycle nop
   783  07A8  3200               	nop2	;2 cycle nop
   784  07A9  3200               	nop2	;2 cycle nop
   785  07AA  3200               	nop2	;2 cycle nop
   786  07AB  0020               	movlb	0	; select bank0
   787  07AC  120C               	bcf	12,4	;volatile
   788  07AD  3200               	nop2	;2 cycle nop
   789  07AE  3200               	nop2	;2 cycle nop
   790  07AF  3200               	nop2	;2 cycle nop
   791  07B0  3200               	nop2	;2 cycle nop
   792                           
   793                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
   794  07B1  3034               	movlw	52
   795  07B2  00F4               	movwf	??_LCD_Init
   796  07B3  30F2               	movlw	242
   797  07B4                     u117:	
   798  07B4  0B89               	decfsz	9,f
   799  07B5  2FB4               	goto	u117
   800  07B6  0BF4               	decfsz	??_LCD_Init,f
   801  07B7  2FB4               	goto	u117
   802                           
   803                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   804  07B8  0020               	movlb	0	; select bank0
   805  07B9  160C               	bsf	12,4	;volatile
   806  07BA  3200               	nop2	;2 cycle nop
   807  07BB  3200               	nop2	;2 cycle nop
   808  07BC  3200               	nop2	;2 cycle nop
   809  07BD  3200               	nop2	;2 cycle nop
   810  07BE  0020               	movlb	0	; select bank0
   811  07BF  120C               	bcf	12,4	;volatile
   812  07C0  3200               	nop2	;2 cycle nop
   813  07C1  3200               	nop2	;2 cycle nop
   814  07C2  3200               	nop2	;2 cycle nop
   815  07C3  3200               	nop2	;2 cycle nop
   816                           
   817                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
   818  07C4  3005               	movlw	5
   819  07C5  00F4               	movwf	??_LCD_Init
   820  07C6  3026               	movlw	38
   821  07C7                     u127:	
   822  07C7  0B89               	decfsz	9,f
   823  07C8  2FC7               	goto	u127
   824  07C9  0BF4               	decfsz	??_LCD_Init,f
   825  07CA  2FC7               	goto	u127
   826  07CB  3200               	nop2
   827                           
   828                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   829  07CC  0020               	movlb	0	; select bank0
   830  07CD  160C               	bsf	12,4	;volatile
   831  07CE  3200               	nop2	;2 cycle nop
   832  07CF  3200               	nop2	;2 cycle nop
   833  07D0  3200               	nop2	;2 cycle nop
   834  07D1  3200               	nop2	;2 cycle nop
   835  07D2  0020               	movlb	0	; select bank0
   836  07D3  120C               	bcf	12,4	;volatile
   837  07D4  3200               	nop2	;2 cycle nop
   838  07D5  3200               	nop2	;2 cycle nop
   839  07D6  3200               	nop2	;2 cycle nop
   840  07D7  3200               	nop2	;2 cycle nop
   841                           
   842                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
   843  07D8  3005               	movlw	5
   844  07D9  00F4               	movwf	??_LCD_Init
   845  07DA  3026               	movlw	38
   846  07DB                     u137:	
   847  07DB  0B89               	decfsz	9,f
   848  07DC  2FDB               	goto	u137
   849  07DD  0BF4               	decfsz	??_LCD_Init,f
   850  07DE  2FDB               	goto	u137
   851  07DF  3200               	nop2
   852                           
   853                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
   854  07E0  3002               	movlw	2
   855  07E1  0020               	movlb	0	; select bank0
   856  07E2  008D               	movwf	13	;volatile
   857                           
   858                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   859  07E3  160C               	bsf	12,4	;volatile
   860  07E4  3200               	nop2	;2 cycle nop
   861  07E5  3200               	nop2	;2 cycle nop
   862  07E6  3200               	nop2	;2 cycle nop
   863  07E7  3200               	nop2	;2 cycle nop
   864  07E8  0020               	movlb	0	; select bank0
   865  07E9  120C               	bcf	12,4	;volatile
   866  07EA  3200               	nop2	;2 cycle nop
   867  07EB  3200               	nop2	;2 cycle nop
   868  07EC  3200               	nop2	;2 cycle nop
   869  07ED  3200               	nop2	;2 cycle nop
   870                           
   871                           ;LCD.c: 44: LCD_WriteData(0x28);
   872  07EE  3028               	movlw	40
   873  07EF  3187  275A  3187   	fcall	_LCD_WriteData
   874                           
   875                           ;LCD.c: 45: LCD_WriteData(0x0c);
   876  07F2  300C               	movlw	12
   877  07F3  3187  275A  3187   	fcall	_LCD_WriteData
   878                           
   879                           ;LCD.c: 46: LCD_DisplayClear();
   880  07F6  3186  26F3  3187   	fcall	_LCD_DisplayClear
   881                           
   882                           ;LCD.c: 47: LCD_WriteData(0x06);
   883  07F9  3006               	movlw	6
   884  07FA  3187  275A         	fcall	_LCD_WriteData
   885  07FC  0008               	return
   886  07FD                     __end_of_LCD_Init:	
   887                           
   888                           	psect	text4
   889  06F3                     __ptext4:	
   890 ;; *************** function _LCD_DisplayClear *****************
   891 ;; Defined at:
   892 ;;		line 73 in file "LCD.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   906 ;;      Params:         0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0
   908 ;;      Temps:          1       0       0       0       0       0
   909 ;;      Totals:         1       0       0       0       0       0
   910 ;;Total ram usage:        1 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		_LCD_WriteData
   915 ;; This function is called by:
   916 ;;		_LCD_Init
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _LCD_DisplayClear
   922  06F3                     _LCD_DisplayClear:	
   923                           
   924                           ;LCD.c: 75: RA3 = 0;
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
   928  06F3  0020               	movlb	0	; select bank0
   929  06F4  118C               	bcf	12,3	;volatile
   930                           
   931                           ;LCD.c: 76: LCD_WriteData(0x01);
   932  06F5  3001               	movlw	1
   933  06F6  3187  275A  3186   	fcall	_LCD_WriteData
   934                           
   935                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
   936  06F9  3015               	movlw	21
   937  06FA  00F3               	movwf	??_LCD_DisplayClear
   938  06FB  30C6               	movlw	198
   939  06FC                     u147:	
   940  06FC  0B89               	decfsz	9,f
   941  06FD  2EFC               	goto	u147
   942  06FE  0BF3               	decfsz	??_LCD_DisplayClear,f
   943  06FF  2EFC               	goto	u147
   944  0700  3200               	nop2
   945  0701  0008               	return
   946  0702                     __end_of_LCD_DisplayClear:	
   947                           
   948                           	psect	text5
   949  072A                     __ptext5:	
   950 ;; *************** function _LCD_CursorPosition *****************
   951 ;; Defined at:
   952 ;;		line 95 in file "LCD.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  tx              1    wreg     unsigned char 
   955 ;;  ty              1    3[COMMON] unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  tx              1    5[COMMON] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   967 ;;      Params:         1       0       0       0       0       0
   968 ;;      Locals:         1       0       0       0       0       0
   969 ;;      Temps:          1       0       0       0       0       0
   970 ;;      Totals:         3       0       0       0       0       0
   971 ;;Total ram usage:        3 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    1
   974 ;; This function calls:
   975 ;;		_LCD_WriteData
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _LCD_CursorPosition
   983  072A                     _LCD_CursorPosition:	
   984                           
   985                           ;incstack = 0
   986                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
   987                           ;LCD_CursorPosition@tx stored from wreg
   988  072A  00F5               	movwf	LCD_CursorPosition@tx
   989                           
   990                           ;LCD.c: 97: RA3 = 0;
   991  072B  0020               	movlb	0	; select bank0
   992  072C  118C               	bcf	12,3	;volatile
   993                           
   994                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
   995  072D  0873               	movf	LCD_CursorPosition@ty,w
   996  072E  00F4               	movwf	??_LCD_CursorPosition
   997  072F  3005               	movlw	5
   998  0730                     u85:	
   999  0730  35F4               	lslf	??_LCD_CursorPosition,f
  1000  0731  3EFF               	addlw	-1
  1001  0732  1D03               	skipz
  1002  0733  2F30               	goto	u85
  1003  0734  3574               	lslf	??_LCD_CursorPosition,w
  1004  0735  0475               	iorwf	LCD_CursorPosition@tx,w
  1005  0736  3880               	iorlw	-128
  1006  0737  3187  275A  3187   	fcall	_LCD_WriteData
  1007                           
  1008                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  1009  073A  306A               	movlw	106
  1010  073B                     u157:	
  1011  073B  0B89               	decfsz	9,f
  1012  073C  2F3B               	goto	u157
  1013  073D  3200               	nop2
  1014  073E  0008               	return
  1015  073F                     __end_of_LCD_CursorPosition:	
  1016                           
  1017                           	psect	text6
  1018  075A                     __ptext6:	
  1019 ;; *************** function _LCD_WriteData *****************
  1020 ;; Defined at:
  1021 ;;		line 15 in file "LCD.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  point           1    wreg     char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  point           1    2[COMMON] char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1035 ;;      Params:         0       0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0       0
  1038 ;;      Totals:         3       0       0       0       0       0
  1039 ;;Total ram usage:        3 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_LCD_Init
  1045 ;;		_putch
  1046 ;;		_LCD_DisplayClear
  1047 ;;		_LCD_CursorPosition
  1048 ;;		_LCD_Put
  1049 ;;		_LCD_CursorHome
  1050 ;;		_LCD_CursorShift
  1051 ;;		_LCD_DispShift
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _LCD_WriteData
  1057  075A                     _LCD_WriteData:	
  1058                           
  1059                           ;incstack = 0
  1060                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1061                           ;LCD_WriteData@point stored from wreg
  1062  075A  00F2               	movwf	LCD_WriteData@point
  1063                           
  1064                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1065  075B  30D5               	movlw	213
  1066  075C                     u167:	
  1067  075C  0B89               	decfsz	9,f
  1068  075D  2F5C               	goto	u167
  1069  075E  0000               	nop
  1070                           
  1071                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1072  075F  0872               	movf	LCD_WriteData@point,w
  1073  0760  00F0               	movwf	??_LCD_WriteData
  1074  0761  3004               	movlw	4
  1075  0762                     u15:	
  1076  0762  1003               	clrc
  1077  0763  1BF0               	btfsc	??_LCD_WriteData,7
  1078  0764  1403               	setc
  1079  0765  0CF0               	rrf	??_LCD_WriteData,f
  1080  0766  0B89               	decfsz	9,f
  1081  0767  2F62               	goto	u15
  1082  0768  3003               	movlw	3
  1083  0769  0570               	andwf	??_LCD_WriteData,w
  1084  076A  00F1               	movwf	??_LCD_WriteData+1
  1085  076B  0E72               	swapf	LCD_WriteData@point,w
  1086  076C  390F               	andlw	15
  1087  076D  1989               	btfsc	9,3
  1088  076E  38F0               	iorlw	240
  1089  076F  390C               	andlw	12
  1090  0770  0709               	addwf	9,w
  1091  0771  0471               	iorwf	??_LCD_WriteData+1,w
  1092  0772  0020               	movlb	0	; select bank0
  1093  0773  008D               	movwf	13	;volatile
  1094                           
  1095                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1096  0774  160C               	bsf	12,4	;volatile
  1097  0775  3200               	nop2	;2 cycle nop
  1098  0776  3200               	nop2	;2 cycle nop
  1099  0777  3200               	nop2	;2 cycle nop
  1100  0778  3200               	nop2	;2 cycle nop
  1101  0779  0020               	movlb	0	; select bank0
  1102  077A  120C               	bcf	12,4	;volatile
  1103  077B  3200               	nop2	;2 cycle nop
  1104  077C  3200               	nop2	;2 cycle nop
  1105  077D  3200               	nop2	;2 cycle nop
  1106  077E  3200               	nop2	;2 cycle nop
  1107                           
  1108                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1109  077F  3003               	movlw	3
  1110  0780  0572               	andwf	LCD_WriteData@point,w
  1111  0781  00F0               	movwf	??_LCD_WriteData
  1112  0782  0872               	movf	LCD_WriteData@point,w
  1113  0783  390C               	andlw	12
  1114  0784  0709               	addwf	9,w
  1115  0785  0470               	iorwf	??_LCD_WriteData,w
  1116  0786  0020               	movlb	0	; select bank0
  1117  0787  008D               	movwf	13	;volatile
  1118                           
  1119                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1120  0788  160C               	bsf	12,4	;volatile
  1121  0789  3200               	nop2	;2 cycle nop
  1122  078A  3200               	nop2	;2 cycle nop
  1123  078B  3200               	nop2	;2 cycle nop
  1124  078C  3200               	nop2	;2 cycle nop
  1125  078D  0020               	movlb	0	; select bank0
  1126  078E  120C               	bcf	12,4	;volatile
  1127  078F  3200               	nop2	;2 cycle nop
  1128  0790  3200               	nop2	;2 cycle nop
  1129  0791  3200               	nop2	;2 cycle nop
  1130  0792  3200               	nop2	;2 cycle nop
  1131  0793  0008               	return
  1132  0794                     __end_of_LCD_WriteData:	
  1133                           
  1134                           	psect	text7
  1135  0715                     __ptext7:	
  1136 ;; *************** function _Basic_Init *****************
  1137 ;; Defined at:
  1138 ;;		line 25 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      char 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1152 ;;      Params:         0       0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _Basic_Init
  1167  0715                     _Basic_Init:	
  1168                           
  1169                           ;main.c: 27: OSCCON = 0xF0;
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _Basic_Init: [wreg+status,2]
  1173  0715  30F0               	movlw	240
  1174  0716  0021               	movlb	1	; select bank1
  1175  0717  0099               	movwf	25	;volatile
  1176                           
  1177                           ;main.c: 31: TRISA = 0x07;
  1178  0718  3007               	movlw	7
  1179  0719  008C               	movwf	12	;volatile
  1180                           
  1181                           ;main.c: 32: ANSELA = 0x07;
  1182  071A  3007               	movlw	7
  1183  071B  0023               	movlb	3	; select bank3
  1184  071C  008C               	movwf	12	;volatile
  1185                           
  1186                           ;main.c: 34: TRISB = 0x40;
  1187  071D  3040               	movlw	64
  1188  071E  0021               	movlb	1	; select bank1
  1189  071F  008D               	movwf	13	;volatile
  1190                           
  1191                           ;main.c: 35: ANSELB = 0x00;
  1192  0720  0023               	movlb	3	; select bank3
  1193  0721  018D               	clrf	13	;volatile
  1194                           
  1195                           ;main.c: 37: APFCON0 = 0x08;
  1196  0722  3008               	movlw	8
  1197  0723  0022               	movlb	2	; select bank2
  1198  0724  009D               	movwf	29	;volatile
  1199                           
  1200                           ;main.c: 38: APFCON1 = 0x00;
  1201  0725  019E               	clrf	30	;volatile
  1202                           
  1203                           ;main.c: 40: PORTA = 0x00;
  1204  0726  0020               	movlb	0	; select bank0
  1205  0727  018C               	clrf	12	;volatile
  1206                           
  1207                           ;main.c: 41: PORTB = 0x00;
  1208  0728  018D               	clrf	13	;volatile
  1209  0729  0008               	return
  1210  072A                     __end_of_Basic_Init:	
  1211                           ;main.c: 43: return 0;
  1212                           ;	Return value of _Basic_Init is never used
  1213                           
  1214  007E                     btemp	set	126	;btemp
  1215  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     451
                         _Basic_Init
                 _LCD_CursorPosition
                           _LCD_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     174
                                              4 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      75
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              4 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      60
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     157
                                              3 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _printf
     _putch
       _LCD_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 21 00:37:35 2017

                __CFG_CP$OFF 0000                           l72 0708                           u15 0762  
                         u85 0730                          l692 0743                          _RA3 0063  
                        _RA4 0064                          u107 079C                          u117 07B4  
                        u127 07C7                          u137 07DB                          u147 06FC  
                        u157 073B                          u167 075C                 __CFG_CPD$OFF 0000  
               __CFG_BORV$LO 0000                          wreg 0009                   _Basic_Init 0715  
               __CFG_LVP$OFF 0000                         STR_1 0800                 __CFG_WRT$OFF 0000  
                       _main 0702                         fsr0h 0005                         indf0 0000  
                       fsr0l 0004                         btemp 007E                __CFG_BOREN$ON 0000  
                       start 0002                __CFG_IESO$OFF 0000                _LCD_WriteData 075A  
              __CFG_MCLRE$ON 0000     __end_of_LCD_DisplayClear 0702             __end_of_LCD_Init 07FD  
              __CFG_PLLEN$ON 0000                        ?_main 0070                __CFG_WDTE$OFF 0000  
                      _PORTA 000C                        _PORTB 000D                        _TRISA 008C  
                      _TRISB 008D                __CFG_PWRTE$ON 0000               __CFG_FCMEN$OFF 0000  
                      _putch 06EC                        status 0003                        wtemp0 007E  
         _LCD_CursorPosition 072A               ?_LCD_WriteData 0070              __initialization 07FD  
               __end_of_main 0715          ?_LCD_CursorPosition 0073                       ??_main 007B  
                ?_Basic_Init 0070         ??_LCD_CursorPosition 0074                       _ANSELA 018C  
                     ?_putch 0070                       _ANSELB 018D                       _OSCCON 0099  
                     _printf 073F                       putch@c 0073      __end_of__initialization 07FD  
                  ?_LCD_Init 0070              ??_LCD_WriteData 0070               __pcstackCOMMON 0070  
        __size_of_Basic_Init 0015                __end_of_putch 06F3                      ??_putch 0073  
                 ??_LCD_Init 0074                   __pmaintext 0702            ?_LCD_DisplayClear 0070  
                    _APFCON0 011D                      _APFCON1 011E                      ?_printf 0074  
         ??_LCD_DisplayClear 0073              __CFG_STVREN$OFF 0000                      __ptext1 073F  
                    __ptext2 06EC                      __ptext3 0794                      __ptext4 06F3  
                    __ptext5 072A                      __ptext6 075A                      __ptext7 0715  
            __size_of_printf 001B                 ??_Basic_Init 0070         end_of_initialization 07FD  
                    printf@c 007A                      printf@f 0074           __end_of_Basic_Init 072A  
               __pstringtext 0800             __CFG_FOSC$INTOSC 0000  __size_of_LCD_CursorPosition 0015  
          __size_of_LCD_Init 0069               __end_of_printf 075A          start_initialization 07FD  
       LCD_CursorPosition@tx 0075         LCD_CursorPosition@ty 0073        __end_of_LCD_WriteData 0794  
                   ??_printf 0076                    ___latbits 0001    __size_of_LCD_DisplayClear 000F  
             __size_of_putch 0007                     _LCD_Init 0794           LCD_WriteData@point 0072  
 __end_of_LCD_CursorPosition 073F             _LCD_DisplayClear 06F3                __size_of_main 0013  
          __CFG_CLKOUTEN$OFF 0000                     printf@ap 0079       __size_of_LCD_WriteData 003A  
