

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 21 00:51:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1827 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0219                     	;# 
   167  021A                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021E                     	;# 
   172  021F                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  029E                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0318                     	;# 
   196  0318                     	;# 
   197  0319                     	;# 
   198  031A                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0217                     	;# 
   324  0219                     	;# 
   325  021A                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021D                     	;# 
   329  021E                     	;# 
   330  021F                     	;# 
   331  0291                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0294                     	;# 
   336  0295                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029B                     	;# 
   344  029C                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  029E                     	;# 
   349  0311                     	;# 
   350  0311                     	;# 
   351  0312                     	;# 
   352  0313                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  039A                     	;# 
   361  039C                     	;# 
   362  039D                     	;# 
   363  039E                     	;# 
   364  039F                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011D                     	;# 
   442  011E                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019F                     	;# 
   465  020C                     	;# 
   466  020D                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  0219                     	;# 
   483  021A                     	;# 
   484  021B                     	;# 
   485  021C                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0298                     	;# 
   498  0298                     	;# 
   499  0299                     	;# 
   500  029A                     	;# 
   501  029B                     	;# 
   502  029C                     	;# 
   503  029C                     	;# 
   504  029D                     	;# 
   505  029E                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018D                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0216                     	;# 
   638  0217                     	;# 
   639  0217                     	;# 
   640  0219                     	;# 
   641  021A                     	;# 
   642  021B                     	;# 
   643  021C                     	;# 
   644  021D                     	;# 
   645  021E                     	;# 
   646  021F                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0298                     	;# 
   656  0298                     	;# 
   657  0299                     	;# 
   658  029A                     	;# 
   659  029B                     	;# 
   660  029C                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  029E                     	;# 
   665  0311                     	;# 
   666  0311                     	;# 
   667  0312                     	;# 
   668  0313                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  039A                     	;# 
   677  039C                     	;# 
   678  039D                     	;# 
   679  039E                     	;# 
   680  039F                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0014                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001E                     	;# 
   726  001F                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0094                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0219                     	;# 
   799  021A                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021D                     	;# 
   803  021E                     	;# 
   804  021F                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0294                     	;# 
   810  0295                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029B                     	;# 
   818  029C                     	;# 
   819  029C                     	;# 
   820  029D                     	;# 
   821  029E                     	;# 
   822  029E                     	;# 
   823  0311                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  039A                     	;# 
   835  039C                     	;# 
   836  039D                     	;# 
   837  039E                     	;# 
   838  039F                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0015                     	;# 
   875  0016                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  001E                     	;# 
   884  001F                     	;# 
   885  008C                     	;# 
   886  008D                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0095                     	;# 
   892  0096                     	;# 
   893  0097                     	;# 
   894  0098                     	;# 
   895  0099                     	;# 
   896  009A                     	;# 
   897  009B                     	;# 
   898  009B                     	;# 
   899  009C                     	;# 
   900  009D                     	;# 
   901  009E                     	;# 
   902  010C                     	;# 
   903  010D                     	;# 
   904  0111                     	;# 
   905  0112                     	;# 
   906  0113                     	;# 
   907  0114                     	;# 
   908  0115                     	;# 
   909  0116                     	;# 
   910  0117                     	;# 
   911  0118                     	;# 
   912  0119                     	;# 
   913  011A                     	;# 
   914  011B                     	;# 
   915  011D                     	;# 
   916  011E                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919  0191                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  0193                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0194                     	;# 
   926  0195                     	;# 
   927  0196                     	;# 
   928  0199                     	;# 
   929  019A                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020D                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021E                     	;# 
   962  021F                     	;# 
   963  0291                     	;# 
   964  0291                     	;# 
   965  0292                     	;# 
   966  0293                     	;# 
   967  0294                     	;# 
   968  0295                     	;# 
   969  0295                     	;# 
   970  0296                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  029B                     	;# 
   976  029C                     	;# 
   977  029C                     	;# 
   978  029D                     	;# 
   979  029E                     	;# 
   980  029E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0318                     	;# 
   986  0318                     	;# 
   987  0319                     	;# 
   988  031A                     	;# 
   989  0394                     	;# 
   990  0395                     	;# 
   991  0396                     	;# 
   992  039A                     	;# 
   993  039C                     	;# 
   994  039D                     	;# 
   995  039E                     	;# 
   996  039F                     	;# 
   997  0415                     	;# 
   998  0416                     	;# 
   999  0417                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014                           
  1015 ;; Function _LCD_Put is unused but had its address taken
  1016  000C                     _PORTA	set	12
  1017  000D                     _PORTB	set	13
  1018  0064                     _RA4	set	100
  1019  0063                     _RA3	set	99
  1020  005F                     _GIE	set	95
  1021  005E                     _PEIE	set	94
  1022  00A1                     _BCL2IF	set	161
  1023  00A0                     _SSP2IF	set	160
  1024  0093                     _BCL1IF	set	147
  1025  008B                     _SSP1IF	set	139
  1026  008C                     _TRISA	set	140
  1027  0099                     _OSCCON	set	153
  1028  008D                     _TRISB	set	141
  1029  04A1                     _BCL2IE	set	1185
  1030  04A0                     _SSP2IE	set	1184
  1031  0493                     _BCL1IE	set	1171
  1032  048B                     _SSP1IE	set	1163
  1033  011E                     _APFCON1	set	286
  1034  011D                     _APFCON0	set	285
  1035  0867                     _LATA7	set	2151
  1036  018C                     _ANSELA	set	396
  1037  018D                     _ANSELB	set	397
  1038  021C                     _SSP2STATbits	set	540
  1039  0219                     _SSP2BUF	set	537
  1040  021E                     _SSP2CON2	set	542
  1041  021B                     _SSP2MSK	set	539
  1042  021E                     _SSP2CON2bits	set	542
  1043  021D                     _SSP2CON1bits	set	541
  1044  021A                     _SSP2ADD	set	538
  1045  021C                     _SSP2STAT	set	540
  1046  021D                     _SSP2CON1	set	541
  1047  0214                     _SSP1STATbits	set	532
  1048  0211                     _SSP1BUF	set	529
  1049  0216                     _SSP1CON2	set	534
  1050  0213                     _SSP1MSK	set	531
  1051  0216                     _SSP1CON2bits	set	534
  1052  0215                     _SSP1CON1bits	set	533
  1053  0212                     _SSP1ADD	set	530
  1054  0214                     _SSP1STAT	set	532
  1055  0215                     _SSP1CON1	set	533
  1056                           
  1057                           	psect	stringtext
  1058  03CC                     __pstringtext:	
  1059  03CC                     STR_2:	
  1060  03CC  3425               	retlw	37	;'%'
  1061  03CD  3430               	retlw	48	;'0'
  1062  03CE  3438               	retlw	56	;'8'
  1063  03CF  346C               	retlw	108	;'l'
  1064  03D0  3458               	retlw	88	;'X'
  1065  03D1  3420               	retlw	32	;' '
  1066  03D2  3400               	retlw	0
  1067  03D3                     STR_5:	
  1068  03D3  3420               	retlw	32	;' '
  1069  03D4  3425               	retlw	37	;'%'
  1070  03D5  3430               	retlw	48	;'0'
  1071  03D6  3438               	retlw	56	;'8'
  1072  03D7  344C               	retlw	76	;'L'
  1073  03D8  3458               	retlw	88	;'X'
  1074  03D9  3400               	retlw	0
  1075  03DA                     STR_3:	
  1076  03DA  3420               	retlw	32	;' '
  1077  03DB  3425               	retlw	37	;'%'
  1078  03DC  3430               	retlw	48	;'0'
  1079  03DD  3432               	retlw	50	;'2'
  1080  03DE  3458               	retlw	88	;'X'
  1081  03DF  3400               	retlw	0
  1082  03E0                     STR_4:	
  1083  03E0  3420               	retlw	32	;' '
  1084  03E1  3425               	retlw	37	;'%'
  1085  03E2  3430               	retlw	48	;'0'
  1086  03E3  3434               	retlw	52	;'4'
  1087  03E4  3458               	retlw	88	;'X'
  1088  03E5  3400               	retlw	0
  1089  03E6                     STR_1:	
  1090  03E6  340D               	retlw	13
  1091  03E7  3400               	retlw	0
  1092                           
  1093                           ; #config settings
  1094  0000                     
  1095                           	psect	cinit
  1096  0012                     start_initialization:	
  1097  0012                     __initialization:	
  1098                           
  1099                           ; Clear objects allocated to COMMON
  1100  0012  01FB               	clrf	__pbssCOMMON& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK0
  1103  0013  3020               	movlw	low __pbssBANK0
  1104  0014  0084               	movwf	4
  1105  0015  3000               	movlw	high __pbssBANK0
  1106  0016  0085               	movwf	5
  1107  0017  302D               	movlw	45
  1108  0018  3184  2422         	fcall	clear_ram0
  1109  001A                     end_of_initialization:	
  1110                           ;End of C runtime variable initialization code
  1111                           
  1112  001A                     __end_of__initialization:	
  1113  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1114  001B  0020               	movlb	0
  1115  001C  3181  2984         	ljmp	_main	;jump to C main() function
  1116                           
  1117                           	psect	bssCOMMON
  1118  007B                     __pbssCOMMON:	
  1119  007B                     _outptr:	
  1120  007B                     	ds	1
  1121                           
  1122                           	psect	bssBANK0
  1123  0020                     __pbssBANK0:	
  1124  0020                     _xfunc_in:	
  1125  0020                     	ds	2
  1126  0022                     _xfunc_out:	
  1127  0022                     	ds	2
  1128  0024                     _I2C2_Config:	
  1129  0024                     	ds	19
  1130  0037                     _I2C1_Config:	
  1131  0037                     	ds	19
  1132  004A                     _VoltageReg:	
  1133  004A                     	ds	2
  1134  004C                     _ConfigReg:	
  1135  004C                     	ds	1
  1136                           
  1137                           	psect	clrtext
  1138  0422                     clear_ram0:	
  1139                           ;	Called with FSR0 containing the base address, and
  1140                           ;	WREG with the size to clear
  1141                           
  1142  0422  0064               	clrwdt	;clear the watchdog before getting into this loop
  1143  0423                     clrloop0:	
  1144  0423  0180               	clrf	0	;clear RAM location pointed to by FSR
  1145  0424  3101               	addfsr 0,1
  1146  0425  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1147  0426  2C23               	goto	clrloop0	;have we reached the end yet?
  1148  0427  3400               	retlw	0	;all done for this memory range, return
  1149                           
  1150                           	psect	cstackCOMMON
  1151  0070                     __pcstackCOMMON:	
  1152  0070                     ?_LCD_DisplayClear:	
  1153  0070                     ?_Basic_Init:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_I2C1_PinInit:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_I2C1_Interrupt:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ??_I2C1_Interrupt:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_I2C2_PinInit:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_I2C2_Interrupt:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ??_I2C2_Interrupt:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_I2C_CommonInterrupt:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_LCD_WriteData:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_LCD_Init:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_DAC_Initialize:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_main:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_hand:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0x0
  1194  0070                     	ds	1
  1195  0071                     ??_I2C_CommonInterrupt:	
  1196  0071                     ??_hand:	
  1197                           ; 1 bytes @ 0x1
  1198                           
  1199                           
  1200                           ; 1 bytes @ 0x1
  1201  0071                     	ds	1
  1202  0072                     ??_Basic_Init:	
  1203  0072                     ??_I2C1_PinInit:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206  0072                     ?_I2C1_Transmit:	
  1207                           ; 1 bytes @ 0x2
  1208                           
  1209  0072                     ??_I2C2_PinInit:	
  1210                           ; 1 bytes @ 0x2
  1211                           
  1212  0072                     ?_I2C2_Transmit:	
  1213                           ; 1 bytes @ 0x2
  1214                           
  1215  0072                     ??_LCD_WriteData:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218  0072                     I2C1_Transmit@pData:	
  1219                           ; 1 bytes @ 0x2
  1220                           
  1221  0072                     I2C2_Transmit@pData:	
  1222                           ; 1 bytes @ 0x2
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x2
  1226  0072                     	ds	1
  1227  0073                     ?_I2C1_Setting:	
  1228  0073                     ?_I2C2_Setting:	
  1229                           ; 1 bytes @ 0x3
  1230                           
  1231  0073                     I2C1_Setting@mode:	
  1232                           ; 1 bytes @ 0x3
  1233                           
  1234  0073                     I2C1_Transmit@size:	
  1235                           ; 1 bytes @ 0x3
  1236                           
  1237  0073                     I2C2_Setting@mode:	
  1238                           ; 1 bytes @ 0x3
  1239                           
  1240  0073                     I2C2_Transmit@size:	
  1241                           ; 1 bytes @ 0x3
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x3
  1245  0073                     	ds	1
  1246  0074                     ??_I2C1_Transmit:	
  1247  0074                     ??_I2C2_Transmit:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250  0074                     I2C1_Setting@Speed:	
  1251                           ; 1 bytes @ 0x4
  1252                           
  1253  0074                     I2C2_Setting@Speed:	
  1254                           ; 1 bytes @ 0x4
  1255                           
  1256  0074                     LCD_WriteData@point:	
  1257                           ; 1 bytes @ 0x4
  1258                           
  1259                           
  1260                           ; 1 bytes @ 0x4
  1261  0074                     	ds	1
  1262  0075                     ??_LCD_DisplayClear:	
  1263  0075                     ??_I2C1_Setting:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266  0075                     ??_I2C2_Setting:	
  1267                           ; 1 bytes @ 0x5
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x5
  1271  0075                     	ds	1
  1272  0076                     ??_LCD_Init:	
  1273  0076                     I2C1_Setting@address:	
  1274                           ; 1 bytes @ 0x6
  1275                           
  1276  0076                     I2C1_Transmit@address:	
  1277                           ; 1 bytes @ 0x6
  1278                           
  1279  0076                     I2C2_Setting@address:	
  1280                           ; 1 bytes @ 0x6
  1281                           
  1282  0076                     I2C2_Transmit@address:	
  1283                           ; 1 bytes @ 0x6
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x6
  1287  0076                     	ds	1
  1288  0077                     ?_I2C_Init:	
  1289  0077                     I2C1_Transmit@i:	
  1290                           ; 1 bytes @ 0x7
  1291                           
  1292  0077                     I2C2_Transmit@i:	
  1293                           ; 1 bytes @ 0x7
  1294                           
  1295  0077                     I2C_Init@address:	
  1296                           ; 1 bytes @ 0x7
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x7
  1300  0077                     	ds	1
  1301  0078                     I2C1_Transmit@i_286:	
  1302  0078                     I2C2_Transmit@i_430:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305  0078                     I2C_Init@mode:	
  1306                           ; 1 bytes @ 0x8
  1307                           
  1308                           
  1309                           ; 1 bytes @ 0x8
  1310  0078                     	ds	1
  1311  0079                     I2C1_Transmit@result:	
  1312  0079                     I2C2_Transmit@result:	
  1313                           ; 1 bytes @ 0x9
  1314                           
  1315  0079                     I2C_Init@Speed:	
  1316                           ; 1 bytes @ 0x9
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x9
  1320  0079                     	ds	1
  1321  007A                     I2C_Init@I2Cx:	
  1322                           
  1323                           ; 1 bytes @ 0xA
  1324  007A                     	ds	1
  1325                           
  1326                           	psect	cstackBANK0
  1327  004D                     __pcstackBANK0:	
  1328  004D                     ??_I2C_Init:	
  1329  004D                     ?_I2C_Transmit:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  004D                     I2C_Transmit@address:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x0
  1337  004D                     	ds	1
  1338  004E                     I2C_Transmit@pData:	
  1339                           
  1340                           ; 1 bytes @ 0x1
  1341  004E                     	ds	1
  1342  004F                     I2C_Transmit@size:	
  1343                           
  1344                           ; 1 bytes @ 0x2
  1345  004F                     	ds	1
  1346  0050                     ??_I2C_Transmit:	
  1347                           
  1348                           ; 1 bytes @ 0x3
  1349  0050                     	ds	3
  1350  0053                     I2C_Transmit@I2Cx:	
  1351                           
  1352                           ; 1 bytes @ 0x6
  1353  0053                     	ds	1
  1354  0054                     I2C_Transmit@result:	
  1355                           
  1356                           ; 1 bytes @ 0x7
  1357  0054                     	ds	1
  1358  0055                     ??_DAC_Initialize:	
  1359  0055                     ?_DAC_WriteVoltage:	
  1360                           ; 1 bytes @ 0x8
  1361                           
  1362  0055                     DAC_WriteVoltage@volue:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0x8
  1367  0055                     	ds	2
  1368  0057                     ??_DAC_WriteVoltage:	
  1369                           
  1370                           ; 1 bytes @ 0xA
  1371  0057                     	ds	3
  1372  005A                     ??_main:	
  1373                           
  1374                           ; 1 bytes @ 0xD
  1375  005A                     	ds	2
  1376  005C                     main@voltage:	
  1377                           
  1378                           ; 2 bytes @ 0xF
  1379  005C                     	ds	2
  1380  005E                     main@voltage_613:	
  1381                           
  1382                           ; 2 bytes @ 0x11
  1383  005E                     	ds	2
  1384                           
  1385                           	psect	maintext
  1386  0184                     __pmaintext:	
  1387 ;;
  1388 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1389 ;;
  1390 ;; *************** function _main *****************
  1391 ;; Defined at:
  1392 ;;		line 12 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  voltage         2   17[BANK0 ] unsigned int 
  1397 ;;  voltage         2   15[BANK0 ] unsigned int 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      char 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : B1F/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1407 ;;      Params:         0       0       0       0       0       0
  1408 ;;      Locals:         0       4       0       0       0       0
  1409 ;;      Temps:          0       2       0       0       0       0
  1410 ;;      Totals:         0       6       0       0       0       0
  1411 ;;Total ram usage:        6 bytes
  1412 ;; Hardware stack levels required when called:    7
  1413 ;; This function calls:
  1414 ;;		_Basic_Init
  1415 ;;		_DAC_Initialize
  1416 ;;		_DAC_WriteVoltage
  1417 ;;		_LCD_Init
  1418 ;; This function is called by:
  1419 ;;		Startup code after reset
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _main
  1425  0184                     _main:	
  1426                           
  1427                           ;main.c: 14: Basic_Init();
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1431  0184  3183  23E8  3181   	fcall	_Basic_Init
  1432                           
  1433                           ;main.c: 15: LCD_Init();
  1434  0187  3181  211B  3181   	fcall	_LCD_Init
  1435                           
  1436                           ;main.c: 16: DAC_Initialize();
  1437  018A  3183  23AD  3181   	fcall	_DAC_Initialize
  1438                           
  1439                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1440  018D  3000               	movlw	0
  1441  018E  0020               	movlb	0	; select bank0
  1442  018F  00A2               	movwf	_xfunc_out
  1443  0190  3000               	movlw	0
  1444  0191  00A3               	movwf	_xfunc_out+1
  1445                           
  1446                           ;main.c: 18: LATA7 = 1;
  1447  0192  0022               	movlb	2	; select bank2
  1448  0193  178C               	bsf	12,7	;volatile
  1449  0194                     l3028:	
  1450                           ;main.c: 20: while(1)
  1451                           
  1452                           
  1453                           ;main.c: 21: {
  1454                           ;main.c: 22: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1455  0194  0020               	movlb	0	; select bank0
  1456  0195  01DC               	clrf	main@voltage
  1457  0196  01DD               	clrf	main@voltage+1
  1458  0197  300F               	movlw	15
  1459  0198  025D               	subwf	main@voltage+1,w
  1460  0199  30FF               	movlw	255
  1461  019A  1903               	skipnz
  1462  019B  025C               	subwf	main@voltage,w
  1463  019C  1803               	btfsc	3,0
  1464  019D  29B5               	goto	l3042
  1465  019E                     l3034:	
  1466                           
  1467                           ;main.c: 23: {
  1468                           ;main.c: 24: DAC_WriteVoltage(voltage);
  1469  019E  085D               	movf	main@voltage+1,w
  1470  019F  00D6               	movwf	DAC_WriteVoltage@volue+1
  1471  01A0  085C               	movf	main@voltage,w
  1472  01A1  00D5               	movwf	DAC_WriteVoltage@volue
  1473  01A2  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1474                           
  1475                           ;main.c: 25: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1476  01A5  30A0               	movlw	160
  1477  01A6                     u2807:	
  1478  01A6  3200               	nop2
  1479  01A7  0B89               	decfsz	9,f
  1480  01A8  29A6               	goto	u2807
  1481  01A9  3001               	movlw	1
  1482  01AA  0020               	movlb	0	; select bank0
  1483  01AB  07DC               	addwf	main@voltage,f
  1484  01AC  3000               	movlw	0
  1485  01AD  3DDD               	addwfc	main@voltage+1,f
  1486  01AE  300F               	movlw	15
  1487  01AF  025D               	subwf	main@voltage+1,w
  1488  01B0  30FF               	movlw	255
  1489  01B1  1903               	skipnz
  1490  01B2  025C               	subwf	main@voltage,w
  1491  01B3  1C03               	skipc
  1492  01B4  299E               	goto	l3034
  1493  01B5                     l3042:	
  1494                           
  1495                           ;main.c: 26: }
  1496                           ;main.c: 27: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1497  01B5  01DE               	clrf	main@voltage_613
  1498  01B6  01DF               	clrf	main@voltage_613+1
  1499  01B7                     L1:	
  1500  01B7  300F               	movlw	15
  1501  01B8  025F               	subwf	main@voltage_613+1,w
  1502  01B9  30FF               	movlw	255
  1503  01BA  1903               	skipnz
  1504  01BB  025E               	subwf	main@voltage_613,w
  1505  01BC  1803               	btfsc	3,0
  1506  01BD  2994               	goto	l3028
  1507                           
  1508                           ;main.c: 28: {
  1509                           ;main.c: 29: DAC_WriteVoltage(0x0FFF-voltage);
  1510  01BE  095E               	comf	main@voltage_613,w
  1511  01BF  00DA               	movwf	??_main
  1512  01C0  095F               	comf	main@voltage_613+1,w
  1513  01C1  00DB               	movwf	??_main+1
  1514  01C2  0ADA               	incf	??_main,f
  1515  01C3  1903               	skipnz
  1516  01C4  0ADB               	incf	??_main+1,f
  1517  01C5  085A               	movf	??_main,w
  1518  01C6  3EFF               	addlw	255
  1519  01C7  00D5               	movwf	DAC_WriteVoltage@volue
  1520  01C8  300F               	movlw	15
  1521  01C9  3D5B               	addwfc	??_main+1,w
  1522  01CA  00D6               	movwf	DAC_WriteVoltage@volue+1
  1523  01CB  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1524                           
  1525                           ;main.c: 30: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1526  01CE  30A0               	movlw	160
  1527  01CF                     u2817:	
  1528  01CF  3200               	nop2
  1529  01D0  0B89               	decfsz	9,f
  1530  01D1  29CF               	goto	u2817
  1531  01D2  3001               	movlw	1
  1532  01D3  0020               	movlb	0	; select bank0
  1533  01D4  07DE               	addwf	main@voltage_613,f
  1534  01D5  3000               	movlw	0
  1535  01D6  3DDF               	addwfc	main@voltage_613+1,f
  1536  01D7  29B7               	goto	L1
  1537  01D8                     __end_of_main:	
  1538                           ;main.c: 31: }
  1539                           ;main.c: 32: }
  1540                           ;main.c: 33: return 0;
  1541                           ;	Return value of _main is never used
  1542                           
  1543                           
  1544                           	psect	text1
  1545  011B                     __ptext1:	
  1546 ;; *************** function _LCD_Init *****************
  1547 ;; Defined at:
  1548 ;;		line 28 in file "LCD.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1562 ;;      Params:         0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0
  1565 ;;      Totals:         2       0       0       0       0       0
  1566 ;;Total ram usage:        2 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    5
  1569 ;; This function calls:
  1570 ;;		_LCD_DisplayClear
  1571 ;;		_LCD_WriteData
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _LCD_Init
  1579  011B                     _LCD_Init:	
  1580                           
  1581                           ;LCD.c: 30: RA4 = 0;
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1585  011B  0020               	movlb	0	; select bank0
  1586  011C  120C               	bcf	12,4	;volatile
  1587                           
  1588                           ;LCD.c: 31: RA3 = 0;
  1589  011D  118C               	bcf	12,3	;volatile
  1590                           
  1591                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  1592  011E  3002               	movlw	2
  1593  011F  00F7               	movwf	??_LCD_Init+1
  1594  0120  3038               	movlw	56
  1595  0121  00F6               	movwf	??_LCD_Init
  1596  0122  30AD               	movlw	173
  1597  0123                     u2827:	
  1598  0123  0B89               	decfsz	9,f
  1599  0124  2923               	goto	u2827
  1600  0125  0BF6               	decfsz	??_LCD_Init,f
  1601  0126  2923               	goto	u2827
  1602  0127  0BF7               	decfsz	??_LCD_Init+1,f
  1603  0128  2923               	goto	u2827
  1604  0129  0000               	nop
  1605                           
  1606                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  1607  012A  3003               	movlw	3
  1608  012B  0020               	movlb	0	; select bank0
  1609  012C  008D               	movwf	13	;volatile
  1610                           
  1611                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1612  012D  158C               	bsf	12,3	;volatile
  1613  012E  3200               	nop2	;2 cycle nop
  1614  012F  3200               	nop2	;2 cycle nop
  1615  0130  3200               	nop2	;2 cycle nop
  1616  0131  3200               	nop2	;2 cycle nop
  1617  0132  0020               	movlb	0	; select bank0
  1618  0133  118C               	bcf	12,3	;volatile
  1619  0134  3200               	nop2	;2 cycle nop
  1620  0135  3200               	nop2	;2 cycle nop
  1621  0136  3200               	nop2	;2 cycle nop
  1622  0137  3200               	nop2	;2 cycle nop
  1623                           
  1624                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  1625  0138  3034               	movlw	52
  1626  0139  00F6               	movwf	??_LCD_Init
  1627  013A  30F2               	movlw	242
  1628  013B                     u2837:	
  1629  013B  0B89               	decfsz	9,f
  1630  013C  293B               	goto	u2837
  1631  013D  0BF6               	decfsz	??_LCD_Init,f
  1632  013E  293B               	goto	u2837
  1633                           
  1634                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1635  013F  0020               	movlb	0	; select bank0
  1636  0140  158C               	bsf	12,3	;volatile
  1637  0141  3200               	nop2	;2 cycle nop
  1638  0142  3200               	nop2	;2 cycle nop
  1639  0143  3200               	nop2	;2 cycle nop
  1640  0144  3200               	nop2	;2 cycle nop
  1641  0145  0020               	movlb	0	; select bank0
  1642  0146  118C               	bcf	12,3	;volatile
  1643  0147  3200               	nop2	;2 cycle nop
  1644  0148  3200               	nop2	;2 cycle nop
  1645  0149  3200               	nop2	;2 cycle nop
  1646  014A  3200               	nop2	;2 cycle nop
  1647                           
  1648                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1649  014B  3005               	movlw	5
  1650  014C  00F6               	movwf	??_LCD_Init
  1651  014D  3026               	movlw	38
  1652  014E                     u2847:	
  1653  014E  0B89               	decfsz	9,f
  1654  014F  294E               	goto	u2847
  1655  0150  0BF6               	decfsz	??_LCD_Init,f
  1656  0151  294E               	goto	u2847
  1657  0152  3200               	nop2
  1658                           
  1659                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1660  0153  0020               	movlb	0	; select bank0
  1661  0154  158C               	bsf	12,3	;volatile
  1662  0155  3200               	nop2	;2 cycle nop
  1663  0156  3200               	nop2	;2 cycle nop
  1664  0157  3200               	nop2	;2 cycle nop
  1665  0158  3200               	nop2	;2 cycle nop
  1666  0159  0020               	movlb	0	; select bank0
  1667  015A  118C               	bcf	12,3	;volatile
  1668  015B  3200               	nop2	;2 cycle nop
  1669  015C  3200               	nop2	;2 cycle nop
  1670  015D  3200               	nop2	;2 cycle nop
  1671  015E  3200               	nop2	;2 cycle nop
  1672                           
  1673                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1674  015F  3005               	movlw	5
  1675  0160  00F6               	movwf	??_LCD_Init
  1676  0161  3026               	movlw	38
  1677  0162                     u2857:	
  1678  0162  0B89               	decfsz	9,f
  1679  0163  2962               	goto	u2857
  1680  0164  0BF6               	decfsz	??_LCD_Init,f
  1681  0165  2962               	goto	u2857
  1682  0166  3200               	nop2
  1683                           
  1684                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  1685  0167  3002               	movlw	2
  1686  0168  0020               	movlb	0	; select bank0
  1687  0169  008D               	movwf	13	;volatile
  1688                           
  1689                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1690  016A  158C               	bsf	12,3	;volatile
  1691  016B  3200               	nop2	;2 cycle nop
  1692  016C  3200               	nop2	;2 cycle nop
  1693  016D  3200               	nop2	;2 cycle nop
  1694  016E  3200               	nop2	;2 cycle nop
  1695  016F  0020               	movlb	0	; select bank0
  1696  0170  118C               	bcf	12,3	;volatile
  1697  0171  3200               	nop2	;2 cycle nop
  1698  0172  3200               	nop2	;2 cycle nop
  1699  0173  3200               	nop2	;2 cycle nop
  1700  0174  3200               	nop2	;2 cycle nop
  1701                           
  1702                           ;LCD.c: 44: LCD_WriteData(0x28);
  1703  0175  3028               	movlw	40
  1704  0176  3182  2280  3181   	fcall	_LCD_WriteData
  1705                           
  1706                           ;LCD.c: 45: LCD_WriteData(0x0c);
  1707  0179  300C               	movlw	12
  1708  017A  3182  2280  3181   	fcall	_LCD_WriteData
  1709                           
  1710                           ;LCD.c: 46: LCD_DisplayClear();
  1711  017D  3183  23FD  3181   	fcall	_LCD_DisplayClear
  1712                           
  1713                           ;LCD.c: 47: LCD_WriteData(0x06);
  1714  0180  3006               	movlw	6
  1715  0181  3182  2280         	fcall	_LCD_WriteData
  1716  0183  0008               	return
  1717  0184                     __end_of_LCD_Init:	
  1718                           
  1719                           	psect	text2
  1720  03FD                     __ptext2:	
  1721 ;; *************** function _LCD_DisplayClear *****************
  1722 ;; Defined at:
  1723 ;;		line 64 in file "LCD.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1737 ;;      Params:         0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0
  1739 ;;      Temps:          1       0       0       0       0       0
  1740 ;;      Totals:         1       0       0       0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    4
  1744 ;; This function calls:
  1745 ;;		_LCD_WriteData
  1746 ;; This function is called by:
  1747 ;;		_LCD_Init
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _LCD_DisplayClear
  1753  03FD                     _LCD_DisplayClear:	
  1754                           
  1755                           ;LCD.c: 66: RA4 = 0;
  1756                           
  1757                           ;incstack = 0
  1758                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1759  03FD  0020               	movlb	0	; select bank0
  1760  03FE  120C               	bcf	12,4	;volatile
  1761                           
  1762                           ;LCD.c: 67: LCD_WriteData(0x01);
  1763  03FF  3001               	movlw	1
  1764  0400  3182  2280  3183   	fcall	_LCD_WriteData
  1765                           
  1766                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  1767  0403  3015               	movlw	21
  1768  0404  00F5               	movwf	??_LCD_DisplayClear
  1769  0405  30C6               	movlw	198
  1770  0406                     u2867:	
  1771  0406  0B89               	decfsz	9,f
  1772  0407  2C06               	goto	u2867
  1773  0408  0BF5               	decfsz	??_LCD_DisplayClear,f
  1774  0409  2C06               	goto	u2867
  1775  040A  3200               	nop2
  1776  040B  0008               	return
  1777  040C                     __end_of_LCD_DisplayClear:	
  1778                           
  1779                           	psect	text3
  1780  0280                     __ptext3:	
  1781 ;; *************** function _LCD_WriteData *****************
  1782 ;; Defined at:
  1783 ;;		line 15 in file "LCD.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  point           1    wreg     char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  point           1    4[COMMON] char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1797 ;;      Params:         0       0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0       0
  1799 ;;      Temps:          2       0       0       0       0       0
  1800 ;;      Totals:         3       0       0       0       0       0
  1801 ;;Total ram usage:        3 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_LCD_Init
  1808 ;;		_LCD_DisplayClear
  1809 ;;		_LCD_Put
  1810 ;;		_LCD_CursorHome
  1811 ;;		_LCD_CursorPosition
  1812 ;;		_LCD_CursorShift
  1813 ;;		_LCD_DispShift
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _LCD_WriteData
  1819  0280                     _LCD_WriteData:	
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1823                           ;LCD_WriteData@point stored from wreg
  1824  0280  00F4               	movwf	LCD_WriteData@point
  1825                           
  1826                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1827  0281  30D5               	movlw	213
  1828  0282                     u2877:	
  1829  0282  0B89               	decfsz	9,f
  1830  0283  2A82               	goto	u2877
  1831  0284  0000               	nop
  1832                           
  1833                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1834  0285  0874               	movf	LCD_WriteData@point,w
  1835  0286  00F2               	movwf	??_LCD_WriteData
  1836  0287  3004               	movlw	4
  1837  0288                     u1765:	
  1838  0288  1003               	clrc
  1839  0289  1BF2               	btfsc	??_LCD_WriteData,7
  1840  028A  1403               	setc
  1841  028B  0CF2               	rrf	??_LCD_WriteData,f
  1842  028C  0B89               	decfsz	9,f
  1843  028D  2A88               	goto	u1765
  1844  028E  3003               	movlw	3
  1845  028F  0572               	andwf	??_LCD_WriteData,w
  1846  0290  00F3               	movwf	??_LCD_WriteData+1
  1847  0291  0E74               	swapf	LCD_WriteData@point,w
  1848  0292  390F               	andlw	15
  1849  0293  1989               	btfsc	9,3
  1850  0294  38F0               	iorlw	240
  1851  0295  390C               	andlw	12
  1852  0296  0709               	addwf	9,w
  1853  0297  0473               	iorwf	??_LCD_WriteData+1,w
  1854  0298  0020               	movlb	0	; select bank0
  1855  0299  008D               	movwf	13	;volatile
  1856                           
  1857                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1858  029A  158C               	bsf	12,3	;volatile
  1859  029B  3200               	nop2	;2 cycle nop
  1860  029C  3200               	nop2	;2 cycle nop
  1861  029D  3200               	nop2	;2 cycle nop
  1862  029E  3200               	nop2	;2 cycle nop
  1863  029F  0020               	movlb	0	; select bank0
  1864  02A0  118C               	bcf	12,3	;volatile
  1865  02A1  3200               	nop2	;2 cycle nop
  1866  02A2  3200               	nop2	;2 cycle nop
  1867  02A3  3200               	nop2	;2 cycle nop
  1868  02A4  3200               	nop2	;2 cycle nop
  1869                           
  1870                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1871  02A5  3003               	movlw	3
  1872  02A6  0574               	andwf	LCD_WriteData@point,w
  1873  02A7  00F2               	movwf	??_LCD_WriteData
  1874  02A8  0874               	movf	LCD_WriteData@point,w
  1875  02A9  390C               	andlw	12
  1876  02AA  0709               	addwf	9,w
  1877  02AB  0472               	iorwf	??_LCD_WriteData,w
  1878  02AC  0020               	movlb	0	; select bank0
  1879  02AD  008D               	movwf	13	;volatile
  1880                           
  1881                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1882  02AE  158C               	bsf	12,3	;volatile
  1883  02AF  3200               	nop2	;2 cycle nop
  1884  02B0  3200               	nop2	;2 cycle nop
  1885  02B1  3200               	nop2	;2 cycle nop
  1886  02B2  3200               	nop2	;2 cycle nop
  1887  02B3  0020               	movlb	0	; select bank0
  1888  02B4  118C               	bcf	12,3	;volatile
  1889  02B5  3200               	nop2	;2 cycle nop
  1890  02B6  3200               	nop2	;2 cycle nop
  1891  02B7  3200               	nop2	;2 cycle nop
  1892  02B8  3200               	nop2	;2 cycle nop
  1893  02B9  0008               	return
  1894  02BA                     __end_of_LCD_WriteData:	
  1895                           
  1896                           	psect	text4
  1897  032A                     __ptext4:	
  1898 ;; *************** function _DAC_WriteVoltage *****************
  1899 ;; Defined at:
  1900 ;;		line 27 in file "MCP4726.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  volue           2    8[BANK0 ] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      char 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1914 ;;      Params:         0       2       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0
  1916 ;;      Temps:          0       3       0       0       0       0
  1917 ;;      Totals:         0       5       0       0       0       0
  1918 ;;Total ram usage:        5 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    5
  1921 ;; This function calls:
  1922 ;;		_I2C_Transmit
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _DAC_WriteVoltage
  1930  032A                     _DAC_WriteVoltage:	
  1931                           
  1932                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1936  032A  303F               	movlw	-193
  1937  032B  0020               	movlb	0	; select bank0
  1938  032C  05CA               	andwf	_VoltageReg,f
  1939                           
  1940                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  1941  032D  0C4C               	rrf	_ConfigReg,w
  1942  032E  3903               	andlw	3
  1943  032F  00D7               	movwf	??_DAC_WriteVoltage
  1944  0330  0ED7               	swapf	??_DAC_WriteVoltage,f
  1945  0331  084A               	movf	_VoltageReg,w
  1946  0332  0657               	xorwf	??_DAC_WriteVoltage,w
  1947  0333  39CF               	andlw	-49
  1948  0334  0657               	xorwf	??_DAC_WriteVoltage,w
  1949  0335  00CA               	movwf	_VoltageReg
  1950                           
  1951                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  1952  0336  0856               	movf	DAC_WriteVoltage@volue+1,w
  1953  0337  00D8               	movwf	??_DAC_WriteVoltage+1
  1954  0338  0855               	movf	DAC_WriteVoltage@volue,w
  1955  0339  00D7               	movwf	??_DAC_WriteVoltage
  1956  033A  0858               	movf	??_DAC_WriteVoltage+1,w
  1957  033B  00D7               	movwf	??_DAC_WriteVoltage
  1958  033C  01D8               	clrf	??_DAC_WriteVoltage+1
  1959  033D  300F               	movlw	15
  1960  033E  0557               	andwf	??_DAC_WriteVoltage,w
  1961  033F  00D9               	movwf	??_DAC_WriteVoltage+2
  1962  0340  084A               	movf	_VoltageReg,w
  1963  0341  0659               	xorwf	??_DAC_WriteVoltage+2,w
  1964  0342  39F0               	andlw	-16
  1965  0343  0659               	xorwf	??_DAC_WriteVoltage+2,w
  1966  0344  00CA               	movwf	_VoltageReg
  1967                           
  1968                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  1969  0345  0855               	movf	DAC_WriteVoltage@volue,w
  1970  0346  00D7               	movwf	??_DAC_WriteVoltage
  1971  0347  0857               	movf	??_DAC_WriteVoltage,w
  1972  0348  00CB               	movwf	_VoltageReg+1
  1973                           
  1974                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  1975                           ;	Return value of _DAC_WriteVoltage is never used
  1976  0349  3060               	movlw	96
  1977  034A  00D7               	movwf	??_DAC_WriteVoltage
  1978  034B  0857               	movf	??_DAC_WriteVoltage,w
  1979  034C  00CD               	movwf	I2C_Transmit@address
  1980  034D  304A               	movlw	(low (_VoltageReg| 0))& (0+255)
  1981  034E  00D8               	movwf	??_DAC_WriteVoltage+1
  1982  034F  0858               	movf	??_DAC_WriteVoltage+1,w
  1983  0350  00CE               	movwf	I2C_Transmit@pData
  1984  0351  3002               	movlw	2
  1985  0352  00D9               	movwf	??_DAC_WriteVoltage+2
  1986  0353  0859               	movf	??_DAC_WriteVoltage+2,w
  1987  0354  00CF               	movwf	I2C_Transmit@size
  1988  0355  3001               	movlw	1
  1989  0356  3183  2359         	fcall	_I2C_Transmit
  1990  0358  0008               	return
  1991  0359                     __end_of_DAC_WriteVoltage:	
  1992                           
  1993                           	psect	text5
  1994  03AD                     __ptext5:	
  1995 ;; *************** function _DAC_Initialize *****************
  1996 ;; Defined at:
  1997 ;;		line 14 in file "MCP4726.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2011 ;;      Params:         0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0
  2013 ;;      Temps:          0       2       0       0       0       0
  2014 ;;      Totals:         0       2       0       0       0       0
  2015 ;;Total ram usage:        2 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    6
  2018 ;; This function calls:
  2019 ;;		_I2C_Init
  2020 ;;		_I2C_Transmit
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _DAC_Initialize
  2028  03AD                     _DAC_Initialize:	
  2029                           
  2030                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2034  03AD  01F7               	clrf	I2C_Init@address
  2035  03AE  01F8               	clrf	I2C_Init@mode
  2036  03AF  01F9               	clrf	I2C_Init@Speed
  2037  03B0  3001               	movlw	1
  2038  03B1  3183  2384  3183   	fcall	_I2C_Init
  2039                           
  2040                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  2041  03B4  0020               	movlb	0	; select bank0
  2042  03B5  084C               	movf	_ConfigReg,w
  2043  03B6  391F               	andlw	-225
  2044  03B7  3880               	iorlw	128
  2045  03B8  00CC               	movwf	_ConfigReg
  2046                           
  2047                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  2048  03B9  104C               	bcf	_ConfigReg,0
  2049                           
  2050                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  2051  03BA  30F9               	movlw	-7
  2052  03BB  05CC               	andwf	_ConfigReg,f
  2053                           
  2054                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  2055  03BC  30E7               	movlw	-25
  2056  03BD  05CC               	andwf	_ConfigReg,f
  2057                           
  2058                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  2059  03BE  3060               	movlw	96
  2060  03BF  00D5               	movwf	??_DAC_Initialize
  2061  03C0  0855               	movf	??_DAC_Initialize,w
  2062  03C1  00CD               	movwf	I2C_Transmit@address
  2063  03C2  304C               	movlw	(low (_ConfigReg| 0))& (0+255)
  2064  03C3  00D6               	movwf	??_DAC_Initialize+1
  2065  03C4  0856               	movf	??_DAC_Initialize+1,w
  2066  03C5  00CE               	movwf	I2C_Transmit@pData
  2067  03C6  01CF               	clrf	I2C_Transmit@size
  2068  03C7  0ACF               	incf	I2C_Transmit@size,f
  2069  03C8  3001               	movlw	1
  2070  03C9  3183  2359         	fcall	_I2C_Transmit
  2071  03CB  0008               	return
  2072  03CC                     __end_of_DAC_Initialize:	
  2073                           
  2074                           	psect	text6
  2075  0359                     __ptext6:	
  2076 ;; *************** function _I2C_Transmit *****************
  2077 ;; Defined at:
  2078 ;;		line 23 in file "I2C_Common.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  I2Cx            1    wreg     enum E3036
  2081 ;;  address         1    0[BANK0 ] unsigned char 
  2082 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  2083 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2084 ;;  size            1    2[BANK0 ] unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  I2Cx            1    6[BANK0 ] enum E3036
  2087 ;;  result          1    7[BANK0 ] char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      char 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2097 ;;      Params:         0       3       0       0       0       0
  2098 ;;      Locals:         0       2       0       0       0       0
  2099 ;;      Temps:          0       3       0       0       0       0
  2100 ;;      Totals:         0       8       0       0       0       0
  2101 ;;Total ram usage:        8 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    4
  2104 ;; This function calls:
  2105 ;;		_I2C1_Transmit
  2106 ;;		_I2C2_Transmit
  2107 ;; This function is called by:
  2108 ;;		_DAC_Initialize
  2109 ;;		_DAC_WriteVoltage
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _I2C_Transmit
  2115  0359                     _I2C_Transmit:	
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2119                           ;I2C_Transmit@I2Cx stored from wreg
  2120  0359  0020               	movlb	0	; select bank0
  2121  035A  00D3               	movwf	I2C_Transmit@I2Cx
  2122                           
  2123                           ;I2C_Common.c: 25: int8_t result;
  2124                           ;I2C_Common.c: 27: switch(I2Cx)
  2125  035B  2B7A               	goto	l2994
  2126  035C                     l2988:	
  2127                           ;I2C_Common.c: 28: {
  2128                           ;I2C_Common.c: 29: case I2C1_MODULE:
  2129                           
  2130                           
  2131                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  2132  035C  084E               	movf	I2C_Transmit@pData,w
  2133  035D  00D0               	movwf	??_I2C_Transmit
  2134  035E  0850               	movf	??_I2C_Transmit,w
  2135  035F  00F2               	movwf	I2C1_Transmit@pData
  2136  0360  084F               	movf	I2C_Transmit@size,w
  2137  0361  00D1               	movwf	??_I2C_Transmit+1
  2138  0362  0851               	movf	??_I2C_Transmit+1,w
  2139  0363  00F3               	movwf	I2C1_Transmit@size
  2140  0364  084D               	movf	I2C_Transmit@address,w
  2141  0365  3180  209D  3183   	fcall	_I2C1_Transmit
  2142  0368  2B75               	goto	L2
  2143  0369                     l2990:	
  2144                           ;I2C_Common.c: 33: case I2C2_MODULE:
  2145                           
  2146                           ;I2C_Common.c: 31: break;
  2147                           
  2148                           
  2149                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  2150  0369  084E               	movf	I2C_Transmit@pData,w
  2151  036A  00D0               	movwf	??_I2C_Transmit
  2152  036B  0850               	movf	??_I2C_Transmit,w
  2153  036C  00F2               	movwf	I2C2_Transmit@pData
  2154  036D  084F               	movf	I2C_Transmit@size,w
  2155  036E  00D1               	movwf	??_I2C_Transmit+1
  2156  036F  0851               	movf	??_I2C_Transmit+1,w
  2157  0370  00F3               	movwf	I2C2_Transmit@size
  2158  0371  084D               	movf	I2C_Transmit@address,w
  2159  0372  3180  201E  3183   	fcall	_I2C2_Transmit
  2160  0375                     L2:	
  2161  0375  0020               	movlb	0	; select bank0
  2162  0376  00D2               	movwf	??_I2C_Transmit+2
  2163  0377  0852               	movf	??_I2C_Transmit+2,w
  2164  0378  00D4               	movwf	I2C_Transmit@result
  2165                           
  2166                           ;I2C_Common.c: 36: }
  2167                           
  2168                           ;I2C_Common.c: 35: break;
  2169  0379  2B82               	goto	l2996
  2170  037A                     l2994:	
  2171  037A  0853               	movf	I2C_Transmit@I2Cx,w
  2172                           
  2173                           ; Switch size 1, requested type "space"
  2174                           ; Number of cases is 2, Range of values is 0 to 1
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            7     4 (average)
  2178                           ; direct_byte           10     6 (fixed)
  2179                           ; jumptable            260     6 (fixed)
  2180                           ;	Chosen strategy is simple_byte
  2181  037B  3A00               	xorlw	0	; case 0
  2182  037C  1903               	skipnz
  2183  037D  2B5C               	goto	l2988
  2184  037E  3A01               	xorlw	1	; case 1
  2185  037F  1903               	skipnz
  2186  0380  2B69               	goto	l2990
  2187  0381  2B82               	goto	l2996
  2188  0382                     l2996:	
  2189                           
  2190                           ;I2C_Common.c: 37: return result;
  2191  0382  0854               	movf	I2C_Transmit@result,w
  2192  0383  0008               	return
  2193  0384                     __end_of_I2C_Transmit:	
  2194                           
  2195                           	psect	text7
  2196  001E                     __ptext7:	
  2197 ;; *************** function _I2C2_Transmit *****************
  2198 ;; Defined at:
  2199 ;;		line 52 in file "I2C2.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  address         1    wreg     unsigned char 
  2202 ;;  pData           1    2[COMMON] PTR unsigned char 
  2203 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2204 ;;  size            1    3[COMMON] unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  address         1    6[COMMON] unsigned char 
  2207 ;;  i               1    8[COMMON] unsigned char 
  2208 ;;  i               1    7[COMMON] unsigned char 
  2209 ;;  result          1    9[COMMON] char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      char 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2219 ;;      Params:         2       0       0       0       0       0
  2220 ;;      Locals:         4       0       0       0       0       0
  2221 ;;      Temps:          2       0       0       0       0       0
  2222 ;;      Totals:         8       0       0       0       0       0
  2223 ;;Total ram usage:        8 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    3
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_I2C_Transmit
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _I2C2_Transmit
  2235  001E                     _I2C2_Transmit:	
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  2239                           ;I2C2_Transmit@address stored from wreg
  2240  001E  00F6               	movwf	I2C2_Transmit@address
  2241                           
  2242                           ;I2C2.c: 54: int8_t result = 0;
  2243  001F  01F9               	clrf	I2C2_Transmit@result
  2244                           
  2245                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  2246  0020  2892               	goto	l2970
  2247  0021                     l2926:	
  2248                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2249                           
  2250                           ;I2C2.c: 57: {
  2251                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  2252                           
  2253  0021  3005               	movlw	5
  2254  0022  0024               	movlb	4	; select bank4
  2255  0023  051C               	andwf	28,w	;volatile
  2256  0024  00F4               	movwf	??_I2C2_Transmit
  2257  0025  081E               	movf	30,w	;volatile
  2258  0026  391F               	andlw	31
  2259  0027  0474               	iorwf	??_I2C2_Transmit,w
  2260  0028  1D03               	btfss	3,2
  2261  0029  2821               	goto	l2926
  2262                           
  2263                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  2264  002A  141E               	bsf	30,0	;volatile
  2265  002B                     l2928:	
  2266                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2267                           
  2268  002B  3005               	movlw	5
  2269  002C  051C               	andwf	28,w	;volatile
  2270  002D  00F4               	movwf	??_I2C2_Transmit
  2271  002E  081E               	movf	30,w	;volatile
  2272  002F  391F               	andlw	31
  2273  0030  0474               	iorwf	??_I2C2_Transmit,w
  2274  0031  1D03               	btfss	3,2
  2275  0032  282B               	goto	l2928
  2276                           
  2277                           ;I2C2.c: 63: SSP2BUF = address << 1;
  2278  0033  3576               	lslf	I2C2_Transmit@address,w
  2279  0034  0099               	movwf	25	;volatile
  2280  0035                     l375:	
  2281                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  2282                           
  2283  0035  191C               	btfsc	28,2	;volatile
  2284  0036  2835               	goto	l375
  2285                           
  2286                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  2287  0037  3000               	movlw	0
  2288  0038  1B1E               	btfsc	30,6	;volatile
  2289  0039  3001               	movlw	1
  2290  003A  00F9               	movwf	I2C2_Transmit@result
  2291                           
  2292                           ;I2C2.c: 67: if (!result)
  2293  003B  0879               	movf	I2C2_Transmit@result,w
  2294  003C  1D03               	btfss	3,2
  2295  003D  2865               	goto	l2952
  2296                           
  2297                           ;I2C2.c: 68: {
  2298                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  2299  003E  01F7               	clrf	I2C2_Transmit@i
  2300  003F  2844               	goto	l2950
  2301  0040                     l2948:	
  2302                           ;I2C2.c: 79: break;
  2303                           
  2304  0040  3001               	movlw	1
  2305  0041  00F4               	movwf	??_I2C2_Transmit
  2306  0042  0874               	movf	??_I2C2_Transmit,w
  2307  0043  07F7               	addwf	I2C2_Transmit@i,f
  2308  0044                     l2950:	
  2309  0044  0873               	movf	I2C2_Transmit@size,w
  2310  0045  0277               	subwf	I2C2_Transmit@i,w
  2311  0046  1803               	btfsc	3,0
  2312  0047  2865               	goto	l2952
  2313  0048                     l2938:	
  2314                           ;I2C2.c: 70: {
  2315                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2316                           
  2317  0048  3005               	movlw	5
  2318  0049  051C               	andwf	28,w	;volatile
  2319  004A  00F4               	movwf	??_I2C2_Transmit
  2320  004B  081E               	movf	30,w	;volatile
  2321  004C  391F               	andlw	31
  2322  004D  0474               	iorwf	??_I2C2_Transmit,w
  2323  004E  1D03               	btfss	3,2
  2324  004F  2848               	goto	l2938
  2325                           
  2326                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  2327  0050  0877               	movf	I2C2_Transmit@i,w
  2328  0051  0772               	addwf	I2C2_Transmit@pData,w
  2329  0052  00F4               	movwf	??_I2C2_Transmit
  2330  0053  0874               	movf	??_I2C2_Transmit,w
  2331  0054  0086               	movwf	6
  2332  0055  0187               	clrf	7
  2333  0056  0801               	movf	1,w
  2334  0057  0099               	movwf	25	;volatile
  2335  0058                     l384:	
  2336                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  2337                           
  2338  0058  191C               	btfsc	28,2	;volatile
  2339  0059  2858               	goto	l384
  2340                           
  2341                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  2342  005A  3000               	movlw	0
  2343  005B  1B1E               	btfsc	30,6	;volatile
  2344  005C  3001               	movlw	1
  2345  005D  00F9               	movwf	I2C2_Transmit@result
  2346                           
  2347                           ;I2C2.c: 76: if (result)
  2348  005E  0879               	movf	I2C2_Transmit@result,w
  2349  005F  1903               	btfsc	3,2
  2350  0060  2840               	goto	l2948
  2351                           
  2352                           ;I2C2.c: 77: {
  2353                           ;I2C2.c: 78: result = 2;
  2354  0061  3002               	movlw	2
  2355  0062  00F4               	movwf	??_I2C2_Transmit
  2356  0063  0874               	movf	??_I2C2_Transmit,w
  2357  0064  00F9               	movwf	I2C2_Transmit@result
  2358  0065                     l2952:	
  2359                           ;I2C2.c: 80: }
  2360                           ;I2C2.c: 81: }
  2361                           ;I2C2.c: 82: }
  2362                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2363                           
  2364  0065  3005               	movlw	5
  2365  0066  051C               	andwf	28,w	;volatile
  2366  0067  00F4               	movwf	??_I2C2_Transmit
  2367  0068  081E               	movf	30,w	;volatile
  2368  0069  391F               	andlw	31
  2369  006A  0474               	iorwf	??_I2C2_Transmit,w
  2370  006B  1D03               	btfss	3,2
  2371  006C  2865               	goto	l2952
  2372                           
  2373                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  2374  006D  151E               	bsf	30,2	;volatile
  2375                           
  2376                           ;I2C2.c: 86: break;
  2377  006E  289B               	goto	l2972
  2378  006F                     l393:	
  2379                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  2380                           
  2381                           
  2382                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  2383  006F  0024               	movlb	4	; select bank4
  2384  0070  1D9C               	btfss	28,3	;volatile
  2385  0071  1E1C               	btfss	28,4	;volatile
  2386  0072  2890               	goto	l2966
  2387                           
  2388                           ;I2C2.c: 90: {
  2389                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  2390  0073  01F8               	clrf	I2C2_Transmit@i_430
  2391  0074                     l2962:	
  2392  0074  0873               	movf	I2C2_Transmit@size,w
  2393  0075  0278               	subwf	I2C2_Transmit@i_430,w
  2394  0076  1803               	btfsc	3,0
  2395  0077  288B               	goto	l2964
  2396                           
  2397                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  2398  0078  0878               	movf	I2C2_Transmit@i_430,w
  2399  0079  0772               	addwf	I2C2_Transmit@pData,w
  2400  007A  00F4               	movwf	??_I2C2_Transmit
  2401  007B  0874               	movf	??_I2C2_Transmit,w
  2402  007C  0086               	movwf	6
  2403  007D  0187               	clrf	7
  2404  007E  0801               	movf	1,w
  2405  007F  00F5               	movwf	??_I2C2_Transmit+1
  2406  0080  0878               	movf	I2C2_Transmit@i_430,w
  2407  0081  3E24               	addlw	(low (_I2C2_Config| 0))& (0+255)
  2408  0082  0086               	movwf	6
  2409  0083  0187               	clrf	7
  2410  0084  0875               	movf	??_I2C2_Transmit+1,w
  2411  0085  0081               	movwf	1
  2412  0086  3001               	movlw	1
  2413  0087  00F4               	movwf	??_I2C2_Transmit
  2414  0088  0874               	movf	??_I2C2_Transmit,w
  2415  0089  07F8               	addwf	I2C2_Transmit@i_430,f
  2416  008A  2874               	goto	l2962
  2417  008B                     l2964:	
  2418                           
  2419                           ;I2C2.c: 93: result = size;
  2420  008B  0873               	movf	I2C2_Transmit@size,w
  2421  008C  00F4               	movwf	??_I2C2_Transmit
  2422  008D  0874               	movf	??_I2C2_Transmit,w
  2423  008E  00F9               	movwf	I2C2_Transmit@result
  2424                           
  2425                           ;I2C2.c: 94: }
  2426  008F  289B               	goto	l2972
  2427  0090                     l2966:	
  2428                           
  2429                           ;I2C2.c: 95: else
  2430                           ;I2C2.c: 96: result = 0;
  2431  0090  01F9               	clrf	I2C2_Transmit@result
  2432                           
  2433                           ;I2C2.c: 98: }
  2434                           
  2435                           ;I2C2.c: 97: break;
  2436  0091  289B               	goto	l2972
  2437  0092                     l2970:	
  2438  0092  0020               	movlb	0	; select bank0
  2439  0093  0836               	movf	_I2C2_Config+18,w
  2440                           
  2441                           ; Switch size 1, requested type "space"
  2442                           ; Number of cases is 2, Range of values is 0 to 1
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte            7     4 (average)
  2446                           ; direct_byte           10     6 (fixed)
  2447                           ; jumptable            260     6 (fixed)
  2448                           ;	Chosen strategy is simple_byte
  2449  0094  3A00               	xorlw	0	; case 0
  2450  0095  1903               	skipnz
  2451  0096  2821               	goto	l2926
  2452  0097  3A01               	xorlw	1	; case 1
  2453  0098  1903               	skipnz
  2454  0099  286F               	goto	l393
  2455  009A  289B               	goto	l2972
  2456  009B                     l2972:	
  2457                           
  2458                           ;I2C2.c: 100: return result;
  2459  009B  0879               	movf	I2C2_Transmit@result,w
  2460  009C  0008               	return
  2461  009D                     __end_of_I2C2_Transmit:	
  2462                           
  2463                           	psect	text8
  2464  009D                     __ptext8:	
  2465 ;; *************** function _I2C1_Transmit *****************
  2466 ;; Defined at:
  2467 ;;		line 52 in file "I2C1.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  address         1    wreg     unsigned char 
  2470 ;;  pData           1    2[COMMON] PTR unsigned char 
  2471 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2472 ;;  size            1    3[COMMON] unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  address         1    6[COMMON] unsigned char 
  2475 ;;  i               1    8[COMMON] unsigned char 
  2476 ;;  i               1    7[COMMON] unsigned char 
  2477 ;;  result          1    9[COMMON] char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      char 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2487 ;;      Params:         2       0       0       0       0       0
  2488 ;;      Locals:         4       0       0       0       0       0
  2489 ;;      Temps:          2       0       0       0       0       0
  2490 ;;      Totals:         8       0       0       0       0       0
  2491 ;;Total ram usage:        8 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_I2C_Transmit
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _I2C1_Transmit
  2503  009D                     _I2C1_Transmit:	
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2507                           ;I2C1_Transmit@address stored from wreg
  2508  009D  00F6               	movwf	I2C1_Transmit@address
  2509                           
  2510                           ;I2C1.c: 54: int8_t result;
  2511                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  2512  009E  2910               	goto	l2884
  2513  009F                     l2840:	
  2514                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2515                           
  2516                           ;I2C1.c: 57: {
  2517                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  2518                           
  2519  009F  3005               	movlw	5
  2520  00A0  0024               	movlb	4	; select bank4
  2521  00A1  0514               	andwf	20,w	;volatile
  2522  00A2  00F4               	movwf	??_I2C1_Transmit
  2523  00A3  0816               	movf	22,w	;volatile
  2524  00A4  391F               	andlw	31
  2525  00A5  0474               	iorwf	??_I2C1_Transmit,w
  2526  00A6  1D03               	btfss	3,2
  2527  00A7  289F               	goto	l2840
  2528                           
  2529                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  2530  00A8  1416               	bsf	22,0	;volatile
  2531  00A9                     l2842:	
  2532                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2533                           
  2534  00A9  3005               	movlw	5
  2535  00AA  0514               	andwf	20,w	;volatile
  2536  00AB  00F4               	movwf	??_I2C1_Transmit
  2537  00AC  0816               	movf	22,w	;volatile
  2538  00AD  391F               	andlw	31
  2539  00AE  0474               	iorwf	??_I2C1_Transmit,w
  2540  00AF  1D03               	btfss	3,2
  2541  00B0  28A9               	goto	l2842
  2542                           
  2543                           ;I2C1.c: 63: SSP1BUF = address << 1;
  2544  00B1  3576               	lslf	I2C1_Transmit@address,w
  2545  00B2  0091               	movwf	17	;volatile
  2546  00B3                     l238:	
  2547                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  2548                           
  2549  00B3  1914               	btfsc	20,2	;volatile
  2550  00B4  28B3               	goto	l238
  2551                           
  2552                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  2553  00B5  3000               	movlw	0
  2554  00B6  1B16               	btfsc	22,6	;volatile
  2555  00B7  3001               	movlw	1
  2556  00B8  00F9               	movwf	I2C1_Transmit@result
  2557                           
  2558                           ;I2C1.c: 67: if (!result)
  2559  00B9  0879               	movf	I2C1_Transmit@result,w
  2560  00BA  1D03               	btfss	3,2
  2561  00BB  28E3               	goto	l2866
  2562                           
  2563                           ;I2C1.c: 68: {
  2564                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  2565  00BC  01F7               	clrf	I2C1_Transmit@i
  2566  00BD  28C2               	goto	l2864
  2567  00BE                     l2862:	
  2568                           ;I2C1.c: 79: break;
  2569                           
  2570  00BE  3001               	movlw	1
  2571  00BF  00F4               	movwf	??_I2C1_Transmit
  2572  00C0  0874               	movf	??_I2C1_Transmit,w
  2573  00C1  07F7               	addwf	I2C1_Transmit@i,f
  2574  00C2                     l2864:	
  2575  00C2  0873               	movf	I2C1_Transmit@size,w
  2576  00C3  0277               	subwf	I2C1_Transmit@i,w
  2577  00C4  1803               	btfsc	3,0
  2578  00C5  28E3               	goto	l2866
  2579  00C6                     l2852:	
  2580                           ;I2C1.c: 70: {
  2581                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2582                           
  2583  00C6  3005               	movlw	5
  2584  00C7  0514               	andwf	20,w	;volatile
  2585  00C8  00F4               	movwf	??_I2C1_Transmit
  2586  00C9  0816               	movf	22,w	;volatile
  2587  00CA  391F               	andlw	31
  2588  00CB  0474               	iorwf	??_I2C1_Transmit,w
  2589  00CC  1D03               	btfss	3,2
  2590  00CD  28C6               	goto	l2852
  2591                           
  2592                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  2593  00CE  0877               	movf	I2C1_Transmit@i,w
  2594  00CF  0772               	addwf	I2C1_Transmit@pData,w
  2595  00D0  00F4               	movwf	??_I2C1_Transmit
  2596  00D1  0874               	movf	??_I2C1_Transmit,w
  2597  00D2  0086               	movwf	6
  2598  00D3  0187               	clrf	7
  2599  00D4  0801               	movf	1,w
  2600  00D5  0091               	movwf	17	;volatile
  2601  00D6                     l247:	
  2602                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  2603                           
  2604  00D6  1914               	btfsc	20,2	;volatile
  2605  00D7  28D6               	goto	l247
  2606                           
  2607                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  2608  00D8  3000               	movlw	0
  2609  00D9  1B16               	btfsc	22,6	;volatile
  2610  00DA  3001               	movlw	1
  2611  00DB  00F9               	movwf	I2C1_Transmit@result
  2612                           
  2613                           ;I2C1.c: 76: if (result)
  2614  00DC  0879               	movf	I2C1_Transmit@result,w
  2615  00DD  1903               	btfsc	3,2
  2616  00DE  28BE               	goto	l2862
  2617                           
  2618                           ;I2C1.c: 77: {
  2619                           ;I2C1.c: 78: result = 2;
  2620  00DF  3002               	movlw	2
  2621  00E0  00F4               	movwf	??_I2C1_Transmit
  2622  00E1  0874               	movf	??_I2C1_Transmit,w
  2623  00E2  00F9               	movwf	I2C1_Transmit@result
  2624  00E3                     l2866:	
  2625                           ;I2C1.c: 80: }
  2626                           ;I2C1.c: 81: }
  2627                           ;I2C1.c: 82: }
  2628                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2629                           
  2630  00E3  3005               	movlw	5
  2631  00E4  0514               	andwf	20,w	;volatile
  2632  00E5  00F4               	movwf	??_I2C1_Transmit
  2633  00E6  0816               	movf	22,w	;volatile
  2634  00E7  391F               	andlw	31
  2635  00E8  0474               	iorwf	??_I2C1_Transmit,w
  2636  00E9  1D03               	btfss	3,2
  2637  00EA  28E3               	goto	l2866
  2638                           
  2639                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  2640  00EB  1516               	bsf	22,2	;volatile
  2641                           
  2642                           ;I2C1.c: 86: break;
  2643  00EC  2919               	goto	l2886
  2644  00ED                     l256:	
  2645                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  2646                           
  2647                           
  2648                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  2649  00ED  0024               	movlb	4	; select bank4
  2650  00EE  1D94               	btfss	20,3	;volatile
  2651  00EF  1E14               	btfss	20,4	;volatile
  2652  00F0  290E               	goto	l2880
  2653                           
  2654                           ;I2C1.c: 90: {
  2655                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  2656  00F1  01F8               	clrf	I2C1_Transmit@i_286
  2657  00F2                     l2876:	
  2658  00F2  0873               	movf	I2C1_Transmit@size,w
  2659  00F3  0278               	subwf	I2C1_Transmit@i_286,w
  2660  00F4  1803               	btfsc	3,0
  2661  00F5  2909               	goto	l2878
  2662                           
  2663                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2664  00F6  0878               	movf	I2C1_Transmit@i_286,w
  2665  00F7  0772               	addwf	I2C1_Transmit@pData,w
  2666  00F8  00F4               	movwf	??_I2C1_Transmit
  2667  00F9  0874               	movf	??_I2C1_Transmit,w
  2668  00FA  0086               	movwf	6
  2669  00FB  0187               	clrf	7
  2670  00FC  0801               	movf	1,w
  2671  00FD  00F5               	movwf	??_I2C1_Transmit+1
  2672  00FE  0878               	movf	I2C1_Transmit@i_286,w
  2673  00FF  3E37               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2674  0100  0086               	movwf	6
  2675  0101  0187               	clrf	7
  2676  0102  0875               	movf	??_I2C1_Transmit+1,w
  2677  0103  0081               	movwf	1
  2678  0104  3001               	movlw	1
  2679  0105  00F4               	movwf	??_I2C1_Transmit
  2680  0106  0874               	movf	??_I2C1_Transmit,w
  2681  0107  07F8               	addwf	I2C1_Transmit@i_286,f
  2682  0108  28F2               	goto	l2876
  2683  0109                     l2878:	
  2684                           
  2685                           ;I2C1.c: 93: result = size;
  2686  0109  0873               	movf	I2C1_Transmit@size,w
  2687  010A  00F4               	movwf	??_I2C1_Transmit
  2688  010B  0874               	movf	??_I2C1_Transmit,w
  2689  010C  00F9               	movwf	I2C1_Transmit@result
  2690                           
  2691                           ;I2C1.c: 94: }
  2692  010D  2919               	goto	l2886
  2693  010E                     l2880:	
  2694                           
  2695                           ;I2C1.c: 95: else
  2696                           ;I2C1.c: 96: result = 0;
  2697  010E  01F9               	clrf	I2C1_Transmit@result
  2698                           
  2699                           ;I2C1.c: 98: }
  2700                           
  2701                           ;I2C1.c: 97: break;
  2702  010F  2919               	goto	l2886
  2703  0110                     l2884:	
  2704  0110  0020               	movlb	0	; select bank0
  2705  0111  0849               	movf	_I2C1_Config+18,w
  2706                           
  2707                           ; Switch size 1, requested type "space"
  2708                           ; Number of cases is 2, Range of values is 0 to 1
  2709                           ; switch strategies available:
  2710                           ; Name         Instructions Cycles
  2711                           ; simple_byte            7     4 (average)
  2712                           ; direct_byte           10     6 (fixed)
  2713                           ; jumptable            260     6 (fixed)
  2714                           ;	Chosen strategy is simple_byte
  2715  0112  3A00               	xorlw	0	; case 0
  2716  0113  1903               	skipnz
  2717  0114  289F               	goto	l2840
  2718  0115  3A01               	xorlw	1	; case 1
  2719  0116  1903               	skipnz
  2720  0117  28ED               	goto	l256
  2721  0118  2919               	goto	l2886
  2722  0119                     l2886:	
  2723                           
  2724                           ;I2C1.c: 100: return result;
  2725  0119  0879               	movf	I2C1_Transmit@result,w
  2726  011A  0008               	return
  2727  011B                     __end_of_I2C1_Transmit:	
  2728                           
  2729                           	psect	text9
  2730  0384                     __ptext9:	
  2731 ;; *************** function _I2C_Init *****************
  2732 ;; Defined at:
  2733 ;;		line 6 in file "I2C_Common.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  I2Cx            1    wreg     enum E3036
  2736 ;;  address         1    7[COMMON] unsigned char 
  2737 ;;  mode            1    8[COMMON] enum E3027
  2738 ;;  Speed           1    9[COMMON] enum E3031
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  I2Cx            1   10[COMMON] enum E3036
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2750 ;;      Params:         3       0       0       0       0       0
  2751 ;;      Locals:         1       0       0       0       0       0
  2752 ;;      Temps:          0       2       0       0       0       0
  2753 ;;      Totals:         4       2       0       0       0       0
  2754 ;;Total ram usage:        6 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    5
  2757 ;; This function calls:
  2758 ;;		_I2C1_Setting
  2759 ;;		_I2C2_Setting
  2760 ;; This function is called by:
  2761 ;;		_DAC_Initialize
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _I2C_Init
  2767  0384                     _I2C_Init:	
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2771                           ;I2C_Init@I2Cx stored from wreg
  2772  0384  00FA               	movwf	I2C_Init@I2Cx
  2773                           
  2774                           ;I2C_Common.c: 8: switch(I2Cx)
  2775  0385  2BA2               	goto	l2984
  2776  0386                     l2978:	
  2777                           ;I2C_Common.c: 9: {
  2778                           ;I2C_Common.c: 10: case I2C1_MODULE:
  2779                           
  2780                           
  2781                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  2782  0386  0878               	movf	I2C_Init@mode,w
  2783  0387  0020               	movlb	0	; select bank0
  2784  0388  00CD               	movwf	??_I2C_Init
  2785  0389  084D               	movf	??_I2C_Init,w
  2786  038A  00F3               	movwf	I2C1_Setting@mode
  2787  038B  0879               	movf	I2C_Init@Speed,w
  2788  038C  00CE               	movwf	??_I2C_Init+1
  2789  038D  084E               	movf	??_I2C_Init+1,w
  2790  038E  00F4               	movwf	I2C1_Setting@Speed
  2791  038F  0877               	movf	I2C_Init@address,w
  2792  0390  3182  22F2  3183   	fcall	_I2C1_Setting
  2793                           
  2794                           ;I2C_Common.c: 12: break;
  2795  0393  2BAA               	goto	l485
  2796  0394                     l2980:	
  2797                           ;I2C_Common.c: 14: case I2C2_MODULE:
  2798                           
  2799                           
  2800                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  2801  0394  0878               	movf	I2C_Init@mode,w
  2802  0395  0020               	movlb	0	; select bank0
  2803  0396  00CD               	movwf	??_I2C_Init
  2804  0397  084D               	movf	??_I2C_Init,w
  2805  0398  00F3               	movwf	I2C2_Setting@mode
  2806  0399  0879               	movf	I2C_Init@Speed,w
  2807  039A  00CE               	movwf	??_I2C_Init+1
  2808  039B  084E               	movf	??_I2C_Init+1,w
  2809  039C  00F4               	movwf	I2C2_Setting@Speed
  2810  039D  0877               	movf	I2C_Init@address,w
  2811  039E  3182  22BA  3183   	fcall	_I2C2_Setting
  2812                           
  2813                           ;I2C_Common.c: 17: }
  2814                           
  2815                           ;I2C_Common.c: 16: break;
  2816  03A1  2BAA               	goto	l485
  2817  03A2                     l2984:	
  2818  03A2  087A               	movf	I2C_Init@I2Cx,w
  2819                           
  2820                           ; Switch size 1, requested type "space"
  2821                           ; Number of cases is 2, Range of values is 0 to 1
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte            7     4 (average)
  2825                           ; direct_byte           10     6 (fixed)
  2826                           ; jumptable            260     6 (fixed)
  2827                           ;	Chosen strategy is simple_byte
  2828  03A3  3A00               	xorlw	0	; case 0
  2829  03A4  1903               	skipnz
  2830  03A5  2B86               	goto	l2978
  2831  03A6  3A01               	xorlw	1	; case 1
  2832  03A7  1903               	skipnz
  2833  03A8  2B94               	goto	l2980
  2834  03A9  2BAA               	goto	l485
  2835  03AA                     l485:	
  2836                           
  2837                           ;I2C_Common.c: 19: PEIE = 1;
  2838  03AA  170B               	bsf	11,6	;volatile
  2839                           
  2840                           ;I2C_Common.c: 20: GIE = 1;
  2841  03AB  178B               	bsf	11,7	;volatile
  2842  03AC  0008               	return
  2843  03AD                     __end_of_I2C_Init:	
  2844                           
  2845                           	psect	text10
  2846  02BA                     __ptext10:	
  2847 ;; *************** function _I2C2_Setting *****************
  2848 ;; Defined at:
  2849 ;;		line 15 in file "I2C2.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  address         1    wreg     unsigned char 
  2852 ;;  mode            1    3[COMMON] enum E3027
  2853 ;;  Speed           1    4[COMMON] enum E3031
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  address         1    6[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2865 ;;      Params:         2       0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0       0
  2867 ;;      Temps:          1       0       0       0       0       0
  2868 ;;      Totals:         4       0       0       0       0       0
  2869 ;;Total ram usage:        4 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    4
  2872 ;; This function calls:
  2873 ;;		_I2C2_PinInit
  2874 ;; This function is called by:
  2875 ;;		_I2C_Init
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _I2C2_Setting
  2881  02BA                     _I2C2_Setting:	
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2885                           ;I2C2_Setting@address stored from wreg
  2886  02BA  00F6               	movwf	I2C2_Setting@address
  2887                           
  2888                           ;I2C2.c: 17: I2C2_PinInit();
  2889  02BB  3184  240C  3182   	fcall	_I2C2_PinInit
  2890                           
  2891                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  2892  02BE  0873               	movf	I2C2_Setting@mode,w
  2893  02BF  00F5               	movwf	??_I2C2_Setting
  2894  02C0  0875               	movf	??_I2C2_Setting,w
  2895  02C1  0020               	movlb	0	; select bank0
  2896  02C2  00B6               	movwf	_I2C2_Config+18
  2897                           
  2898                           ;I2C2.c: 20: switch(mode)
  2899  02C3  2AE3               	goto	l2922
  2900  02C4                     l358:	
  2901                           ;I2C2.c: 21: {
  2902                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  2903                           
  2904                           
  2905                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  2906  02C4  0024               	movlb	4	; select bank4
  2907  02C5  159D               	bsf	29,3	;volatile
  2908                           
  2909                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  2910  02C6  0874               	movf	I2C2_Setting@Speed,w
  2911  02C7  1D03               	btfss	3,2
  2912  02C8  2ACC               	goto	l2900
  2913                           
  2914                           ;I2C2.c: 25: {
  2915                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  2916  02C9  179C               	bsf	28,7	;volatile
  2917                           
  2918                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  2919  02CA  304F               	movlw	79
  2920  02CB  2AD4               	goto	L3
  2921  02CC                     l2900:	
  2922                           ;I2C2.c: 28: }
  2923                           
  2924                           
  2925                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  2926  02CC  0374               	decf	I2C2_Setting@Speed,w
  2927  02CD  1D03               	btfss	3,2
  2928  02CE  2AE1               	goto	l2918
  2929                           
  2930                           ;I2C2.c: 30: {
  2931                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  2932  02CF  307F               	movlw	127
  2933  02D0  00F5               	movwf	??_I2C2_Setting
  2934  02D1  0875               	movf	??_I2C2_Setting,w
  2935  02D2  059C               	andwf	28,f	;volatile
  2936                           
  2937                           ;I2C2.c: 32: SSP2ADD = 0x13;
  2938  02D3  3013               	movlw	19
  2939  02D4                     L3:	
  2940  02D4  009A               	movwf	26	;volatile
  2941  02D5  2AE1               	goto	l2918
  2942  02D6                     l2908:	
  2943                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  2944                           
  2945                           ;I2C2.c: 35: break;
  2946                           
  2947                           ;I2C2.c: 33: }
  2948                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  2949                           
  2950                           
  2951                           ;I2C2.c: 38: SSP2STAT = 0x00;
  2952  02D6  0024               	movlb	4	; select bank4
  2953  02D7  019C               	clrf	28	;volatile
  2954                           
  2955                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  2956  02D8  3006               	movlw	6
  2957  02D9  00F5               	movwf	??_I2C2_Setting
  2958  02DA  0875               	movf	??_I2C2_Setting,w
  2959  02DB  049D               	iorwf	29,f	;volatile
  2960                           
  2961                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  2962  02DC  141E               	bsf	30,0	;volatile
  2963                           
  2964                           ;I2C2.c: 41: SSP2ADD = address << 1;
  2965  02DD  3576               	lslf	I2C2_Setting@address,w
  2966  02DE  009A               	movwf	26	;volatile
  2967                           
  2968                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  2969  02DF  30FE               	movlw	254
  2970  02E0  009B               	movwf	27	;volatile
  2971  02E1                     l2918:	
  2972                           
  2973                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  2974  02E1  169D               	bsf	29,5	;volatile
  2975                           
  2976                           ;I2C2.c: 45: }
  2977                           
  2978                           ;I2C2.c: 44: break;
  2979  02E2  2AEB               	goto	l362
  2980  02E3                     l2922:	
  2981  02E3  0873               	movf	I2C2_Setting@mode,w
  2982                           
  2983                           ; Switch size 1, requested type "space"
  2984                           ; Number of cases is 2, Range of values is 0 to 1
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte            7     4 (average)
  2988                           ; direct_byte           10     6 (fixed)
  2989                           ; jumptable            260     6 (fixed)
  2990                           ;	Chosen strategy is simple_byte
  2991  02E4  3A00               	xorlw	0	; case 0
  2992  02E5  1903               	skipnz
  2993  02E6  2AC4               	goto	l358
  2994  02E7  3A01               	xorlw	1	; case 1
  2995  02E8  1903               	skipnz
  2996  02E9  2AD6               	goto	l2908
  2997  02EA  2AEB               	goto	l362
  2998  02EB                     l362:	
  2999                           
  3000                           ;I2C2.c: 46: SSP2IE = 1;
  3001  02EB  0021               	movlb	1	; select bank1
  3002  02EC  1414               	bsf	20,0	;volatile
  3003                           
  3004                           ;I2C2.c: 47: BCL2IE = 1;
  3005  02ED  1494               	bsf	20,1	;volatile
  3006                           
  3007                           ;I2C2.c: 48: SSP2IF = 0;
  3008  02EE  0020               	movlb	0	; select bank0
  3009  02EF  1014               	bcf	20,0	;volatile
  3010                           
  3011                           ;I2C2.c: 49: BCL2IF = 0;
  3012  02F0  1094               	bcf	20,1	;volatile
  3013  02F1  0008               	return
  3014  02F2                     __end_of_I2C2_Setting:	
  3015                           
  3016                           	psect	text11
  3017  040C                     __ptext11:	
  3018 ;; *************** function _I2C2_PinInit *****************
  3019 ;; Defined at:
  3020 ;;		line 9 in file "I2C2.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3034 ;;      Params:         0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0
  3036 ;;      Temps:          1       0       0       0       0       0
  3037 ;;      Totals:         1       0       0       0       0       0
  3038 ;;Total ram usage:        1 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    3
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_I2C2_Setting
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function _I2C2_PinInit
  3050  040C                     _I2C2_PinInit:	
  3051                           
  3052                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  3056  040C  3024               	movlw	36
  3057  040D  00F2               	movwf	??_I2C2_PinInit
  3058  040E  0872               	movf	??_I2C2_PinInit,w
  3059  040F  0021               	movlb	1	; select bank1
  3060  0410  048D               	iorwf	13,f	;volatile
  3061                           
  3062                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  3063  0411  30DB               	movlw	219
  3064  0412  00F2               	movwf	??_I2C2_PinInit
  3065  0413  0872               	movf	??_I2C2_PinInit,w
  3066  0414  0023               	movlb	3	; select bank3
  3067  0415  058D               	andwf	13,f	;volatile
  3068  0416  0008               	return
  3069  0417                     __end_of_I2C2_PinInit:	
  3070                           
  3071                           	psect	text12
  3072  02F2                     __ptext12:	
  3073 ;; *************** function _I2C1_Setting *****************
  3074 ;; Defined at:
  3075 ;;		line 15 in file "I2C1.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  address         1    wreg     unsigned char 
  3078 ;;  mode            1    3[COMMON] enum E3027
  3079 ;;  Speed           1    4[COMMON] enum E3031
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  address         1    6[COMMON] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3091 ;;      Params:         2       0       0       0       0       0
  3092 ;;      Locals:         1       0       0       0       0       0
  3093 ;;      Temps:          1       0       0       0       0       0
  3094 ;;      Totals:         4       0       0       0       0       0
  3095 ;;Total ram usage:        4 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    4
  3098 ;; This function calls:
  3099 ;;		_I2C1_PinInit
  3100 ;; This function is called by:
  3101 ;;		_I2C_Init
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _I2C1_Setting
  3107  02F2                     _I2C1_Setting:	
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3111                           ;I2C1_Setting@address stored from wreg
  3112  02F2  00F6               	movwf	I2C1_Setting@address
  3113                           
  3114                           ;I2C1.c: 17: I2C1_PinInit();
  3115  02F3  3184  2417  3182   	fcall	_I2C1_PinInit
  3116                           
  3117                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  3118  02F6  0873               	movf	I2C1_Setting@mode,w
  3119  02F7  00F5               	movwf	??_I2C1_Setting
  3120  02F8  0875               	movf	??_I2C1_Setting,w
  3121  02F9  0020               	movlb	0	; select bank0
  3122  02FA  00C9               	movwf	_I2C1_Config+18
  3123                           
  3124                           ;I2C1.c: 20: switch(mode)
  3125  02FB  2B1B               	goto	l2836
  3126  02FC                     l221:	
  3127                           ;I2C1.c: 21: {
  3128                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  3129                           
  3130                           
  3131                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  3132  02FC  0024               	movlb	4	; select bank4
  3133  02FD  1595               	bsf	21,3	;volatile
  3134                           
  3135                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  3136  02FE  0874               	movf	I2C1_Setting@Speed,w
  3137  02FF  1D03               	btfss	3,2
  3138  0300  2B04               	goto	l2814
  3139                           
  3140                           ;I2C1.c: 25: {
  3141                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  3142  0301  1794               	bsf	20,7	;volatile
  3143                           
  3144                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  3145  0302  304F               	movlw	79
  3146  0303  2B0C               	goto	L4
  3147  0304                     l2814:	
  3148                           ;I2C1.c: 28: }
  3149                           
  3150                           
  3151                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  3152  0304  0374               	decf	I2C1_Setting@Speed,w
  3153  0305  1D03               	btfss	3,2
  3154  0306  2B19               	goto	l2832
  3155                           
  3156                           ;I2C1.c: 30: {
  3157                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  3158  0307  307F               	movlw	127
  3159  0308  00F5               	movwf	??_I2C1_Setting
  3160  0309  0875               	movf	??_I2C1_Setting,w
  3161  030A  0594               	andwf	20,f	;volatile
  3162                           
  3163                           ;I2C1.c: 32: SSP1ADD = 0x13;
  3164  030B  3013               	movlw	19
  3165  030C                     L4:	
  3166  030C  0092               	movwf	18	;volatile
  3167  030D  2B19               	goto	l2832
  3168  030E                     l2822:	
  3169                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  3170                           
  3171                           ;I2C1.c: 35: break;
  3172                           
  3173                           ;I2C1.c: 33: }
  3174                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  3175                           
  3176                           
  3177                           ;I2C1.c: 38: SSP1STAT = 0x00;
  3178  030E  0024               	movlb	4	; select bank4
  3179  030F  0194               	clrf	20	;volatile
  3180                           
  3181                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  3182  0310  3006               	movlw	6
  3183  0311  00F5               	movwf	??_I2C1_Setting
  3184  0312  0875               	movf	??_I2C1_Setting,w
  3185  0313  0495               	iorwf	21,f	;volatile
  3186                           
  3187                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  3188  0314  1416               	bsf	22,0	;volatile
  3189                           
  3190                           ;I2C1.c: 41: SSP1ADD = address << 1;
  3191  0315  3576               	lslf	I2C1_Setting@address,w
  3192  0316  0092               	movwf	18	;volatile
  3193                           
  3194                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  3195  0317  30FE               	movlw	254
  3196  0318  0093               	movwf	19	;volatile
  3197  0319                     l2832:	
  3198                           
  3199                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  3200  0319  1695               	bsf	21,5	;volatile
  3201                           
  3202                           ;I2C1.c: 45: }
  3203                           
  3204                           ;I2C1.c: 44: break;
  3205  031A  2B23               	goto	l225
  3206  031B                     l2836:	
  3207  031B  0873               	movf	I2C1_Setting@mode,w
  3208                           
  3209                           ; Switch size 1, requested type "space"
  3210                           ; Number of cases is 2, Range of values is 0 to 1
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte            7     4 (average)
  3214                           ; direct_byte           10     6 (fixed)
  3215                           ; jumptable            260     6 (fixed)
  3216                           ;	Chosen strategy is simple_byte
  3217  031C  3A00               	xorlw	0	; case 0
  3218  031D  1903               	skipnz
  3219  031E  2AFC               	goto	l221
  3220  031F  3A01               	xorlw	1	; case 1
  3221  0320  1903               	skipnz
  3222  0321  2B0E               	goto	l2822
  3223  0322  2B23               	goto	l225
  3224  0323                     l225:	
  3225                           
  3226                           ;I2C1.c: 46: SSP1IE = 1;
  3227  0323  0021               	movlb	1	; select bank1
  3228  0324  1591               	bsf	17,3	;volatile
  3229                           
  3230                           ;I2C1.c: 47: BCL1IE = 1;
  3231  0325  1592               	bsf	18,3	;volatile
  3232                           
  3233                           ;I2C1.c: 48: SSP1IF = 0;
  3234  0326  0020               	movlb	0	; select bank0
  3235  0327  1191               	bcf	17,3	;volatile
  3236                           
  3237                           ;I2C1.c: 49: BCL1IF = 0;
  3238  0328  1192               	bcf	18,3	;volatile
  3239  0329  0008               	return
  3240  032A                     __end_of_I2C1_Setting:	
  3241                           
  3242                           	psect	text13
  3243  0417                     __ptext13:	
  3244 ;; *************** function _I2C1_PinInit *****************
  3245 ;; Defined at:
  3246 ;;		line 9 in file "I2C1.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3260 ;;      Params:         0       0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0
  3262 ;;      Temps:          1       0       0       0       0       0
  3263 ;;      Totals:         1       0       0       0       0       0
  3264 ;;Total ram usage:        1 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    3
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_I2C1_Setting
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function _I2C1_PinInit
  3276  0417                     _I2C1_PinInit:	
  3277                           
  3278                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  3282  0417  3012               	movlw	18
  3283  0418  00F2               	movwf	??_I2C1_PinInit
  3284  0419  0872               	movf	??_I2C1_PinInit,w
  3285  041A  0021               	movlb	1	; select bank1
  3286  041B  048D               	iorwf	13,f	;volatile
  3287                           
  3288                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  3289  041C  30ED               	movlw	237
  3290  041D  00F2               	movwf	??_I2C1_PinInit
  3291  041E  0872               	movf	??_I2C1_PinInit,w
  3292  041F  0023               	movlb	3	; select bank3
  3293  0420  058D               	andwf	13,f	;volatile
  3294  0421  0008               	return
  3295  0422                     __end_of_I2C1_PinInit:	
  3296                           
  3297                           	psect	text14
  3298  03E8                     __ptext14:	
  3299 ;; *************** function _Basic_Init *****************
  3300 ;; Defined at:
  3301 ;;		line 36 in file "main.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      char 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3315 ;;      Params:         0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function _Basic_Init
  3331  03E8                     _Basic_Init:	
  3332                           
  3333                           ;main.c: 38: OSCCON = 0xF0;
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in _Basic_Init: [wreg+status,2]
  3337  03E8  30F0               	movlw	240
  3338  03E9  0021               	movlb	1	; select bank1
  3339  03EA  0099               	movwf	25	;volatile
  3340                           
  3341                           ;main.c: 42: TRISA = 0x07;
  3342  03EB  3007               	movlw	7
  3343  03EC  008C               	movwf	12	;volatile
  3344                           
  3345                           ;main.c: 43: ANSELA = 0x07;
  3346  03ED  3007               	movlw	7
  3347  03EE  0023               	movlb	3	; select bank3
  3348  03EF  008C               	movwf	12	;volatile
  3349                           
  3350                           ;main.c: 45: TRISB = 0x40;
  3351  03F0  3040               	movlw	64
  3352  03F1  0021               	movlb	1	; select bank1
  3353  03F2  008D               	movwf	13	;volatile
  3354                           
  3355                           ;main.c: 46: ANSELB = 0x00;
  3356  03F3  0023               	movlb	3	; select bank3
  3357  03F4  018D               	clrf	13	;volatile
  3358                           
  3359                           ;main.c: 48: APFCON0 = 0x08;
  3360  03F5  3008               	movlw	8
  3361  03F6  0022               	movlb	2	; select bank2
  3362  03F7  009D               	movwf	29	;volatile
  3363                           
  3364                           ;main.c: 49: APFCON1 = 0x00;
  3365  03F8  019E               	clrf	30	;volatile
  3366                           
  3367                           ;main.c: 51: PORTA = 0x00;
  3368  03F9  0020               	movlb	0	; select bank0
  3369  03FA  018C               	clrf	12	;volatile
  3370                           
  3371                           ;main.c: 52: PORTB = 0x00;
  3372  03FB  018D               	clrf	13	;volatile
  3373  03FC  0008               	return
  3374  03FD                     __end_of_Basic_Init:	
  3375                           ;main.c: 54: return 0;
  3376                           ;	Return value of _Basic_Init is never used
  3377                           
  3378                           
  3379                           	psect	intentry
  3380  0004                     __pintentry:	
  3381 ;; *************** function _hand *****************
  3382 ;; Defined at:
  3383 ;;		line 58 in file "main.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3397 ;;      Params:         0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0
  3399 ;;      Temps:          1       0       0       0       0       0
  3400 ;;      Totals:         1       0       0       0       0       0
  3401 ;;Total ram usage:        1 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    2
  3404 ;; This function calls:
  3405 ;;		_I2C_CommonInterrupt
  3406 ;; This function is called by:
  3407 ;;		Interrupt level 1
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411  0004                     _hand:	
  3412                           
  3413                           ;incstack = 0
  3414  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3415                           
  3416                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3417  0005  3180               	pagesel	$
  3418  0006  0020               	movlb	0	; select bank0
  3419  0007  087F               	movf	127,w
  3420  0008  00F1               	movwf	??_hand
  3421                           
  3422                           ;main.c: 60: I2C_CommonInterrupt();
  3423  0009  3184  2428         	fcall	_I2C_CommonInterrupt
  3424  000B  0871               	movf	??_hand,w
  3425  000C  0020               	movlb	0	; select bank0
  3426  000D  00FF               	movwf	127
  3427  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3428  000F  0009               	retfie
  3429  0010                     __end_of_hand:	
  3430                           
  3431                           	psect	text16
  3432  0428                     __ptext16:	
  3433 ;; *************** function _I2C_CommonInterrupt *****************
  3434 ;; Defined at:
  3435 ;;		line 58 in file "I2C_Common.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3449 ;;      Params:         0       0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		_I2C1_Interrupt
  3458 ;;		_I2C2_Interrupt
  3459 ;; This function is called by:
  3460 ;;		_hand
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _I2C_CommonInterrupt
  3466  0428                     _I2C_CommonInterrupt:	
  3467                           
  3468                           ;I2C_Common.c: 60: I2C1_Interrupt();
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3472  0428  3182  222C  3184   	fcall	_I2C1_Interrupt
  3473                           
  3474                           ;I2C_Common.c: 61: I2C2_Interrupt();
  3475  042B  3181  21D8         	fcall	_I2C2_Interrupt
  3476  042D  0008               	return
  3477  042E                     __end_of_I2C_CommonInterrupt:	
  3478                           
  3479                           	psect	text17
  3480  01D8                     __ptext17:	
  3481 ;; *************** function _I2C2_Interrupt *****************
  3482 ;; Defined at:
  3483 ;;		line 152 in file "I2C2.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3497 ;;      Params:         0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0       0
  3500 ;;      Totals:         1       0       0       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_I2C_CommonInterrupt
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _I2C2_Interrupt
  3512  01D8                     _I2C2_Interrupt:	
  3513                           
  3514                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3518  01D8  0020               	movlb	0	; select bank0
  3519  01D9  1C14               	btfss	20,0	;volatile
  3520  01DA  2A24               	goto	i1l1554
  3521  01DB  0021               	movlb	1	; select bank1
  3522  01DC  1C14               	btfss	20,0	;volatile
  3523  01DD  2A24               	goto	i1l1554
  3524                           
  3525                           ;I2C2.c: 155: {
  3526                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  3527  01DE  0024               	movlb	4	; select bank4
  3528  01DF  1E9C               	btfss	28,5	;volatile
  3529  01E0  29FB               	goto	i1l441
  3530                           
  3531                           ;I2C2.c: 157: {
  3532                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  3533  01E1  1D1C               	btfss	28,2	;volatile
  3534  01E2  29EE               	goto	i1l1530
  3535                           
  3536                           ;I2C2.c: 159: {
  3537                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  3538  01E3  1B1E               	btfsc	30,6	;volatile
  3539  01E4  2A22               	goto	i1l1552
  3540  01E5                     i1l1522:	
  3541                           ;I2C2.c: 161: {
  3542                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3543                           
  3544  01E5  081C               	movf	28,w	;volatile
  3545  01E6  3901               	andlw	1
  3546  01E7  00F0               	movwf	??_I2C2_Interrupt
  3547  01E8  0E1D               	swapf	29,w	;volatile
  3548  01E9  3901               	andlw	1
  3549  01EA  0470               	iorwf	??_I2C2_Interrupt,w
  3550  01EB  1D03               	btfss	3,2
  3551  01EC  29E5               	goto	i1l1522
  3552  01ED  2A0E               	goto	L5
  3553  01EE                     i1l1530:	
  3554                           ;I2C2.c: 166: }
  3555                           ;I2C2.c: 167: }
  3556                           
  3557                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  3558                           
  3559                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  3560                           
  3561                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  3562                           
  3563                           
  3564                           ;I2C2.c: 168: else
  3565                           ;I2C2.c: 169: {
  3566                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  3567  01EE  0819               	movf	25,w	;volatile
  3568  01EF  00F0               	movwf	??_I2C2_Interrupt
  3569  01F0  0020               	movlb	0	; select bank0
  3570  01F1  0835               	movf	low ((_I2C2_Config| 0+17)),w
  3571  01F2  0086               	movwf	6
  3572  01F3  0187               	clrf	7
  3573  01F4  0870               	movf	??_I2C2_Interrupt,w
  3574  01F5  0081               	movwf	1
  3575                           
  3576                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  3577  01F6  3001               	movlw	1
  3578  01F7  00F0               	movwf	??_I2C2_Interrupt
  3579  01F8  0870               	movf	??_I2C2_Interrupt,w
  3580  01F9  07B5               	addwf	low ((_I2C2_Config| 0+17)),f
  3581  01FA  2A20               	goto	i1l1550
  3582  01FB                     i1l441:	
  3583                           ;I2C2.c: 173: }
  3584                           ;I2C2.c: 174: }
  3585                           
  3586                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  3587                           
  3588                           
  3589                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  3590  01FB  1A9C               	btfsc	28,5	;volatile
  3591  01FC  2A22               	goto	i1l1552
  3592                           
  3593                           ;I2C2.c: 176: {
  3594                           ;I2C2.c: 177: SSP2BUF;
  3595  01FD  0819               	movf	25,w	;volatile
  3596                           
  3597                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  3598  01FE  1D1C               	btfss	28,2	;volatile
  3599  01FF  2A1B               	goto	i1l1548
  3600                           
  3601                           ;I2C2.c: 180: {
  3602                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  3603  0200  3024               	movlw	(low (_I2C2_Config| 0))& (0+255)
  3604  0201  00F0               	movwf	??_I2C2_Interrupt
  3605  0202  0870               	movf	??_I2C2_Interrupt,w
  3606  0203  0020               	movlb	0	; select bank0
  3607  0204  00B4               	movwf	low ((_I2C2_Config| 0+16))
  3608  0205                     i1l1542:	
  3609                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3610                           
  3611  0205  0024               	movlb	4	; select bank4
  3612  0206  081C               	movf	28,w	;volatile
  3613  0207  3901               	andlw	1
  3614  0208  00F0               	movwf	??_I2C2_Interrupt
  3615  0209  0E1D               	swapf	29,w	;volatile
  3616  020A  3901               	andlw	1
  3617  020B  0470               	iorwf	??_I2C2_Interrupt,w
  3618  020C  1D03               	btfss	3,2
  3619  020D  2A05               	goto	i1l1542
  3620  020E                     L5:	
  3621                           
  3622                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  3623  020E  0020               	movlb	0	; select bank0
  3624  020F  0834               	movf	low ((_I2C2_Config| 0+16)),w
  3625  0210  0086               	movwf	6
  3626  0211  0187               	clrf	7
  3627  0212  0801               	movf	1,w
  3628  0213  0024               	movlb	4	; select bank4
  3629  0214  0099               	movwf	25	;volatile
  3630                           
  3631                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  3632  0215  3001               	movlw	1
  3633  0216  00F0               	movwf	??_I2C2_Interrupt
  3634  0217  0870               	movf	??_I2C2_Interrupt,w
  3635  0218  0020               	movlb	0	; select bank0
  3636  0219  07B4               	addwf	low ((_I2C2_Config| 0+16)),f
  3637                           
  3638                           ;I2C2.c: 186: }
  3639  021A  2A20               	goto	i1l1550
  3640  021B                     i1l1548:	
  3641                           
  3642                           ;I2C2.c: 187: else
  3643                           ;I2C2.c: 188: {
  3644                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  3645  021B  302C               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  3646  021C  00F0               	movwf	??_I2C2_Interrupt
  3647  021D  0870               	movf	??_I2C2_Interrupt,w
  3648  021E  0020               	movlb	0	; select bank0
  3649  021F  00B5               	movwf	low ((_I2C2_Config| 0+17))
  3650  0220                     i1l1550:	
  3651                           
  3652                           ;I2C2.c: 190: }
  3653                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  3654  0220  0024               	movlb	4	; select bank4
  3655  0221  161D               	bsf	29,4	;volatile
  3656  0222                     i1l1552:	
  3657                           
  3658                           ;I2C2.c: 192: }
  3659                           ;I2C2.c: 193: SSP2IF = 0;
  3660  0222  0020               	movlb	0	; select bank0
  3661  0223  1014               	bcf	20,0	;volatile
  3662  0224                     i1l1554:	
  3663                           
  3664                           ;I2C2.c: 194: }
  3665                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  3666  0224  0021               	movlb	1	; select bank1
  3667  0225  1C94               	btfss	20,1	;volatile
  3668  0226  0008               	return
  3669  0227  0020               	movlb	0	; select bank0
  3670  0228  1C94               	btfss	20,1	;volatile
  3671  0229  0008               	return
  3672                           
  3673                           ;I2C2.c: 197: BCL2IF = 0;
  3674  022A  1094               	bcf	20,1	;volatile
  3675  022B  0008               	return
  3676  022C                     __end_of_I2C2_Interrupt:	
  3677                           
  3678                           	psect	text18
  3679  022C                     __ptext18:	
  3680 ;; *************** function _I2C1_Interrupt *****************
  3681 ;; Defined at:
  3682 ;;		line 152 in file "I2C1.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3696 ;;      Params:         0       0       0       0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0
  3698 ;;      Temps:          1       0       0       0       0       0
  3699 ;;      Totals:         1       0       0       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_I2C_CommonInterrupt
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _I2C1_Interrupt
  3711  022C                     _I2C1_Interrupt:	
  3712                           
  3713                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3717  022C  0020               	movlb	0	; select bank0
  3718  022D  1D91               	btfss	17,3	;volatile
  3719  022E  2A78               	goto	i1l1504
  3720  022F  0021               	movlb	1	; select bank1
  3721  0230  1D91               	btfss	17,3	;volatile
  3722  0231  2A78               	goto	i1l1504
  3723                           
  3724                           ;I2C1.c: 155: {
  3725                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  3726  0232  0024               	movlb	4	; select bank4
  3727  0233  1E94               	btfss	20,5	;volatile
  3728  0234  2A4F               	goto	i1l304
  3729                           
  3730                           ;I2C1.c: 157: {
  3731                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  3732  0235  1D14               	btfss	20,2	;volatile
  3733  0236  2A42               	goto	i1l1480
  3734                           
  3735                           ;I2C1.c: 159: {
  3736                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  3737  0237  1B16               	btfsc	22,6	;volatile
  3738  0238  2A76               	goto	i1l1502
  3739  0239                     i1l1472:	
  3740                           ;I2C1.c: 161: {
  3741                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3742                           
  3743  0239  0814               	movf	20,w	;volatile
  3744  023A  3901               	andlw	1
  3745  023B  00F0               	movwf	??_I2C1_Interrupt
  3746  023C  0E15               	swapf	21,w	;volatile
  3747  023D  3901               	andlw	1
  3748  023E  0470               	iorwf	??_I2C1_Interrupt,w
  3749  023F  1D03               	btfss	3,2
  3750  0240  2A39               	goto	i1l1472
  3751  0241  2A62               	goto	L6
  3752  0242                     i1l1480:	
  3753                           ;I2C1.c: 166: }
  3754                           ;I2C1.c: 167: }
  3755                           
  3756                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  3757                           
  3758                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  3759                           
  3760                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  3761                           
  3762                           
  3763                           ;I2C1.c: 168: else
  3764                           ;I2C1.c: 169: {
  3765                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  3766  0242  0811               	movf	17,w	;volatile
  3767  0243  00F0               	movwf	??_I2C1_Interrupt
  3768  0244  0020               	movlb	0	; select bank0
  3769  0245  0848               	movf	low ((_I2C1_Config| 0+17)),w
  3770  0246  0086               	movwf	6
  3771  0247  0187               	clrf	7
  3772  0248  0870               	movf	??_I2C1_Interrupt,w
  3773  0249  0081               	movwf	1
  3774                           
  3775                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  3776  024A  3001               	movlw	1
  3777  024B  00F0               	movwf	??_I2C1_Interrupt
  3778  024C  0870               	movf	??_I2C1_Interrupt,w
  3779  024D  07C8               	addwf	low ((_I2C1_Config| 0+17)),f
  3780  024E  2A74               	goto	i1l1500
  3781  024F                     i1l304:	
  3782                           ;I2C1.c: 173: }
  3783                           ;I2C1.c: 174: }
  3784                           
  3785                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  3786                           
  3787                           
  3788                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  3789  024F  1A94               	btfsc	20,5	;volatile
  3790  0250  2A76               	goto	i1l1502
  3791                           
  3792                           ;I2C1.c: 176: {
  3793                           ;I2C1.c: 177: SSP1BUF;
  3794  0251  0811               	movf	17,w	;volatile
  3795                           
  3796                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  3797  0252  1D14               	btfss	20,2	;volatile
  3798  0253  2A6F               	goto	i1l1498
  3799                           
  3800                           ;I2C1.c: 180: {
  3801                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3802  0254  3037               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3803  0255  00F0               	movwf	??_I2C1_Interrupt
  3804  0256  0870               	movf	??_I2C1_Interrupt,w
  3805  0257  0020               	movlb	0	; select bank0
  3806  0258  00C7               	movwf	low ((_I2C1_Config| 0+16))
  3807  0259                     i1l1492:	
  3808                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3809                           
  3810  0259  0024               	movlb	4	; select bank4
  3811  025A  0814               	movf	20,w	;volatile
  3812  025B  3901               	andlw	1
  3813  025C  00F0               	movwf	??_I2C1_Interrupt
  3814  025D  0E15               	swapf	21,w	;volatile
  3815  025E  3901               	andlw	1
  3816  025F  0470               	iorwf	??_I2C1_Interrupt,w
  3817  0260  1D03               	btfss	3,2
  3818  0261  2A59               	goto	i1l1492
  3819  0262                     L6:	
  3820                           
  3821                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  3822  0262  0020               	movlb	0	; select bank0
  3823  0263  0847               	movf	low ((_I2C1_Config| 0+16)),w
  3824  0264  0086               	movwf	6
  3825  0265  0187               	clrf	7
  3826  0266  0801               	movf	1,w
  3827  0267  0024               	movlb	4	; select bank4
  3828  0268  0091               	movwf	17	;volatile
  3829                           
  3830                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  3831  0269  3001               	movlw	1
  3832  026A  00F0               	movwf	??_I2C1_Interrupt
  3833  026B  0870               	movf	??_I2C1_Interrupt,w
  3834  026C  0020               	movlb	0	; select bank0
  3835  026D  07C7               	addwf	low ((_I2C1_Config| 0+16)),f
  3836                           
  3837                           ;I2C1.c: 186: }
  3838  026E  2A74               	goto	i1l1500
  3839  026F                     i1l1498:	
  3840                           
  3841                           ;I2C1.c: 187: else
  3842                           ;I2C1.c: 188: {
  3843                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3844  026F  303F               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3845  0270  00F0               	movwf	??_I2C1_Interrupt
  3846  0271  0870               	movf	??_I2C1_Interrupt,w
  3847  0272  0020               	movlb	0	; select bank0
  3848  0273  00C8               	movwf	low ((_I2C1_Config| 0+17))
  3849  0274                     i1l1500:	
  3850                           
  3851                           ;I2C1.c: 190: }
  3852                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  3853  0274  0024               	movlb	4	; select bank4
  3854  0275  1615               	bsf	21,4	;volatile
  3855  0276                     i1l1502:	
  3856                           
  3857                           ;I2C1.c: 192: }
  3858                           ;I2C1.c: 193: SSP1IF = 0;
  3859  0276  0020               	movlb	0	; select bank0
  3860  0277  1191               	bcf	17,3	;volatile
  3861  0278                     i1l1504:	
  3862                           
  3863                           ;I2C1.c: 194: }
  3864                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  3865  0278  0021               	movlb	1	; select bank1
  3866  0279  1D92               	btfss	18,3	;volatile
  3867  027A  0008               	return
  3868  027B  0020               	movlb	0	; select bank0
  3869  027C  1D92               	btfss	18,3	;volatile
  3870  027D  0008               	return
  3871                           
  3872                           ;I2C1.c: 197: BCL1IF = 0;
  3873  027E  1192               	bcf	18,3	;volatile
  3874  027F  0008               	return
  3875  0280                     __end_of_I2C1_Interrupt:	
  3876  007E                     btemp	set	126	;btemp
  3877  007E                     int$flags	set	126
  3878  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     19      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S160$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S160$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> LCD_Put(), Absolute function(), 


Critical Paths under _main in COMMON

    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_DAC_WriteVoltage
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5554
                                             13 BANK0      6     6      0
                         _Basic_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    2165
                                              8 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 21 00:51:51 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
                         l221 02FC                           l225 0323                           l238 00B3  
                         l247 00D6                           l256 00ED                           l362 02EB  
                         l358 02C4                           l375 0035                           l384 0058  
                         l393 006F                           l485 03AA                           _GIE 005F  
                         _RA3 0063                           _RA4 0064                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 03E8  
                __CFG_LVP$OFF 0000                          l3042 01B5                          l3034 019E  
                        l3028 0194                          l2900 02CC                          l2822 030E  
                        l2814 0304                          l2832 0319                          l2840 009F  
                        l2922 02E3                          l2842 00A9                          l2836 031B  
                        l2908 02D6                          l2852 00C6                          l2918 02E1  
                        l2862 00BE                          l2950 0044                          l2926 0021  
                        l2880 010E                          l2864 00C2                          l2952 0065  
                        l2928 002B                          l2866 00E3                          l2962 0074  
                        l2938 0048                          l2970 0092                          l2980 0394  
                        l2876 00F2                          l2884 0110                          l2964 008B  
                        l2972 009B                          l2948 0040                          l2878 0109  
                        l2886 0119                          l2966 0090                          l2990 0369  
                        l2984 03A2                          l2978 0386                          l2994 037A  
                        l2996 0382                          l2988 035C             ?_DAC_WriteVoltage 0055  
                        STR_1 03E6                          STR_2 03CC                          STR_3 03DA  
                        STR_4 03E0                          STR_5 03D3                          u1765 0288  
                        u2807 01A6                          u2817 01CF                          u2827 0123  
                        _PEIE 005E                          u2837 013B                          u2847 014E  
                        u2857 0162                          u2867 0406                          u2877 0282  
             ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000            ??_DAC_WriteVoltage 0057  
                        _hand 0004                          _main 0184              __end_of_I2C_Init 03AD  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0010                 __CFG_IESO$OFF 0000  
                 main@voltage 005C                 _LCD_WriteData 0280                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 040C         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 0184                 __CFG_PLLEN$ON 0000                         ?_hand 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATA7 0867  
                       i1l304 024F                         i1l441 01FB                         _PORTA 000C  
                       _PORTB 000D                         _TRISA 008C                         _TRISB 008D  
           I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000  
                       status 0003                         wtemp0 007E                  _I2C_Transmit 0359  
              ?_LCD_WriteData 0070              ??_DAC_Initialize 0055               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 01D8                        ??_hand 0071  
                      ??_main 005A                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
                      _ANSELA 018C                        _ANSELB 018D                        i1l1500 0274  
                      i1l1502 0276                        i1l1504 0278                        i1l1522 01E5  
                      i1l1530 01EE                        i1l1550 0220                        i1l1542 0205  
                      i1l1472 0239                        i1l1480 0242                        i1l1552 0222  
                      i1l1554 0224                        i1l1492 0259                        i1l1548 021B  
                      i1l1498 026F            I2C2_Transmit@i_430 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0                        _outptr 007B  
            I2C_Transmit@I2Cx 0053                     ?_I2C_Init 0077              I2C_Transmit@size 004F  
     __end_of__initialization 001A                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
                  _VoltageReg 004A                __pcstackCOMMON 0070           __size_of_Basic_Init 0015  
                  ??_I2C_Init 004D           I2C1_Transmit@result 0079                    __pbssBANK0 0020  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A   __end_of_I2C_CommonInterrupt 042E  
                I2C_Init@mode 0078                    __pmaintext 0184     __size_of_DAC_WriteVoltage 002F  
                  __pintentry 0004             ?_LCD_DisplayClear 0070                       _APFCON0 011D  
                     _APFCON1 011E            ??_LCD_DisplayClear 0075                       _LCD_Put 0000  
                     _SSP1ADD 0212                       _SSP2ADD 021A                       _SSP1BUF 0211  
                     _SSP2BUF 0219                       _SSP1MSK 0213                       _SSP2MSK 021B  
         I2C2_Transmit@result 0079         __end_of_I2C1_Transmit 011B         __end_of_I2C2_Transmit 009D  
             __CFG_STVREN$OFF 0000                       __ptext1 011B                       __ptext2 03FD  
                     __ptext3 0280                       __ptext4 032A                       __ptext5 03AD  
                     __ptext6 0359                       __ptext7 001E                       __ptext8 009D  
                     __ptext9 0384                  ??_Basic_Init 0072                       clrloop0 0423  
        end_of_initialization 001A                 ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070  
                 _I2C1_Config 0037                   _I2C2_Config 0024                 ?_I2C1_Setting 0073  
               ?_I2C2_Setting 0073             I2C_Transmit@pData 004E            __end_of_Basic_Init 03FD  
                __pstringtext 03CC       __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000  
     __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 0029           I2C1_Setting@address 0076  
              ??_I2C1_PinInit 0072                ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075  
              ??_I2C2_Setting 0075             __size_of_LCD_Init 0069              _DAC_WriteVoltage 032A  
                   _ConfigReg 004C       __size_of_DAC_Initialize 001F           start_initialization 0012  
        I2C1_Transmit@address 0076           I2C2_Setting@address 0076         __end_of_LCD_WriteData 02BA  
           I2C1_Setting@Speed 0074                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 004D            I2C1_Transmit@i_286 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                 ?_I2C_Transmit 004D  
               I2C_Init@Speed 0079         DAC_WriteVoltage@volue 0055                _I2C1_Interrupt 022C  
        __end_of_I2C1_PinInit 0422  __size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0417  
        __end_of_I2C1_Setting 032A                      _I2C_Init 0384          __end_of_I2C2_Setting 02F2  
              _I2C2_Interrupt 01D8                      _LCD_Init 011B                ??_I2C_Transmit 0050  
                   clear_ram0 0422        __end_of_I2C1_Interrupt 0280                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
              _DAC_Initialize 03AD        __end_of_I2C2_Interrupt 022C        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0022        __size_of_I2C2_Transmit 007F      __end_of_DAC_WriteVoltage 0359  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 03CC              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
                    __ptext10 02BA                      __ptext11 040C                      __ptext12 02F2  
                    __ptext13 0417                      __ptext14 03E8                      __ptext16 0428  
                    __ptext17 01D8                      __ptext18 022C                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 03FD                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E                 __size_of_hand 000C                 __size_of_main 0054  
               _I2C1_Transmit 009D                 _I2C2_Transmit 001E         __size_of_I2C1_PinInit 000B  
                    int$flags 007E         __size_of_I2C2_PinInit 000B           I2C_Transmit@address 004D  
       __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0020         __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C  
        __end_of_I2C_Transmit 0384             I2C2_Setting@Speed 0074                      intlevel1 0000  
         _I2C_CommonInterrupt 0428                  _I2C1_PinInit 0417                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 040C                  _I2C1_Setting 02F2  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 02BA            I2C_Transmit@result 0054  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070        __size_of_LCD_WriteData 003A  
              I2C1_Transmit@i 0077               main@voltage_613 005E  
