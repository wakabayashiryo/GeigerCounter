

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Mar 24 12:42:43 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.41
    30                           ; Generated 25/01/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1827 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0219                     	;# 
   164  021A                     	;# 
   165  021B                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021E                     	;# 
   169  021F                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0294                     	;# 
   175  0295                     	;# 
   176  0295                     	;# 
   177  0296                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029B                     	;# 
   183  029C                     	;# 
   184  029C                     	;# 
   185  029D                     	;# 
   186  029E                     	;# 
   187  029E                     	;# 
   188  0311                     	;# 
   189  0311                     	;# 
   190  0312                     	;# 
   191  0313                     	;# 
   192  0318                     	;# 
   193  0318                     	;# 
   194  0319                     	;# 
   195  031A                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  011E                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0191                     	;# 
   285  0191                     	;# 
   286  0192                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  0211                     	;# 
   307  0211                     	;# 
   308  0212                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0213                     	;# 
   312  0214                     	;# 
   313  0214                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0219                     	;# 
   322  021A                     	;# 
   323  021B                     	;# 
   324  021C                     	;# 
   325  021D                     	;# 
   326  021E                     	;# 
   327  021F                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029E                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0318                     	;# 
   351  0318                     	;# 
   352  0319                     	;# 
   353  031A                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  039A                     	;# 
   358  039C                     	;# 
   359  039D                     	;# 
   360  039E                     	;# 
   361  039F                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  0111                     	;# 
   428  0112                     	;# 
   429  0113                     	;# 
   430  0114                     	;# 
   431  0115                     	;# 
   432  0116                     	;# 
   433  0117                     	;# 
   434  0118                     	;# 
   435  0119                     	;# 
   436  011A                     	;# 
   437  011B                     	;# 
   438  011D                     	;# 
   439  011E                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019E                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  0219                     	;# 
   480  021A                     	;# 
   481  021B                     	;# 
   482  021C                     	;# 
   483  021D                     	;# 
   484  021E                     	;# 
   485  021F                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0294                     	;# 
   491  0295                     	;# 
   492  0295                     	;# 
   493  0296                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  029B                     	;# 
   499  029C                     	;# 
   500  029C                     	;# 
   501  029D                     	;# 
   502  029E                     	;# 
   503  029E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0415                     	;# 
   521  0416                     	;# 
   522  0417                     	;# 
   523  041C                     	;# 
   524  041D                     	;# 
   525  041E                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0016                     _TMR1	set	22
   538  0019                     _T1GCON	set	25
   539  0018                     _T1CON	set	24
   540  000D                     _PORTB	set	13
   541  000C                     _PORTA	set	12
   542  005F                     _GIE	set	95
   543  005E                     _PEIE	set	94
   544  0088                     _TMR1IF	set	136
   545  0064                     _RA4	set	100
   546  0063                     _RA3	set	99
   547  00C0                     _TMR1ON	set	192
   548  008D                     _TRISB	set	141
   549  008C                     _TRISA	set	140
   550  0099                     _OSCCON	set	153
   551  0488                     _TMR1IE	set	1160
   552  011E                     _APFCON1	set	286
   553  011D                     _APFCON0	set	285
   554  018D                     _ANSELB	set	397
   555  018C                     _ANSELA	set	396
   556                           
   557                           	psect	stringtext
   558  03CD                     __pstringtext:	
   559  03CD                     STR_3:	
   560  03CD  3425               	retlw	37	;'%'
   561  03CE  3430               	retlw	48	;'0'
   562  03CF  3438               	retlw	56	;'8'
   563  03D0  346C               	retlw	108	;'l'
   564  03D1  3458               	retlw	88	;'X'
   565  03D2  3420               	retlw	32	;' '
   566  03D3  3400               	retlw	0
   567  03D4                     STR_6:	
   568  03D4  3420               	retlw	32	;' '
   569  03D5  3425               	retlw	37	;'%'
   570  03D6  3430               	retlw	48	;'0'
   571  03D7  3438               	retlw	56	;'8'
   572  03D8  344C               	retlw	76	;'L'
   573  03D9  3458               	retlw	88	;'X'
   574  03DA  3400               	retlw	0
   575  03DB                     STR_4:	
   576  03DB  3420               	retlw	32	;' '
   577  03DC  3425               	retlw	37	;'%'
   578  03DD  3430               	retlw	48	;'0'
   579  03DE  3432               	retlw	50	;'2'
   580  03DF  3458               	retlw	88	;'X'
   581  03E0  3400               	retlw	0
   582  03E1                     STR_5:	
   583  03E1  3420               	retlw	32	;' '
   584  03E2  3425               	retlw	37	;'%'
   585  03E3  3430               	retlw	48	;'0'
   586  03E4  3434               	retlw	52	;'4'
   587  03E5  3458               	retlw	88	;'X'
   588  03E6  3400               	retlw	0
   589  03E7                     STR_1:	
   590  03E7  3425               	retlw	37	;'%'
   591  03E8  3455               	retlw	85	;'U'
   592  03E9  3420               	retlw	32	;' '
   593  03EA  3400               	retlw	0
   594  03EB                     STR_2:	
   595  03EB  340D               	retlw	13
   596  03EC  3400               	retlw	0
   597                           
   598                           ; #config settings
   599  0000                     
   600                           	psect	cinit
   601  0012                     start_initialization:	
   602  0012                     __initialization:	
   603                           
   604                           ; Clear objects allocated to COMMON
   605  0012  01FC               	clrf	__pbssCOMMON& (0+127)
   606                           
   607                           ; Clear objects allocated to BANK0
   608  0013  0020               	movlb	0	; select bank0
   609  0014  01DC               	clrf	__pbssBANK0& (0+127)
   610  0015  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   611  0016  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   612  0017  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   613  0018                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616  0018                     __end_of__initialization:	
   617  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   618  0019  0020               	movlb	0
   619  001A  3183  2BAB         	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssCOMMON
   622  007C                     __pbssCOMMON:	
   623  007C                     _outptr:	
   624  007C                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  005C                     __pbssBANK0:	
   628  005C                     _xfunc_in:	
   629  005C                     	ds	2
   630  005E                     _xfunc_out:	
   631  005E                     	ds	2
   632                           
   633                           	psect	cstackCOMMON
   634  0070                     __pcstackCOMMON:	
   635  0070                     ?_Basic_Init:	
   636  0070                     ?_Timer1_Init:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_LCD_Init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Timer1_Handler:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ??_Timer1_Handler:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_DisplayClear:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_main:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_Handler:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ??_Handler:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_LCD_WriteData:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_xputc:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_xputs:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     ??_Basic_Init:	
   673  0071                     ??_Timer1_Init:	
   674                           ; 1 bytes @ 0x1
   675                           
   676  0071                     ??_LCD_WriteData:	
   677                           ; 1 bytes @ 0x1
   678                           
   679  0071                     ?___wmul:	
   680                           ; 1 bytes @ 0x1
   681                           
   682  0071                     ?___lldiv:	
   683                           ; 2 bytes @ 0x1
   684                           
   685  0071                     ?___llmod:	
   686                           ; 4 bytes @ 0x1
   687                           
   688  0071                     ___wmul@multiplier:	
   689                           ; 4 bytes @ 0x1
   690                           
   691  0071                     ___lldiv@divisor:	
   692                           ; 2 bytes @ 0x1
   693                           
   694  0071                     ___llmod@divisor:	
   695                           ; 4 bytes @ 0x1
   696                           
   697                           
   698                           ; 4 bytes @ 0x1
   699  0071                     	ds	2
   700  0073                     LCD_WriteData@point:	
   701  0073                     ___wmul@multiplicand:	
   702                           ; 1 bytes @ 0x3
   703                           
   704                           
   705                           ; 2 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ?_LCD_Put:	
   708  0074                     ?_LCD_CursorPosition:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??_LCD_DisplayClear:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     LCD_Put@word:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     LCD_CursorPosition@ty:	
   718                           ; 1 bytes @ 0x4
   719                           
   720                           
   721                           ; 1 bytes @ 0x4
   722  0074                     	ds	1
   723  0075                     ??_LCD_Init:	
   724  0075                     ??_LCD_Put:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ??_LCD_CursorPosition:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ??_xputc:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ??___wmul:	
   734                           ; 1 bytes @ 0x5
   735                           
   736  0075                     ___wmul@product:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     ___lldiv@dividend:	
   740                           ; 2 bytes @ 0x5
   741                           
   742  0075                     ___llmod@dividend:	
   743                           ; 4 bytes @ 0x5
   744                           
   745                           
   746                           ; 4 bytes @ 0x5
   747  0075                     	ds	1
   748  0076                     LCD_CursorPosition@tx:	
   749  0076                     xputc@c:	
   750                           ; 1 bytes @ 0x6
   751                           
   752                           
   753                           ; 1 bytes @ 0x6
   754  0076                     	ds	1
   755  0077                     ??_xputs:	
   756                           
   757                           ; 1 bytes @ 0x7
   758  0077                     	ds	1
   759  0078                     xputs@str:	
   760                           
   761                           ; 1 bytes @ 0x8
   762  0078                     	ds	1
   763  0079                     ??___lldiv:	
   764  0079                     ??___llmod:	
   765                           ; 1 bytes @ 0x9
   766                           
   767                           
   768                           ; 1 bytes @ 0x9
   769  0079                     	ds	1
   770  007A                     ___llmod@counter:	
   771                           
   772                           ; 1 bytes @ 0xA
   773  007A                     	ds	1
   774  007B                     ??_xprintf:	
   775                           
   776                           ; 1 bytes @ 0xB
   777  007B                     	ds	1
   778  007C                     ??_main:	
   779                           
   780                           	psect	cstackBANK0
   781  0020                     __pcstackBANK0:	
   782                           ; 1 bytes @ 0xC
   783                           
   784  0020                     ___lldiv@quotient:	
   785                           
   786                           ; 4 bytes @ 0x0
   787  0020                     	ds	4
   788  0024                     ___lldiv@counter:	
   789                           
   790                           ; 1 bytes @ 0x4
   791  0024                     	ds	1
   792  0025                     ?_xvprintf:	
   793  0025                     xvprintf@fmt:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 2 bytes @ 0x5
   798  0025                     	ds	2
   799  0027                     xvprintf@arp:	
   800                           
   801                           ; 1 bytes @ 0x7
   802  0027                     	ds	1
   803  0028                     ??_xvprintf:	
   804                           
   805                           ; 1 bytes @ 0x8
   806  0028                     	ds	4
   807  002C                     xvprintf@s:	
   808                           
   809                           ; 16 bytes @ 0xC
   810  002C                     	ds	16
   811  003C                     _xvprintf$166:	
   812                           
   813                           ; 4 bytes @ 0x1C
   814  003C                     	ds	4
   815  0040                     _xvprintf$167:	
   816                           
   817                           ; 2 bytes @ 0x20
   818  0040                     	ds	2
   819  0042                     _xvprintf$168:	
   820                           
   821                           ; 2 bytes @ 0x22
   822  0042                     	ds	2
   823  0044                     xvprintf@p:	
   824                           
   825                           ; 1 bytes @ 0x24
   826  0044                     	ds	1
   827  0045                     xvprintf@r:	
   828                           
   829                           ; 2 bytes @ 0x25
   830  0045                     	ds	2
   831  0047                     xvprintf@w:	
   832                           
   833                           ; 2 bytes @ 0x27
   834  0047                     	ds	2
   835  0049                     xvprintf@j:	
   836                           
   837                           ; 2 bytes @ 0x29
   838  0049                     	ds	2
   839  004B                     xvprintf@v:	
   840                           
   841                           ; 4 bytes @ 0x2B
   842  004B                     	ds	4
   843  004F                     xvprintf@f:	
   844                           
   845                           ; 2 bytes @ 0x2F
   846  004F                     	ds	2
   847  0051                     xvprintf@i:	
   848                           
   849                           ; 2 bytes @ 0x31
   850  0051                     	ds	2
   851  0053                     xvprintf@d:	
   852                           
   853                           ; 1 bytes @ 0x33
   854  0053                     	ds	1
   855  0054                     xvprintf@c:	
   856                           
   857                           ; 1 bytes @ 0x34
   858  0054                     	ds	1
   859  0055                     ?_xprintf:	
   860  0055                     xprintf@fmt:	
   861                           ; 1 bytes @ 0x35
   862                           
   863                           
   864                           ; 2 bytes @ 0x35
   865  0055                     	ds	6
   866  005B                     xprintf@arp:	
   867                           
   868                           ; 1 bytes @ 0x3B
   869  005B                     	ds	1
   870                           
   871                           	psect	maintext
   872  03AB                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 13 in file "main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      char 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : B1F/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   892 ;;      Params:         0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels required when called:    8
   898 ;; This function calls:
   899 ;;		_Basic_Init
   900 ;;		_LCD_CursorPosition
   901 ;;		_LCD_Init
   902 ;;		_Timer1_Init
   903 ;;		_xprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  03AB                     _main:	
   912                           
   913                           ;main.c: 15: Basic_Init();
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   917  03AB  3184  2436  3183   	fcall	_Basic_Init
   918                           
   919                           ;main.c: 17: Timer1_Init();
   920  03AE  3184  2408  3183   	fcall	_Timer1_Init
   921                           
   922                           ;main.c: 18: TMR1ON = 1;;
   923  03B1  0020               	movlb	0	; select bank0
   924  03B2  1418               	bsf	24,0	;volatile
   925                           
   926                           ;main.c: 20: LCD_Init();
   927  03B3  3182  2246  3183   	fcall	_LCD_Init
   928                           
   929                           ;main.c: 21: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   930  03B6  3086               	movlw	low _LCD_Put
   931  03B7  0020               	movlb	0	; select bank0
   932  03B8  00DE               	movwf	_xfunc_out
   933  03B9  3004               	movlw	high _LCD_Put
   934  03BA  00DF               	movwf	_xfunc_out+1
   935  03BB                     l2288:	
   936                           ;main.c: 23: while(1)
   937                           
   938                           
   939                           ;main.c: 24: {
   940                           ;main.c: 25: LCD_CursorPosition(0,0);
   941  03BB  01F4               	clrf	LCD_CursorPosition@ty
   942  03BC  3000               	movlw	0
   943  03BD  3184  2421  3183   	fcall	_LCD_CursorPosition
   944                           
   945                           ;main.c: 26: xprintf("%U ",(uint16_t)TMR1);
   946  03C0  30E7               	movlw	low (STR_1| (0+32768))
   947  03C1  0020               	movlb	0	; select bank0
   948  03C2  00D5               	movwf	xprintf@fmt
   949  03C3  3083               	movlw	high (STR_1| (0+32768))
   950  03C4  00D6               	movwf	xprintf@fmt+1
   951  03C5  0817               	movf	23,w	;volatile
   952  03C6  00D8               	movwf	?_xprintf+3
   953  03C7  0816               	movf	22,w	;volatile
   954  03C8  00D7               	movwf	?_xprintf+2
   955  03C9  3184  245E  3183   	fcall	_xprintf
   956  03CC  2BBB               	goto	l2288
   957  03CD                     __end_of_main:	
   958                           ;main.c: 27: }
   959                           ;main.c: 29: return 0;
   960                           ;	Return value of _main is never used
   961                           
   962                           
   963                           	psect	text1
   964  045E                     __ptext1:	
   965 ;; *************** function _xprintf *****************
   966 ;; Defined at:
   967 ;;		line 165 in file "xprintf.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
   970 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
   971 ;;		 -> STR_1(4), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  arp             1   59[BANK0 ] PTR void [1]
   974 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   984 ;;      Params:         0       6       0       0       0       0
   985 ;;      Locals:         0       1       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0
   987 ;;      Totals:         1       7       0       0       0       0
   988 ;;Total ram usage:        8 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    7
   991 ;; This function calls:
   992 ;;		_xvprintf
   993 ;; This function is called by:
   994 ;;		_main
   995 ;;		_put_dump
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _xprintf
  1001  045E                     _xprintf:	
  1002                           
  1003                           ;xprintf.c: 170: va_list arp;
  1004                           ;xprintf.c: 173: *arp = __va_start();
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1008  045E  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1009  045F  00FB               	movwf	??_xprintf
  1010  0460  087B               	movf	??_xprintf,w
  1011  0461  0020               	movlb	0	; select bank0
  1012  0462  00DB               	movwf	xprintf@arp
  1013                           
  1014                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1015  0463  0856               	movf	xprintf@fmt+1,w
  1016  0464  00A6               	movwf	xvprintf@fmt+1
  1017  0465  0855               	movf	xprintf@fmt,w
  1018  0466  00A5               	movwf	xvprintf@fmt
  1019  0467  305B               	movlw	(low (xprintf@arp| 0))& (0+255)
  1020  0468  00FB               	movwf	??_xprintf
  1021  0469  087B               	movf	??_xprintf,w
  1022  046A  00A7               	movwf	xvprintf@arp
  1023  046B  3180  201C         	fcall	_xvprintf
  1024  046D  0008               	return
  1025  046E                     __end_of_xprintf:	
  1026                           
  1027                           	psect	text2
  1028  001C                     __ptext2:	
  1029 ;; *************** function _xvprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 88 in file "xprintf.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1035 ;;		 -> STR_1(4), 
  1036 ;;  arp             1    7[BANK0 ] PTR PTR void 
  1037 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  s              16   12[BANK0 ] unsigned char [16]
  1040 ;;  v               4   43[BANK0 ] unsigned long 
  1041 ;;  i               2   49[BANK0 ] unsigned int 
  1042 ;;  f               2   47[BANK0 ] unsigned int 
  1043 ;;  j               2   41[BANK0 ] unsigned int 
  1044 ;;  w               2   39[BANK0 ] unsigned int 
  1045 ;;  r               2   37[BANK0 ] unsigned int 
  1046 ;;  c               1   52[BANK0 ] unsigned char 
  1047 ;;  d               1   51[BANK0 ] unsigned char 
  1048 ;;  p               1   36[BANK0 ] PTR unsigned char 
  1049 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1059 ;;      Params:         0       3       0       0       0       0
  1060 ;;      Locals:         0      41       0       0       0       0
  1061 ;;      Temps:          0       4       0       0       0       0
  1062 ;;      Totals:         0      48       0       0       0       0
  1063 ;;Total ram usage:       48 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    6
  1066 ;; This function calls:
  1067 ;;		___lldiv
  1068 ;;		___llmod
  1069 ;;		___wmul
  1070 ;;		_xputc
  1071 ;;		_xputs
  1072 ;; This function is called by:
  1073 ;;		_xprintf
  1074 ;;		_xsprintf
  1075 ;;		_xfprintf
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _xvprintf
  1081  001C                     _xvprintf:	
  1082  001C                     l119:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1085                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1086                           ;xprintf.c: 94: unsigned long v;
  1087                           ;xprintf.c: 95: char s[16], c, d, *p;
  1088                           ;xprintf.c: 98: for (;;) {
  1089                           
  1090                           
  1091                           ;xprintf.c: 99: c = *fmt++;
  1092  001C  0020               	movlb	0	; select bank0
  1093  001D  0825               	movf	xvprintf@fmt,w
  1094  001E  0084               	movwf	4
  1095  001F  0826               	movf	xvprintf@fmt+1,w
  1096  0020  0085               	movwf	5
  1097  0021  0800               	movf	0,w	;code access
  1098  0022  00A8               	movwf	??_xvprintf
  1099  0023  0828               	movf	??_xvprintf,w
  1100  0024  00D4               	movwf	xvprintf@c
  1101  0025  3001               	movlw	1
  1102  0026  07A5               	addwf	xvprintf@fmt,f
  1103  0027  3000               	movlw	0
  1104  0028  3DA6               	addwfc	xvprintf@fmt+1,f
  1105                           
  1106                           ;xprintf.c: 100: if (!c) break;
  1107  0029  0854               	movf	xvprintf@c,w
  1108  002A  1903               	btfsc	3,2
  1109  002B  0008               	return
  1110                           
  1111                           ;xprintf.c: 101: if (c != '%') {
  1112  002C  3025               	movlw	37
  1113  002D  0654               	xorwf	xvprintf@c,w
  1114  002E  1903               	btfsc	3,2
  1115  002F  2835               	goto	l2036
  1116                           
  1117                           ;xprintf.c: 102: xputc(c); continue;
  1118  0030  0854               	movf	xvprintf@c,w
  1119  0031  3183  237E  3180   	fcall	_xputc
  1120  0034  281C               	goto	l119
  1121  0035                     l2036:	
  1122                           
  1123                           ;xprintf.c: 103: }
  1124                           ;xprintf.c: 104: f = 0;
  1125  0035  0020               	movlb	0	; select bank0
  1126  0036  01CF               	clrf	xvprintf@f
  1127  0037  01D0               	clrf	xvprintf@f+1
  1128                           
  1129                           ;xprintf.c: 105: c = *fmt++;
  1130  0038  0825               	movf	xvprintf@fmt,w
  1131  0039  0084               	movwf	4
  1132  003A  0826               	movf	xvprintf@fmt+1,w
  1133  003B  0085               	movwf	5
  1134  003C  0800               	movf	0,w	;code access
  1135  003D  00A8               	movwf	??_xvprintf
  1136  003E  0828               	movf	??_xvprintf,w
  1137  003F  00D4               	movwf	xvprintf@c
  1138  0040  3001               	movlw	1
  1139  0041  07A5               	addwf	xvprintf@fmt,f
  1140  0042  3000               	movlw	0
  1141  0043  3DA6               	addwfc	xvprintf@fmt+1,f
  1142                           
  1143                           ;xprintf.c: 106: if (c == '0') {
  1144  0044  3030               	movlw	48
  1145  0045  0654               	xorwf	xvprintf@c,w
  1146  0046  1D03               	btfss	3,2
  1147  0047  284A               	goto	l2050
  1148                           
  1149                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1150  0048  3001               	movlw	1
  1151  0049  284F               	goto	L6
  1152  004A                     l2050:	
  1153                           ;xprintf.c: 108: } else {
  1154                           
  1155                           
  1156                           ;xprintf.c: 109: if (c == '-') {
  1157  004A  302D               	movlw	45
  1158  004B  0654               	xorwf	xvprintf@c,w
  1159  004C  1D03               	btfss	3,2
  1160  004D  285E               	goto	l2058
  1161                           
  1162                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1163  004E  3002               	movlw	2
  1164  004F                     L6:	
  1165  004F  00CF               	movwf	xvprintf@f
  1166  0050  3000               	movlw	0
  1167  0051  00D0               	movwf	xvprintf@f+1
  1168  0052  0825               	movf	xvprintf@fmt,w
  1169  0053  0084               	movwf	4
  1170  0054  0826               	movf	xvprintf@fmt+1,w
  1171  0055  0085               	movwf	5
  1172  0056  0800               	movf	0,w	;code access
  1173  0057  00A8               	movwf	??_xvprintf
  1174  0058  0828               	movf	??_xvprintf,w
  1175  0059  00D4               	movwf	xvprintf@c
  1176  005A  3001               	movlw	1
  1177  005B  07A5               	addwf	xvprintf@fmt,f
  1178  005C  3000               	movlw	0
  1179  005D  3DA6               	addwfc	xvprintf@fmt+1,f
  1180  005E                     l2058:	
  1181                           
  1182                           ;xprintf.c: 111: }
  1183                           ;xprintf.c: 112: }
  1184                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1185  005E  01C7               	clrf	xvprintf@w
  1186  005F  01C8               	clrf	xvprintf@w+1
  1187  0060  2888               	goto	l2066
  1188  0061                     l2060:	
  1189                           
  1190                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1191  0061  0854               	movf	xvprintf@c,w
  1192  0062  00A8               	movwf	??_xvprintf
  1193  0063  01A9               	clrf	??_xvprintf+1
  1194  0064  0848               	movf	xvprintf@w+1,w
  1195  0065  00F2               	movwf	___wmul@multiplier+1
  1196  0066  0847               	movf	xvprintf@w,w
  1197  0067  00F1               	movwf	___wmul@multiplier
  1198  0068  300A               	movlw	10
  1199  0069  00F3               	movwf	___wmul@multiplicand
  1200  006A  3000               	movlw	0
  1201  006B  00F4               	movwf	___wmul@multiplicand+1
  1202  006C  3183  23ED  3180   	fcall	___wmul
  1203  006F  0020               	movlb	0	; select bank0
  1204  0070  0828               	movf	??_xvprintf,w
  1205  0071  0771               	addwf	?___wmul,w
  1206  0072  00AA               	movwf	??_xvprintf+2
  1207  0073  0829               	movf	??_xvprintf+1,w
  1208  0074  3D72               	addwfc	?___wmul+1,w
  1209  0075  00AB               	movwf	??_xvprintf+3
  1210  0076  082A               	movf	??_xvprintf+2,w
  1211  0077  3ED0               	addlw	208
  1212  0078  00C7               	movwf	xvprintf@w
  1213  0079  30FF               	movlw	255
  1214  007A  3D2B               	addwfc	??_xvprintf+3,w
  1215  007B  00C8               	movwf	xvprintf@w+1
  1216  007C  0825               	movf	xvprintf@fmt,w
  1217  007D  0084               	movwf	4
  1218  007E  0826               	movf	xvprintf@fmt+1,w
  1219  007F  0085               	movwf	5
  1220  0080  0800               	movf	0,w	;code access
  1221  0081  00A8               	movwf	??_xvprintf
  1222  0082  0828               	movf	??_xvprintf,w
  1223  0083  00D4               	movwf	xvprintf@c
  1224  0084  3001               	movlw	1
  1225  0085  07A5               	addwf	xvprintf@fmt,f
  1226  0086  3000               	movlw	0
  1227  0087  3DA6               	addwfc	xvprintf@fmt+1,f
  1228  0088                     l2066:	
  1229  0088  3030               	movlw	48
  1230  0089  0254               	subwf	xvprintf@c,w
  1231  008A  1C03               	skipc
  1232  008B  2890               	goto	l2070
  1233  008C  303A               	movlw	58
  1234  008D  0254               	subwf	xvprintf@c,w
  1235  008E  1C03               	skipc
  1236  008F  2861               	goto	l2060
  1237  0090                     l2070:	
  1238                           
  1239                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1240  0090  306C               	movlw	108
  1241  0091  0654               	xorwf	xvprintf@c,w
  1242  0092  1903               	btfsc	3,2
  1243  0093  2898               	goto	l134
  1244  0094  304C               	movlw	76
  1245  0095  0654               	xorwf	xvprintf@c,w
  1246  0096  1D03               	btfss	3,2
  1247  0097  28A5               	goto	l2078
  1248  0098                     l134:	
  1249                           
  1250                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1251  0098  154F               	bsf	xvprintf@f,2
  1252  0099  0825               	movf	xvprintf@fmt,w
  1253  009A  0084               	movwf	4
  1254  009B  0826               	movf	xvprintf@fmt+1,w
  1255  009C  0085               	movwf	5
  1256  009D  0800               	movf	0,w	;code access
  1257  009E  00A8               	movwf	??_xvprintf
  1258  009F  0828               	movf	??_xvprintf,w
  1259  00A0  00D4               	movwf	xvprintf@c
  1260  00A1  3001               	movlw	1
  1261  00A2  07A5               	addwf	xvprintf@fmt,f
  1262  00A3  3000               	movlw	0
  1263  00A4  3DA6               	addwfc	xvprintf@fmt+1,f
  1264  00A5                     l2078:	
  1265                           
  1266                           ;xprintf.c: 117: }
  1267                           ;xprintf.c: 118: if (!c) break;
  1268  00A5  0854               	movf	xvprintf@c,w
  1269  00A6  1903               	btfsc	3,2
  1270  00A7  0008               	return
  1271                           
  1272                           ;xprintf.c: 119: d = c;
  1273  00A8  0854               	movf	xvprintf@c,w
  1274  00A9  00A8               	movwf	??_xvprintf
  1275  00AA  0828               	movf	??_xvprintf,w
  1276  00AB  00D3               	movwf	xvprintf@d
  1277                           
  1278                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  1279  00AC  3061               	movlw	97
  1280  00AD  0253               	subwf	xvprintf@d,w
  1281  00AE  1C03               	skipc
  1282  00AF  291B               	goto	l2120
  1283  00B0  3020               	movlw	32
  1284  00B1  02D3               	subwf	xvprintf@d,f
  1285                           
  1286                           ;xprintf.c: 121: switch (d) {
  1287  00B2  291B               	goto	l2120
  1288  00B3                     l2086:	
  1289                           ;xprintf.c: 122: case 'S' :
  1290                           
  1291                           
  1292                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  1293  00B3  0827               	movf	xvprintf@arp,w
  1294  00B4  0086               	movwf	6
  1295  00B5  0187               	clrf	7
  1296  00B6  3F40               	moviw [0]fsr1
  1297  00B7  0084               	movwf	4
  1298  00B8  0185               	clrf	5
  1299  00B9  0A81               	incf	1,f
  1300  00BA  0800               	movf	0,w
  1301  00BB  00A8               	movwf	??_xvprintf
  1302  00BC  0828               	movf	??_xvprintf,w
  1303  00BD  00C4               	movwf	xvprintf@p
  1304                           
  1305                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  1306  00BE  01C9               	clrf	xvprintf@j
  1307  00BF  01CA               	clrf	xvprintf@j+1
  1308  00C0                     l2092:	
  1309  00C0  0849               	movf	xvprintf@j,w
  1310  00C1  0744               	addwf	xvprintf@p,w
  1311  00C2  00A8               	movwf	??_xvprintf
  1312  00C3  0828               	movf	??_xvprintf,w
  1313  00C4  0086               	movwf	6
  1314  00C5  0187               	clrf	7
  1315  00C6  0801               	movf	1,w
  1316  00C7  1903               	btfsc	3,2
  1317  00C8  28D2               	goto	l2096
  1318  00C9  3001               	movlw	1
  1319  00CA  07C9               	addwf	xvprintf@j,f
  1320  00CB  3000               	movlw	0
  1321  00CC  3DCA               	addwfc	xvprintf@j+1,f
  1322  00CD  28C0               	goto	l2092
  1323  00CE                     l2094:	
  1324                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  1325                           
  1326  00CE  3020               	movlw	32
  1327  00CF  3183  237E  3180   	fcall	_xputc
  1328  00D2                     l2096:	
  1329  00D2  0020               	movlb	0	; select bank0
  1330  00D3  18CF               	btfsc	xvprintf@f,1
  1331  00D4  28E4               	goto	l2100
  1332  00D5  084A               	movf	xvprintf@j+1,w
  1333  00D6  00A9               	movwf	??_xvprintf+1
  1334  00D7  0849               	movf	xvprintf@j,w
  1335  00D8  00A8               	movwf	??_xvprintf
  1336  00D9  0AC9               	incf	xvprintf@j,f
  1337  00DA  1903               	skipnz
  1338  00DB  0ACA               	incf	xvprintf@j+1,f
  1339  00DC  0848               	movf	xvprintf@w+1,w
  1340  00DD  0229               	subwf	??_xvprintf+1,w
  1341  00DE  1D03               	skipz
  1342  00DF  28E2               	goto	u1895
  1343  00E0  0847               	movf	xvprintf@w,w
  1344  00E1  0228               	subwf	??_xvprintf,w
  1345  00E2                     u1895:	
  1346  00E2  1C03               	skipc
  1347  00E3  28CE               	goto	l2094
  1348  00E4                     l2100:	
  1349                           
  1350                           ;xprintf.c: 126: xputs(p);
  1351  00E4  0844               	movf	xvprintf@p,w
  1352  00E5  3184  244B  3180   	fcall	_xputs
  1353  00E8                     l2104:	
  1354                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  1355                           
  1356  00E8  0020               	movlb	0	; select bank0
  1357  00E9  084A               	movf	xvprintf@j+1,w
  1358  00EA  00A9               	movwf	??_xvprintf+1
  1359  00EB  0849               	movf	xvprintf@j,w
  1360  00EC  00A8               	movwf	??_xvprintf
  1361  00ED  0AC9               	incf	xvprintf@j,f
  1362  00EE  1903               	skipnz
  1363  00EF  0ACA               	incf	xvprintf@j+1,f
  1364  00F0  0848               	movf	xvprintf@w+1,w
  1365  00F1  0229               	subwf	??_xvprintf+1,w
  1366  00F2  1D03               	skipz
  1367  00F3  28F6               	goto	u1905
  1368  00F4  0847               	movf	xvprintf@w,w
  1369  00F5  0228               	subwf	??_xvprintf,w
  1370  00F6                     u1905:	
  1371  00F6  1803               	btfsc	3,0
  1372  00F7  281C               	goto	l119
  1373  00F8  3020               	movlw	32
  1374  00F9  3183  237E  3180   	fcall	_xputc
  1375  00FC  28E8               	goto	l2104
  1376  00FD                     l2106:	
  1377                           ;xprintf.c: 129: case 'C' :
  1378                           
  1379                           ;xprintf.c: 128: continue;
  1380                           
  1381                           
  1382                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  1383  00FD  0827               	movf	xvprintf@arp,w
  1384  00FE  0086               	movwf	6
  1385  00FF  0187               	clrf	7
  1386  0100  0801               	movf	1,w
  1387  0101  0084               	movwf	4
  1388  0102  0185               	clrf	5
  1389  0103  3002               	movlw	2
  1390  0104  0781               	addwf	1,f
  1391  0105  0800               	movf	0,w
  1392  0106  3183  237E  3180   	fcall	_xputc
  1393  0109  281C               	goto	l119
  1394  010A                     l2108:	
  1395                           ;xprintf.c: 131: case 'B' :
  1396                           
  1397                           
  1398                           ;xprintf.c: 132: r = 2; break;
  1399  010A  3002               	movlw	2
  1400  010B  0020               	movlb	0	; select bank0
  1401  010C  2912               	goto	L3
  1402  010D                     l2110:	
  1403                           ;xprintf.c: 133: case 'O' :
  1404                           
  1405                           
  1406                           ;xprintf.c: 134: r = 8; break;
  1407  010D  3008               	movlw	8
  1408  010E  2912               	goto	L3
  1409  010F                     l2112:	
  1410                           ;xprintf.c: 135: case 'D' :
  1411                           
  1412                           
  1413                           ;xprintf.c: 136: case 'U' :
  1414                           ;xprintf.c: 137: r = 10; break;
  1415  010F  300A               	movlw	10
  1416  0110  2912               	goto	L3
  1417  0111                     l2114:	
  1418                           ;xprintf.c: 138: case 'X' :
  1419                           
  1420                           
  1421                           ;xprintf.c: 139: r = 16; break;
  1422  0111  3010               	movlw	16
  1423  0112                     L3:	
  1424  0112  00C5               	movwf	xvprintf@r
  1425  0113  3000               	movlw	0
  1426  0114  00C6               	movwf	xvprintf@r+1
  1427  0115  2933               	goto	l152
  1428  0116                     l2116:	
  1429                           ;xprintf.c: 140: default:
  1430                           
  1431                           
  1432                           ;xprintf.c: 141: xputc(c); continue;
  1433  0116  0854               	movf	xvprintf@c,w
  1434  0117  3183  237E  3180   	fcall	_xputc
  1435  011A  281C               	goto	l119
  1436  011B                     l2120:	
  1437                           ;xprintf.c: 142: }
  1438                           
  1439  011B  0020               	movlb	0	; select bank0
  1440  011C  0853               	movf	xvprintf@d,w
  1441                           
  1442                           ; Switch size 1, requested type "space"
  1443                           ; Number of cases is 7, Range of values is 66 to 88
  1444                           ; switch strategies available:
  1445                           ; Name         Instructions Cycles
  1446                           ; simple_byte           22    12 (average)
  1447                           ; direct_byte           55     9 (fixed)
  1448                           ; jumptable            263     9 (fixed)
  1449                           ;	Chosen strategy is simple_byte
  1450  011D  3A42               	xorlw	66	; case 66
  1451  011E  1903               	skipnz
  1452  011F  290A               	goto	l2108
  1453  0120  3A01               	xorlw	1	; case 67
  1454  0121  1903               	skipnz
  1455  0122  28FD               	goto	l2106
  1456  0123  3A07               	xorlw	7	; case 68
  1457  0124  1903               	skipnz
  1458  0125  290F               	goto	l2112
  1459  0126  3A0B               	xorlw	11	; case 79
  1460  0127  1903               	skipnz
  1461  0128  290D               	goto	l2110
  1462  0129  3A1C               	xorlw	28	; case 83
  1463  012A  1903               	skipnz
  1464  012B  28B3               	goto	l2086
  1465  012C  3A06               	xorlw	6	; case 85
  1466  012D  1903               	skipnz
  1467  012E  290F               	goto	l2112
  1468  012F  3A0D               	xorlw	13	; case 88
  1469  0130  1903               	skipnz
  1470  0131  2911               	goto	l2114
  1471  0132  2916               	goto	l2116
  1472  0133                     l152:	
  1473                           
  1474                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  1475  0133  0020               	movlb	0	; select bank0
  1476  0134  194F               	btfsc	xvprintf@f,2
  1477  0135  296B               	goto	l2130
  1478  0136  3044               	movlw	68
  1479  0137  0653               	xorwf	xvprintf@d,w
  1480  0138  1903               	btfsc	3,2
  1481  0139  294D               	goto	l2126
  1482  013A  0827               	movf	xvprintf@arp,w
  1483  013B  0086               	movwf	6
  1484  013C  0187               	clrf	7
  1485  013D  0801               	movf	1,w
  1486  013E  0084               	movwf	4
  1487  013F  0185               	clrf	5
  1488  0140  3002               	movlw	2
  1489  0141  0781               	addwf	1,f
  1490  0142  3F00               	moviw [0]fsr0
  1491  0143  00A8               	movwf	??_xvprintf
  1492  0144  3F01               	moviw [1]fsr0
  1493  0145  00A9               	movwf	??_xvprintf+1
  1494  0146  0828               	movf	??_xvprintf,w
  1495  0147  00BC               	movwf	_xvprintf$166
  1496  0148  0829               	movf	??_xvprintf+1,w
  1497  0149  00BD               	movwf	_xvprintf$166+1
  1498  014A  01BE               	clrf	_xvprintf$166+2
  1499  014B  01BF               	clrf	_xvprintf$166+3
  1500  014C  2962               	goto	l2128
  1501  014D                     l2126:	
  1502  014D  0827               	movf	xvprintf@arp,w
  1503  014E  0086               	movwf	6
  1504  014F  0187               	clrf	7
  1505  0150  0801               	movf	1,w
  1506  0151  0084               	movwf	4
  1507  0152  0185               	clrf	5
  1508  0153  3002               	movlw	2
  1509  0154  0781               	addwf	1,f
  1510  0155  3F00               	moviw [0]fsr0
  1511  0156  00A8               	movwf	??_xvprintf
  1512  0157  3F01               	moviw [1]fsr0
  1513  0158  00A9               	movwf	??_xvprintf+1
  1514  0159  0828               	movf	??_xvprintf,w
  1515  015A  00BC               	movwf	_xvprintf$166
  1516  015B  0829               	movf	??_xvprintf+1,w
  1517  015C  00BD               	movwf	_xvprintf$166+1
  1518  015D  0D89               	rlf	9,f
  1519  015E  3B89               	subwfb	9,f
  1520  015F  0989               	comf	9,f
  1521  0160  00BE               	movwf	_xvprintf$166+2
  1522  0161  00BF               	movwf	_xvprintf$166+3
  1523  0162                     l2128:	
  1524  0162  083F               	movf	_xvprintf$166+3,w
  1525  0163  00CE               	movwf	xvprintf@v+3
  1526  0164  083E               	movf	_xvprintf$166+2,w
  1527  0165  00CD               	movwf	xvprintf@v+2
  1528  0166  083D               	movf	_xvprintf$166+1,w
  1529  0167  00CC               	movwf	xvprintf@v+1
  1530  0168  083C               	movf	_xvprintf$166,w
  1531  0169  00CB               	movwf	xvprintf@v
  1532  016A  297B               	goto	l2132
  1533  016B                     l2130:	
  1534  016B  0827               	movf	xvprintf@arp,w
  1535  016C  0086               	movwf	6
  1536  016D  0187               	clrf	7
  1537  016E  0801               	movf	1,w
  1538  016F  0084               	movwf	4
  1539  0170  0185               	clrf	5
  1540  0171  3004               	movlw	4
  1541  0172  0781               	addwf	1,f
  1542  0173  3F00               	moviw [0]fsr0
  1543  0174  00CB               	movwf	xvprintf@v
  1544  0175  3F01               	moviw [1]fsr0
  1545  0176  00CC               	movwf	xvprintf@v+1
  1546  0177  3F02               	moviw [2]fsr0
  1547  0178  00CD               	movwf	xvprintf@v+2
  1548  0179  3F03               	moviw [3]fsr0
  1549  017A  00CE               	movwf	xvprintf@v+3
  1550  017B                     l2132:	
  1551                           
  1552                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  1553  017B  3044               	movlw	68
  1554  017C  0653               	xorwf	xvprintf@d,w
  1555  017D  1903               	btfsc	3,2
  1556  017E  1FCE               	btfss	xvprintf@v+3,7
  1557  017F  298C               	goto	l2138
  1558                           
  1559                           ;xprintf.c: 147: v = 0 - v;
  1560  0180  09CB               	comf	xvprintf@v,f
  1561  0181  09CC               	comf	xvprintf@v+1,f
  1562  0182  09CD               	comf	xvprintf@v+2,f
  1563  0183  09CE               	comf	xvprintf@v+3,f
  1564  0184  0ACB               	incf	xvprintf@v,f
  1565  0185  1903               	skipnz
  1566  0186  0ACC               	incf	xvprintf@v+1,f
  1567  0187  1903               	skipnz
  1568  0188  0ACD               	incf	xvprintf@v+2,f
  1569  0189  1903               	skipnz
  1570  018A  0ACE               	incf	xvprintf@v+3,f
  1571                           
  1572                           ;xprintf.c: 148: f |= 8;
  1573  018B  15CF               	bsf	xvprintf@f,3
  1574  018C                     l2138:	
  1575                           
  1576                           ;xprintf.c: 149: }
  1577                           ;xprintf.c: 150: i = 0;
  1578  018C  01D1               	clrf	xvprintf@i
  1579  018D  01D2               	clrf	xvprintf@i+1
  1580  018E                     l2140:	
  1581                           ;xprintf.c: 151: do {
  1582                           
  1583                           
  1584                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  1585  018E  0845               	movf	xvprintf@r,w
  1586  018F  00F1               	movwf	___llmod@divisor
  1587  0190  0846               	movf	xvprintf@r+1,w
  1588  0191  00F2               	movwf	___llmod@divisor+1
  1589  0192  01F3               	clrf	___llmod@divisor+2
  1590  0193  01F4               	clrf	___llmod@divisor+3
  1591  0194  084E               	movf	xvprintf@v+3,w
  1592  0195  00F8               	movwf	___llmod@dividend+3
  1593  0196  084D               	movf	xvprintf@v+2,w
  1594  0197  00F7               	movwf	___llmod@dividend+2
  1595  0198  084C               	movf	xvprintf@v+1,w
  1596  0199  00F6               	movwf	___llmod@dividend+1
  1597  019A  084B               	movf	xvprintf@v,w
  1598  019B  00F5               	movwf	___llmod@dividend
  1599  019C  3183  2302  3180   	fcall	___llmod
  1600  019F  0871               	movf	?___llmod,w
  1601  01A0  0020               	movlb	0	; select bank0
  1602  01A1  00A8               	movwf	??_xvprintf
  1603  01A2  0828               	movf	??_xvprintf,w
  1604  01A3  00D3               	movwf	xvprintf@d
  1605  01A4  0845               	movf	xvprintf@r,w
  1606  01A5  00F1               	movwf	___lldiv@divisor
  1607  01A6  0846               	movf	xvprintf@r+1,w
  1608  01A7  00F2               	movwf	___lldiv@divisor+1
  1609  01A8  01F3               	clrf	___lldiv@divisor+2
  1610  01A9  01F4               	clrf	___lldiv@divisor+3
  1611  01AA  084E               	movf	xvprintf@v+3,w
  1612  01AB  00F8               	movwf	___lldiv@dividend+3
  1613  01AC  084D               	movf	xvprintf@v+2,w
  1614  01AD  00F7               	movwf	___lldiv@dividend+2
  1615  01AE  084C               	movf	xvprintf@v+1,w
  1616  01AF  00F6               	movwf	___lldiv@dividend+1
  1617  01B0  084B               	movf	xvprintf@v,w
  1618  01B1  00F5               	movwf	___lldiv@dividend
  1619  01B2  3182  22AF  3180   	fcall	___lldiv
  1620  01B5  0874               	movf	?___lldiv+3,w
  1621  01B6  0020               	movlb	0	; select bank0
  1622  01B7  00CE               	movwf	xvprintf@v+3
  1623  01B8  0873               	movf	?___lldiv+2,w
  1624  01B9  00CD               	movwf	xvprintf@v+2
  1625  01BA  0872               	movf	?___lldiv+1,w
  1626  01BB  00CC               	movwf	xvprintf@v+1
  1627  01BC  0871               	movf	?___lldiv,w
  1628  01BD  00CB               	movwf	xvprintf@v
  1629                           
  1630                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  1631  01BE  300A               	movlw	10
  1632  01BF  0253               	subwf	xvprintf@d,w
  1633  01C0  1C03               	skipc
  1634  01C1  29D0               	goto	l2154
  1635  01C2  3078               	movlw	120
  1636  01C3  0654               	xorwf	xvprintf@c,w
  1637  01C4  1903               	btfsc	3,2
  1638  01C5  29C8               	goto	l2150
  1639  01C6  3007               	movlw	7
  1640  01C7  29C9               	goto	L4
  1641  01C8                     l2150:	
  1642  01C8  3027               	movlw	39
  1643  01C9                     L4:	
  1644  01C9  00C0               	movwf	_xvprintf$167
  1645  01CA  3000               	movlw	0
  1646  01CB  00C1               	movwf	_xvprintf$167+1
  1647  01CC  0840               	movf	_xvprintf$167,w
  1648  01CD  00A8               	movwf	??_xvprintf
  1649  01CE  0828               	movf	??_xvprintf,w
  1650  01CF  07D3               	addwf	xvprintf@d,f
  1651  01D0                     l2154:	
  1652                           
  1653                           ;xprintf.c: 154: s[i++] = d + '0';
  1654  01D0  0853               	movf	xvprintf@d,w
  1655  01D1  3E30               	addlw	48
  1656  01D2  00A8               	movwf	??_xvprintf
  1657  01D3  0851               	movf	xvprintf@i,w
  1658  01D4  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1659  01D5  0086               	movwf	6
  1660  01D6  0187               	clrf	7
  1661  01D7  0828               	movf	??_xvprintf,w
  1662  01D8  0081               	movwf	1
  1663  01D9  3001               	movlw	1
  1664  01DA  07D1               	addwf	xvprintf@i,f
  1665  01DB  3000               	movlw	0
  1666  01DC  3DD2               	addwfc	xvprintf@i+1,f
  1667                           
  1668                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  1669  01DD  084E               	movf	xvprintf@v+3,w
  1670  01DE  044D               	iorwf	xvprintf@v+2,w
  1671  01DF  044C               	iorwf	xvprintf@v+1,w
  1672  01E0  044B               	iorwf	xvprintf@v,w
  1673  01E1  1903               	skipnz
  1674  01E2  29EA               	goto	l175
  1675  01E3  3000               	movlw	0
  1676  01E4  0252               	subwf	xvprintf@i+1,w
  1677  01E5  3010               	movlw	16
  1678  01E6  1903               	skipnz
  1679  01E7  0251               	subwf	xvprintf@i,w
  1680  01E8  1C03               	skipc
  1681  01E9  298E               	goto	l2140
  1682  01EA                     l175:	
  1683                           
  1684                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  1685  01EA  1DCF               	btfss	xvprintf@f,3
  1686  01EB  29F8               	goto	l2166
  1687  01EC  302D               	movlw	45
  1688  01ED  00A8               	movwf	??_xvprintf
  1689  01EE  0851               	movf	xvprintf@i,w
  1690  01EF  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1691  01F0  0086               	movwf	6
  1692  01F1  0187               	clrf	7
  1693  01F2  0828               	movf	??_xvprintf,w
  1694  01F3  0081               	movwf	1
  1695  01F4  3001               	movlw	1
  1696  01F5  07D1               	addwf	xvprintf@i,f
  1697  01F6  3000               	movlw	0
  1698  01F7  3DD2               	addwfc	xvprintf@i+1,f
  1699  01F8                     l2166:	
  1700                           
  1701                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  1702  01F8  0852               	movf	xvprintf@i+1,w
  1703  01F9  00CA               	movwf	xvprintf@j+1
  1704  01FA  0851               	movf	xvprintf@i,w
  1705  01FB  00C9               	movwf	xvprintf@j
  1706  01FC  184F               	btfsc	xvprintf@f,0
  1707  01FD  2A00               	goto	l2172
  1708  01FE  3020               	movlw	32
  1709  01FF  2A01               	goto	L5
  1710  0200                     l2172:	
  1711  0200  3030               	movlw	48
  1712  0201                     L5:	
  1713  0201  00C2               	movwf	_xvprintf$168
  1714  0202  3000               	movlw	0
  1715  0203  00C3               	movwf	_xvprintf$168+1
  1716  0204  0842               	movf	_xvprintf$168,w
  1717  0205  00A8               	movwf	??_xvprintf
  1718  0206  0828               	movf	??_xvprintf,w
  1719  0207  00D3               	movwf	xvprintf@d
  1720                           
  1721                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  1722  0208  2A0D               	goto	l2176
  1723  0209                     l2174:	
  1724  0209  0853               	movf	xvprintf@d,w
  1725  020A  3183  237E  3180   	fcall	_xputc
  1726  020D                     l2176:	
  1727  020D  0020               	movlb	0	; select bank0
  1728  020E  18CF               	btfsc	xvprintf@f,1
  1729  020F  2A1F               	goto	l2180
  1730  0210  084A               	movf	xvprintf@j+1,w
  1731  0211  00A9               	movwf	??_xvprintf+1
  1732  0212  0849               	movf	xvprintf@j,w
  1733  0213  00A8               	movwf	??_xvprintf
  1734  0214  0AC9               	incf	xvprintf@j,f
  1735  0215  1903               	skipnz
  1736  0216  0ACA               	incf	xvprintf@j+1,f
  1737  0217  0848               	movf	xvprintf@w+1,w
  1738  0218  0229               	subwf	??_xvprintf+1,w
  1739  0219  1D03               	skipz
  1740  021A  2A1D               	goto	u2025
  1741  021B  0847               	movf	xvprintf@w,w
  1742  021C  0228               	subwf	??_xvprintf,w
  1743  021D                     u2025:	
  1744  021D  1C03               	skipc
  1745  021E  2A09               	goto	l2174
  1746  021F                     l2180:	
  1747                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  1748                           
  1749  021F  3001               	movlw	1
  1750  0220  02D1               	subwf	xvprintf@i,f
  1751  0221  3000               	movlw	0
  1752  0222  3BD2               	subwfb	xvprintf@i+1,f
  1753  0223  0851               	movf	xvprintf@i,w
  1754  0224  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1755  0225  0086               	movwf	6
  1756  0226  0187               	clrf	7
  1757  0227  0801               	movf	1,w
  1758  0228  3183  237E  3180   	fcall	_xputc
  1759  022B  0020               	movlb	0	; select bank0
  1760  022C  0851               	movf	xvprintf@i,w
  1761  022D  0452               	iorwf	xvprintf@i+1,w
  1762  022E  1903               	btfsc	3,2
  1763  022F  2A35               	goto	l2186
  1764  0230  2A1F               	goto	l2180
  1765  0231                     l2184:	
  1766                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  1767                           
  1768  0231  3020               	movlw	32
  1769  0232  3183  237E  3180   	fcall	_xputc
  1770  0235                     l2186:	
  1771  0235  0020               	movlb	0	; select bank0
  1772  0236  084A               	movf	xvprintf@j+1,w
  1773  0237  00A9               	movwf	??_xvprintf+1
  1774  0238  0849               	movf	xvprintf@j,w
  1775  0239  00A8               	movwf	??_xvprintf
  1776  023A  0AC9               	incf	xvprintf@j,f
  1777  023B  1903               	skipnz
  1778  023C  0ACA               	incf	xvprintf@j+1,f
  1779  023D  0848               	movf	xvprintf@w+1,w
  1780  023E  0229               	subwf	??_xvprintf+1,w
  1781  023F  1D03               	skipz
  1782  0240  2A43               	goto	u2045
  1783  0241  0847               	movf	xvprintf@w,w
  1784  0242  0228               	subwf	??_xvprintf,w
  1785  0243                     u2045:	
  1786  0243  1803               	btfsc	3,0
  1787  0244  281C               	goto	l119
  1788  0245  2A31               	goto	l2184
  1789  0246                     __end_of_xvprintf:	
  1790                           ;xprintf.c: 161: }
  1791                           
  1792                           
  1793                           	psect	text3
  1794  044B                     __ptext3:	
  1795 ;; *************** function _xputs *****************
  1796 ;; Defined at:
  1797 ;;		line 44 in file "xprintf.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  str             1    wreg     PTR const unsigned char 
  1800 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  str             1    8[COMMON] PTR const unsigned char 
  1803 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1813 ;;      Params:         0       0       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0       0
  1815 ;;      Temps:          1       0       0       0       0       0
  1816 ;;      Totals:         2       0       0       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    5
  1820 ;; This function calls:
  1821 ;;		_xputc
  1822 ;; This function is called by:
  1823 ;;		_xvprintf
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _xputs
  1829  044B                     _xputs:	
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1833                           ;xputs@str stored from wreg
  1834  044B  00F8               	movwf	xputs@str
  1835  044C                     l1958:	
  1836                           ;xprintf.c: 48: while (*str)
  1837                           
  1838  044C  0878               	movf	xputs@str,w
  1839  044D  0086               	movwf	6
  1840  044E  0187               	clrf	7
  1841  044F  0801               	movf	1,w
  1842  0450  1903               	btfsc	3,2
  1843  0451  0008               	return
  1844                           
  1845                           ;xprintf.c: 49: xputc(*str++);
  1846  0452  0878               	movf	xputs@str,w
  1847  0453  0086               	movwf	6
  1848  0454  0187               	clrf	7
  1849  0455  0801               	movf	1,w
  1850  0456  3183  237E  3184   	fcall	_xputc
  1851  0459  3001               	movlw	1
  1852  045A  00F7               	movwf	??_xputs
  1853  045B  0877               	movf	??_xputs,w
  1854  045C  07F8               	addwf	xputs@str,f
  1855  045D  2C4C               	goto	l1958
  1856  045E                     __end_of_xputs:	
  1857                           
  1858                           	psect	text4
  1859  037E                     __ptext4:	
  1860 ;; *************** function _xputc *****************
  1861 ;; Defined at:
  1862 ;;		line 26 in file "xprintf.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  c               1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    6[COMMON] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1876 ;;      Params:         0       0       0       0       0       0
  1877 ;;      Locals:         1       0       0       0       0       0
  1878 ;;      Temps:          1       0       0       0       0       0
  1879 ;;      Totals:         2       0       0       0       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    4
  1883 ;; This function calls:
  1884 ;;		Absolute function
  1885 ;;		_LCD_Put
  1886 ;; This function is called by:
  1887 ;;		_xputs
  1888 ;;		_xvprintf
  1889 ;;		_xfputs
  1890 ;;		_put_dump
  1891 ;;		_xgets
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _xputc
  1897  037E                     _xputc:	
  1898                           
  1899                           ;incstack = 0
  1900                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1901                           ;xputc@c stored from wreg
  1902  037E  00F6               	movwf	xputc@c
  1903  037F  300A               	movlw	10
  1904  0380  0676               	xorwf	xputc@c,w
  1905  0381  1D03               	btfss	3,2
  1906  0382  2B8D               	goto	l1940
  1907  0383  30EB               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1908  0384  00F5               	movwf	??_xputc
  1909  0385  0875               	movf	??_xputc,w
  1910  0386  00F4               	movwf	LCD_Put@word
  1911  0387  0020               	movlb	0	; select bank0
  1912  0388  085F               	movf	_xfunc_out+1,w
  1913  0389  008A               	movwf	10
  1914  038A  085E               	movf	_xfunc_out,w
  1915  038B  000A               	callw
  1916  038C  3183               	pagesel	$
  1917  038D                     l1940:	
  1918                           
  1919                           ;xprintf.c: 30: if (outptr) {
  1920  038D  087C               	movf	_outptr,w
  1921  038E  1903               	btfsc	3,2
  1922  038F  2B9C               	goto	l1948
  1923                           
  1924                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  1925  0390  0876               	movf	xputc@c,w
  1926  0391  00F5               	movwf	??_xputc
  1927  0392  087C               	movf	_outptr,w
  1928  0393  0086               	movwf	6
  1929  0394  0187               	clrf	7
  1930  0395  0875               	movf	??_xputc,w
  1931  0396  0081               	movwf	1
  1932  0397  3001               	movlw	1
  1933  0398  00F5               	movwf	??_xputc
  1934  0399  0875               	movf	??_xputc,w
  1935  039A  07FC               	addwf	_outptr,f
  1936                           
  1937                           ;xprintf.c: 32: return;
  1938  039B  0008               	return
  1939  039C                     l1948:	
  1940                           
  1941                           ;xprintf.c: 33: }
  1942                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  1943  039C  0020               	movlb	0	; select bank0
  1944  039D  085E               	movf	_xfunc_out,w
  1945  039E  045F               	iorwf	_xfunc_out+1,w
  1946  039F  1903               	btfsc	3,2
  1947  03A0  0008               	return
  1948  03A1  0876               	movf	xputc@c,w
  1949  03A2  00F5               	movwf	??_xputc
  1950  03A3  0875               	movf	??_xputc,w
  1951  03A4  00F4               	movwf	LCD_Put@word
  1952  03A5  085F               	movf	_xfunc_out+1,w
  1953  03A6  008A               	movwf	10
  1954  03A7  085E               	movf	_xfunc_out,w
  1955  03A8  000A               	callw
  1956  03A9  3183               	pagesel	$
  1957  03AA  0008               	return
  1958  03AB                     __end_of_xputc:	
  1959                           
  1960                           	psect	text5
  1961  0486                     __ptext5:	
  1962 ;; *************** function _LCD_Put *****************
  1963 ;; Defined at:
  1964 ;;		line 54 in file "LCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  word            1    4[COMMON] char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1978 ;;      Params:         1       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    3
  1985 ;; This function calls:
  1986 ;;		_LCD_WriteData
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;;		_xputc
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _LCD_Put
  1995  0486                     _LCD_Put:	
  1996                           
  1997                           ;LCD.c: 56: RA4 = 1;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2001  0486  0020               	movlb	0	; select bank0
  2002  0487  160C               	bsf	12,4	;volatile
  2003                           
  2004                           ;LCD.c: 57: LCD_WriteData(word);
  2005  0488  0874               	movf	LCD_Put@word,w
  2006  0489  3183  2344         	fcall	_LCD_WriteData
  2007  048B  0008               	return
  2008  048C                     __end_of_LCD_Put:	
  2009                           
  2010                           	psect	text6
  2011  03ED                     __ptext6:	
  2012 ;; *************** function ___wmul *****************
  2013 ;; Defined at:
  2014 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  multiplier      2    1[COMMON] unsigned int 
  2017 ;;  multiplicand    2    3[COMMON] unsigned int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  product         2    5[COMMON] unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    1[COMMON] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2029 ;;      Params:         4       0       0       0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0
  2032 ;;      Totals:         6       0       0       0       0       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    2
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_xvprintf
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function ___wmul
  2045  03ED                     ___wmul:	
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2049  03ED  01F5               	clrf	___wmul@product
  2050  03EE  01F6               	clrf	___wmul@product+1
  2051  03EF                     l1962:	
  2052  03EF  1C71               	btfss	___wmul@multiplier,0
  2053  03F0  2BF5               	goto	l386
  2054  03F1  0873               	movf	___wmul@multiplicand,w
  2055  03F2  07F5               	addwf	___wmul@product,f
  2056  03F3  0874               	movf	___wmul@multiplicand+1,w
  2057  03F4  3DF6               	addwfc	___wmul@product+1,f
  2058  03F5                     l386:	
  2059  03F5  3001               	movlw	1
  2060  03F6                     u1615:	
  2061  03F6  35F3               	lslf	___wmul@multiplicand,f
  2062  03F7  0DF4               	rlf	___wmul@multiplicand+1,f
  2063  03F8  0B89               	decfsz	9,f
  2064  03F9  2BF6               	goto	u1615
  2065  03FA  3001               	movlw	1
  2066  03FB                     u1625:	
  2067  03FB  36F2               	lsrf	___wmul@multiplier+1,f
  2068  03FC  0CF1               	rrf	___wmul@multiplier,f
  2069  03FD  0B89               	decfsz	9,f
  2070  03FE  2BFB               	goto	u1625
  2071  03FF  0871               	movf	___wmul@multiplier,w
  2072  0400  0472               	iorwf	___wmul@multiplier+1,w
  2073  0401  1D03               	btfss	3,2
  2074  0402  2BEF               	goto	l1962
  2075  0403  0876               	movf	___wmul@product+1,w
  2076  0404  00F2               	movwf	?___wmul+1
  2077  0405  0875               	movf	___wmul@product,w
  2078  0406  00F1               	movwf	?___wmul
  2079  0407  0008               	return
  2080  0408                     __end_of___wmul:	
  2081                           
  2082                           	psect	text7
  2083  0302                     __ptext7:	
  2084 ;; *************** function ___llmod *****************
  2085 ;; Defined at:
  2086 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  divisor         4    1[COMMON] unsigned long 
  2089 ;;  dividend        4    5[COMMON] unsigned long 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  counter         1   10[COMMON] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  4    1[COMMON] unsigned long 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2101 ;;      Params:         8       0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0
  2103 ;;      Temps:          1       0       0       0       0       0
  2104 ;;      Totals:        10       0       0       0       0       0
  2105 ;;Total ram usage:       10 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    2
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_xvprintf
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function ___llmod
  2117  0302                     ___llmod:	
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2121  0302  0874               	movf	___llmod@divisor+3,w
  2122  0303  0473               	iorwf	___llmod@divisor+2,w
  2123  0304  0472               	iorwf	___llmod@divisor+1,w
  2124  0305  0471               	iorwf	___llmod@divisor,w
  2125  0306  1903               	skipnz
  2126  0307  2B3B               	goto	l2014
  2127  0308  01FA               	clrf	___llmod@counter
  2128  0309  0AFA               	incf	___llmod@counter,f
  2129  030A                     l2004:	
  2130  030A  1BF4               	btfsc	___llmod@divisor+3,7
  2131  030B  2B18               	goto	l2006
  2132  030C  3001               	movlw	1
  2133  030D                     u1725:	
  2134  030D  35F1               	lslf	___llmod@divisor,f
  2135  030E  0DF2               	rlf	___llmod@divisor+1,f
  2136  030F  0DF3               	rlf	___llmod@divisor+2,f
  2137  0310  0DF4               	rlf	___llmod@divisor+3,f
  2138  0311  0B89               	decfsz	9,f
  2139  0312  2B0D               	goto	u1725
  2140  0313  3001               	movlw	1
  2141  0314  00F9               	movwf	??___llmod
  2142  0315  0879               	movf	??___llmod,w
  2143  0316  07FA               	addwf	___llmod@counter,f
  2144  0317  2B0A               	goto	l2004
  2145  0318                     l2006:	
  2146  0318  0874               	movf	___llmod@divisor+3,w
  2147  0319  0278               	subwf	___llmod@dividend+3,w
  2148  031A  1D03               	skipz
  2149  031B  2B26               	goto	u1745
  2150  031C  0873               	movf	___llmod@divisor+2,w
  2151  031D  0277               	subwf	___llmod@dividend+2,w
  2152  031E  1D03               	skipz
  2153  031F  2B26               	goto	u1745
  2154  0320  0872               	movf	___llmod@divisor+1,w
  2155  0321  0276               	subwf	___llmod@dividend+1,w
  2156  0322  1D03               	skipz
  2157  0323  2B26               	goto	u1745
  2158  0324  0871               	movf	___llmod@divisor,w
  2159  0325  0275               	subwf	___llmod@dividend,w
  2160  0326                     u1745:	
  2161  0326  1C03               	skipc
  2162  0327  2B30               	goto	l2010
  2163  0328  0871               	movf	___llmod@divisor,w
  2164  0329  02F5               	subwf	___llmod@dividend,f
  2165  032A  0872               	movf	___llmod@divisor+1,w
  2166  032B  3BF6               	subwfb	___llmod@dividend+1,f
  2167  032C  0873               	movf	___llmod@divisor+2,w
  2168  032D  3BF7               	subwfb	___llmod@dividend+2,f
  2169  032E  0874               	movf	___llmod@divisor+3,w
  2170  032F  3BF8               	subwfb	___llmod@dividend+3,f
  2171  0330                     l2010:	
  2172  0330  3001               	movlw	1
  2173  0331                     u1755:	
  2174  0331  36F4               	lsrf	___llmod@divisor+3,f
  2175  0332  0CF3               	rrf	___llmod@divisor+2,f
  2176  0333  0CF2               	rrf	___llmod@divisor+1,f
  2177  0334  0CF1               	rrf	___llmod@divisor,f
  2178  0335  0B89               	decfsz	9,f
  2179  0336  2B31               	goto	u1755
  2180  0337  3001               	movlw	1
  2181  0338  02FA               	subwf	___llmod@counter,f
  2182  0339  1D03               	btfss	3,2
  2183  033A  2B18               	goto	l2006
  2184  033B                     l2014:	
  2185  033B  0878               	movf	___llmod@dividend+3,w
  2186  033C  00F4               	movwf	?___llmod+3
  2187  033D  0877               	movf	___llmod@dividend+2,w
  2188  033E  00F3               	movwf	?___llmod+2
  2189  033F  0876               	movf	___llmod@dividend+1,w
  2190  0340  00F2               	movwf	?___llmod+1
  2191  0341  0875               	movf	___llmod@dividend,w
  2192  0342  00F1               	movwf	?___llmod
  2193  0343  0008               	return
  2194  0344                     __end_of___llmod:	
  2195                           
  2196                           	psect	text8
  2197  02AF                     __ptext8:	
  2198 ;; *************** function ___lldiv *****************
  2199 ;; Defined at:
  2200 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  divisor         4    1[COMMON] unsigned long 
  2203 ;;  dividend        4    5[COMMON] unsigned long 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        4    0[BANK0 ] unsigned long 
  2206 ;;  counter         1    4[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  4    1[COMMON] unsigned long 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2216 ;;      Params:         8       0       0       0       0       0
  2217 ;;      Locals:         0       5       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0       0
  2219 ;;      Totals:         9       5       0       0       0       0
  2220 ;;Total ram usage:       14 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    2
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_xvprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function ___lldiv
  2232  02AF                     ___lldiv:	
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2236  02AF  3000               	movlw	0
  2237  02B0  0020               	movlb	0	; select bank0
  2238  02B1  00A3               	movwf	___lldiv@quotient+3
  2239  02B2  3000               	movlw	0
  2240  02B3  00A2               	movwf	___lldiv@quotient+2
  2241  02B4  3000               	movlw	0
  2242  02B5  00A1               	movwf	___lldiv@quotient+1
  2243  02B6  3000               	movlw	0
  2244  02B7  00A0               	movwf	___lldiv@quotient
  2245  02B8  0874               	movf	___lldiv@divisor+3,w
  2246  02B9  0473               	iorwf	___lldiv@divisor+2,w
  2247  02BA  0472               	iorwf	___lldiv@divisor+1,w
  2248  02BB  0471               	iorwf	___lldiv@divisor,w
  2249  02BC  1903               	skipnz
  2250  02BD  2AF9               	goto	l1994
  2251  02BE  01A4               	clrf	___lldiv@counter
  2252  02BF  0AA4               	incf	___lldiv@counter,f
  2253  02C0                     l1980:	
  2254  02C0  1BF4               	btfsc	___lldiv@divisor+3,7
  2255  02C1  2ACE               	goto	l1982
  2256  02C2  3001               	movlw	1
  2257  02C3                     u1655:	
  2258  02C3  35F1               	lslf	___lldiv@divisor,f
  2259  02C4  0DF2               	rlf	___lldiv@divisor+1,f
  2260  02C5  0DF3               	rlf	___lldiv@divisor+2,f
  2261  02C6  0DF4               	rlf	___lldiv@divisor+3,f
  2262  02C7  0B89               	decfsz	9,f
  2263  02C8  2AC3               	goto	u1655
  2264  02C9  3001               	movlw	1
  2265  02CA  00F9               	movwf	??___lldiv
  2266  02CB  0879               	movf	??___lldiv,w
  2267  02CC  07A4               	addwf	___lldiv@counter,f
  2268  02CD  2AC0               	goto	l1980
  2269  02CE                     l1982:	
  2270  02CE  3001               	movlw	1
  2271  02CF                     u1675:	
  2272  02CF  35A0               	lslf	___lldiv@quotient,f
  2273  02D0  0DA1               	rlf	___lldiv@quotient+1,f
  2274  02D1  0DA2               	rlf	___lldiv@quotient+2,f
  2275  02D2  0DA3               	rlf	___lldiv@quotient+3,f
  2276  02D3  0B89               	decfsz	9,f
  2277  02D4  2ACF               	goto	u1675
  2278  02D5  0874               	movf	___lldiv@divisor+3,w
  2279  02D6  0278               	subwf	___lldiv@dividend+3,w
  2280  02D7  1D03               	skipz
  2281  02D8  2AE3               	goto	u1685
  2282  02D9  0873               	movf	___lldiv@divisor+2,w
  2283  02DA  0277               	subwf	___lldiv@dividend+2,w
  2284  02DB  1D03               	skipz
  2285  02DC  2AE3               	goto	u1685
  2286  02DD  0872               	movf	___lldiv@divisor+1,w
  2287  02DE  0276               	subwf	___lldiv@dividend+1,w
  2288  02DF  1D03               	skipz
  2289  02E0  2AE3               	goto	u1685
  2290  02E1  0871               	movf	___lldiv@divisor,w
  2291  02E2  0275               	subwf	___lldiv@dividend,w
  2292  02E3                     u1685:	
  2293  02E3  1C03               	skipc
  2294  02E4  2AEE               	goto	l1990
  2295  02E5  0871               	movf	___lldiv@divisor,w
  2296  02E6  02F5               	subwf	___lldiv@dividend,f
  2297  02E7  0872               	movf	___lldiv@divisor+1,w
  2298  02E8  3BF6               	subwfb	___lldiv@dividend+1,f
  2299  02E9  0873               	movf	___lldiv@divisor+2,w
  2300  02EA  3BF7               	subwfb	___lldiv@dividend+2,f
  2301  02EB  0874               	movf	___lldiv@divisor+3,w
  2302  02EC  3BF8               	subwfb	___lldiv@dividend+3,f
  2303  02ED  1420               	bsf	___lldiv@quotient,0
  2304  02EE                     l1990:	
  2305  02EE  3001               	movlw	1
  2306  02EF                     u1695:	
  2307  02EF  36F4               	lsrf	___lldiv@divisor+3,f
  2308  02F0  0CF3               	rrf	___lldiv@divisor+2,f
  2309  02F1  0CF2               	rrf	___lldiv@divisor+1,f
  2310  02F2  0CF1               	rrf	___lldiv@divisor,f
  2311  02F3  0B89               	decfsz	9,f
  2312  02F4  2AEF               	goto	u1695
  2313  02F5  3001               	movlw	1
  2314  02F6  02A4               	subwf	___lldiv@counter,f
  2315  02F7  1D03               	btfss	3,2
  2316  02F8  2ACE               	goto	l1982
  2317  02F9                     l1994:	
  2318  02F9  0823               	movf	___lldiv@quotient+3,w
  2319  02FA  00F4               	movwf	?___lldiv+3
  2320  02FB  0822               	movf	___lldiv@quotient+2,w
  2321  02FC  00F3               	movwf	?___lldiv+2
  2322  02FD  0821               	movf	___lldiv@quotient+1,w
  2323  02FE  00F2               	movwf	?___lldiv+1
  2324  02FF  0820               	movf	___lldiv@quotient,w
  2325  0300  00F1               	movwf	?___lldiv
  2326  0301  0008               	return
  2327  0302                     __end_of___lldiv:	
  2328                           
  2329                           	psect	text9
  2330  0408                     __ptext9:	
  2331 ;; *************** function _Timer1_Init *****************
  2332 ;; Defined at:
  2333 ;;		line 3 in file "Timer1.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2347 ;;      Params:         0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0       0
  2350 ;;      Totals:         1       0       0       0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    2
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _Timer1_Init
  2363  0408                     _Timer1_Init:	
  2364                           
  2365                           ;Timer1.c: 5: TRISB |= (1<<6);
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  2369  0408  0021               	movlb	1	; select bank1
  2370  0409  170D               	bsf	13,6	;volatile
  2371                           
  2372                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  2373  040A  30BF               	movlw	191
  2374  040B  00F1               	movwf	??_Timer1_Init
  2375  040C  0871               	movf	??_Timer1_Init,w
  2376  040D  0023               	movlb	3	; select bank3
  2377  040E  058D               	andwf	13,f	;volatile
  2378                           
  2379                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  2380  040F  0020               	movlb	0	; select bank0
  2381  0410  1518               	bsf	24,2	;volatile
  2382                           
  2383                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  2384  0411  30F7               	movlw	247
  2385  0412  00F1               	movwf	??_Timer1_Init
  2386  0413  0871               	movf	??_Timer1_Init,w
  2387  0414  0598               	andwf	24,f	;volatile
  2388                           
  2389                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  2390  0415  0818               	movf	24,w	;volatile
  2391                           
  2392                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  2393  0416  1798               	bsf	24,7	;volatile
  2394                           
  2395                           ;Timer1.c: 13: T1GCON = 0x00;
  2396  0417  0199               	clrf	25	;volatile
  2397                           
  2398                           ;Timer1.c: 15: TMR1 = 0x0000;
  2399  0418  0196               	clrf	22	;volatile
  2400  0419  0197               	clrf	23	;volatile
  2401                           
  2402                           ;Timer1.c: 17: TMR1IE = 1;
  2403  041A  0021               	movlb	1	; select bank1
  2404  041B  1411               	bsf	17,0	;volatile
  2405                           
  2406                           ;Timer1.c: 18: TMR1IF = 0;
  2407  041C  0020               	movlb	0	; select bank0
  2408  041D  1011               	bcf	17,0	;volatile
  2409                           
  2410                           ;Timer1.c: 19: PEIE = 1;
  2411  041E  170B               	bsf	11,6	;volatile
  2412                           
  2413                           ;Timer1.c: 20: GIE = 1;
  2414  041F  178B               	bsf	11,7	;volatile
  2415  0420  0008               	return
  2416  0421                     __end_of_Timer1_Init:	
  2417                           
  2418                           	psect	text10
  2419  0246                     __ptext10:	
  2420 ;; *************** function _LCD_Init *****************
  2421 ;; Defined at:
  2422 ;;		line 28 in file "LCD.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2436 ;;      Params:         0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0
  2438 ;;      Temps:          2       0       0       0       0       0
  2439 ;;      Totals:         2       0       0       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    4
  2443 ;; This function calls:
  2444 ;;		_LCD_DisplayClear
  2445 ;;		_LCD_WriteData
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _LCD_Init
  2453  0246                     _LCD_Init:	
  2454                           
  2455                           ;LCD.c: 30: RA4 = 0;
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2459  0246  0020               	movlb	0	; select bank0
  2460  0247  120C               	bcf	12,4	;volatile
  2461                           
  2462                           ;LCD.c: 31: RA3 = 0;
  2463  0248  118C               	bcf	12,3	;volatile
  2464                           
  2465                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2466  0249  3002               	movlw	2
  2467  024A  00F6               	movwf	??_LCD_Init+1
  2468  024B  3038               	movlw	56
  2469  024C  00F5               	movwf	??_LCD_Init
  2470  024D  30AD               	movlw	173
  2471  024E                     u2247:	
  2472  024E  0B89               	decfsz	9,f
  2473  024F  2A4E               	goto	u2247
  2474  0250  0BF5               	decfsz	??_LCD_Init,f
  2475  0251  2A4E               	goto	u2247
  2476  0252  0BF6               	decfsz	??_LCD_Init+1,f
  2477  0253  2A4E               	goto	u2247
  2478  0254  0000               	nop
  2479                           
  2480                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2481  0255  3003               	movlw	3
  2482  0256  0020               	movlb	0	; select bank0
  2483  0257  008D               	movwf	13	;volatile
  2484                           
  2485                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2486  0258  158C               	bsf	12,3	;volatile
  2487  0259  3200               	nop2	;2 cycle nop
  2488  025A  3200               	nop2	;2 cycle nop
  2489  025B  3200               	nop2	;2 cycle nop
  2490  025C  3200               	nop2	;2 cycle nop
  2491  025D  0020               	movlb	0	; select bank0
  2492  025E  118C               	bcf	12,3	;volatile
  2493  025F  3200               	nop2	;2 cycle nop
  2494  0260  3200               	nop2	;2 cycle nop
  2495  0261  3200               	nop2	;2 cycle nop
  2496  0262  3200               	nop2	;2 cycle nop
  2497                           
  2498                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2499  0263  3034               	movlw	52
  2500  0264  00F5               	movwf	??_LCD_Init
  2501  0265  30F2               	movlw	242
  2502  0266                     u2257:	
  2503  0266  0B89               	decfsz	9,f
  2504  0267  2A66               	goto	u2257
  2505  0268  0BF5               	decfsz	??_LCD_Init,f
  2506  0269  2A66               	goto	u2257
  2507                           
  2508                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2509  026A  0020               	movlb	0	; select bank0
  2510  026B  158C               	bsf	12,3	;volatile
  2511  026C  3200               	nop2	;2 cycle nop
  2512  026D  3200               	nop2	;2 cycle nop
  2513  026E  3200               	nop2	;2 cycle nop
  2514  026F  3200               	nop2	;2 cycle nop
  2515  0270  0020               	movlb	0	; select bank0
  2516  0271  118C               	bcf	12,3	;volatile
  2517  0272  3200               	nop2	;2 cycle nop
  2518  0273  3200               	nop2	;2 cycle nop
  2519  0274  3200               	nop2	;2 cycle nop
  2520  0275  3200               	nop2	;2 cycle nop
  2521                           
  2522                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2523  0276  3005               	movlw	5
  2524  0277  00F5               	movwf	??_LCD_Init
  2525  0278  3026               	movlw	38
  2526  0279                     u2267:	
  2527  0279  0B89               	decfsz	9,f
  2528  027A  2A79               	goto	u2267
  2529  027B  0BF5               	decfsz	??_LCD_Init,f
  2530  027C  2A79               	goto	u2267
  2531  027D  3200               	nop2
  2532                           
  2533                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2534  027E  0020               	movlb	0	; select bank0
  2535  027F  158C               	bsf	12,3	;volatile
  2536  0280  3200               	nop2	;2 cycle nop
  2537  0281  3200               	nop2	;2 cycle nop
  2538  0282  3200               	nop2	;2 cycle nop
  2539  0283  3200               	nop2	;2 cycle nop
  2540  0284  0020               	movlb	0	; select bank0
  2541  0285  118C               	bcf	12,3	;volatile
  2542  0286  3200               	nop2	;2 cycle nop
  2543  0287  3200               	nop2	;2 cycle nop
  2544  0288  3200               	nop2	;2 cycle nop
  2545  0289  3200               	nop2	;2 cycle nop
  2546                           
  2547                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2548  028A  3005               	movlw	5
  2549  028B  00F5               	movwf	??_LCD_Init
  2550  028C  3026               	movlw	38
  2551  028D                     u2277:	
  2552  028D  0B89               	decfsz	9,f
  2553  028E  2A8D               	goto	u2277
  2554  028F  0BF5               	decfsz	??_LCD_Init,f
  2555  0290  2A8D               	goto	u2277
  2556  0291  3200               	nop2
  2557                           
  2558                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2559  0292  3002               	movlw	2
  2560  0293  0020               	movlb	0	; select bank0
  2561  0294  008D               	movwf	13	;volatile
  2562                           
  2563                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2564  0295  158C               	bsf	12,3	;volatile
  2565  0296  3200               	nop2	;2 cycle nop
  2566  0297  3200               	nop2	;2 cycle nop
  2567  0298  3200               	nop2	;2 cycle nop
  2568  0299  3200               	nop2	;2 cycle nop
  2569  029A  0020               	movlb	0	; select bank0
  2570  029B  118C               	bcf	12,3	;volatile
  2571  029C  3200               	nop2	;2 cycle nop
  2572  029D  3200               	nop2	;2 cycle nop
  2573  029E  3200               	nop2	;2 cycle nop
  2574  029F  3200               	nop2	;2 cycle nop
  2575                           
  2576                           ;LCD.c: 44: LCD_WriteData(0x28);
  2577  02A0  3028               	movlw	40
  2578  02A1  3183  2344  3182   	fcall	_LCD_WriteData
  2579                           
  2580                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2581  02A4  300C               	movlw	12
  2582  02A5  3183  2344  3182   	fcall	_LCD_WriteData
  2583                           
  2584                           ;LCD.c: 46: LCD_DisplayClear();
  2585  02A8  3184  246E  3182   	fcall	_LCD_DisplayClear
  2586                           
  2587                           ;LCD.c: 47: LCD_WriteData(0x06);
  2588  02AB  3006               	movlw	6
  2589  02AC  3183  2344         	fcall	_LCD_WriteData
  2590  02AE  0008               	return
  2591  02AF                     __end_of_LCD_Init:	
  2592                           
  2593                           	psect	text11
  2594  046E                     __ptext11:	
  2595 ;; *************** function _LCD_DisplayClear *****************
  2596 ;; Defined at:
  2597 ;;		line 64 in file "LCD.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2611 ;;      Params:         0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0
  2613 ;;      Temps:          1       0       0       0       0       0
  2614 ;;      Totals:         1       0       0       0       0       0
  2615 ;;Total ram usage:        1 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    3
  2618 ;; This function calls:
  2619 ;;		_LCD_WriteData
  2620 ;; This function is called by:
  2621 ;;		_LCD_Init
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _LCD_DisplayClear
  2627  046E                     _LCD_DisplayClear:	
  2628                           
  2629                           ;LCD.c: 66: RA4 = 0;
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2633  046E  0020               	movlb	0	; select bank0
  2634  046F  120C               	bcf	12,4	;volatile
  2635                           
  2636                           ;LCD.c: 67: LCD_WriteData(0x01);
  2637  0470  3001               	movlw	1
  2638  0471  3183  2344  3184   	fcall	_LCD_WriteData
  2639                           
  2640                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  2641  0474  3015               	movlw	21
  2642  0475  00F4               	movwf	??_LCD_DisplayClear
  2643  0476  30C6               	movlw	198
  2644  0477                     u2287:	
  2645  0477  0B89               	decfsz	9,f
  2646  0478  2C77               	goto	u2287
  2647  0479  0BF4               	decfsz	??_LCD_DisplayClear,f
  2648  047A  2C77               	goto	u2287
  2649  047B  3200               	nop2
  2650  047C  0008               	return
  2651  047D                     __end_of_LCD_DisplayClear:	
  2652                           
  2653                           	psect	text12
  2654  0421                     __ptext12:	
  2655 ;; *************** function _LCD_CursorPosition *****************
  2656 ;; Defined at:
  2657 ;;		line 86 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  tx              1    wreg     unsigned char 
  2660 ;;  ty              1    4[COMMON] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  tx              1    6[COMMON] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2672 ;;      Params:         1       0       0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0       0
  2674 ;;      Temps:          1       0       0       0       0       0
  2675 ;;      Totals:         3       0       0       0       0       0
  2676 ;;Total ram usage:        3 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_LCD_WriteData
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _LCD_CursorPosition
  2688  0421                     _LCD_CursorPosition:	
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  2692                           ;LCD_CursorPosition@tx stored from wreg
  2693  0421  00F6               	movwf	LCD_CursorPosition@tx
  2694                           
  2695                           ;LCD.c: 88: RA4 = 0;
  2696  0422  0020               	movlb	0	; select bank0
  2697  0423  120C               	bcf	12,4	;volatile
  2698                           
  2699                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  2700  0424  0874               	movf	LCD_CursorPosition@ty,w
  2701  0425  00F5               	movwf	??_LCD_CursorPosition
  2702  0426  3005               	movlw	5
  2703  0427                     u2055:	
  2704  0427  35F5               	lslf	??_LCD_CursorPosition,f
  2705  0428  3EFF               	addlw	-1
  2706  0429  1D03               	skipz
  2707  042A  2C27               	goto	u2055
  2708  042B  3575               	lslf	??_LCD_CursorPosition,w
  2709  042C  0476               	iorwf	LCD_CursorPosition@tx,w
  2710  042D  3880               	iorlw	-128
  2711  042E  3183  2344  3184   	fcall	_LCD_WriteData
  2712                           
  2713                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2714  0431  306A               	movlw	106
  2715  0432                     u2297:	
  2716  0432  0B89               	decfsz	9,f
  2717  0433  2C32               	goto	u2297
  2718  0434  3200               	nop2
  2719  0435  0008               	return
  2720  0436                     __end_of_LCD_CursorPosition:	
  2721                           
  2722                           	psect	text13
  2723  0344                     __ptext13:	
  2724 ;; *************** function _LCD_WriteData *****************
  2725 ;; Defined at:
  2726 ;;		line 15 in file "LCD.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  point           1    wreg     char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  point           1    3[COMMON] char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2740 ;;      Params:         0       0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0       0
  2743 ;;      Totals:         3       0       0       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    2
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_LCD_Init
  2751 ;;		_LCD_Put
  2752 ;;		_LCD_DisplayClear
  2753 ;;		_LCD_CursorPosition
  2754 ;;		_LCD_CursorHome
  2755 ;;		_LCD_CursorShift
  2756 ;;		_LCD_DispShift
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _LCD_WriteData
  2762  0344                     _LCD_WriteData:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2766                           ;LCD_WriteData@point stored from wreg
  2767  0344  00F3               	movwf	LCD_WriteData@point
  2768                           
  2769                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2770  0345  30D5               	movlw	213
  2771  0346                     u2307:	
  2772  0346  0B89               	decfsz	9,f
  2773  0347  2B46               	goto	u2307
  2774  0348  0000               	nop
  2775                           
  2776                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2777  0349  0873               	movf	LCD_WriteData@point,w
  2778  034A  00F1               	movwf	??_LCD_WriteData
  2779  034B  3004               	movlw	4
  2780  034C                     u1555:	
  2781  034C  1003               	clrc
  2782  034D  1BF1               	btfsc	??_LCD_WriteData,7
  2783  034E  1403               	setc
  2784  034F  0CF1               	rrf	??_LCD_WriteData,f
  2785  0350  0B89               	decfsz	9,f
  2786  0351  2B4C               	goto	u1555
  2787  0352  3003               	movlw	3
  2788  0353  0571               	andwf	??_LCD_WriteData,w
  2789  0354  00F2               	movwf	??_LCD_WriteData+1
  2790  0355  0E73               	swapf	LCD_WriteData@point,w
  2791  0356  390F               	andlw	15
  2792  0357  1989               	btfsc	9,3
  2793  0358  38F0               	iorlw	240
  2794  0359  390C               	andlw	12
  2795  035A  0709               	addwf	9,w
  2796  035B  0472               	iorwf	??_LCD_WriteData+1,w
  2797  035C  0020               	movlb	0	; select bank0
  2798  035D  008D               	movwf	13	;volatile
  2799                           
  2800                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2801  035E  158C               	bsf	12,3	;volatile
  2802  035F  3200               	nop2	;2 cycle nop
  2803  0360  3200               	nop2	;2 cycle nop
  2804  0361  3200               	nop2	;2 cycle nop
  2805  0362  3200               	nop2	;2 cycle nop
  2806  0363  0020               	movlb	0	; select bank0
  2807  0364  118C               	bcf	12,3	;volatile
  2808  0365  3200               	nop2	;2 cycle nop
  2809  0366  3200               	nop2	;2 cycle nop
  2810  0367  3200               	nop2	;2 cycle nop
  2811  0368  3200               	nop2	;2 cycle nop
  2812                           
  2813                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2814  0369  3003               	movlw	3
  2815  036A  0573               	andwf	LCD_WriteData@point,w
  2816  036B  00F1               	movwf	??_LCD_WriteData
  2817  036C  0873               	movf	LCD_WriteData@point,w
  2818  036D  390C               	andlw	12
  2819  036E  0709               	addwf	9,w
  2820  036F  0471               	iorwf	??_LCD_WriteData,w
  2821  0370  0020               	movlb	0	; select bank0
  2822  0371  008D               	movwf	13	;volatile
  2823                           
  2824                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2825  0372  158C               	bsf	12,3	;volatile
  2826  0373  3200               	nop2	;2 cycle nop
  2827  0374  3200               	nop2	;2 cycle nop
  2828  0375  3200               	nop2	;2 cycle nop
  2829  0376  3200               	nop2	;2 cycle nop
  2830  0377  0020               	movlb	0	; select bank0
  2831  0378  118C               	bcf	12,3	;volatile
  2832  0379  3200               	nop2	;2 cycle nop
  2833  037A  3200               	nop2	;2 cycle nop
  2834  037B  3200               	nop2	;2 cycle nop
  2835  037C  3200               	nop2	;2 cycle nop
  2836  037D  0008               	return
  2837  037E                     __end_of_LCD_WriteData:	
  2838                           
  2839                           	psect	text14
  2840  0436                     __ptext14:	
  2841 ;; *************** function _Basic_Init *****************
  2842 ;; Defined at:
  2843 ;;		line 32 in file "main.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      char 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2857 ;;      Params:         0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _Basic_Init
  2873  0436                     _Basic_Init:	
  2874                           
  2875                           ;main.c: 34: OSCCON = 0xF0;
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _Basic_Init: [wreg+status,2]
  2879  0436  30F0               	movlw	240
  2880  0437  0021               	movlb	1	; select bank1
  2881  0438  0099               	movwf	25	;volatile
  2882                           
  2883                           ;main.c: 38: TRISA = 0x07;
  2884  0439  3007               	movlw	7
  2885  043A  008C               	movwf	12	;volatile
  2886                           
  2887                           ;main.c: 39: ANSELA = 0x07;
  2888  043B  3007               	movlw	7
  2889  043C  0023               	movlb	3	; select bank3
  2890  043D  008C               	movwf	12	;volatile
  2891                           
  2892                           ;main.c: 41: TRISB = 0x40;
  2893  043E  3040               	movlw	64
  2894  043F  0021               	movlb	1	; select bank1
  2895  0440  008D               	movwf	13	;volatile
  2896                           
  2897                           ;main.c: 42: ANSELB = 0x00;
  2898  0441  0023               	movlb	3	; select bank3
  2899  0442  018D               	clrf	13	;volatile
  2900                           
  2901                           ;main.c: 44: APFCON0 = 0x08;
  2902  0443  3008               	movlw	8
  2903  0444  0022               	movlb	2	; select bank2
  2904  0445  009D               	movwf	29	;volatile
  2905                           
  2906                           ;main.c: 45: APFCON1 = 0x00;
  2907  0446  019E               	clrf	30	;volatile
  2908                           
  2909                           ;main.c: 47: PORTA = 0x00;
  2910  0447  0020               	movlb	0	; select bank0
  2911  0448  018C               	clrf	12	;volatile
  2912                           
  2913                           ;main.c: 48: PORTB = 0x00;
  2914  0449  018D               	clrf	13	;volatile
  2915  044A  0008               	return
  2916  044B                     __end_of_Basic_Init:	
  2917                           ;main.c: 50: return 0;
  2918                           ;	Return value of _Basic_Init is never used
  2919                           
  2920                           
  2921                           	psect	intentry
  2922  0004                     __pintentry:	
  2923 ;; *************** function _Handler *****************
  2924 ;; Defined at:
  2925 ;;		line 53 in file "main.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2939 ;;      Params:         0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0
  2941 ;;      Temps:          1       0       0       0       0       0
  2942 ;;      Totals:         1       0       0       0       0       0
  2943 ;;Total ram usage:        1 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		_Timer1_Handler
  2948 ;; This function is called by:
  2949 ;;		Interrupt level 1
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953  0004                     _Handler:	
  2954                           
  2955                           ;incstack = 0
  2956  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2957                           
  2958                           ; Regs used in _Handler: [status,2+status,0+pclath+cstack]
  2959  0005  3180               	pagesel	$
  2960  0006  0020               	movlb	0	; select bank0
  2961  0007  087F               	movf	127,w
  2962  0008  00F0               	movwf	??_Handler
  2963                           
  2964                           ;main.c: 55: Timer1_Handler();
  2965  0009  3184  247D         	fcall	_Timer1_Handler
  2966  000B  0870               	movf	??_Handler,w
  2967  000C  0020               	movlb	0	; select bank0
  2968  000D  00FF               	movwf	127
  2969  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2970  000F  0009               	retfie
  2971  0010                     __end_of_Handler:	
  2972                           
  2973                           	psect	text16
  2974  047D                     __ptext16:	
  2975 ;; *************** function _Timer1_Handler *****************
  2976 ;; Defined at:
  2977 ;;		line 33 in file "Timer1.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		None
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2991 ;;      Params:         0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_Handler
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _Timer1_Handler
  3006  047D                     _Timer1_Handler:	
  3007                           
  3008                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _Timer1_Handler: []
  3012  047D  0020               	movlb	0	; select bank0
  3013  047E  1C11               	btfss	17,0	;volatile
  3014  047F  0008               	return
  3015  0480  0021               	movlb	1	; select bank1
  3016  0481  1C11               	btfss	17,0	;volatile
  3017  0482  0008               	return
  3018                           
  3019                           ;Timer1.c: 36: {
  3020                           ;Timer1.c: 37: TMR1IF = 0;
  3021  0483  0020               	movlb	0	; select bank0
  3022  0484  1011               	bcf	17,0	;volatile
  3023  0485  0008               	return
  3024  0486                     __end_of_Timer1_Handler:	
  3025  007E                     btemp	set	126	;btemp
  3026  007E                     int$flags	set	126
  3027  007E                     wtemp0	set	126


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     60      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_xprintf
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData

Critical Paths under _Handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5592
                         _Basic_Init
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    5081
                                             11 COMMON     1     1      0
                                             53 BANK0      7     1      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4601
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     454
                                              7 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     356
                                              5 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              4 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              1 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              5 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              4 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              4 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              0 COMMON     1     1      0
                     _Timer1_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Timer1_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Mar 24 12:42:43 2017

                __CFG_CP$OFF 0000          ___wmul@multiplicand 0073                          l134 0098  
                        l119 001C                          l152 0133                          l175 01EA  
                        l386 03F5                          _GIE 005F                          _RA3 0063  
                        _RA4 0064                 __CFG_CPD$OFF 0000                 __CFG_BORV$LO 0000  
                        wreg 0009                   _Basic_Init 0436                 __CFG_LVP$OFF 0000  
            __end_of_LCD_Put 048C                         l2010 0330                         l2004 030A  
                       l2100 00E4                         l2006 0318                         l2014 033B  
                       l2110 010D                         l2112 010F                         l2104 00E8  
                       l2120 011B                         l2130 016B                         l2114 0111  
                       l2106 00FD                         l2050 004A                         l2140 018E  
                       l2132 017B                         l2116 0116                         l2108 010A  
                       l2060 0061                         l2036 0035                         l2150 01C8  
                       l2126 014D                         l2070 0090                         l2128 0162  
                       l2154 01D0                         l2138 018C                         l2066 0088  
                       l2058 005E                         l2180 021F                         l2172 0200  
                       l2092 00C0                         l2174 0209                         l2166 01F8  
                       l2094 00CE                         l2086 00B3                         l2078 00A5  
                       l2184 0231                         l2176 020D                         l2096 00D2  
                       l2186 0235                         l2288 03BB                         l1940 038D  
                       l1962 03EF                         l1980 02C0                         l1948 039C  
                       l1990 02EE                         l1982 02CE                         l1958 044C  
                       l1994 02F9                         STR_1 03E7                         STR_2 03EB  
                       STR_3 03CD                         STR_4 03DB                         STR_5 03E1  
                       STR_6 03D4                         u2025 021D                         u2045 0243  
                       u2055 0427                         u2307 0346                         u2247 024E  
                       u1615 03F6                         u2257 0266                         u1625 03FB  
                       u1555 034C                         u2267 0279                         u2277 028D  
                       u1725 030D                         u2287 0477                         u1655 02C3  
                       u2297 0432                         u1745 0326                         u1905 00F6  
                       u1675 02CF                         u1755 0331                         u1685 02E3  
                       u1695 02EF                         _PEIE 005E                         u1895 00E2  
                       _TMR1 0016                 __CFG_WRT$OFF 0000                         _main 03AB  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 0010  
              __CFG_IESO$OFF 0000              __end_of_Handler 0010                _LCD_WriteData 0344  
              __CFG_MCLRE$ON 0000     __end_of_LCD_DisplayClear 047D             __end_of_LCD_Init 02AF  
              __CFG_PLLEN$ON 0000                  LCD_Put@word 0074                        ?_main 0070  
              __CFG_WDTE$OFF 0000              __end_of___lldiv 0302                        _T1CON 0018  
            __end_of___llmod 0344                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                __CFG_PWRTE$ON 0000  
             __CFG_FCMEN$OFF 0000                        _xputc 037E                        _xputs 044B  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_xprintf 046E           _LCD_CursorPosition 0421               ?_LCD_WriteData 0070  
            __initialization 0012                 __end_of_main 03CD          ?_LCD_CursorPosition 0074  
                     ??_main 007C                    ??_LCD_Put 0075                  ?_Basic_Init 0070  
             _Timer1_Handler 047D             ___llmod@dividend 0075         ??_LCD_CursorPosition 0075  
                     _ANSELA 018C                       _ANSELB 018D                       _T1GCON 0019  
                     ?_xputc 0070                       ?_xputs 0070                       _OSCCON 0099  
                     _TMR1IE 0488                       _TMR1IF 0088                    ??_Handler 0070  
                     _TMR1ON 00C0                ??_Timer1_Init 0071                       ___wmul 03ED  
                  ??___lldiv 0079                    ??___llmod 0079                       _outptr 007C  
     __end_of_Timer1_Handler 0486                       xputc@c 0076                    ??_xprintf 007B  
    __end_of__initialization 0018                    ?_LCD_Init 0070              ??_LCD_WriteData 0071  
           __end_of_xvprintf 0246               __pcstackCOMMON 0070          __size_of_Basic_Init 0015  
        __end_of_Timer1_Init 0421                __end_of_xputc 03AB                __end_of_xputs 045E  
            ?_Timer1_Handler 0070                      ??_xputc 0075                      ??_xputs 0077  
                 __pbssBANK0 005C                   ??_LCD_Init 0075                   __pmaintext 03AB  
                    ?___wmul 0071                   __pintentry 0004            ?_LCD_DisplayClear 0070  
                    _APFCON0 011D                      _APFCON1 011E           ??_LCD_DisplayClear 0074  
                    _LCD_Put 0486                 _xvprintf$166 003C                 _xvprintf$167 0040  
               _xvprintf$168 0042                      _Handler 0004                  _Timer1_Init 0408  
                    ___lldiv 02AF              __size_of___wmul 001B                      ___llmod 0302  
            __CFG_STVREN$OFF 0000                      __ptext1 045E                      __ptext2 001C  
                    __ptext3 044B                      __ptext4 037E                      __ptext5 0486  
                    __ptext6 03ED                      __ptext7 0302                      __ptext8 02AF  
                    __ptext9 0408                    ?_xvprintf 0025                 ??_Basic_Init 0071  
       end_of_initialization 0018                      _xprintf 045E              ___lldiv@divisor 0071  
            ___lldiv@counter 0024           __end_of_Basic_Init 044B                 __pstringtext 03CD  
           __CFG_FOSC$INTOSC 0000                   ??_xvprintf 0028  __size_of_LCD_CursorPosition 0015  
          __size_of_LCD_Init 0069               __end_of___wmul 0408             ??_Timer1_Handler 0070  
        start_initialization 0012              ___llmod@divisor 0071              ___llmod@counter 007A  
       LCD_CursorPosition@tx 0076         LCD_CursorPosition@ty 0074        __end_of_LCD_WriteData 037E  
                   ??___wmul 0075                     ?_LCD_Put 0074                  __pbssCOMMON 007C  
                  ___latbits 0001                __pcstackBANK0 0020    __size_of_LCD_DisplayClear 000F  
                   ?_Handler 0070                 ?_Timer1_Init 0070                     ?___lldiv 0071  
                   ?___llmod 0071            __size_of_xvprintf 022A                     ?_xprintf 0055  
             __size_of_xputc 002D               __size_of_xputs 0013                     _LCD_Init 0246  
             ___wmul@product 0075            ___wmul@multiplier 0071                    _xfunc_out 005E  
           __size_of_LCD_Put 0006             __size_of_Handler 000C             __size_of___lldiv 0053  
           __size_of___llmod 0042           LCD_WriteData@point 0073   __end_of_LCD_CursorPosition 0436  
                   __ptext10 0246                     __ptext11 046E                     __ptext12 0421  
                   __ptext13 0344                     __ptext14 0436                     __ptext16 047D  
           _LCD_DisplayClear 046E             __size_of_xprintf 0010                __size_of_main 0022  
       __size_of_Timer1_Init 0019                     int$flags 007E                     _xfunc_in 005C  
                   _xvprintf 001C                   xprintf@arp 005B                   xprintf@fmt 0055  
                   intlevel1 0000             ___lldiv@dividend 0075            __CFG_CLKOUTEN$OFF 0000  
                xvprintf@arp 0027                  xvprintf@fmt 0025             ___lldiv@quotient 0020  
     __size_of_LCD_WriteData 003A      __size_of_Timer1_Handler 0009                     xputs@str 0078  
                  xvprintf@c 0054                    xvprintf@d 0053                    xvprintf@f 004F  
                  xvprintf@i 0051                    xvprintf@j 0049                    xvprintf@p 0044  
                  xvprintf@r 0045                    xvprintf@s 002C                    xvprintf@v 004B  
                  xvprintf@w 0047  
