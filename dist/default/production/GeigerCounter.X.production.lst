

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                                                                                               Fri Mar 24 12:42:43 2017
=======
                                                                                               Tue Mar  7 12:55:14 2017
>>>>>>> LCD
=======
                                                                                               Tue Mar  7 12:40:51 2017
>>>>>>> eeprom
=======
                                                                                               Sat Mar 25 02:26:50 2017
>>>>>>> buzer
=======
                                                                                               Sat Mar 25 02:13:58 2017
>>>>>>> ExternalDAC

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
<<<<<<< HEAD
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
<<<<<<< HEAD
<<<<<<< HEAD
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
=======
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
=======
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
>>>>>>> ExternalDAC
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
<<<<<<< HEAD
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
=======
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
>>>>>>> ExternalDAC
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
<<<<<<< HEAD
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
>>>>>>> eeprom
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.41
    30                           ; Generated 25/01/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1827 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0219                     	;# 
   164  021A                     	;# 
   165  021B                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021E                     	;# 
   169  021F                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0294                     	;# 
   175  0295                     	;# 
   176  0295                     	;# 
   177  0296                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029B                     	;# 
   183  029C                     	;# 
   184  029C                     	;# 
   185  029D                     	;# 
   186  029E                     	;# 
   187  029E                     	;# 
   188  0311                     	;# 
   189  0311                     	;# 
   190  0312                     	;# 
   191  0313                     	;# 
   192  0318                     	;# 
   193  0318                     	;# 
   194  0319                     	;# 
   195  031A                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  011E                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0191                     	;# 
   285  0191                     	;# 
   286  0192                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  0211                     	;# 
   307  0211                     	;# 
   308  0212                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0213                     	;# 
   312  0214                     	;# 
   313  0214                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0219                     	;# 
   322  021A                     	;# 
   323  021B                     	;# 
   324  021C                     	;# 
   325  021D                     	;# 
   326  021E                     	;# 
   327  021F                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029E                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0318                     	;# 
   351  0318                     	;# 
   352  0319                     	;# 
   353  031A                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  039A                     	;# 
   358  039C                     	;# 
   359  039D                     	;# 
   360  039E                     	;# 
   361  039F                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  0111                     	;# 
   428  0112                     	;# 
   429  0113                     	;# 
   430  0114                     	;# 
   431  0115                     	;# 
   432  0116                     	;# 
   433  0117                     	;# 
   434  0118                     	;# 
   435  0119                     	;# 
   436  011A                     	;# 
   437  011B                     	;# 
   438  011D                     	;# 
   439  011E                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019E                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  0219                     	;# 
   480  021A                     	;# 
   481  021B                     	;# 
   482  021C                     	;# 
   483  021D                     	;# 
   484  021E                     	;# 
   485  021F                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0294                     	;# 
   491  0295                     	;# 
   492  0295                     	;# 
   493  0296                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  029B                     	;# 
   499  029C                     	;# 
   500  029C                     	;# 
   501  029D                     	;# 
   502  029E                     	;# 
   503  029E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0415                     	;# 
   521  0416                     	;# 
   522  0417                     	;# 
   523  041C                     	;# 
   524  041D                     	;# 
   525  041E                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
<<<<<<< HEAD
   537  0016                     _TMR1	set	22
   538  0019                     _T1GCON	set	25
   539  0018                     _T1CON	set	24
   540  000D                     _PORTB	set	13
   541  000C                     _PORTA	set	12
   542  005F                     _GIE	set	95
   543  005E                     _PEIE	set	94
   544  0088                     _TMR1IF	set	136
   545  0064                     _RA4	set	100
   546  0063                     _RA3	set	99
   547  00C0                     _TMR1ON	set	192
   548  008D                     _TRISB	set	141
   549  008C                     _TRISA	set	140
   550  0099                     _OSCCON	set	153
   551  0488                     _TMR1IE	set	1160
   552  011E                     _APFCON1	set	286
   553  011D                     _APFCON0	set	285
   554  018D                     _ANSELB	set	397
   555  018C                     _ANSELA	set	396
   556                           
   557                           	psect	stringtext
   558  03CD                     __pstringtext:	
   559  03CD                     STR_3:	
   560  03CD  3425               	retlw	37	;'%'
   561  03CE  3430               	retlw	48	;'0'
   562  03CF  3438               	retlw	56	;'8'
   563  03D0  346C               	retlw	108	;'l'
   564  03D1  3458               	retlw	88	;'X'
   565  03D2  3420               	retlw	32	;' '
   566  03D3  3400               	retlw	0
   567  03D4                     STR_6:	
   568  03D4  3420               	retlw	32	;' '
   569  03D5  3425               	retlw	37	;'%'
   570  03D6  3430               	retlw	48	;'0'
   571  03D7  3438               	retlw	56	;'8'
   572  03D8  344C               	retlw	76	;'L'
   573  03D9  3458               	retlw	88	;'X'
   574  03DA  3400               	retlw	0
   575  03DB                     STR_4:	
   576  03DB  3420               	retlw	32	;' '
   577  03DC  3425               	retlw	37	;'%'
   578  03DD  3430               	retlw	48	;'0'
   579  03DE  3432               	retlw	50	;'2'
   580  03DF  3458               	retlw	88	;'X'
   581  03E0  3400               	retlw	0
   582  03E1                     STR_5:	
   583  03E1  3420               	retlw	32	;' '
   584  03E2  3425               	retlw	37	;'%'
   585  03E3  3430               	retlw	48	;'0'
   586  03E4  3434               	retlw	52	;'4'
   587  03E5  3458               	retlw	88	;'X'
   588  03E6  3400               	retlw	0
   589  03E7                     STR_1:	
   590  03E7  3425               	retlw	37	;'%'
   591  03E8  3455               	retlw	85	;'U'
   592  03E9  3420               	retlw	32	;' '
   593  03EA  3400               	retlw	0
   594  03EB                     STR_2:	
   595  03EB  340D               	retlw	13
   596  03EC  3400               	retlw	0
   597                           
   598                           ; #config settings
   599  0000                     
   600                           	psect	cinit
   601  0012                     start_initialization:	
   602  0012                     __initialization:	
   603                           
   604                           ; Clear objects allocated to COMMON
   605  0012  01FC               	clrf	__pbssCOMMON& (0+127)
   606                           
   607                           ; Clear objects allocated to BANK0
   608  0013  0020               	movlb	0	; select bank0
   609  0014  01DC               	clrf	__pbssBANK0& (0+127)
   610  0015  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   611  0016  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   612  0017  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   613  0018                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616  0018                     __end_of__initialization:	
   617  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   618  0019  0020               	movlb	0
   619  001A  3183  2BAB         	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssCOMMON
   622  007C                     __pbssCOMMON:	
   623  007C                     _outptr:	
   624  007C                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  005C                     __pbssBANK0:	
   628  005C                     _xfunc_in:	
   629  005C                     	ds	2
   630  005E                     _xfunc_out:	
   631  005E                     	ds	2
   632                           
   633                           	psect	cstackCOMMON
   634  0070                     __pcstackCOMMON:	
   635  0070                     ?_Basic_Init:	
   636  0070                     ?_Timer1_Init:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_LCD_Init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Timer1_Handler:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ??_Timer1_Handler:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_DisplayClear:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_main:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_Handler:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ??_Handler:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_LCD_WriteData:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_xputc:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_xputs:	
   667                           ; 1 bytes @ 0x0
   668                           
   669                           
   670                           ; 1 bytes @ 0x0
   671  0070                     	ds	1
   672  0071                     ??_Basic_Init:	
   673  0071                     ??_Timer1_Init:	
   674                           ; 1 bytes @ 0x1
   675                           
   676  0071                     ??_LCD_WriteData:	
   677                           ; 1 bytes @ 0x1
   678                           
   679  0071                     ?___wmul:	
   680                           ; 1 bytes @ 0x1
   681                           
   682  0071                     ?___lldiv:	
   683                           ; 2 bytes @ 0x1
   684                           
   685  0071                     ?___llmod:	
   686                           ; 4 bytes @ 0x1
   687                           
   688  0071                     ___wmul@multiplier:	
   689                           ; 4 bytes @ 0x1
   690                           
   691  0071                     ___lldiv@divisor:	
   692                           ; 2 bytes @ 0x1
   693                           
   694  0071                     ___llmod@divisor:	
   695                           ; 4 bytes @ 0x1
   696                           
   697                           
   698                           ; 4 bytes @ 0x1
   699  0071                     	ds	2
   700  0073                     LCD_WriteData@point:	
   701  0073                     ___wmul@multiplicand:	
   702                           ; 1 bytes @ 0x3
   703                           
   704                           
   705                           ; 2 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ?_LCD_Put:	
   708  0074                     ?_LCD_CursorPosition:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??_LCD_DisplayClear:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     LCD_Put@word:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     LCD_CursorPosition@ty:	
   718                           ; 1 bytes @ 0x4
   719                           
   720                           
   721                           ; 1 bytes @ 0x4
   722  0074                     	ds	1
   723  0075                     ??_LCD_Init:	
   724  0075                     ??_LCD_Put:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ??_LCD_CursorPosition:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ??_xputc:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ??___wmul:	
   734                           ; 1 bytes @ 0x5
   735                           
   736  0075                     ___wmul@product:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     ___lldiv@dividend:	
   740                           ; 2 bytes @ 0x5
   741                           
   742  0075                     ___llmod@dividend:	
   743                           ; 4 bytes @ 0x5
   744                           
   745                           
   746                           ; 4 bytes @ 0x5
   747  0075                     	ds	1
   748  0076                     LCD_CursorPosition@tx:	
   749  0076                     xputc@c:	
   750                           ; 1 bytes @ 0x6
   751                           
   752                           
   753                           ; 1 bytes @ 0x6
   754  0076                     	ds	1
   755  0077                     ??_xputs:	
   756                           
   757                           ; 1 bytes @ 0x7
   758  0077                     	ds	1
   759  0078                     xputs@str:	
   760                           
   761                           ; 1 bytes @ 0x8
   762  0078                     	ds	1
   763  0079                     ??___lldiv:	
   764  0079                     ??___llmod:	
   765                           ; 1 bytes @ 0x9
   766                           
   767                           
   768                           ; 1 bytes @ 0x9
   769  0079                     	ds	1
   770  007A                     ___llmod@counter:	
   771                           
   772                           ; 1 bytes @ 0xA
   773  007A                     	ds	1
   774  007B                     ??_xprintf:	
   775                           
   776                           ; 1 bytes @ 0xB
   777  007B                     	ds	1
   778  007C                     ??_main:	
   779                           
   780                           	psect	cstackBANK0
   781  0020                     __pcstackBANK0:	
   782                           ; 1 bytes @ 0xC
   783                           
   784  0020                     ___lldiv@quotient:	
   785                           
   786                           ; 4 bytes @ 0x0
   787  0020                     	ds	4
   788  0024                     ___lldiv@counter:	
   789                           
   790                           ; 1 bytes @ 0x4
   791  0024                     	ds	1
   792  0025                     ?_xvprintf:	
   793  0025                     xvprintf@fmt:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 2 bytes @ 0x5
   798  0025                     	ds	2
   799  0027                     xvprintf@arp:	
   800                           
   801                           ; 1 bytes @ 0x7
   802  0027                     	ds	1
   803  0028                     ??_xvprintf:	
   804                           
   805                           ; 1 bytes @ 0x8
   806  0028                     	ds	4
   807  002C                     xvprintf@s:	
   808                           
   809                           ; 16 bytes @ 0xC
   810  002C                     	ds	16
   811  003C                     _xvprintf$166:	
   812                           
   813                           ; 4 bytes @ 0x1C
   814  003C                     	ds	4
   815  0040                     _xvprintf$167:	
   816                           
   817                           ; 2 bytes @ 0x20
   818  0040                     	ds	2
   819  0042                     _xvprintf$168:	
   820                           
   821                           ; 2 bytes @ 0x22
   822  0042                     	ds	2
   823  0044                     xvprintf@p:	
   824                           
   825                           ; 1 bytes @ 0x24
   826  0044                     	ds	1
   827  0045                     xvprintf@r:	
   828                           
   829                           ; 2 bytes @ 0x25
   830  0045                     	ds	2
   831  0047                     xvprintf@w:	
   832                           
   833                           ; 2 bytes @ 0x27
   834  0047                     	ds	2
   835  0049                     xvprintf@j:	
   836                           
   837                           ; 2 bytes @ 0x29
   838  0049                     	ds	2
   839  004B                     xvprintf@v:	
   840                           
   841                           ; 4 bytes @ 0x2B
   842  004B                     	ds	4
   843  004F                     xvprintf@f:	
   844                           
   845                           ; 2 bytes @ 0x2F
   846  004F                     	ds	2
   847  0051                     xvprintf@i:	
   848                           
   849                           ; 2 bytes @ 0x31
   850  0051                     	ds	2
   851  0053                     xvprintf@d:	
   852                           
   853                           ; 1 bytes @ 0x33
   854  0053                     	ds	1
   855  0054                     xvprintf@c:	
   856                           
   857                           ; 1 bytes @ 0x34
   858  0054                     	ds	1
   859  0055                     ?_xprintf:	
   860  0055                     xprintf@fmt:	
   861                           ; 1 bytes @ 0x35
   862                           
   863                           
   864                           ; 2 bytes @ 0x35
   865  0055                     	ds	6
   866  005B                     xprintf@arp:	
   867                           
   868                           ; 1 bytes @ 0x3B
   869  005B                     	ds	1
   870                           
   871                           	psect	maintext
   872  03AB                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 13 in file "main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      char 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : B1F/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   892 ;;      Params:         0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels required when called:    8
   898 ;; This function calls:
   899 ;;		_Basic_Init
   900 ;;		_LCD_CursorPosition
   901 ;;		_LCD_Init
   902 ;;		_Timer1_Init
   903 ;;		_xprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  03AB                     _main:	
   912                           
   913                           ;main.c: 15: Basic_Init();
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   917  03AB  3184  2436  3183   	fcall	_Basic_Init
   918                           
   919                           ;main.c: 17: Timer1_Init();
   920  03AE  3184  2408  3183   	fcall	_Timer1_Init
   921                           
   922                           ;main.c: 18: TMR1ON = 1;;
   923  03B1  0020               	movlb	0	; select bank0
   924  03B2  1418               	bsf	24,0	;volatile
   925                           
   926                           ;main.c: 20: LCD_Init();
   927  03B3  3182  2246  3183   	fcall	_LCD_Init
   928                           
   929                           ;main.c: 21: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   930  03B6  3086               	movlw	low _LCD_Put
   931  03B7  0020               	movlb	0	; select bank0
   932  03B8  00DE               	movwf	_xfunc_out
   933  03B9  3004               	movlw	high _LCD_Put
   934  03BA  00DF               	movwf	_xfunc_out+1
   935  03BB                     l2288:	
   936                           ;main.c: 23: while(1)
   937                           
   938                           
   939                           ;main.c: 24: {
   940                           ;main.c: 25: LCD_CursorPosition(0,0);
   941  03BB  01F4               	clrf	LCD_CursorPosition@ty
   942  03BC  3000               	movlw	0
   943  03BD  3184  2421  3183   	fcall	_LCD_CursorPosition
   944                           
   945                           ;main.c: 26: xprintf("%U ",(uint16_t)TMR1);
   946  03C0  30E7               	movlw	low (STR_1| (0+32768))
   947  03C1  0020               	movlb	0	; select bank0
   948  03C2  00D5               	movwf	xprintf@fmt
   949  03C3  3083               	movlw	high (STR_1| (0+32768))
   950  03C4  00D6               	movwf	xprintf@fmt+1
   951  03C5  0817               	movf	23,w	;volatile
   952  03C6  00D8               	movwf	?_xprintf+3
   953  03C7  0816               	movf	22,w	;volatile
   954  03C8  00D7               	movwf	?_xprintf+2
   955  03C9  3184  245E  3183   	fcall	_xprintf
   956  03CC  2BBB               	goto	l2288
   957  03CD                     __end_of_main:	
   958                           ;main.c: 27: }
   959                           ;main.c: 29: return 0;
   960                           ;	Return value of _main is never used
   961                           
   962                           
   963                           	psect	text1
   964  045E                     __ptext1:	
   965 ;; *************** function _xprintf *****************
   966 ;; Defined at:
   967 ;;		line 165 in file "xprintf.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
   970 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
   971 ;;		 -> STR_1(4), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  arp             1   59[BANK0 ] PTR void [1]
   974 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   984 ;;      Params:         0       6       0       0       0       0
   985 ;;      Locals:         0       1       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0
   987 ;;      Totals:         1       7       0       0       0       0
   988 ;;Total ram usage:        8 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    7
   991 ;; This function calls:
   992 ;;		_xvprintf
   993 ;; This function is called by:
   994 ;;		_main
   995 ;;		_put_dump
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _xprintf
  1001  045E                     _xprintf:	
  1002                           
  1003                           ;xprintf.c: 170: va_list arp;
  1004                           ;xprintf.c: 173: *arp = __va_start();
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1008  045E  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1009  045F  00FB               	movwf	??_xprintf
  1010  0460  087B               	movf	??_xprintf,w
  1011  0461  0020               	movlb	0	; select bank0
  1012  0462  00DB               	movwf	xprintf@arp
  1013                           
  1014                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1015  0463  0856               	movf	xprintf@fmt+1,w
  1016  0464  00A6               	movwf	xvprintf@fmt+1
  1017  0465  0855               	movf	xprintf@fmt,w
  1018  0466  00A5               	movwf	xvprintf@fmt
  1019  0467  305B               	movlw	(low (xprintf@arp| 0))& (0+255)
  1020  0468  00FB               	movwf	??_xprintf
  1021  0469  087B               	movf	??_xprintf,w
  1022  046A  00A7               	movwf	xvprintf@arp
  1023  046B  3180  201C         	fcall	_xvprintf
  1024  046D  0008               	return
  1025  046E                     __end_of_xprintf:	
  1026                           
  1027                           	psect	text2
  1028  001C                     __ptext2:	
  1029 ;; *************** function _xvprintf *****************
  1030 ;; Defined at:
  1031 ;;		line 88 in file "xprintf.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1035 ;;		 -> STR_1(4), 
  1036 ;;  arp             1    7[BANK0 ] PTR PTR void 
  1037 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  s              16   12[BANK0 ] unsigned char [16]
  1040 ;;  v               4   43[BANK0 ] unsigned long 
  1041 ;;  i               2   49[BANK0 ] unsigned int 
  1042 ;;  f               2   47[BANK0 ] unsigned int 
  1043 ;;  j               2   41[BANK0 ] unsigned int 
  1044 ;;  w               2   39[BANK0 ] unsigned int 
  1045 ;;  r               2   37[BANK0 ] unsigned int 
  1046 ;;  c               1   52[BANK0 ] unsigned char 
  1047 ;;  d               1   51[BANK0 ] unsigned char 
  1048 ;;  p               1   36[BANK0 ] PTR unsigned char 
  1049 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1059 ;;      Params:         0       3       0       0       0       0
  1060 ;;      Locals:         0      41       0       0       0       0
  1061 ;;      Temps:          0       4       0       0       0       0
  1062 ;;      Totals:         0      48       0       0       0       0
  1063 ;;Total ram usage:       48 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    6
  1066 ;; This function calls:
  1067 ;;		___lldiv
  1068 ;;		___llmod
  1069 ;;		___wmul
  1070 ;;		_xputc
  1071 ;;		_xputs
  1072 ;; This function is called by:
  1073 ;;		_xprintf
  1074 ;;		_xsprintf
  1075 ;;		_xfprintf
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _xvprintf
  1081  001C                     _xvprintf:	
  1082  001C                     l119:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1085                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1086                           ;xprintf.c: 94: unsigned long v;
  1087                           ;xprintf.c: 95: char s[16], c, d, *p;
  1088                           ;xprintf.c: 98: for (;;) {
  1089                           
  1090                           
  1091                           ;xprintf.c: 99: c = *fmt++;
  1092  001C  0020               	movlb	0	; select bank0
  1093  001D  0825               	movf	xvprintf@fmt,w
  1094  001E  0084               	movwf	4
  1095  001F  0826               	movf	xvprintf@fmt+1,w
  1096  0020  0085               	movwf	5
  1097  0021  0800               	movf	0,w	;code access
  1098  0022  00A8               	movwf	??_xvprintf
  1099  0023  0828               	movf	??_xvprintf,w
  1100  0024  00D4               	movwf	xvprintf@c
  1101  0025  3001               	movlw	1
  1102  0026  07A5               	addwf	xvprintf@fmt,f
  1103  0027  3000               	movlw	0
  1104  0028  3DA6               	addwfc	xvprintf@fmt+1,f
  1105                           
  1106                           ;xprintf.c: 100: if (!c) break;
  1107  0029  0854               	movf	xvprintf@c,w
  1108  002A  1903               	btfsc	3,2
  1109  002B  0008               	return
  1110                           
  1111                           ;xprintf.c: 101: if (c != '%') {
  1112  002C  3025               	movlw	37
  1113  002D  0654               	xorwf	xvprintf@c,w
  1114  002E  1903               	btfsc	3,2
  1115  002F  2835               	goto	l2036
  1116                           
  1117                           ;xprintf.c: 102: xputc(c); continue;
  1118  0030  0854               	movf	xvprintf@c,w
  1119  0031  3183  237E  3180   	fcall	_xputc
  1120  0034  281C               	goto	l119
  1121  0035                     l2036:	
  1122                           
  1123                           ;xprintf.c: 103: }
  1124                           ;xprintf.c: 104: f = 0;
  1125  0035  0020               	movlb	0	; select bank0
  1126  0036  01CF               	clrf	xvprintf@f
  1127  0037  01D0               	clrf	xvprintf@f+1
  1128                           
  1129                           ;xprintf.c: 105: c = *fmt++;
  1130  0038  0825               	movf	xvprintf@fmt,w
  1131  0039  0084               	movwf	4
  1132  003A  0826               	movf	xvprintf@fmt+1,w
  1133  003B  0085               	movwf	5
  1134  003C  0800               	movf	0,w	;code access
  1135  003D  00A8               	movwf	??_xvprintf
  1136  003E  0828               	movf	??_xvprintf,w
  1137  003F  00D4               	movwf	xvprintf@c
  1138  0040  3001               	movlw	1
  1139  0041  07A5               	addwf	xvprintf@fmt,f
  1140  0042  3000               	movlw	0
  1141  0043  3DA6               	addwfc	xvprintf@fmt+1,f
  1142                           
  1143                           ;xprintf.c: 106: if (c == '0') {
  1144  0044  3030               	movlw	48
  1145  0045  0654               	xorwf	xvprintf@c,w
  1146  0046  1D03               	btfss	3,2
  1147  0047  284A               	goto	l2050
  1148                           
  1149                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1150  0048  3001               	movlw	1
  1151  0049  284F               	goto	L6
  1152  004A                     l2050:	
  1153                           ;xprintf.c: 108: } else {
  1154                           
  1155                           
  1156                           ;xprintf.c: 109: if (c == '-') {
  1157  004A  302D               	movlw	45
  1158  004B  0654               	xorwf	xvprintf@c,w
  1159  004C  1D03               	btfss	3,2
  1160  004D  285E               	goto	l2058
  1161                           
  1162                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1163  004E  3002               	movlw	2
  1164  004F                     L6:	
  1165  004F  00CF               	movwf	xvprintf@f
  1166  0050  3000               	movlw	0
  1167  0051  00D0               	movwf	xvprintf@f+1
  1168  0052  0825               	movf	xvprintf@fmt,w
  1169  0053  0084               	movwf	4
  1170  0054  0826               	movf	xvprintf@fmt+1,w
  1171  0055  0085               	movwf	5
  1172  0056  0800               	movf	0,w	;code access
  1173  0057  00A8               	movwf	??_xvprintf
  1174  0058  0828               	movf	??_xvprintf,w
  1175  0059  00D4               	movwf	xvprintf@c
  1176  005A  3001               	movlw	1
  1177  005B  07A5               	addwf	xvprintf@fmt,f
  1178  005C  3000               	movlw	0
  1179  005D  3DA6               	addwfc	xvprintf@fmt+1,f
  1180  005E                     l2058:	
  1181                           
  1182                           ;xprintf.c: 111: }
  1183                           ;xprintf.c: 112: }
  1184                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1185  005E  01C7               	clrf	xvprintf@w
  1186  005F  01C8               	clrf	xvprintf@w+1
  1187  0060  2888               	goto	l2066
  1188  0061                     l2060:	
  1189                           
  1190                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1191  0061  0854               	movf	xvprintf@c,w
  1192  0062  00A8               	movwf	??_xvprintf
  1193  0063  01A9               	clrf	??_xvprintf+1
  1194  0064  0848               	movf	xvprintf@w+1,w
  1195  0065  00F2               	movwf	___wmul@multiplier+1
  1196  0066  0847               	movf	xvprintf@w,w
  1197  0067  00F1               	movwf	___wmul@multiplier
  1198  0068  300A               	movlw	10
  1199  0069  00F3               	movwf	___wmul@multiplicand
  1200  006A  3000               	movlw	0
  1201  006B  00F4               	movwf	___wmul@multiplicand+1
  1202  006C  3183  23ED  3180   	fcall	___wmul
  1203  006F  0020               	movlb	0	; select bank0
  1204  0070  0828               	movf	??_xvprintf,w
  1205  0071  0771               	addwf	?___wmul,w
  1206  0072  00AA               	movwf	??_xvprintf+2
  1207  0073  0829               	movf	??_xvprintf+1,w
  1208  0074  3D72               	addwfc	?___wmul+1,w
  1209  0075  00AB               	movwf	??_xvprintf+3
  1210  0076  082A               	movf	??_xvprintf+2,w
  1211  0077  3ED0               	addlw	208
  1212  0078  00C7               	movwf	xvprintf@w
  1213  0079  30FF               	movlw	255
  1214  007A  3D2B               	addwfc	??_xvprintf+3,w
  1215  007B  00C8               	movwf	xvprintf@w+1
  1216  007C  0825               	movf	xvprintf@fmt,w
  1217  007D  0084               	movwf	4
  1218  007E  0826               	movf	xvprintf@fmt+1,w
  1219  007F  0085               	movwf	5
  1220  0080  0800               	movf	0,w	;code access
  1221  0081  00A8               	movwf	??_xvprintf
  1222  0082  0828               	movf	??_xvprintf,w
  1223  0083  00D4               	movwf	xvprintf@c
  1224  0084  3001               	movlw	1
  1225  0085  07A5               	addwf	xvprintf@fmt,f
  1226  0086  3000               	movlw	0
  1227  0087  3DA6               	addwfc	xvprintf@fmt+1,f
  1228  0088                     l2066:	
  1229  0088  3030               	movlw	48
  1230  0089  0254               	subwf	xvprintf@c,w
  1231  008A  1C03               	skipc
  1232  008B  2890               	goto	l2070
  1233  008C  303A               	movlw	58
  1234  008D  0254               	subwf	xvprintf@c,w
  1235  008E  1C03               	skipc
  1236  008F  2861               	goto	l2060
  1237  0090                     l2070:	
  1238                           
  1239                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1240  0090  306C               	movlw	108
  1241  0091  0654               	xorwf	xvprintf@c,w
  1242  0092  1903               	btfsc	3,2
  1243  0093  2898               	goto	l134
  1244  0094  304C               	movlw	76
  1245  0095  0654               	xorwf	xvprintf@c,w
  1246  0096  1D03               	btfss	3,2
  1247  0097  28A5               	goto	l2078
  1248  0098                     l134:	
  1249                           
  1250                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1251  0098  154F               	bsf	xvprintf@f,2
  1252  0099  0825               	movf	xvprintf@fmt,w
  1253  009A  0084               	movwf	4
  1254  009B  0826               	movf	xvprintf@fmt+1,w
  1255  009C  0085               	movwf	5
  1256  009D  0800               	movf	0,w	;code access
  1257  009E  00A8               	movwf	??_xvprintf
  1258  009F  0828               	movf	??_xvprintf,w
  1259  00A0  00D4               	movwf	xvprintf@c
  1260  00A1  3001               	movlw	1
  1261  00A2  07A5               	addwf	xvprintf@fmt,f
  1262  00A3  3000               	movlw	0
  1263  00A4  3DA6               	addwfc	xvprintf@fmt+1,f
  1264  00A5                     l2078:	
  1265                           
  1266                           ;xprintf.c: 117: }
  1267                           ;xprintf.c: 118: if (!c) break;
  1268  00A5  0854               	movf	xvprintf@c,w
  1269  00A6  1903               	btfsc	3,2
  1270  00A7  0008               	return
  1271                           
  1272                           ;xprintf.c: 119: d = c;
  1273  00A8  0854               	movf	xvprintf@c,w
  1274  00A9  00A8               	movwf	??_xvprintf
  1275  00AA  0828               	movf	??_xvprintf,w
  1276  00AB  00D3               	movwf	xvprintf@d
  1277                           
  1278                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  1279  00AC  3061               	movlw	97
  1280  00AD  0253               	subwf	xvprintf@d,w
  1281  00AE  1C03               	skipc
  1282  00AF  291B               	goto	l2120
  1283  00B0  3020               	movlw	32
  1284  00B1  02D3               	subwf	xvprintf@d,f
  1285                           
  1286                           ;xprintf.c: 121: switch (d) {
  1287  00B2  291B               	goto	l2120
  1288  00B3                     l2086:	
  1289                           ;xprintf.c: 122: case 'S' :
  1290                           
  1291                           
  1292                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  1293  00B3  0827               	movf	xvprintf@arp,w
  1294  00B4  0086               	movwf	6
  1295  00B5  0187               	clrf	7
  1296  00B6  3F40               	moviw [0]fsr1
  1297  00B7  0084               	movwf	4
  1298  00B8  0185               	clrf	5
  1299  00B9  0A81               	incf	1,f
  1300  00BA  0800               	movf	0,w
  1301  00BB  00A8               	movwf	??_xvprintf
  1302  00BC  0828               	movf	??_xvprintf,w
  1303  00BD  00C4               	movwf	xvprintf@p
  1304                           
  1305                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  1306  00BE  01C9               	clrf	xvprintf@j
  1307  00BF  01CA               	clrf	xvprintf@j+1
  1308  00C0                     l2092:	
  1309  00C0  0849               	movf	xvprintf@j,w
  1310  00C1  0744               	addwf	xvprintf@p,w
  1311  00C2  00A8               	movwf	??_xvprintf
  1312  00C3  0828               	movf	??_xvprintf,w
  1313  00C4  0086               	movwf	6
  1314  00C5  0187               	clrf	7
  1315  00C6  0801               	movf	1,w
  1316  00C7  1903               	btfsc	3,2
  1317  00C8  28D2               	goto	l2096
  1318  00C9  3001               	movlw	1
  1319  00CA  07C9               	addwf	xvprintf@j,f
  1320  00CB  3000               	movlw	0
  1321  00CC  3DCA               	addwfc	xvprintf@j+1,f
  1322  00CD  28C0               	goto	l2092
  1323  00CE                     l2094:	
  1324                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  1325                           
  1326  00CE  3020               	movlw	32
  1327  00CF  3183  237E  3180   	fcall	_xputc
  1328  00D2                     l2096:	
  1329  00D2  0020               	movlb	0	; select bank0
  1330  00D3  18CF               	btfsc	xvprintf@f,1
  1331  00D4  28E4               	goto	l2100
  1332  00D5  084A               	movf	xvprintf@j+1,w
  1333  00D6  00A9               	movwf	??_xvprintf+1
  1334  00D7  0849               	movf	xvprintf@j,w
  1335  00D8  00A8               	movwf	??_xvprintf
  1336  00D9  0AC9               	incf	xvprintf@j,f
  1337  00DA  1903               	skipnz
  1338  00DB  0ACA               	incf	xvprintf@j+1,f
  1339  00DC  0848               	movf	xvprintf@w+1,w
  1340  00DD  0229               	subwf	??_xvprintf+1,w
  1341  00DE  1D03               	skipz
  1342  00DF  28E2               	goto	u1895
  1343  00E0  0847               	movf	xvprintf@w,w
  1344  00E1  0228               	subwf	??_xvprintf,w
  1345  00E2                     u1895:	
  1346  00E2  1C03               	skipc
  1347  00E3  28CE               	goto	l2094
  1348  00E4                     l2100:	
  1349                           
  1350                           ;xprintf.c: 126: xputs(p);
  1351  00E4  0844               	movf	xvprintf@p,w
  1352  00E5  3184  244B  3180   	fcall	_xputs
  1353  00E8                     l2104:	
  1354                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  1355                           
  1356  00E8  0020               	movlb	0	; select bank0
  1357  00E9  084A               	movf	xvprintf@j+1,w
  1358  00EA  00A9               	movwf	??_xvprintf+1
  1359  00EB  0849               	movf	xvprintf@j,w
  1360  00EC  00A8               	movwf	??_xvprintf
  1361  00ED  0AC9               	incf	xvprintf@j,f
  1362  00EE  1903               	skipnz
  1363  00EF  0ACA               	incf	xvprintf@j+1,f
  1364  00F0  0848               	movf	xvprintf@w+1,w
  1365  00F1  0229               	subwf	??_xvprintf+1,w
  1366  00F2  1D03               	skipz
  1367  00F3  28F6               	goto	u1905
  1368  00F4  0847               	movf	xvprintf@w,w
  1369  00F5  0228               	subwf	??_xvprintf,w
  1370  00F6                     u1905:	
  1371  00F6  1803               	btfsc	3,0
  1372  00F7  281C               	goto	l119
  1373  00F8  3020               	movlw	32
  1374  00F9  3183  237E  3180   	fcall	_xputc
  1375  00FC  28E8               	goto	l2104
  1376  00FD                     l2106:	
  1377                           ;xprintf.c: 129: case 'C' :
  1378                           
  1379                           ;xprintf.c: 128: continue;
  1380                           
  1381                           
  1382                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  1383  00FD  0827               	movf	xvprintf@arp,w
  1384  00FE  0086               	movwf	6
  1385  00FF  0187               	clrf	7
  1386  0100  0801               	movf	1,w
  1387  0101  0084               	movwf	4
  1388  0102  0185               	clrf	5
  1389  0103  3002               	movlw	2
  1390  0104  0781               	addwf	1,f
  1391  0105  0800               	movf	0,w
  1392  0106  3183  237E  3180   	fcall	_xputc
  1393  0109  281C               	goto	l119
  1394  010A                     l2108:	
  1395                           ;xprintf.c: 131: case 'B' :
  1396                           
  1397                           
  1398                           ;xprintf.c: 132: r = 2; break;
  1399  010A  3002               	movlw	2
  1400  010B  0020               	movlb	0	; select bank0
  1401  010C  2912               	goto	L3
  1402  010D                     l2110:	
  1403                           ;xprintf.c: 133: case 'O' :
  1404                           
  1405                           
  1406                           ;xprintf.c: 134: r = 8; break;
  1407  010D  3008               	movlw	8
  1408  010E  2912               	goto	L3
  1409  010F                     l2112:	
  1410                           ;xprintf.c: 135: case 'D' :
  1411                           
  1412                           
  1413                           ;xprintf.c: 136: case 'U' :
  1414                           ;xprintf.c: 137: r = 10; break;
  1415  010F  300A               	movlw	10
  1416  0110  2912               	goto	L3
  1417  0111                     l2114:	
  1418                           ;xprintf.c: 138: case 'X' :
  1419                           
  1420                           
  1421                           ;xprintf.c: 139: r = 16; break;
  1422  0111  3010               	movlw	16
  1423  0112                     L3:	
  1424  0112  00C5               	movwf	xvprintf@r
  1425  0113  3000               	movlw	0
  1426  0114  00C6               	movwf	xvprintf@r+1
  1427  0115  2933               	goto	l152
  1428  0116                     l2116:	
  1429                           ;xprintf.c: 140: default:
  1430                           
  1431                           
  1432                           ;xprintf.c: 141: xputc(c); continue;
  1433  0116  0854               	movf	xvprintf@c,w
  1434  0117  3183  237E  3180   	fcall	_xputc
  1435  011A  281C               	goto	l119
  1436  011B                     l2120:	
  1437                           ;xprintf.c: 142: }
  1438                           
  1439  011B  0020               	movlb	0	; select bank0
  1440  011C  0853               	movf	xvprintf@d,w
  1441                           
  1442                           ; Switch size 1, requested type "space"
  1443                           ; Number of cases is 7, Range of values is 66 to 88
  1444                           ; switch strategies available:
  1445                           ; Name         Instructions Cycles
  1446                           ; simple_byte           22    12 (average)
  1447                           ; direct_byte           55     9 (fixed)
  1448                           ; jumptable            263     9 (fixed)
  1449                           ;	Chosen strategy is simple_byte
  1450  011D  3A42               	xorlw	66	; case 66
  1451  011E  1903               	skipnz
  1452  011F  290A               	goto	l2108
  1453  0120  3A01               	xorlw	1	; case 67
  1454  0121  1903               	skipnz
  1455  0122  28FD               	goto	l2106
  1456  0123  3A07               	xorlw	7	; case 68
  1457  0124  1903               	skipnz
  1458  0125  290F               	goto	l2112
  1459  0126  3A0B               	xorlw	11	; case 79
  1460  0127  1903               	skipnz
  1461  0128  290D               	goto	l2110
  1462  0129  3A1C               	xorlw	28	; case 83
  1463  012A  1903               	skipnz
  1464  012B  28B3               	goto	l2086
  1465  012C  3A06               	xorlw	6	; case 85
  1466  012D  1903               	skipnz
  1467  012E  290F               	goto	l2112
  1468  012F  3A0D               	xorlw	13	; case 88
  1469  0130  1903               	skipnz
  1470  0131  2911               	goto	l2114
  1471  0132  2916               	goto	l2116
  1472  0133                     l152:	
  1473                           
  1474                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  1475  0133  0020               	movlb	0	; select bank0
  1476  0134  194F               	btfsc	xvprintf@f,2
  1477  0135  296B               	goto	l2130
  1478  0136  3044               	movlw	68
  1479  0137  0653               	xorwf	xvprintf@d,w
  1480  0138  1903               	btfsc	3,2
  1481  0139  294D               	goto	l2126
  1482  013A  0827               	movf	xvprintf@arp,w
  1483  013B  0086               	movwf	6
  1484  013C  0187               	clrf	7
  1485  013D  0801               	movf	1,w
  1486  013E  0084               	movwf	4
  1487  013F  0185               	clrf	5
  1488  0140  3002               	movlw	2
  1489  0141  0781               	addwf	1,f
  1490  0142  3F00               	moviw [0]fsr0
  1491  0143  00A8               	movwf	??_xvprintf
  1492  0144  3F01               	moviw [1]fsr0
  1493  0145  00A9               	movwf	??_xvprintf+1
  1494  0146  0828               	movf	??_xvprintf,w
  1495  0147  00BC               	movwf	_xvprintf$166
  1496  0148  0829               	movf	??_xvprintf+1,w
  1497  0149  00BD               	movwf	_xvprintf$166+1
  1498  014A  01BE               	clrf	_xvprintf$166+2
  1499  014B  01BF               	clrf	_xvprintf$166+3
  1500  014C  2962               	goto	l2128
  1501  014D                     l2126:	
  1502  014D  0827               	movf	xvprintf@arp,w
  1503  014E  0086               	movwf	6
  1504  014F  0187               	clrf	7
  1505  0150  0801               	movf	1,w
  1506  0151  0084               	movwf	4
  1507  0152  0185               	clrf	5
  1508  0153  3002               	movlw	2
  1509  0154  0781               	addwf	1,f
  1510  0155  3F00               	moviw [0]fsr0
  1511  0156  00A8               	movwf	??_xvprintf
  1512  0157  3F01               	moviw [1]fsr0
  1513  0158  00A9               	movwf	??_xvprintf+1
  1514  0159  0828               	movf	??_xvprintf,w
  1515  015A  00BC               	movwf	_xvprintf$166
  1516  015B  0829               	movf	??_xvprintf+1,w
  1517  015C  00BD               	movwf	_xvprintf$166+1
  1518  015D  0D89               	rlf	9,f
  1519  015E  3B89               	subwfb	9,f
  1520  015F  0989               	comf	9,f
  1521  0160  00BE               	movwf	_xvprintf$166+2
  1522  0161  00BF               	movwf	_xvprintf$166+3
  1523  0162                     l2128:	
  1524  0162  083F               	movf	_xvprintf$166+3,w
  1525  0163  00CE               	movwf	xvprintf@v+3
  1526  0164  083E               	movf	_xvprintf$166+2,w
  1527  0165  00CD               	movwf	xvprintf@v+2
  1528  0166  083D               	movf	_xvprintf$166+1,w
  1529  0167  00CC               	movwf	xvprintf@v+1
  1530  0168  083C               	movf	_xvprintf$166,w
  1531  0169  00CB               	movwf	xvprintf@v
  1532  016A  297B               	goto	l2132
  1533  016B                     l2130:	
  1534  016B  0827               	movf	xvprintf@arp,w
  1535  016C  0086               	movwf	6
  1536  016D  0187               	clrf	7
  1537  016E  0801               	movf	1,w
  1538  016F  0084               	movwf	4
  1539  0170  0185               	clrf	5
  1540  0171  3004               	movlw	4
  1541  0172  0781               	addwf	1,f
  1542  0173  3F00               	moviw [0]fsr0
  1543  0174  00CB               	movwf	xvprintf@v
  1544  0175  3F01               	moviw [1]fsr0
  1545  0176  00CC               	movwf	xvprintf@v+1
  1546  0177  3F02               	moviw [2]fsr0
  1547  0178  00CD               	movwf	xvprintf@v+2
  1548  0179  3F03               	moviw [3]fsr0
  1549  017A  00CE               	movwf	xvprintf@v+3
  1550  017B                     l2132:	
  1551                           
  1552                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  1553  017B  3044               	movlw	68
  1554  017C  0653               	xorwf	xvprintf@d,w
  1555  017D  1903               	btfsc	3,2
  1556  017E  1FCE               	btfss	xvprintf@v+3,7
  1557  017F  298C               	goto	l2138
  1558                           
  1559                           ;xprintf.c: 147: v = 0 - v;
  1560  0180  09CB               	comf	xvprintf@v,f
  1561  0181  09CC               	comf	xvprintf@v+1,f
  1562  0182  09CD               	comf	xvprintf@v+2,f
  1563  0183  09CE               	comf	xvprintf@v+3,f
  1564  0184  0ACB               	incf	xvprintf@v,f
  1565  0185  1903               	skipnz
  1566  0186  0ACC               	incf	xvprintf@v+1,f
  1567  0187  1903               	skipnz
  1568  0188  0ACD               	incf	xvprintf@v+2,f
  1569  0189  1903               	skipnz
  1570  018A  0ACE               	incf	xvprintf@v+3,f
  1571                           
  1572                           ;xprintf.c: 148: f |= 8;
  1573  018B  15CF               	bsf	xvprintf@f,3
  1574  018C                     l2138:	
  1575                           
  1576                           ;xprintf.c: 149: }
  1577                           ;xprintf.c: 150: i = 0;
  1578  018C  01D1               	clrf	xvprintf@i
  1579  018D  01D2               	clrf	xvprintf@i+1
  1580  018E                     l2140:	
  1581                           ;xprintf.c: 151: do {
  1582                           
  1583                           
  1584                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  1585  018E  0845               	movf	xvprintf@r,w
  1586  018F  00F1               	movwf	___llmod@divisor
  1587  0190  0846               	movf	xvprintf@r+1,w
  1588  0191  00F2               	movwf	___llmod@divisor+1
  1589  0192  01F3               	clrf	___llmod@divisor+2
  1590  0193  01F4               	clrf	___llmod@divisor+3
  1591  0194  084E               	movf	xvprintf@v+3,w
  1592  0195  00F8               	movwf	___llmod@dividend+3
  1593  0196  084D               	movf	xvprintf@v+2,w
  1594  0197  00F7               	movwf	___llmod@dividend+2
  1595  0198  084C               	movf	xvprintf@v+1,w
  1596  0199  00F6               	movwf	___llmod@dividend+1
  1597  019A  084B               	movf	xvprintf@v,w
  1598  019B  00F5               	movwf	___llmod@dividend
  1599  019C  3183  2302  3180   	fcall	___llmod
  1600  019F  0871               	movf	?___llmod,w
  1601  01A0  0020               	movlb	0	; select bank0
  1602  01A1  00A8               	movwf	??_xvprintf
  1603  01A2  0828               	movf	??_xvprintf,w
  1604  01A3  00D3               	movwf	xvprintf@d
  1605  01A4  0845               	movf	xvprintf@r,w
  1606  01A5  00F1               	movwf	___lldiv@divisor
  1607  01A6  0846               	movf	xvprintf@r+1,w
  1608  01A7  00F2               	movwf	___lldiv@divisor+1
  1609  01A8  01F3               	clrf	___lldiv@divisor+2
  1610  01A9  01F4               	clrf	___lldiv@divisor+3
  1611  01AA  084E               	movf	xvprintf@v+3,w
  1612  01AB  00F8               	movwf	___lldiv@dividend+3
  1613  01AC  084D               	movf	xvprintf@v+2,w
  1614  01AD  00F7               	movwf	___lldiv@dividend+2
  1615  01AE  084C               	movf	xvprintf@v+1,w
  1616  01AF  00F6               	movwf	___lldiv@dividend+1
  1617  01B0  084B               	movf	xvprintf@v,w
  1618  01B1  00F5               	movwf	___lldiv@dividend
  1619  01B2  3182  22AF  3180   	fcall	___lldiv
  1620  01B5  0874               	movf	?___lldiv+3,w
  1621  01B6  0020               	movlb	0	; select bank0
  1622  01B7  00CE               	movwf	xvprintf@v+3
  1623  01B8  0873               	movf	?___lldiv+2,w
  1624  01B9  00CD               	movwf	xvprintf@v+2
  1625  01BA  0872               	movf	?___lldiv+1,w
  1626  01BB  00CC               	movwf	xvprintf@v+1
  1627  01BC  0871               	movf	?___lldiv,w
  1628  01BD  00CB               	movwf	xvprintf@v
  1629                           
  1630                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  1631  01BE  300A               	movlw	10
  1632  01BF  0253               	subwf	xvprintf@d,w
  1633  01C0  1C03               	skipc
  1634  01C1  29D0               	goto	l2154
  1635  01C2  3078               	movlw	120
  1636  01C3  0654               	xorwf	xvprintf@c,w
  1637  01C4  1903               	btfsc	3,2
  1638  01C5  29C8               	goto	l2150
  1639  01C6  3007               	movlw	7
  1640  01C7  29C9               	goto	L4
  1641  01C8                     l2150:	
  1642  01C8  3027               	movlw	39
  1643  01C9                     L4:	
  1644  01C9  00C0               	movwf	_xvprintf$167
  1645  01CA  3000               	movlw	0
  1646  01CB  00C1               	movwf	_xvprintf$167+1
  1647  01CC  0840               	movf	_xvprintf$167,w
  1648  01CD  00A8               	movwf	??_xvprintf
  1649  01CE  0828               	movf	??_xvprintf,w
  1650  01CF  07D3               	addwf	xvprintf@d,f
  1651  01D0                     l2154:	
  1652                           
  1653                           ;xprintf.c: 154: s[i++] = d + '0';
  1654  01D0  0853               	movf	xvprintf@d,w
  1655  01D1  3E30               	addlw	48
  1656  01D2  00A8               	movwf	??_xvprintf
  1657  01D3  0851               	movf	xvprintf@i,w
  1658  01D4  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1659  01D5  0086               	movwf	6
  1660  01D6  0187               	clrf	7
  1661  01D7  0828               	movf	??_xvprintf,w
  1662  01D8  0081               	movwf	1
  1663  01D9  3001               	movlw	1
  1664  01DA  07D1               	addwf	xvprintf@i,f
  1665  01DB  3000               	movlw	0
  1666  01DC  3DD2               	addwfc	xvprintf@i+1,f
  1667                           
  1668                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  1669  01DD  084E               	movf	xvprintf@v+3,w
  1670  01DE  044D               	iorwf	xvprintf@v+2,w
  1671  01DF  044C               	iorwf	xvprintf@v+1,w
  1672  01E0  044B               	iorwf	xvprintf@v,w
  1673  01E1  1903               	skipnz
  1674  01E2  29EA               	goto	l175
  1675  01E3  3000               	movlw	0
  1676  01E4  0252               	subwf	xvprintf@i+1,w
  1677  01E5  3010               	movlw	16
  1678  01E6  1903               	skipnz
  1679  01E7  0251               	subwf	xvprintf@i,w
  1680  01E8  1C03               	skipc
  1681  01E9  298E               	goto	l2140
  1682  01EA                     l175:	
  1683                           
  1684                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  1685  01EA  1DCF               	btfss	xvprintf@f,3
  1686  01EB  29F8               	goto	l2166
  1687  01EC  302D               	movlw	45
  1688  01ED  00A8               	movwf	??_xvprintf
  1689  01EE  0851               	movf	xvprintf@i,w
  1690  01EF  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1691  01F0  0086               	movwf	6
  1692  01F1  0187               	clrf	7
  1693  01F2  0828               	movf	??_xvprintf,w
  1694  01F3  0081               	movwf	1
  1695  01F4  3001               	movlw	1
  1696  01F5  07D1               	addwf	xvprintf@i,f
  1697  01F6  3000               	movlw	0
  1698  01F7  3DD2               	addwfc	xvprintf@i+1,f
  1699  01F8                     l2166:	
  1700                           
  1701                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  1702  01F8  0852               	movf	xvprintf@i+1,w
  1703  01F9  00CA               	movwf	xvprintf@j+1
  1704  01FA  0851               	movf	xvprintf@i,w
  1705  01FB  00C9               	movwf	xvprintf@j
  1706  01FC  184F               	btfsc	xvprintf@f,0
  1707  01FD  2A00               	goto	l2172
  1708  01FE  3020               	movlw	32
  1709  01FF  2A01               	goto	L5
  1710  0200                     l2172:	
  1711  0200  3030               	movlw	48
  1712  0201                     L5:	
  1713  0201  00C2               	movwf	_xvprintf$168
  1714  0202  3000               	movlw	0
  1715  0203  00C3               	movwf	_xvprintf$168+1
  1716  0204  0842               	movf	_xvprintf$168,w
  1717  0205  00A8               	movwf	??_xvprintf
  1718  0206  0828               	movf	??_xvprintf,w
  1719  0207  00D3               	movwf	xvprintf@d
  1720                           
  1721                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  1722  0208  2A0D               	goto	l2176
  1723  0209                     l2174:	
  1724  0209  0853               	movf	xvprintf@d,w
  1725  020A  3183  237E  3180   	fcall	_xputc
  1726  020D                     l2176:	
  1727  020D  0020               	movlb	0	; select bank0
  1728  020E  18CF               	btfsc	xvprintf@f,1
  1729  020F  2A1F               	goto	l2180
  1730  0210  084A               	movf	xvprintf@j+1,w
  1731  0211  00A9               	movwf	??_xvprintf+1
  1732  0212  0849               	movf	xvprintf@j,w
  1733  0213  00A8               	movwf	??_xvprintf
  1734  0214  0AC9               	incf	xvprintf@j,f
  1735  0215  1903               	skipnz
  1736  0216  0ACA               	incf	xvprintf@j+1,f
  1737  0217  0848               	movf	xvprintf@w+1,w
  1738  0218  0229               	subwf	??_xvprintf+1,w
  1739  0219  1D03               	skipz
  1740  021A  2A1D               	goto	u2025
  1741  021B  0847               	movf	xvprintf@w,w
  1742  021C  0228               	subwf	??_xvprintf,w
  1743  021D                     u2025:	
  1744  021D  1C03               	skipc
  1745  021E  2A09               	goto	l2174
  1746  021F                     l2180:	
  1747                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  1748                           
  1749  021F  3001               	movlw	1
  1750  0220  02D1               	subwf	xvprintf@i,f
  1751  0221  3000               	movlw	0
  1752  0222  3BD2               	subwfb	xvprintf@i+1,f
  1753  0223  0851               	movf	xvprintf@i,w
  1754  0224  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1755  0225  0086               	movwf	6
  1756  0226  0187               	clrf	7
  1757  0227  0801               	movf	1,w
  1758  0228  3183  237E  3180   	fcall	_xputc
  1759  022B  0020               	movlb	0	; select bank0
  1760  022C  0851               	movf	xvprintf@i,w
  1761  022D  0452               	iorwf	xvprintf@i+1,w
  1762  022E  1903               	btfsc	3,2
  1763  022F  2A35               	goto	l2186
  1764  0230  2A1F               	goto	l2180
  1765  0231                     l2184:	
  1766                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  1767                           
  1768  0231  3020               	movlw	32
  1769  0232  3183  237E  3180   	fcall	_xputc
  1770  0235                     l2186:	
  1771  0235  0020               	movlb	0	; select bank0
  1772  0236  084A               	movf	xvprintf@j+1,w
  1773  0237  00A9               	movwf	??_xvprintf+1
  1774  0238  0849               	movf	xvprintf@j,w
  1775  0239  00A8               	movwf	??_xvprintf
  1776  023A  0AC9               	incf	xvprintf@j,f
  1777  023B  1903               	skipnz
  1778  023C  0ACA               	incf	xvprintf@j+1,f
  1779  023D  0848               	movf	xvprintf@w+1,w
  1780  023E  0229               	subwf	??_xvprintf+1,w
  1781  023F  1D03               	skipz
  1782  0240  2A43               	goto	u2045
  1783  0241  0847               	movf	xvprintf@w,w
  1784  0242  0228               	subwf	??_xvprintf,w
  1785  0243                     u2045:	
  1786  0243  1803               	btfsc	3,0
  1787  0244  281C               	goto	l119
  1788  0245  2A31               	goto	l2184
  1789  0246                     __end_of_xvprintf:	
  1790                           ;xprintf.c: 161: }
  1791                           
  1792                           
  1793                           	psect	text3
  1794  044B                     __ptext3:	
  1795 ;; *************** function _xputs *****************
  1796 ;; Defined at:
  1797 ;;		line 44 in file "xprintf.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  str             1    wreg     PTR const unsigned char 
  1800 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  str             1    8[COMMON] PTR const unsigned char 
  1803 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1813 ;;      Params:         0       0       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0       0
  1815 ;;      Temps:          1       0       0       0       0       0
  1816 ;;      Totals:         2       0       0       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    5
  1820 ;; This function calls:
  1821 ;;		_xputc
  1822 ;; This function is called by:
  1823 ;;		_xvprintf
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _xputs
  1829  044B                     _xputs:	
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1833                           ;xputs@str stored from wreg
  1834  044B  00F8               	movwf	xputs@str
  1835  044C                     l1958:	
  1836                           ;xprintf.c: 48: while (*str)
  1837                           
  1838  044C  0878               	movf	xputs@str,w
  1839  044D  0086               	movwf	6
  1840  044E  0187               	clrf	7
  1841  044F  0801               	movf	1,w
  1842  0450  1903               	btfsc	3,2
  1843  0451  0008               	return
  1844                           
  1845                           ;xprintf.c: 49: xputc(*str++);
  1846  0452  0878               	movf	xputs@str,w
  1847  0453  0086               	movwf	6
  1848  0454  0187               	clrf	7
  1849  0455  0801               	movf	1,w
  1850  0456  3183  237E  3184   	fcall	_xputc
  1851  0459  3001               	movlw	1
  1852  045A  00F7               	movwf	??_xputs
  1853  045B  0877               	movf	??_xputs,w
  1854  045C  07F8               	addwf	xputs@str,f
  1855  045D  2C4C               	goto	l1958
  1856  045E                     __end_of_xputs:	
  1857                           
  1858                           	psect	text4
  1859  037E                     __ptext4:	
  1860 ;; *************** function _xputc *****************
  1861 ;; Defined at:
  1862 ;;		line 26 in file "xprintf.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  c               1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    6[COMMON] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1876 ;;      Params:         0       0       0       0       0       0
  1877 ;;      Locals:         1       0       0       0       0       0
  1878 ;;      Temps:          1       0       0       0       0       0
  1879 ;;      Totals:         2       0       0       0       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    4
  1883 ;; This function calls:
  1884 ;;		Absolute function
  1885 ;;		_LCD_Put
  1886 ;; This function is called by:
  1887 ;;		_xputs
  1888 ;;		_xvprintf
  1889 ;;		_xfputs
  1890 ;;		_put_dump
  1891 ;;		_xgets
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _xputc
  1897  037E                     _xputc:	
  1898                           
  1899                           ;incstack = 0
  1900                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1901                           ;xputc@c stored from wreg
  1902  037E  00F6               	movwf	xputc@c
  1903  037F  300A               	movlw	10
  1904  0380  0676               	xorwf	xputc@c,w
  1905  0381  1D03               	btfss	3,2
  1906  0382  2B8D               	goto	l1940
  1907  0383  30EB               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1908  0384  00F5               	movwf	??_xputc
  1909  0385  0875               	movf	??_xputc,w
  1910  0386  00F4               	movwf	LCD_Put@word
  1911  0387  0020               	movlb	0	; select bank0
  1912  0388  085F               	movf	_xfunc_out+1,w
  1913  0389  008A               	movwf	10
  1914  038A  085E               	movf	_xfunc_out,w
  1915  038B  000A               	callw
  1916  038C  3183               	pagesel	$
  1917  038D                     l1940:	
  1918                           
  1919                           ;xprintf.c: 30: if (outptr) {
  1920  038D  087C               	movf	_outptr,w
  1921  038E  1903               	btfsc	3,2
  1922  038F  2B9C               	goto	l1948
  1923                           
  1924                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  1925  0390  0876               	movf	xputc@c,w
  1926  0391  00F5               	movwf	??_xputc
  1927  0392  087C               	movf	_outptr,w
  1928  0393  0086               	movwf	6
  1929  0394  0187               	clrf	7
  1930  0395  0875               	movf	??_xputc,w
  1931  0396  0081               	movwf	1
  1932  0397  3001               	movlw	1
  1933  0398  00F5               	movwf	??_xputc
  1934  0399  0875               	movf	??_xputc,w
  1935  039A  07FC               	addwf	_outptr,f
  1936                           
  1937                           ;xprintf.c: 32: return;
  1938  039B  0008               	return
  1939  039C                     l1948:	
  1940                           
  1941                           ;xprintf.c: 33: }
  1942                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  1943  039C  0020               	movlb	0	; select bank0
  1944  039D  085E               	movf	_xfunc_out,w
  1945  039E  045F               	iorwf	_xfunc_out+1,w
  1946  039F  1903               	btfsc	3,2
  1947  03A0  0008               	return
  1948  03A1  0876               	movf	xputc@c,w
  1949  03A2  00F5               	movwf	??_xputc
  1950  03A3  0875               	movf	??_xputc,w
  1951  03A4  00F4               	movwf	LCD_Put@word
  1952  03A5  085F               	movf	_xfunc_out+1,w
  1953  03A6  008A               	movwf	10
  1954  03A7  085E               	movf	_xfunc_out,w
  1955  03A8  000A               	callw
  1956  03A9  3183               	pagesel	$
  1957  03AA  0008               	return
  1958  03AB                     __end_of_xputc:	
  1959                           
  1960                           	psect	text5
  1961  0486                     __ptext5:	
  1962 ;; *************** function _LCD_Put *****************
  1963 ;; Defined at:
  1964 ;;		line 54 in file "LCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  word            1    4[COMMON] char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1978 ;;      Params:         1       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    3
  1985 ;; This function calls:
  1986 ;;		_LCD_WriteData
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;;		_xputc
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _LCD_Put
  1995  0486                     _LCD_Put:	
  1996                           
  1997                           ;LCD.c: 56: RA4 = 1;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2001  0486  0020               	movlb	0	; select bank0
  2002  0487  160C               	bsf	12,4	;volatile
  2003                           
  2004                           ;LCD.c: 57: LCD_WriteData(word);
  2005  0488  0874               	movf	LCD_Put@word,w
  2006  0489  3183  2344         	fcall	_LCD_WriteData
  2007  048B  0008               	return
  2008  048C                     __end_of_LCD_Put:	
  2009                           
  2010                           	psect	text6
  2011  03ED                     __ptext6:	
  2012 ;; *************** function ___wmul *****************
  2013 ;; Defined at:
  2014 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  multiplier      2    1[COMMON] unsigned int 
  2017 ;;  multiplicand    2    3[COMMON] unsigned int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  product         2    5[COMMON] unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    1[COMMON] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2029 ;;      Params:         4       0       0       0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0
  2032 ;;      Totals:         6       0       0       0       0       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    2
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_xvprintf
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function ___wmul
  2045  03ED                     ___wmul:	
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2049  03ED  01F5               	clrf	___wmul@product
  2050  03EE  01F6               	clrf	___wmul@product+1
  2051  03EF                     l1962:	
  2052  03EF  1C71               	btfss	___wmul@multiplier,0
  2053  03F0  2BF5               	goto	l386
  2054  03F1  0873               	movf	___wmul@multiplicand,w
  2055  03F2  07F5               	addwf	___wmul@product,f
  2056  03F3  0874               	movf	___wmul@multiplicand+1,w
  2057  03F4  3DF6               	addwfc	___wmul@product+1,f
  2058  03F5                     l386:	
  2059  03F5  3001               	movlw	1
  2060  03F6                     u1615:	
  2061  03F6  35F3               	lslf	___wmul@multiplicand,f
  2062  03F7  0DF4               	rlf	___wmul@multiplicand+1,f
  2063  03F8  0B89               	decfsz	9,f
  2064  03F9  2BF6               	goto	u1615
  2065  03FA  3001               	movlw	1
  2066  03FB                     u1625:	
  2067  03FB  36F2               	lsrf	___wmul@multiplier+1,f
  2068  03FC  0CF1               	rrf	___wmul@multiplier,f
  2069  03FD  0B89               	decfsz	9,f
  2070  03FE  2BFB               	goto	u1625
  2071  03FF  0871               	movf	___wmul@multiplier,w
  2072  0400  0472               	iorwf	___wmul@multiplier+1,w
  2073  0401  1D03               	btfss	3,2
  2074  0402  2BEF               	goto	l1962
  2075  0403  0876               	movf	___wmul@product+1,w
  2076  0404  00F2               	movwf	?___wmul+1
  2077  0405  0875               	movf	___wmul@product,w
  2078  0406  00F1               	movwf	?___wmul
  2079  0407  0008               	return
  2080  0408                     __end_of___wmul:	
  2081                           
  2082                           	psect	text7
  2083  0302                     __ptext7:	
  2084 ;; *************** function ___llmod *****************
  2085 ;; Defined at:
  2086 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  divisor         4    1[COMMON] unsigned long 
  2089 ;;  dividend        4    5[COMMON] unsigned long 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  counter         1   10[COMMON] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  4    1[COMMON] unsigned long 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2101 ;;      Params:         8       0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0
  2103 ;;      Temps:          1       0       0       0       0       0
  2104 ;;      Totals:        10       0       0       0       0       0
  2105 ;;Total ram usage:       10 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    2
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_xvprintf
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function ___llmod
  2117  0302                     ___llmod:	
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2121  0302  0874               	movf	___llmod@divisor+3,w
  2122  0303  0473               	iorwf	___llmod@divisor+2,w
  2123  0304  0472               	iorwf	___llmod@divisor+1,w
  2124  0305  0471               	iorwf	___llmod@divisor,w
  2125  0306  1903               	skipnz
  2126  0307  2B3B               	goto	l2014
  2127  0308  01FA               	clrf	___llmod@counter
  2128  0309  0AFA               	incf	___llmod@counter,f
  2129  030A                     l2004:	
  2130  030A  1BF4               	btfsc	___llmod@divisor+3,7
  2131  030B  2B18               	goto	l2006
  2132  030C  3001               	movlw	1
  2133  030D                     u1725:	
  2134  030D  35F1               	lslf	___llmod@divisor,f
  2135  030E  0DF2               	rlf	___llmod@divisor+1,f
  2136  030F  0DF3               	rlf	___llmod@divisor+2,f
  2137  0310  0DF4               	rlf	___llmod@divisor+3,f
  2138  0311  0B89               	decfsz	9,f
  2139  0312  2B0D               	goto	u1725
  2140  0313  3001               	movlw	1
  2141  0314  00F9               	movwf	??___llmod
  2142  0315  0879               	movf	??___llmod,w
  2143  0316  07FA               	addwf	___llmod@counter,f
  2144  0317  2B0A               	goto	l2004
  2145  0318                     l2006:	
  2146  0318  0874               	movf	___llmod@divisor+3,w
  2147  0319  0278               	subwf	___llmod@dividend+3,w
  2148  031A  1D03               	skipz
  2149  031B  2B26               	goto	u1745
  2150  031C  0873               	movf	___llmod@divisor+2,w
  2151  031D  0277               	subwf	___llmod@dividend+2,w
  2152  031E  1D03               	skipz
  2153  031F  2B26               	goto	u1745
  2154  0320  0872               	movf	___llmod@divisor+1,w
  2155  0321  0276               	subwf	___llmod@dividend+1,w
  2156  0322  1D03               	skipz
  2157  0323  2B26               	goto	u1745
  2158  0324  0871               	movf	___llmod@divisor,w
  2159  0325  0275               	subwf	___llmod@dividend,w
  2160  0326                     u1745:	
  2161  0326  1C03               	skipc
  2162  0327  2B30               	goto	l2010
  2163  0328  0871               	movf	___llmod@divisor,w
  2164  0329  02F5               	subwf	___llmod@dividend,f
  2165  032A  0872               	movf	___llmod@divisor+1,w
  2166  032B  3BF6               	subwfb	___llmod@dividend+1,f
  2167  032C  0873               	movf	___llmod@divisor+2,w
  2168  032D  3BF7               	subwfb	___llmod@dividend+2,f
  2169  032E  0874               	movf	___llmod@divisor+3,w
  2170  032F  3BF8               	subwfb	___llmod@dividend+3,f
  2171  0330                     l2010:	
  2172  0330  3001               	movlw	1
  2173  0331                     u1755:	
  2174  0331  36F4               	lsrf	___llmod@divisor+3,f
  2175  0332  0CF3               	rrf	___llmod@divisor+2,f
  2176  0333  0CF2               	rrf	___llmod@divisor+1,f
  2177  0334  0CF1               	rrf	___llmod@divisor,f
  2178  0335  0B89               	decfsz	9,f
  2179  0336  2B31               	goto	u1755
  2180  0337  3001               	movlw	1
  2181  0338  02FA               	subwf	___llmod@counter,f
  2182  0339  1D03               	btfss	3,2
  2183  033A  2B18               	goto	l2006
  2184  033B                     l2014:	
  2185  033B  0878               	movf	___llmod@dividend+3,w
  2186  033C  00F4               	movwf	?___llmod+3
  2187  033D  0877               	movf	___llmod@dividend+2,w
  2188  033E  00F3               	movwf	?___llmod+2
  2189  033F  0876               	movf	___llmod@dividend+1,w
  2190  0340  00F2               	movwf	?___llmod+1
  2191  0341  0875               	movf	___llmod@dividend,w
  2192  0342  00F1               	movwf	?___llmod
  2193  0343  0008               	return
  2194  0344                     __end_of___llmod:	
  2195                           
  2196                           	psect	text8
  2197  02AF                     __ptext8:	
  2198 ;; *************** function ___lldiv *****************
  2199 ;; Defined at:
  2200 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  divisor         4    1[COMMON] unsigned long 
  2203 ;;  dividend        4    5[COMMON] unsigned long 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        4    0[BANK0 ] unsigned long 
  2206 ;;  counter         1    4[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  4    1[COMMON] unsigned long 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2216 ;;      Params:         8       0       0       0       0       0
  2217 ;;      Locals:         0       5       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0       0
  2219 ;;      Totals:         9       5       0       0       0       0
  2220 ;;Total ram usage:       14 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    2
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_xvprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function ___lldiv
  2232  02AF                     ___lldiv:	
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2236  02AF  3000               	movlw	0
  2237  02B0  0020               	movlb	0	; select bank0
  2238  02B1  00A3               	movwf	___lldiv@quotient+3
  2239  02B2  3000               	movlw	0
  2240  02B3  00A2               	movwf	___lldiv@quotient+2
  2241  02B4  3000               	movlw	0
  2242  02B5  00A1               	movwf	___lldiv@quotient+1
  2243  02B6  3000               	movlw	0
  2244  02B7  00A0               	movwf	___lldiv@quotient
  2245  02B8  0874               	movf	___lldiv@divisor+3,w
  2246  02B9  0473               	iorwf	___lldiv@divisor+2,w
  2247  02BA  0472               	iorwf	___lldiv@divisor+1,w
  2248  02BB  0471               	iorwf	___lldiv@divisor,w
  2249  02BC  1903               	skipnz
  2250  02BD  2AF9               	goto	l1994
  2251  02BE  01A4               	clrf	___lldiv@counter
  2252  02BF  0AA4               	incf	___lldiv@counter,f
  2253  02C0                     l1980:	
  2254  02C0  1BF4               	btfsc	___lldiv@divisor+3,7
  2255  02C1  2ACE               	goto	l1982
  2256  02C2  3001               	movlw	1
  2257  02C3                     u1655:	
  2258  02C3  35F1               	lslf	___lldiv@divisor,f
  2259  02C4  0DF2               	rlf	___lldiv@divisor+1,f
  2260  02C5  0DF3               	rlf	___lldiv@divisor+2,f
  2261  02C6  0DF4               	rlf	___lldiv@divisor+3,f
  2262  02C7  0B89               	decfsz	9,f
  2263  02C8  2AC3               	goto	u1655
  2264  02C9  3001               	movlw	1
  2265  02CA  00F9               	movwf	??___lldiv
  2266  02CB  0879               	movf	??___lldiv,w
  2267  02CC  07A4               	addwf	___lldiv@counter,f
  2268  02CD  2AC0               	goto	l1980
  2269  02CE                     l1982:	
  2270  02CE  3001               	movlw	1
  2271  02CF                     u1675:	
  2272  02CF  35A0               	lslf	___lldiv@quotient,f
  2273  02D0  0DA1               	rlf	___lldiv@quotient+1,f
  2274  02D1  0DA2               	rlf	___lldiv@quotient+2,f
  2275  02D2  0DA3               	rlf	___lldiv@quotient+3,f
  2276  02D3  0B89               	decfsz	9,f
  2277  02D4  2ACF               	goto	u1675
  2278  02D5  0874               	movf	___lldiv@divisor+3,w
  2279  02D6  0278               	subwf	___lldiv@dividend+3,w
  2280  02D7  1D03               	skipz
  2281  02D8  2AE3               	goto	u1685
  2282  02D9  0873               	movf	___lldiv@divisor+2,w
  2283  02DA  0277               	subwf	___lldiv@dividend+2,w
  2284  02DB  1D03               	skipz
  2285  02DC  2AE3               	goto	u1685
  2286  02DD  0872               	movf	___lldiv@divisor+1,w
  2287  02DE  0276               	subwf	___lldiv@dividend+1,w
  2288  02DF  1D03               	skipz
  2289  02E0  2AE3               	goto	u1685
  2290  02E1  0871               	movf	___lldiv@divisor,w
  2291  02E2  0275               	subwf	___lldiv@dividend,w
  2292  02E3                     u1685:	
  2293  02E3  1C03               	skipc
  2294  02E4  2AEE               	goto	l1990
  2295  02E5  0871               	movf	___lldiv@divisor,w
  2296  02E6  02F5               	subwf	___lldiv@dividend,f
  2297  02E7  0872               	movf	___lldiv@divisor+1,w
  2298  02E8  3BF6               	subwfb	___lldiv@dividend+1,f
  2299  02E9  0873               	movf	___lldiv@divisor+2,w
  2300  02EA  3BF7               	subwfb	___lldiv@dividend+2,f
  2301  02EB  0874               	movf	___lldiv@divisor+3,w
  2302  02EC  3BF8               	subwfb	___lldiv@dividend+3,f
  2303  02ED  1420               	bsf	___lldiv@quotient,0
  2304  02EE                     l1990:	
  2305  02EE  3001               	movlw	1
  2306  02EF                     u1695:	
  2307  02EF  36F4               	lsrf	___lldiv@divisor+3,f
  2308  02F0  0CF3               	rrf	___lldiv@divisor+2,f
  2309  02F1  0CF2               	rrf	___lldiv@divisor+1,f
  2310  02F2  0CF1               	rrf	___lldiv@divisor,f
  2311  02F3  0B89               	decfsz	9,f
  2312  02F4  2AEF               	goto	u1695
  2313  02F5  3001               	movlw	1
  2314  02F6  02A4               	subwf	___lldiv@counter,f
  2315  02F7  1D03               	btfss	3,2
  2316  02F8  2ACE               	goto	l1982
  2317  02F9                     l1994:	
  2318  02F9  0823               	movf	___lldiv@quotient+3,w
  2319  02FA  00F4               	movwf	?___lldiv+3
  2320  02FB  0822               	movf	___lldiv@quotient+2,w
  2321  02FC  00F3               	movwf	?___lldiv+2
  2322  02FD  0821               	movf	___lldiv@quotient+1,w
  2323  02FE  00F2               	movwf	?___lldiv+1
  2324  02FF  0820               	movf	___lldiv@quotient,w
  2325  0300  00F1               	movwf	?___lldiv
  2326  0301  0008               	return
  2327  0302                     __end_of___lldiv:	
  2328                           
  2329                           	psect	text9
  2330  0408                     __ptext9:	
  2331 ;; *************** function _Timer1_Init *****************
  2332 ;; Defined at:
  2333 ;;		line 3 in file "Timer1.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2347 ;;      Params:         0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0       0
  2350 ;;      Totals:         1       0       0       0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    2
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _Timer1_Init
  2363  0408                     _Timer1_Init:	
  2364                           
  2365                           ;Timer1.c: 5: TRISB |= (1<<6);
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  2369  0408  0021               	movlb	1	; select bank1
  2370  0409  170D               	bsf	13,6	;volatile
  2371                           
  2372                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  2373  040A  30BF               	movlw	191
  2374  040B  00F1               	movwf	??_Timer1_Init
  2375  040C  0871               	movf	??_Timer1_Init,w
  2376  040D  0023               	movlb	3	; select bank3
  2377  040E  058D               	andwf	13,f	;volatile
  2378                           
  2379                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  2380  040F  0020               	movlb	0	; select bank0
  2381  0410  1518               	bsf	24,2	;volatile
  2382                           
  2383                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  2384  0411  30F7               	movlw	247
  2385  0412  00F1               	movwf	??_Timer1_Init
  2386  0413  0871               	movf	??_Timer1_Init,w
  2387  0414  0598               	andwf	24,f	;volatile
  2388                           
  2389                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  2390  0415  0818               	movf	24,w	;volatile
  2391                           
  2392                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  2393  0416  1798               	bsf	24,7	;volatile
  2394                           
  2395                           ;Timer1.c: 13: T1GCON = 0x00;
  2396  0417  0199               	clrf	25	;volatile
  2397                           
  2398                           ;Timer1.c: 15: TMR1 = 0x0000;
  2399  0418  0196               	clrf	22	;volatile
  2400  0419  0197               	clrf	23	;volatile
  2401                           
  2402                           ;Timer1.c: 17: TMR1IE = 1;
  2403  041A  0021               	movlb	1	; select bank1
  2404  041B  1411               	bsf	17,0	;volatile
  2405                           
  2406                           ;Timer1.c: 18: TMR1IF = 0;
  2407  041C  0020               	movlb	0	; select bank0
  2408  041D  1011               	bcf	17,0	;volatile
  2409                           
  2410                           ;Timer1.c: 19: PEIE = 1;
  2411  041E  170B               	bsf	11,6	;volatile
  2412                           
  2413                           ;Timer1.c: 20: GIE = 1;
  2414  041F  178B               	bsf	11,7	;volatile
  2415  0420  0008               	return
  2416  0421                     __end_of_Timer1_Init:	
  2417                           
  2418                           	psect	text10
  2419  0246                     __ptext10:	
  2420 ;; *************** function _LCD_Init *****************
  2421 ;; Defined at:
  2422 ;;		line 28 in file "LCD.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2436 ;;      Params:         0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0
  2438 ;;      Temps:          2       0       0       0       0       0
  2439 ;;      Totals:         2       0       0       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    4
  2443 ;; This function calls:
  2444 ;;		_LCD_DisplayClear
  2445 ;;		_LCD_WriteData
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _LCD_Init
  2453  0246                     _LCD_Init:	
  2454                           
  2455                           ;LCD.c: 30: RA4 = 0;
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2459  0246  0020               	movlb	0	; select bank0
  2460  0247  120C               	bcf	12,4	;volatile
  2461                           
  2462                           ;LCD.c: 31: RA3 = 0;
  2463  0248  118C               	bcf	12,3	;volatile
  2464                           
  2465                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2466  0249  3002               	movlw	2
  2467  024A  00F6               	movwf	??_LCD_Init+1
  2468  024B  3038               	movlw	56
  2469  024C  00F5               	movwf	??_LCD_Init
  2470  024D  30AD               	movlw	173
  2471  024E                     u2247:	
  2472  024E  0B89               	decfsz	9,f
  2473  024F  2A4E               	goto	u2247
  2474  0250  0BF5               	decfsz	??_LCD_Init,f
  2475  0251  2A4E               	goto	u2247
  2476  0252  0BF6               	decfsz	??_LCD_Init+1,f
  2477  0253  2A4E               	goto	u2247
  2478  0254  0000               	nop
  2479                           
  2480                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2481  0255  3003               	movlw	3
  2482  0256  0020               	movlb	0	; select bank0
  2483  0257  008D               	movwf	13	;volatile
  2484                           
  2485                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2486  0258  158C               	bsf	12,3	;volatile
  2487  0259  3200               	nop2	;2 cycle nop
  2488  025A  3200               	nop2	;2 cycle nop
  2489  025B  3200               	nop2	;2 cycle nop
  2490  025C  3200               	nop2	;2 cycle nop
  2491  025D  0020               	movlb	0	; select bank0
  2492  025E  118C               	bcf	12,3	;volatile
  2493  025F  3200               	nop2	;2 cycle nop
  2494  0260  3200               	nop2	;2 cycle nop
  2495  0261  3200               	nop2	;2 cycle nop
  2496  0262  3200               	nop2	;2 cycle nop
  2497                           
  2498                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2499  0263  3034               	movlw	52
  2500  0264  00F5               	movwf	??_LCD_Init
  2501  0265  30F2               	movlw	242
  2502  0266                     u2257:	
  2503  0266  0B89               	decfsz	9,f
  2504  0267  2A66               	goto	u2257
  2505  0268  0BF5               	decfsz	??_LCD_Init,f
  2506  0269  2A66               	goto	u2257
  2507                           
  2508                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2509  026A  0020               	movlb	0	; select bank0
  2510  026B  158C               	bsf	12,3	;volatile
  2511  026C  3200               	nop2	;2 cycle nop
  2512  026D  3200               	nop2	;2 cycle nop
  2513  026E  3200               	nop2	;2 cycle nop
  2514  026F  3200               	nop2	;2 cycle nop
  2515  0270  0020               	movlb	0	; select bank0
  2516  0271  118C               	bcf	12,3	;volatile
  2517  0272  3200               	nop2	;2 cycle nop
  2518  0273  3200               	nop2	;2 cycle nop
  2519  0274  3200               	nop2	;2 cycle nop
  2520  0275  3200               	nop2	;2 cycle nop
  2521                           
  2522                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2523  0276  3005               	movlw	5
  2524  0277  00F5               	movwf	??_LCD_Init
  2525  0278  3026               	movlw	38
  2526  0279                     u2267:	
  2527  0279  0B89               	decfsz	9,f
  2528  027A  2A79               	goto	u2267
  2529  027B  0BF5               	decfsz	??_LCD_Init,f
  2530  027C  2A79               	goto	u2267
  2531  027D  3200               	nop2
  2532                           
  2533                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2534  027E  0020               	movlb	0	; select bank0
  2535  027F  158C               	bsf	12,3	;volatile
  2536  0280  3200               	nop2	;2 cycle nop
  2537  0281  3200               	nop2	;2 cycle nop
  2538  0282  3200               	nop2	;2 cycle nop
  2539  0283  3200               	nop2	;2 cycle nop
  2540  0284  0020               	movlb	0	; select bank0
  2541  0285  118C               	bcf	12,3	;volatile
  2542  0286  3200               	nop2	;2 cycle nop
  2543  0287  3200               	nop2	;2 cycle nop
  2544  0288  3200               	nop2	;2 cycle nop
  2545  0289  3200               	nop2	;2 cycle nop
  2546                           
  2547                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2548  028A  3005               	movlw	5
  2549  028B  00F5               	movwf	??_LCD_Init
  2550  028C  3026               	movlw	38
  2551  028D                     u2277:	
  2552  028D  0B89               	decfsz	9,f
  2553  028E  2A8D               	goto	u2277
  2554  028F  0BF5               	decfsz	??_LCD_Init,f
  2555  0290  2A8D               	goto	u2277
  2556  0291  3200               	nop2
  2557                           
  2558                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2559  0292  3002               	movlw	2
  2560  0293  0020               	movlb	0	; select bank0
  2561  0294  008D               	movwf	13	;volatile
  2562                           
  2563                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2564  0295  158C               	bsf	12,3	;volatile
  2565  0296  3200               	nop2	;2 cycle nop
  2566  0297  3200               	nop2	;2 cycle nop
  2567  0298  3200               	nop2	;2 cycle nop
  2568  0299  3200               	nop2	;2 cycle nop
  2569  029A  0020               	movlb	0	; select bank0
  2570  029B  118C               	bcf	12,3	;volatile
  2571  029C  3200               	nop2	;2 cycle nop
  2572  029D  3200               	nop2	;2 cycle nop
  2573  029E  3200               	nop2	;2 cycle nop
  2574  029F  3200               	nop2	;2 cycle nop
  2575                           
  2576                           ;LCD.c: 44: LCD_WriteData(0x28);
  2577  02A0  3028               	movlw	40
  2578  02A1  3183  2344  3182   	fcall	_LCD_WriteData
  2579                           
  2580                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2581  02A4  300C               	movlw	12
  2582  02A5  3183  2344  3182   	fcall	_LCD_WriteData
  2583                           
  2584                           ;LCD.c: 46: LCD_DisplayClear();
  2585  02A8  3184  246E  3182   	fcall	_LCD_DisplayClear
  2586                           
  2587                           ;LCD.c: 47: LCD_WriteData(0x06);
  2588  02AB  3006               	movlw	6
  2589  02AC  3183  2344         	fcall	_LCD_WriteData
  2590  02AE  0008               	return
  2591  02AF                     __end_of_LCD_Init:	
  2592                           
  2593                           	psect	text11
  2594  046E                     __ptext11:	
  2595 ;; *************** function _LCD_DisplayClear *****************
  2596 ;; Defined at:
  2597 ;;		line 64 in file "LCD.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2611 ;;      Params:         0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0
  2613 ;;      Temps:          1       0       0       0       0       0
  2614 ;;      Totals:         1       0       0       0       0       0
  2615 ;;Total ram usage:        1 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    3
  2618 ;; This function calls:
  2619 ;;		_LCD_WriteData
  2620 ;; This function is called by:
  2621 ;;		_LCD_Init
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _LCD_DisplayClear
  2627  046E                     _LCD_DisplayClear:	
  2628                           
  2629                           ;LCD.c: 66: RA4 = 0;
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2633  046E  0020               	movlb	0	; select bank0
  2634  046F  120C               	bcf	12,4	;volatile
  2635                           
  2636                           ;LCD.c: 67: LCD_WriteData(0x01);
  2637  0470  3001               	movlw	1
  2638  0471  3183  2344  3184   	fcall	_LCD_WriteData
  2639                           
  2640                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  2641  0474  3015               	movlw	21
  2642  0475  00F4               	movwf	??_LCD_DisplayClear
  2643  0476  30C6               	movlw	198
  2644  0477                     u2287:	
  2645  0477  0B89               	decfsz	9,f
  2646  0478  2C77               	goto	u2287
  2647  0479  0BF4               	decfsz	??_LCD_DisplayClear,f
  2648  047A  2C77               	goto	u2287
  2649  047B  3200               	nop2
  2650  047C  0008               	return
  2651  047D                     __end_of_LCD_DisplayClear:	
  2652                           
  2653                           	psect	text12
  2654  0421                     __ptext12:	
  2655 ;; *************** function _LCD_CursorPosition *****************
  2656 ;; Defined at:
  2657 ;;		line 86 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  tx              1    wreg     unsigned char 
  2660 ;;  ty              1    4[COMMON] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  tx              1    6[COMMON] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2672 ;;      Params:         1       0       0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0       0
  2674 ;;      Temps:          1       0       0       0       0       0
  2675 ;;      Totals:         3       0       0       0       0       0
  2676 ;;Total ram usage:        3 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_LCD_WriteData
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _LCD_CursorPosition
  2688  0421                     _LCD_CursorPosition:	
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  2692                           ;LCD_CursorPosition@tx stored from wreg
  2693  0421  00F6               	movwf	LCD_CursorPosition@tx
  2694                           
  2695                           ;LCD.c: 88: RA4 = 0;
  2696  0422  0020               	movlb	0	; select bank0
  2697  0423  120C               	bcf	12,4	;volatile
  2698                           
  2699                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  2700  0424  0874               	movf	LCD_CursorPosition@ty,w
  2701  0425  00F5               	movwf	??_LCD_CursorPosition
  2702  0426  3005               	movlw	5
  2703  0427                     u2055:	
  2704  0427  35F5               	lslf	??_LCD_CursorPosition,f
  2705  0428  3EFF               	addlw	-1
  2706  0429  1D03               	skipz
  2707  042A  2C27               	goto	u2055
  2708  042B  3575               	lslf	??_LCD_CursorPosition,w
  2709  042C  0476               	iorwf	LCD_CursorPosition@tx,w
  2710  042D  3880               	iorlw	-128
  2711  042E  3183  2344  3184   	fcall	_LCD_WriteData
  2712                           
  2713                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2714  0431  306A               	movlw	106
  2715  0432                     u2297:	
  2716  0432  0B89               	decfsz	9,f
  2717  0433  2C32               	goto	u2297
  2718  0434  3200               	nop2
  2719  0435  0008               	return
  2720  0436                     __end_of_LCD_CursorPosition:	
  2721                           
  2722                           	psect	text13
  2723  0344                     __ptext13:	
  2724 ;; *************** function _LCD_WriteData *****************
  2725 ;; Defined at:
  2726 ;;		line 15 in file "LCD.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  point           1    wreg     char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  point           1    3[COMMON] char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2740 ;;      Params:         0       0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0       0
  2743 ;;      Totals:         3       0       0       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    2
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_LCD_Init
  2751 ;;		_LCD_Put
  2752 ;;		_LCD_DisplayClear
  2753 ;;		_LCD_CursorPosition
  2754 ;;		_LCD_CursorHome
  2755 ;;		_LCD_CursorShift
  2756 ;;		_LCD_DispShift
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _LCD_WriteData
  2762  0344                     _LCD_WriteData:	
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2766                           ;LCD_WriteData@point stored from wreg
  2767  0344  00F3               	movwf	LCD_WriteData@point
  2768                           
  2769                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2770  0345  30D5               	movlw	213
  2771  0346                     u2307:	
  2772  0346  0B89               	decfsz	9,f
  2773  0347  2B46               	goto	u2307
  2774  0348  0000               	nop
  2775                           
  2776                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2777  0349  0873               	movf	LCD_WriteData@point,w
  2778  034A  00F1               	movwf	??_LCD_WriteData
  2779  034B  3004               	movlw	4
  2780  034C                     u1555:	
  2781  034C  1003               	clrc
  2782  034D  1BF1               	btfsc	??_LCD_WriteData,7
  2783  034E  1403               	setc
  2784  034F  0CF1               	rrf	??_LCD_WriteData,f
  2785  0350  0B89               	decfsz	9,f
  2786  0351  2B4C               	goto	u1555
  2787  0352  3003               	movlw	3
  2788  0353  0571               	andwf	??_LCD_WriteData,w
  2789  0354  00F2               	movwf	??_LCD_WriteData+1
  2790  0355  0E73               	swapf	LCD_WriteData@point,w
  2791  0356  390F               	andlw	15
  2792  0357  1989               	btfsc	9,3
  2793  0358  38F0               	iorlw	240
  2794  0359  390C               	andlw	12
  2795  035A  0709               	addwf	9,w
  2796  035B  0472               	iorwf	??_LCD_WriteData+1,w
  2797  035C  0020               	movlb	0	; select bank0
  2798  035D  008D               	movwf	13	;volatile
  2799                           
  2800                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2801  035E  158C               	bsf	12,3	;volatile
  2802  035F  3200               	nop2	;2 cycle nop
  2803  0360  3200               	nop2	;2 cycle nop
  2804  0361  3200               	nop2	;2 cycle nop
  2805  0362  3200               	nop2	;2 cycle nop
  2806  0363  0020               	movlb	0	; select bank0
  2807  0364  118C               	bcf	12,3	;volatile
  2808  0365  3200               	nop2	;2 cycle nop
  2809  0366  3200               	nop2	;2 cycle nop
  2810  0367  3200               	nop2	;2 cycle nop
  2811  0368  3200               	nop2	;2 cycle nop
  2812                           
  2813                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2814  0369  3003               	movlw	3
  2815  036A  0573               	andwf	LCD_WriteData@point,w
  2816  036B  00F1               	movwf	??_LCD_WriteData
  2817  036C  0873               	movf	LCD_WriteData@point,w
  2818  036D  390C               	andlw	12
  2819  036E  0709               	addwf	9,w
  2820  036F  0471               	iorwf	??_LCD_WriteData,w
  2821  0370  0020               	movlb	0	; select bank0
  2822  0371  008D               	movwf	13	;volatile
  2823                           
  2824                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2825  0372  158C               	bsf	12,3	;volatile
  2826  0373  3200               	nop2	;2 cycle nop
  2827  0374  3200               	nop2	;2 cycle nop
  2828  0375  3200               	nop2	;2 cycle nop
  2829  0376  3200               	nop2	;2 cycle nop
  2830  0377  0020               	movlb	0	; select bank0
  2831  0378  118C               	bcf	12,3	;volatile
  2832  0379  3200               	nop2	;2 cycle nop
  2833  037A  3200               	nop2	;2 cycle nop
  2834  037B  3200               	nop2	;2 cycle nop
  2835  037C  3200               	nop2	;2 cycle nop
  2836  037D  0008               	return
  2837  037E                     __end_of_LCD_WriteData:	
  2838                           
  2839                           	psect	text14
  2840  0436                     __ptext14:	
  2841 ;; *************** function _Basic_Init *****************
  2842 ;; Defined at:
  2843 ;;		line 32 in file "main.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      char 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2857 ;;      Params:         0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    2
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _Basic_Init
  2873  0436                     _Basic_Init:	
  2874                           
  2875                           ;main.c: 34: OSCCON = 0xF0;
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _Basic_Init: [wreg+status,2]
  2879  0436  30F0               	movlw	240
  2880  0437  0021               	movlb	1	; select bank1
  2881  0438  0099               	movwf	25	;volatile
  2882                           
  2883                           ;main.c: 38: TRISA = 0x07;
  2884  0439  3007               	movlw	7
  2885  043A  008C               	movwf	12	;volatile
  2886                           
  2887                           ;main.c: 39: ANSELA = 0x07;
  2888  043B  3007               	movlw	7
  2889  043C  0023               	movlb	3	; select bank3
  2890  043D  008C               	movwf	12	;volatile
  2891                           
  2892                           ;main.c: 41: TRISB = 0x40;
  2893  043E  3040               	movlw	64
  2894  043F  0021               	movlb	1	; select bank1
  2895  0440  008D               	movwf	13	;volatile
  2896                           
  2897                           ;main.c: 42: ANSELB = 0x00;
  2898  0441  0023               	movlb	3	; select bank3
  2899  0442  018D               	clrf	13	;volatile
  2900                           
  2901                           ;main.c: 44: APFCON0 = 0x08;
  2902  0443  3008               	movlw	8
  2903  0444  0022               	movlb	2	; select bank2
  2904  0445  009D               	movwf	29	;volatile
  2905                           
  2906                           ;main.c: 45: APFCON1 = 0x00;
  2907  0446  019E               	clrf	30	;volatile
  2908                           
  2909                           ;main.c: 47: PORTA = 0x00;
  2910  0447  0020               	movlb	0	; select bank0
  2911  0448  018C               	clrf	12	;volatile
  2912                           
  2913                           ;main.c: 48: PORTB = 0x00;
  2914  0449  018D               	clrf	13	;volatile
  2915  044A  0008               	return
  2916  044B                     __end_of_Basic_Init:	
  2917                           ;main.c: 50: return 0;
  2918                           ;	Return value of _Basic_Init is never used
  2919                           
  2920                           
  2921                           	psect	intentry
  2922  0004                     __pintentry:	
  2923 ;; *************** function _Handler *****************
  2924 ;; Defined at:
  2925 ;;		line 53 in file "main.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2939 ;;      Params:         0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0
  2941 ;;      Temps:          1       0       0       0       0       0
  2942 ;;      Totals:         1       0       0       0       0       0
  2943 ;;Total ram usage:        1 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		_Timer1_Handler
  2948 ;; This function is called by:
  2949 ;;		Interrupt level 1
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953  0004                     _Handler:	
  2954                           
  2955                           ;incstack = 0
  2956  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2957                           
  2958                           ; Regs used in _Handler: [status,2+status,0+pclath+cstack]
  2959  0005  3180               	pagesel	$
  2960  0006  0020               	movlb	0	; select bank0
  2961  0007  087F               	movf	127,w
  2962  0008  00F0               	movwf	??_Handler
  2963                           
  2964                           ;main.c: 55: Timer1_Handler();
  2965  0009  3184  247D         	fcall	_Timer1_Handler
  2966  000B  0870               	movf	??_Handler,w
  2967  000C  0020               	movlb	0	; select bank0
  2968  000D  00FF               	movwf	127
  2969  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2970  000F  0009               	retfie
  2971  0010                     __end_of_Handler:	
  2972                           
  2973                           	psect	text16
  2974  047D                     __ptext16:	
  2975 ;; *************** function _Timer1_Handler *****************
  2976 ;; Defined at:
  2977 ;;		line 33 in file "Timer1.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		None
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2991 ;;      Params:         0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_Handler
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _Timer1_Handler
  3006  047D                     _Timer1_Handler:	
  3007                           
  3008                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _Timer1_Handler: []
  3012  047D  0020               	movlb	0	; select bank0
  3013  047E  1C11               	btfss	17,0	;volatile
  3014  047F  0008               	return
  3015  0480  0021               	movlb	1	; select bank1
  3016  0481  1C11               	btfss	17,0	;volatile
  3017  0482  0008               	return
  3018                           
  3019                           ;Timer1.c: 36: {
  3020                           ;Timer1.c: 37: TMR1IF = 0;
  3021  0483  0020               	movlb	0	; select bank0
  3022  0484  1011               	bcf	17,0	;volatile
  3023  0485  0008               	return
  3024  0486                     __end_of_Timer1_Handler:	
  3025  007E                     btemp	set	126	;btemp
  3026  007E                     int$flags	set	126
  3027  007E                     wtemp0	set	126
=======
   537                           
   538                           	psect	idataBANK0
   539  0352                     __pidataBANK0:	
   540                           
   541                           ;initializer for main@F2994
   542  0352  3414               	retlw	20
   543  0353  3411               	retlw	17
   544  0354  3403               	retlw	3
   545  0355  3403               	retlw	3
   546  0356  3414               	retlw	20
   547  000D                     _PORTB	set	13
   548  000C                     _PORTA	set	12
   549  0064                     _RA4	set	100
   550  0063                     _RA3	set	99
   551  008D                     _TRISB	set	141
   552  008C                     _TRISA	set	140
   553  0099                     _OSCCON	set	153
   554  011E                     _APFCON1	set	286
   555  011D                     _APFCON0	set	285
   556  0191                     _EEADR	set	401
   557  0193                     _EEDATA	set	403
   558  0195                     _EECON1	set	405
   559  018D                     _ANSELB	set	397
   560  018C                     _ANSELA	set	396
   561  0CA8                     _RD	set	3240
   562  0CA9                     _WR	set	3241
   563                           
   564                           	psect	stringtext
   565  0800                     __pstringtext:	
   566  0800                     STR_3:	
   567  0800  3425               	retlw	37	;'%'
   568  0801  3430               	retlw	48	;'0'
   569  0802  3438               	retlw	56	;'8'
   570  0803  346C               	retlw	108	;'l'
   571  0804  3458               	retlw	88	;'X'
   572  0805  3420               	retlw	32	;' '
   573  0806  3400               	retlw	0
   574  0807                     STR_6:	
   575  0807  3420               	retlw	32	;' '
   576  0808  3425               	retlw	37	;'%'
   577  0809  3430               	retlw	48	;'0'
   578  080A  3438               	retlw	56	;'8'
   579  080B  344C               	retlw	76	;'L'
   580  080C  3458               	retlw	88	;'X'
   581  080D  3400               	retlw	0
   582  080E                     STR_4:	
   583  080E  3420               	retlw	32	;' '
   584  080F  3425               	retlw	37	;'%'
   585  0810  3430               	retlw	48	;'0'
   586  0811  3432               	retlw	50	;'2'
   587  0812  3458               	retlw	88	;'X'
   588  0813  3400               	retlw	0
   589  0814                     STR_5:	
   590  0814  3420               	retlw	32	;' '
   591  0815  3425               	retlw	37	;'%'
   592  0816  3430               	retlw	48	;'0'
   593  0817  3434               	retlw	52	;'4'
   594  0818  3458               	retlw	88	;'X'
   595  0819  3400               	retlw	0
   596  081A                     STR_1:	
   597  081A  3425               	retlw	37	;'%'
   598  081B  3464               	retlw	100	;'d'
   599  081C  3420               	retlw	32	;' '
   600  081D  3400               	retlw	0
   601  081E                     STR_2:	
   602  081E  340D               	retlw	13
   603  081F  3400               	retlw	0
   604                           
   605                           ; #config settings
   606  0000                     
   607                           	psect	cinit
   608  07EA                     start_initialization:	
   609  07EA                     __initialization:	
   610                           
   611                           ; Initialize objects allocated to BANK0
   612  07EA  3052               	movlw	low __pidataBANK0
   613  07EB  0084               	movwf	4
   614  07EC  3083               	movlw	(high __pidataBANK0)| (0+128)
   615  07ED  0085               	movwf	5
   616  07EE  0012               	moviw fsr0++
   617  07EF  00EA               	movwf	__pdataBANK0& (0+127)
   618  07F0  0012               	moviw fsr0++
   619  07F1  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   620  07F2  0012               	moviw fsr0++
   621  07F3  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   622  07F4  0012               	moviw fsr0++
   623  07F5  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   624  07F6  0012               	moviw fsr0++
   625  07F7  00EE               	movwf	(__pdataBANK0+4)& (0+127)
   626                           
   627                           ; Clear objects allocated to BANK0
   628  07F8  01E5               	clrf	__pbssBANK0& (0+127)
   629  07F9  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   630  07FA  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   631  07FB  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   632  07FC  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   633  07FD                     end_of_initialization:	
   634                           ;End of C runtime variable initialization code
   635                           
   636  07FD                     __end_of__initialization:	
   637  07FD  0020               	movlb	0
   638  07FE  3184  2CBE         	ljmp	_main	;jump to C main() function
   639                           
   640                           	psect	bssBANK0
   641  0065                     __pbssBANK0:	
   642  0065                     _xfunc_in:	
   643  0065                     	ds	2
   644  0067                     _xfunc_out:	
   645  0067                     	ds	2
   646  0069                     _outptr:	
   647  0069                     	ds	1
   648                           
   649                           	psect	dataBANK0
   650  006A                     __pdataBANK0:	
   651  006A                     main@F2994:	
   652  006A                     	ds	5
   653                           
   654                           	psect	cstackCOMMON
   655  0070                     __pcstackCOMMON:	
   656  0070                     ?_Basic_Init:	
   657  0070                     ??_Basic_Init:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_LCD_Init:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_LCD_DisplayClear:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_eeprom_read:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ??_eeprom_read:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_main:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_LCD_WriteData:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_LCD_WriteData:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_xputc:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_xputs:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?___wmul:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?___lldiv:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0070                     ?___llmod:	
   694                           ; 4 bytes @ 0x0
   695                           
   696  0070                     ___wmul@multiplier:	
   697                           ; 4 bytes @ 0x0
   698                           
   699  0070                     ___lldiv@divisor:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0070                     ___llmod@divisor:	
   703                           ; 4 bytes @ 0x0
   704                           
   705                           
   706                           ; 4 bytes @ 0x0
   707  0070                     	ds	2
   708  0072                     LCD_WriteData@point:	
   709  0072                     ___wmul@multiplicand:	
   710                           ; 1 bytes @ 0x2
   711                           
   712                           
   713                           ; 2 bytes @ 0x2
   714  0072                     	ds	1
   715  0073                     ?_LCD_Put:	
   716  0073                     ?_LCD_CursorPosition:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     ??_LCD_DisplayClear:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     LCD_Put@word:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     LCD_CursorPosition@ty:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     eeprom_read@addr:	
   729                           ; 1 bytes @ 0x3
   730                           
   731                           
   732                           ; 1 bytes @ 0x3
   733  0073                     	ds	1
   734  0074                     ??_LCD_Init:	
   735  0074                     ??_LCD_Put:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ??_LCD_CursorPosition:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     ?_EEPROM_MultiRead:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     ??_xputc:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     ??___wmul:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     EEPROM_MultiRead@size:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     ___wmul@product:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     ___lldiv@dividend:	
   757                           ; 2 bytes @ 0x4
   758                           
   759  0074                     ___llmod@dividend:	
   760                           ; 4 bytes @ 0x4
   761                           
   762                           
   763                           ; 4 bytes @ 0x4
   764  0074                     	ds	1
   765  0075                     LCD_CursorPosition@tx:	
   766  0075                     xputc@c:	
   767                           ; 1 bytes @ 0x5
   768                           
   769  0075                     EEPROM_MultiRead@addr:	
   770                           ; 1 bytes @ 0x5
   771                           
   772                           
   773                           ; 1 bytes @ 0x5
   774  0075                     	ds	1
   775  0076                     ??_EEPROM_MultiRead:	
   776  0076                     ??_xputs:	
   777                           ; 1 bytes @ 0x6
   778                           
   779                           
   780                           ; 1 bytes @ 0x6
   781  0076                     	ds	1
   782  0077                     xputs@str:	
   783                           
   784                           ; 1 bytes @ 0x7
   785  0077                     	ds	1
   786  0078                     ??___lldiv:	
   787  0078                     ??___llmod:	
   788                           ; 1 bytes @ 0x8
   789                           
   790                           
   791                           ; 1 bytes @ 0x8
   792  0078                     	ds	1
   793  0079                     EEPROM_MultiRead@pData:	
   794  0079                     ___llmod@counter:	
   795                           ; 1 bytes @ 0x9
   796                           
   797  0079                     ___lldiv@quotient:	
   798                           ; 1 bytes @ 0x9
   799                           
   800                           
   801                           ; 4 bytes @ 0x9
   802  0079                     	ds	1
   803  007A                     EEPROM_MultiRead@i:	
   804                           
   805                           ; 1 bytes @ 0xA
   806  007A                     	ds	3
   807  007D                     ___lldiv@counter:	
   808                           
   809                           ; 1 bytes @ 0xD
   810  007D                     	ds	1
   811                           
   812                           	psect	cstackBANK0
   813  0020                     __pcstackBANK0:	
   814  0020                     ?_xvprintf:	
   815  0020                     xvprintf@fmt:	
   816                           ; 1 bytes @ 0x0
   817                           
   818                           
   819                           ; 2 bytes @ 0x0
   820  0020                     	ds	2
   821  0022                     xvprintf@arp:	
   822                           
   823                           ; 1 bytes @ 0x2
   824  0022                     	ds	1
   825  0023                     ??_xvprintf:	
   826                           
   827                           ; 1 bytes @ 0x3
   828  0023                     	ds	4
   829  0027                     xvprintf@s:	
   830                           
   831                           ; 16 bytes @ 0x7
   832  0027                     	ds	16
   833  0037                     _xvprintf$165:	
   834                           
   835                           ; 4 bytes @ 0x17
   836  0037                     	ds	4
   837  003B                     _xvprintf$166:	
   838                           
   839                           ; 2 bytes @ 0x1B
   840  003B                     	ds	2
   841  003D                     _xvprintf$167:	
   842                           
   843                           ; 2 bytes @ 0x1D
   844  003D                     	ds	2
   845  003F                     xvprintf@p:	
   846                           
   847                           ; 1 bytes @ 0x1F
   848  003F                     	ds	1
   849  0040                     xvprintf@r:	
   850                           
   851                           ; 2 bytes @ 0x20
   852  0040                     	ds	2
   853  0042                     xvprintf@w:	
   854                           
   855                           ; 2 bytes @ 0x22
   856  0042                     	ds	2
   857  0044                     xvprintf@j:	
   858                           
   859                           ; 2 bytes @ 0x24
   860  0044                     	ds	2
   861  0046                     xvprintf@v:	
   862                           
   863                           ; 4 bytes @ 0x26
   864  0046                     	ds	4
   865  004A                     xvprintf@f:	
   866                           
   867                           ; 2 bytes @ 0x2A
   868  004A                     	ds	2
   869  004C                     xvprintf@i:	
   870                           
   871                           ; 2 bytes @ 0x2C
   872  004C                     	ds	2
   873  004E                     xvprintf@d:	
   874                           
   875                           ; 1 bytes @ 0x2E
   876  004E                     	ds	1
   877  004F                     xvprintf@c:	
   878                           
   879                           ; 1 bytes @ 0x2F
   880  004F                     	ds	1
   881  0050                     ?_xprintf:	
   882  0050                     xprintf@fmt:	
   883                           ; 1 bytes @ 0x30
   884                           
   885                           
   886                           ; 2 bytes @ 0x30
   887  0050                     	ds	6
   888  0056                     ??_xprintf:	
   889                           
   890                           ; 1 bytes @ 0x36
   891  0056                     	ds	1
   892  0057                     xprintf@arp:	
   893                           
   894                           ; 1 bytes @ 0x37
   895  0057                     	ds	1
   896  0058                     ??_main:	
   897                           
   898                           ; 1 bytes @ 0x38
   899  0058                     	ds	2
   900  005A                     main@sample:	
   901                           
   902                           ; 5 bytes @ 0x3A
   903  005A                     	ds	5
   904  005F                     main@readdat:	
   905                           
   906                           ; 5 bytes @ 0x3F
   907  005F                     	ds	5
   908  0064                     main@i:	
   909                           
   910                           ; 1 bytes @ 0x44
   911  0064                     	ds	1
   912                           
   913                           	psect	maintext
   914  04BE                     __pmaintext:	
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 13 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  i               1   68[BANK0 ] unsigned char 
   925 ;;  readdat         5   63[BANK0 ] unsigned char [5]
   926 ;;  sample          5   58[BANK0 ] unsigned char [5]
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      char 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B1F/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   936 ;;      Params:         0       0       0       0       0       0
   937 ;;      Locals:         0      11       0       0       0       0
   938 ;;      Temps:          0       2       0       0       0       0
   939 ;;      Totals:         0      13       0       0       0       0
   940 ;;Total ram usage:       13 bytes
   941 ;; Hardware stack levels required when called:    6
   942 ;; This function calls:
   943 ;;		_Basic_Init
   944 ;;		_EEPROM_MultiRead
   945 ;;		_LCD_CursorPosition
   946 ;;		_LCD_Init
   947 ;;		_xprintf
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _main
   955  04BE                     _main:	
   956                           
   957                           ;main.c: 15: Basic_Init();
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   961  04BE  3183  238F  3184   	fcall	_Basic_Init
   962                           
   963                           ;main.c: 16: uint8_t sample[5]={
   964                           ;main.c: 17: 20,17,3,3,20
   965                           ;main.c: 18: };
   966  04C1  306A               	movlw	low main@F2994
   967  04C2  0086               	movwf	6
   968  04C3  3000               	movlw	high main@F2994
   969  04C4  0087               	movwf	7
   970  04C5  305A               	movlw	low main@sample
   971  04C6  0084               	movwf	4
   972  04C7  3000               	movlw	high main@sample
   973  04C8  0085               	movwf	5
   974  04C9  3005               	movlw	5
   975  04CA  0020               	movlb	0	; select bank0
   976  04CB  00D8               	movwf	??_main
   977  04CC                     u1530:	
   978  04CC  0016               	moviw fsr1++
   979  04CD  001A               	movwi fsr0++
   980  04CE  0BD8               	decfsz	??_main,f
   981  04CF  2CCC               	goto	u1530
   982                           
   983                           ;main.c: 19: uint8_t readdat[5];
   984                           ;main.c: 20: LCD_Init();
   985  04D0  3185  2557  3184   	fcall	_LCD_Init
   986                           
   987                           ;main.c: 21: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   988  04D3  3057               	movlw	low _LCD_Put
   989  04D4  0020               	movlb	0	; select bank0
   990  04D5  00E7               	movwf	_xfunc_out
   991  04D6  3003               	movlw	high _LCD_Put
   992  04D7  00E8               	movwf	_xfunc_out+1
   993  04D8                     l1810:	
   994                           ;main.c: 23: while(1)
   995                           
   996                           
   997                           ;main.c: 24: {
   998                           ;main.c: 26: LCD_CursorPosition(0,0);
   999  04D8  01F3               	clrf	LCD_CursorPosition@ty
  1000  04D9  3000               	movlw	0
  1001  04DA  3183  23A4  3184   	fcall	_LCD_CursorPosition
  1002                           
  1003                           ;main.c: 27: EEPROM_MultiRead(readdat,5,0);
  1004  04DD  3005               	movlw	5
  1005  04DE  0020               	movlb	0	; select bank0
  1006  04DF  00D8               	movwf	??_main
  1007  04E0  0858               	movf	??_main,w
  1008  04E1  00F4               	movwf	EEPROM_MultiRead@size
  1009  04E2  01F5               	clrf	EEPROM_MultiRead@addr
  1010  04E3  305F               	movlw	(low (main@readdat| 0))& (0+255)
  1011  04E4  3183  23EC  3184   	fcall	_EEPROM_MultiRead
  1012                           
  1013                           ;main.c: 28: for(uint8_t i = 0;i<5;i++)
  1014  04E7  0020               	movlb	0	; select bank0
  1015  04E8  01E4               	clrf	main@i
  1016  04E9                     L1:	
  1017  04E9  3005               	movlw	5
  1018  04EA  0264               	subwf	main@i,w
  1019  04EB  1803               	btfsc	3,0
  1020  04EC  2CD8               	goto	l1810
  1021                           
  1022                           ;main.c: 29: xprintf("%d ",readdat[i]);
  1023  04ED  301A               	movlw	low (STR_1| (0+32768))
  1024  04EE  00D0               	movwf	xprintf@fmt
  1025  04EF  3088               	movlw	high (STR_1| (0+32768))
  1026  04F0  00D1               	movwf	xprintf@fmt+1
  1027  04F1  0864               	movf	main@i,w
  1028  04F2  3E5F               	addlw	(low (main@readdat| 0))& (0+255)
  1029  04F3  0086               	movwf	6
  1030  04F4  0187               	clrf	7
  1031  04F5  0801               	movf	1,w
  1032  04F6  00D8               	movwf	??_main
  1033  04F7  01D9               	clrf	??_main+1
  1034  04F8  0858               	movf	??_main,w
  1035  04F9  00D2               	movwf	?_xprintf+2
  1036  04FA  0859               	movf	??_main+1,w
  1037  04FB  00D3               	movwf	?_xprintf+3
  1038  04FC  3183  236C  3184   	fcall	_xprintf
  1039  04FF  3001               	movlw	1
  1040  0500  0020               	movlb	0	; select bank0
  1041  0501  00D8               	movwf	??_main
  1042  0502  0858               	movf	??_main,w
  1043  0503  07E4               	addwf	main@i,f
  1044  0504  2CE9               	goto	L1
  1045  0505                     __end_of_main:	
  1046                           ;main.c: 30: }
  1047                           ;main.c: 31: return 0;
  1048                           ;	Return value of _main is never used
  1049                           
  1050                           
  1051                           	psect	text1
  1052  036C                     __ptext1:	
  1053 ;; *************** function _xprintf *****************
  1054 ;; Defined at:
  1055 ;;		line 165 in file "xprintf.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  1058 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1059 ;;		 -> STR_1(4), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  arp             1   55[BANK0 ] PTR void [1]
  1062 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1072 ;;      Params:         0       6       0       0       0       0
  1073 ;;      Locals:         0       1       0       0       0       0
  1074 ;;      Temps:          0       1       0       0       0       0
  1075 ;;      Totals:         0       8       0       0       0       0
  1076 ;;Total ram usage:        8 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    5
  1079 ;; This function calls:
  1080 ;;		_xvprintf
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;;		_put_dump
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _xprintf
  1089  036C                     _xprintf:	
  1090                           
  1091                           ;xprintf.c: 170: va_list arp;
  1092                           ;xprintf.c: 173: *arp = __va_start();
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1096  036C  3052               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1097  036D  0020               	movlb	0	; select bank0
  1098  036E  00D6               	movwf	??_xprintf
  1099  036F  0856               	movf	??_xprintf,w
  1100  0370  00D7               	movwf	xprintf@arp
  1101                           
  1102                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1103  0371  0851               	movf	xprintf@fmt+1,w
  1104  0372  00A1               	movwf	xvprintf@fmt+1
  1105  0373  0850               	movf	xprintf@fmt,w
  1106  0374  00A0               	movwf	xvprintf@fmt
  1107  0375  3057               	movlw	(low (xprintf@arp| 0))& (0+255)
  1108  0376  00D6               	movwf	??_xprintf
  1109  0377  0856               	movf	??_xprintf,w
  1110  0378  00A2               	movwf	xvprintf@arp
  1111  0379  3185  25C0         	fcall	_xvprintf
  1112  037B  0008               	return
  1113  037C                     __end_of_xprintf:	
  1114                           
  1115                           	psect	text2
  1116  05C0                     __ptext2:	
  1117 ;; *************** function _xvprintf *****************
  1118 ;; Defined at:
  1119 ;;		line 88 in file "xprintf.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  1122 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1123 ;;		 -> STR_1(4), 
  1124 ;;  arp             1    2[BANK0 ] PTR PTR void 
  1125 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  s              16    7[BANK0 ] unsigned char [16]
  1128 ;;  v               4   38[BANK0 ] unsigned long 
  1129 ;;  i               2   44[BANK0 ] unsigned int 
  1130 ;;  f               2   42[BANK0 ] unsigned int 
  1131 ;;  j               2   36[BANK0 ] unsigned int 
  1132 ;;  w               2   34[BANK0 ] unsigned int 
  1133 ;;  r               2   32[BANK0 ] unsigned int 
  1134 ;;  c               1   47[BANK0 ] unsigned char 
  1135 ;;  d               1   46[BANK0 ] unsigned char 
  1136 ;;  p               1   31[BANK0 ] PTR unsigned char 
  1137 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1147 ;;      Params:         0       3       0       0       0       0
  1148 ;;      Locals:         0      41       0       0       0       0
  1149 ;;      Temps:          0       4       0       0       0       0
  1150 ;;      Totals:         0      48       0       0       0       0
  1151 ;;Total ram usage:       48 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    4
  1154 ;; This function calls:
  1155 ;;		___lldiv
  1156 ;;		___llmod
  1157 ;;		___wmul
  1158 ;;		_xputc
  1159 ;;		_xputs
  1160 ;; This function is called by:
  1161 ;;		_xprintf
  1162 ;;		_xsprintf
  1163 ;;		_xfprintf
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _xvprintf
  1169  05C0                     _xvprintf:	
  1170  05C0                     l114:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1173                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1174                           ;xprintf.c: 94: unsigned long v;
  1175                           ;xprintf.c: 95: char s[16], c, d, *p;
  1176                           ;xprintf.c: 98: for (;;) {
  1177                           
  1178                           
  1179                           ;xprintf.c: 99: c = *fmt++;
  1180  05C0  0020               	movlb	0	; select bank0
  1181  05C1  0820               	movf	xvprintf@fmt,w
  1182  05C2  0084               	movwf	4
  1183  05C3  0821               	movf	xvprintf@fmt+1,w
  1184  05C4  0085               	movwf	5
  1185  05C5  0800               	movf	0,w	;code access
  1186  05C6  00A3               	movwf	??_xvprintf
  1187  05C7  0823               	movf	??_xvprintf,w
  1188  05C8  00CF               	movwf	xvprintf@c
  1189  05C9  3001               	movlw	1
  1190  05CA  07A0               	addwf	xvprintf@fmt,f
  1191  05CB  3000               	movlw	0
  1192  05CC  3DA1               	addwfc	xvprintf@fmt+1,f
  1193                           
  1194                           ;xprintf.c: 100: if (!c) break;
  1195  05CD  084F               	movf	xvprintf@c,w
  1196  05CE  1903               	btfsc	3,2
  1197  05CF  0008               	return
  1198                           
  1199                           ;xprintf.c: 101: if (c != '%') {
  1200  05D0  3025               	movlw	37
  1201  05D1  064F               	xorwf	xvprintf@c,w
  1202  05D2  1903               	btfsc	3,2
  1203  05D3  2DD9               	goto	l1532
  1204                           
  1205                           ;xprintf.c: 102: xputc(c); continue;
  1206  05D4  084F               	movf	xvprintf@c,w
  1207  05D5  3184  2415  3185   	fcall	_xputc
  1208  05D8  2DC0               	goto	l114
  1209  05D9                     l1532:	
  1210                           
  1211                           ;xprintf.c: 103: }
  1212                           ;xprintf.c: 104: f = 0;
  1213  05D9  0020               	movlb	0	; select bank0
  1214  05DA  01CA               	clrf	xvprintf@f
  1215  05DB  01CB               	clrf	xvprintf@f+1
  1216                           
  1217                           ;xprintf.c: 105: c = *fmt++;
  1218  05DC  0820               	movf	xvprintf@fmt,w
  1219  05DD  0084               	movwf	4
  1220  05DE  0821               	movf	xvprintf@fmt+1,w
  1221  05DF  0085               	movwf	5
  1222  05E0  0800               	movf	0,w	;code access
  1223  05E1  00A3               	movwf	??_xvprintf
  1224  05E2  0823               	movf	??_xvprintf,w
  1225  05E3  00CF               	movwf	xvprintf@c
  1226  05E4  3001               	movlw	1
  1227  05E5  07A0               	addwf	xvprintf@fmt,f
  1228  05E6  3000               	movlw	0
  1229  05E7  3DA1               	addwfc	xvprintf@fmt+1,f
  1230                           
  1231                           ;xprintf.c: 106: if (c == '0') {
  1232  05E8  3030               	movlw	48
  1233  05E9  064F               	xorwf	xvprintf@c,w
  1234  05EA  1D03               	btfss	3,2
  1235  05EB  2DEE               	goto	l1546
  1236                           
  1237                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1238  05EC  3001               	movlw	1
  1239  05ED  2DF3               	goto	L7
  1240  05EE                     l1546:	
  1241                           ;xprintf.c: 108: } else {
  1242                           
  1243                           
  1244                           ;xprintf.c: 109: if (c == '-') {
  1245  05EE  302D               	movlw	45
  1246  05EF  064F               	xorwf	xvprintf@c,w
  1247  05F0  1D03               	btfss	3,2
  1248  05F1  2E02               	goto	l1554
  1249                           
  1250                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1251  05F2  3002               	movlw	2
  1252  05F3                     L7:	
  1253  05F3  00CA               	movwf	xvprintf@f
  1254  05F4  3000               	movlw	0
  1255  05F5  00CB               	movwf	xvprintf@f+1
  1256  05F6  0820               	movf	xvprintf@fmt,w
  1257  05F7  0084               	movwf	4
  1258  05F8  0821               	movf	xvprintf@fmt+1,w
  1259  05F9  0085               	movwf	5
  1260  05FA  0800               	movf	0,w	;code access
  1261  05FB  00A3               	movwf	??_xvprintf
  1262  05FC  0823               	movf	??_xvprintf,w
  1263  05FD  00CF               	movwf	xvprintf@c
  1264  05FE  3001               	movlw	1
  1265  05FF  07A0               	addwf	xvprintf@fmt,f
  1266  0600  3000               	movlw	0
  1267  0601  3DA1               	addwfc	xvprintf@fmt+1,f
  1268  0602                     l1554:	
  1269                           
  1270                           ;xprintf.c: 111: }
  1271                           ;xprintf.c: 112: }
  1272                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1273  0602  01C2               	clrf	xvprintf@w
  1274  0603  01C3               	clrf	xvprintf@w+1
  1275  0604  2E2C               	goto	l1562
  1276  0605                     l1556:	
  1277                           
  1278                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1279  0605  084F               	movf	xvprintf@c,w
  1280  0606  00A3               	movwf	??_xvprintf
  1281  0607  01A4               	clrf	??_xvprintf+1
  1282  0608  0843               	movf	xvprintf@w+1,w
  1283  0609  00F1               	movwf	___wmul@multiplier+1
  1284  060A  0842               	movf	xvprintf@w,w
  1285  060B  00F0               	movwf	___wmul@multiplier
  1286  060C  300A               	movlw	10
  1287  060D  00F2               	movwf	___wmul@multiplicand
  1288  060E  3000               	movlw	0
  1289  060F  00F3               	movwf	___wmul@multiplicand+1
  1290  0610  3183  23D1  3185   	fcall	___wmul
  1291  0613  0020               	movlb	0	; select bank0
  1292  0614  0823               	movf	??_xvprintf,w
  1293  0615  0770               	addwf	?___wmul,w
  1294  0616  00A5               	movwf	??_xvprintf+2
  1295  0617  0824               	movf	??_xvprintf+1,w
  1296  0618  3D71               	addwfc	?___wmul+1,w
  1297  0619  00A6               	movwf	??_xvprintf+3
  1298  061A  0825               	movf	??_xvprintf+2,w
  1299  061B  3ED0               	addlw	208
  1300  061C  00C2               	movwf	xvprintf@w
  1301  061D  30FF               	movlw	255
  1302  061E  3D26               	addwfc	??_xvprintf+3,w
  1303  061F  00C3               	movwf	xvprintf@w+1
  1304  0620  0820               	movf	xvprintf@fmt,w
  1305  0621  0084               	movwf	4
  1306  0622  0821               	movf	xvprintf@fmt+1,w
  1307  0623  0085               	movwf	5
  1308  0624  0800               	movf	0,w	;code access
  1309  0625  00A3               	movwf	??_xvprintf
  1310  0626  0823               	movf	??_xvprintf,w
  1311  0627  00CF               	movwf	xvprintf@c
  1312  0628  3001               	movlw	1
  1313  0629  07A0               	addwf	xvprintf@fmt,f
  1314  062A  3000               	movlw	0
  1315  062B  3DA1               	addwfc	xvprintf@fmt+1,f
  1316  062C                     l1562:	
  1317  062C  3030               	movlw	48
  1318  062D  024F               	subwf	xvprintf@c,w
  1319  062E  1C03               	skipc
  1320  062F  2E34               	goto	l1566
  1321  0630  303A               	movlw	58
  1322  0631  024F               	subwf	xvprintf@c,w
  1323  0632  1C03               	skipc
  1324  0633  2E05               	goto	l1556
  1325  0634                     l1566:	
  1326                           
  1327                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1328  0634  306C               	movlw	108
  1329  0635  064F               	xorwf	xvprintf@c,w
  1330  0636  1903               	btfsc	3,2
  1331  0637  2E3C               	goto	l129
  1332  0638  304C               	movlw	76
  1333  0639  064F               	xorwf	xvprintf@c,w
  1334  063A  1D03               	btfss	3,2
  1335  063B  2E49               	goto	l1574
  1336  063C                     l129:	
  1337                           
  1338                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1339  063C  154A               	bsf	xvprintf@f,2
  1340  063D  0820               	movf	xvprintf@fmt,w
  1341  063E  0084               	movwf	4
  1342  063F  0821               	movf	xvprintf@fmt+1,w
  1343  0640  0085               	movwf	5
  1344  0641  0800               	movf	0,w	;code access
  1345  0642  00A3               	movwf	??_xvprintf
  1346  0643  0823               	movf	??_xvprintf,w
  1347  0644  00CF               	movwf	xvprintf@c
  1348  0645  3001               	movlw	1
  1349  0646  07A0               	addwf	xvprintf@fmt,f
  1350  0647  3000               	movlw	0
  1351  0648  3DA1               	addwfc	xvprintf@fmt+1,f
  1352  0649                     l1574:	
  1353                           
  1354                           ;xprintf.c: 117: }
  1355                           ;xprintf.c: 118: if (!c) break;
  1356  0649  084F               	movf	xvprintf@c,w
  1357  064A  1903               	btfsc	3,2
  1358  064B  0008               	return
  1359                           
  1360                           ;xprintf.c: 119: d = c;
  1361  064C  084F               	movf	xvprintf@c,w
  1362  064D  00A3               	movwf	??_xvprintf
  1363  064E  0823               	movf	??_xvprintf,w
  1364  064F  00CE               	movwf	xvprintf@d
  1365                           
  1366                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  1367  0650  3061               	movlw	97
  1368  0651  024E               	subwf	xvprintf@d,w
  1369  0652  1C03               	skipc
  1370  0653  2EBF               	goto	l1616
  1371  0654  3020               	movlw	32
  1372  0655  02CE               	subwf	xvprintf@d,f
  1373                           
  1374                           ;xprintf.c: 121: switch (d) {
  1375  0656  2EBF               	goto	l1616
  1376  0657                     l1582:	
  1377                           ;xprintf.c: 122: case 'S' :
  1378                           
  1379                           
  1380                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  1381  0657  0822               	movf	xvprintf@arp,w
  1382  0658  0086               	movwf	6
  1383  0659  0187               	clrf	7
  1384  065A  3F40               	moviw [0]fsr1
  1385  065B  0084               	movwf	4
  1386  065C  0185               	clrf	5
  1387  065D  0A81               	incf	1,f
  1388  065E  0800               	movf	0,w
  1389  065F  00A3               	movwf	??_xvprintf
  1390  0660  0823               	movf	??_xvprintf,w
  1391  0661  00BF               	movwf	xvprintf@p
  1392                           
  1393                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  1394  0662  01C4               	clrf	xvprintf@j
  1395  0663  01C5               	clrf	xvprintf@j+1
  1396  0664                     l1588:	
  1397  0664  0844               	movf	xvprintf@j,w
  1398  0665  073F               	addwf	xvprintf@p,w
  1399  0666  00A3               	movwf	??_xvprintf
  1400  0667  0823               	movf	??_xvprintf,w
  1401  0668  0086               	movwf	6
  1402  0669  0187               	clrf	7
  1403  066A  0801               	movf	1,w
  1404  066B  1903               	btfsc	3,2
  1405  066C  2E76               	goto	l1592
  1406  066D  3001               	movlw	1
  1407  066E  07C4               	addwf	xvprintf@j,f
  1408  066F  3000               	movlw	0
  1409  0670  3DC5               	addwfc	xvprintf@j+1,f
  1410  0671  2E64               	goto	l1588
  1411  0672                     l1590:	
  1412                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  1413                           
  1414  0672  3020               	movlw	32
  1415  0673  3184  2415  3185   	fcall	_xputc
  1416  0676                     l1592:	
  1417  0676  0020               	movlb	0	; select bank0
  1418  0677  18CA               	btfsc	xvprintf@f,1
  1419  0678  2E88               	goto	l1596
  1420  0679  0845               	movf	xvprintf@j+1,w
  1421  067A  00A4               	movwf	??_xvprintf+1
  1422  067B  0844               	movf	xvprintf@j,w
  1423  067C  00A3               	movwf	??_xvprintf
  1424  067D  0AC4               	incf	xvprintf@j,f
  1425  067E  1903               	skipnz
  1426  067F  0AC5               	incf	xvprintf@j+1,f
  1427  0680  0843               	movf	xvprintf@w+1,w
  1428  0681  0224               	subwf	??_xvprintf+1,w
  1429  0682  1D03               	skipz
  1430  0683  2E86               	goto	u1265
  1431  0684  0842               	movf	xvprintf@w,w
  1432  0685  0223               	subwf	??_xvprintf,w
  1433  0686                     u1265:	
  1434  0686  1C03               	skipc
  1435  0687  2E72               	goto	l1590
  1436  0688                     l1596:	
  1437                           
  1438                           ;xprintf.c: 126: xputs(p);
  1439  0688  083F               	movf	xvprintf@p,w
  1440  0689  3183  237C  3185   	fcall	_xputs
  1441  068C                     l1600:	
  1442                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  1443                           
  1444  068C  0020               	movlb	0	; select bank0
  1445  068D  0845               	movf	xvprintf@j+1,w
  1446  068E  00A4               	movwf	??_xvprintf+1
  1447  068F  0844               	movf	xvprintf@j,w
  1448  0690  00A3               	movwf	??_xvprintf
  1449  0691  0AC4               	incf	xvprintf@j,f
  1450  0692  1903               	skipnz
  1451  0693  0AC5               	incf	xvprintf@j+1,f
  1452  0694  0843               	movf	xvprintf@w+1,w
  1453  0695  0224               	subwf	??_xvprintf+1,w
  1454  0696  1D03               	skipz
  1455  0697  2E9A               	goto	u1275
  1456  0698  0842               	movf	xvprintf@w,w
  1457  0699  0223               	subwf	??_xvprintf,w
  1458  069A                     u1275:	
  1459  069A  1803               	btfsc	3,0
  1460  069B  2DC0               	goto	l114
  1461  069C  3020               	movlw	32
  1462  069D  3184  2415  3185   	fcall	_xputc
  1463  06A0  2E8C               	goto	l1600
  1464  06A1                     l1602:	
  1465                           ;xprintf.c: 129: case 'C' :
  1466                           
  1467                           ;xprintf.c: 128: continue;
  1468                           
  1469                           
  1470                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  1471  06A1  0822               	movf	xvprintf@arp,w
  1472  06A2  0086               	movwf	6
  1473  06A3  0187               	clrf	7
  1474  06A4  0801               	movf	1,w
  1475  06A5  0084               	movwf	4
  1476  06A6  0185               	clrf	5
  1477  06A7  3002               	movlw	2
  1478  06A8  0781               	addwf	1,f
  1479  06A9  0800               	movf	0,w
  1480  06AA  3184  2415  3185   	fcall	_xputc
  1481  06AD  2DC0               	goto	l114
  1482  06AE                     l1604:	
  1483                           ;xprintf.c: 131: case 'B' :
  1484                           
  1485                           
  1486                           ;xprintf.c: 132: r = 2; break;
  1487  06AE  3002               	movlw	2
  1488  06AF  0020               	movlb	0	; select bank0
  1489  06B0  2EB6               	goto	L4
  1490  06B1                     l1606:	
  1491                           ;xprintf.c: 133: case 'O' :
  1492                           
  1493                           
  1494                           ;xprintf.c: 134: r = 8; break;
  1495  06B1  3008               	movlw	8
  1496  06B2  2EB6               	goto	L4
  1497  06B3                     l1608:	
  1498                           ;xprintf.c: 135: case 'D' :
  1499                           
  1500                           
  1501                           ;xprintf.c: 136: case 'U' :
  1502                           ;xprintf.c: 137: r = 10; break;
  1503  06B3  300A               	movlw	10
  1504  06B4  2EB6               	goto	L4
  1505  06B5                     l1610:	
  1506                           ;xprintf.c: 138: case 'X' :
  1507                           
  1508                           
  1509                           ;xprintf.c: 139: r = 16; break;
  1510  06B5  3010               	movlw	16
  1511  06B6                     L4:	
  1512  06B6  00C0               	movwf	xvprintf@r
  1513  06B7  3000               	movlw	0
  1514  06B8  00C1               	movwf	xvprintf@r+1
  1515  06B9  2ED7               	goto	l147
  1516  06BA                     l1612:	
  1517                           ;xprintf.c: 140: default:
  1518                           
  1519                           
  1520                           ;xprintf.c: 141: xputc(c); continue;
  1521  06BA  084F               	movf	xvprintf@c,w
  1522  06BB  3184  2415  3185   	fcall	_xputc
  1523  06BE  2DC0               	goto	l114
  1524  06BF                     l1616:	
  1525                           ;xprintf.c: 142: }
  1526                           
  1527  06BF  0020               	movlb	0	; select bank0
  1528  06C0  084E               	movf	xvprintf@d,w
  1529                           
  1530                           ; Switch size 1, requested type "space"
  1531                           ; Number of cases is 7, Range of values is 66 to 88
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte           22    12 (average)
  1535                           ; direct_byte           55     9 (fixed)
  1536                           ; jumptable            263     9 (fixed)
  1537                           ;	Chosen strategy is simple_byte
  1538  06C1  3A42               	xorlw	66	; case 66
  1539  06C2  1903               	skipnz
  1540  06C3  2EAE               	goto	l1604
  1541  06C4  3A01               	xorlw	1	; case 67
  1542  06C5  1903               	skipnz
  1543  06C6  2EA1               	goto	l1602
  1544  06C7  3A07               	xorlw	7	; case 68
  1545  06C8  1903               	skipnz
  1546  06C9  2EB3               	goto	l1608
  1547  06CA  3A0B               	xorlw	11	; case 79
  1548  06CB  1903               	skipnz
  1549  06CC  2EB1               	goto	l1606
  1550  06CD  3A1C               	xorlw	28	; case 83
  1551  06CE  1903               	skipnz
  1552  06CF  2E57               	goto	l1582
  1553  06D0  3A06               	xorlw	6	; case 85
  1554  06D1  1903               	skipnz
  1555  06D2  2EB3               	goto	l1608
  1556  06D3  3A0D               	xorlw	13	; case 88
  1557  06D4  1903               	skipnz
  1558  06D5  2EB5               	goto	l1610
  1559  06D6  2EBA               	goto	l1612
  1560  06D7                     l147:	
  1561                           
  1562                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  1563  06D7  0020               	movlb	0	; select bank0
  1564  06D8  194A               	btfsc	xvprintf@f,2
  1565  06D9  2F0F               	goto	l1626
  1566  06DA  3044               	movlw	68
  1567  06DB  064E               	xorwf	xvprintf@d,w
  1568  06DC  1903               	btfsc	3,2
  1569  06DD  2EF1               	goto	l1622
  1570  06DE  0822               	movf	xvprintf@arp,w
  1571  06DF  0086               	movwf	6
  1572  06E0  0187               	clrf	7
  1573  06E1  0801               	movf	1,w
  1574  06E2  0084               	movwf	4
  1575  06E3  0185               	clrf	5
  1576  06E4  3002               	movlw	2
  1577  06E5  0781               	addwf	1,f
  1578  06E6  3F00               	moviw [0]fsr0
  1579  06E7  00A3               	movwf	??_xvprintf
  1580  06E8  3F01               	moviw [1]fsr0
  1581  06E9  00A4               	movwf	??_xvprintf+1
  1582  06EA  0823               	movf	??_xvprintf,w
  1583  06EB  00B7               	movwf	_xvprintf$165
  1584  06EC  0824               	movf	??_xvprintf+1,w
  1585  06ED  00B8               	movwf	_xvprintf$165+1
  1586  06EE  01B9               	clrf	_xvprintf$165+2
  1587  06EF  01BA               	clrf	_xvprintf$165+3
  1588  06F0  2F06               	goto	l1624
  1589  06F1                     l1622:	
  1590  06F1  0822               	movf	xvprintf@arp,w
  1591  06F2  0086               	movwf	6
  1592  06F3  0187               	clrf	7
  1593  06F4  0801               	movf	1,w
  1594  06F5  0084               	movwf	4
  1595  06F6  0185               	clrf	5
  1596  06F7  3002               	movlw	2
  1597  06F8  0781               	addwf	1,f
  1598  06F9  3F00               	moviw [0]fsr0
  1599  06FA  00A3               	movwf	??_xvprintf
  1600  06FB  3F01               	moviw [1]fsr0
  1601  06FC  00A4               	movwf	??_xvprintf+1
  1602  06FD  0823               	movf	??_xvprintf,w
  1603  06FE  00B7               	movwf	_xvprintf$165
  1604  06FF  0824               	movf	??_xvprintf+1,w
  1605  0700  00B8               	movwf	_xvprintf$165+1
  1606  0701  0D89               	rlf	9,f
  1607  0702  3B89               	subwfb	9,f
  1608  0703  0989               	comf	9,f
  1609  0704  00B9               	movwf	_xvprintf$165+2
  1610  0705  00BA               	movwf	_xvprintf$165+3
  1611  0706                     l1624:	
  1612  0706  083A               	movf	_xvprintf$165+3,w
  1613  0707  00C9               	movwf	xvprintf@v+3
  1614  0708  0839               	movf	_xvprintf$165+2,w
  1615  0709  00C8               	movwf	xvprintf@v+2
  1616  070A  0838               	movf	_xvprintf$165+1,w
  1617  070B  00C7               	movwf	xvprintf@v+1
  1618  070C  0837               	movf	_xvprintf$165,w
  1619  070D  00C6               	movwf	xvprintf@v
  1620  070E  2F1F               	goto	l1628
  1621  070F                     l1626:	
  1622  070F  0822               	movf	xvprintf@arp,w
  1623  0710  0086               	movwf	6
  1624  0711  0187               	clrf	7
  1625  0712  0801               	movf	1,w
  1626  0713  0084               	movwf	4
  1627  0714  0185               	clrf	5
  1628  0715  3004               	movlw	4
  1629  0716  0781               	addwf	1,f
  1630  0717  3F00               	moviw [0]fsr0
  1631  0718  00C6               	movwf	xvprintf@v
  1632  0719  3F01               	moviw [1]fsr0
  1633  071A  00C7               	movwf	xvprintf@v+1
  1634  071B  3F02               	moviw [2]fsr0
  1635  071C  00C8               	movwf	xvprintf@v+2
  1636  071D  3F03               	moviw [3]fsr0
  1637  071E  00C9               	movwf	xvprintf@v+3
  1638  071F                     l1628:	
  1639                           
  1640                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  1641  071F  3044               	movlw	68
  1642  0720  064E               	xorwf	xvprintf@d,w
  1643  0721  1903               	btfsc	3,2
  1644  0722  1FC9               	btfss	xvprintf@v+3,7
  1645  0723  2F30               	goto	l1634
  1646                           
  1647                           ;xprintf.c: 147: v = 0 - v;
  1648  0724  09C6               	comf	xvprintf@v,f
  1649  0725  09C7               	comf	xvprintf@v+1,f
  1650  0726  09C8               	comf	xvprintf@v+2,f
  1651  0727  09C9               	comf	xvprintf@v+3,f
  1652  0728  0AC6               	incf	xvprintf@v,f
  1653  0729  1903               	skipnz
  1654  072A  0AC7               	incf	xvprintf@v+1,f
  1655  072B  1903               	skipnz
  1656  072C  0AC8               	incf	xvprintf@v+2,f
  1657  072D  1903               	skipnz
  1658  072E  0AC9               	incf	xvprintf@v+3,f
  1659                           
  1660                           ;xprintf.c: 148: f |= 8;
  1661  072F  15CA               	bsf	xvprintf@f,3
  1662  0730                     l1634:	
  1663                           
  1664                           ;xprintf.c: 149: }
  1665                           ;xprintf.c: 150: i = 0;
  1666  0730  01CC               	clrf	xvprintf@i
  1667  0731  01CD               	clrf	xvprintf@i+1
  1668  0732                     l1636:	
  1669                           ;xprintf.c: 151: do {
  1670                           
  1671                           
  1672                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  1673  0732  0840               	movf	xvprintf@r,w
  1674  0733  00F0               	movwf	___llmod@divisor
  1675  0734  0841               	movf	xvprintf@r+1,w
  1676  0735  00F1               	movwf	___llmod@divisor+1
  1677  0736  01F2               	clrf	___llmod@divisor+2
  1678  0737  01F3               	clrf	___llmod@divisor+3
  1679  0738  0849               	movf	xvprintf@v+3,w
  1680  0739  00F7               	movwf	___llmod@dividend+3
  1681  073A  0848               	movf	xvprintf@v+2,w
  1682  073B  00F6               	movwf	___llmod@dividend+2
  1683  073C  0847               	movf	xvprintf@v+1,w
  1684  073D  00F5               	movwf	___llmod@dividend+1
  1685  073E  0846               	movf	xvprintf@v,w
  1686  073F  00F4               	movwf	___llmod@dividend
  1687  0740  3184  247C  3185   	fcall	___llmod
  1688  0743  0870               	movf	?___llmod,w
  1689  0744  0020               	movlb	0	; select bank0
  1690  0745  00A3               	movwf	??_xvprintf
  1691  0746  0823               	movf	??_xvprintf,w
  1692  0747  00CE               	movwf	xvprintf@d
  1693  0748  0840               	movf	xvprintf@r,w
  1694  0749  00F0               	movwf	___lldiv@divisor
  1695  074A  0841               	movf	xvprintf@r+1,w
  1696  074B  00F1               	movwf	___lldiv@divisor+1
  1697  074C  01F2               	clrf	___lldiv@divisor+2
  1698  074D  01F3               	clrf	___lldiv@divisor+3
  1699  074E  0849               	movf	xvprintf@v+3,w
  1700  074F  00F7               	movwf	___lldiv@dividend+3
  1701  0750  0848               	movf	xvprintf@v+2,w
  1702  0751  00F6               	movwf	___lldiv@dividend+2
  1703  0752  0847               	movf	xvprintf@v+1,w
  1704  0753  00F5               	movwf	___lldiv@dividend+1
  1705  0754  0846               	movf	xvprintf@v,w
  1706  0755  00F4               	movwf	___lldiv@dividend
  1707  0756  3185  2505  3185   	fcall	___lldiv
  1708  0759  0873               	movf	?___lldiv+3,w
  1709  075A  0020               	movlb	0	; select bank0
  1710  075B  00C9               	movwf	xvprintf@v+3
  1711  075C  0872               	movf	?___lldiv+2,w
  1712  075D  00C8               	movwf	xvprintf@v+2
  1713  075E  0871               	movf	?___lldiv+1,w
  1714  075F  00C7               	movwf	xvprintf@v+1
  1715  0760  0870               	movf	?___lldiv,w
  1716  0761  00C6               	movwf	xvprintf@v
  1717                           
  1718                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  1719  0762  300A               	movlw	10
  1720  0763  024E               	subwf	xvprintf@d,w
  1721  0764  1C03               	skipc
  1722  0765  2F74               	goto	l1650
  1723  0766  3078               	movlw	120
  1724  0767  064F               	xorwf	xvprintf@c,w
  1725  0768  1903               	btfsc	3,2
  1726  0769  2F6C               	goto	l1646
  1727  076A  3007               	movlw	7
  1728  076B  2F6D               	goto	L5
  1729  076C                     l1646:	
  1730  076C  3027               	movlw	39
  1731  076D                     L5:	
  1732  076D  00BB               	movwf	_xvprintf$166
  1733  076E  3000               	movlw	0
  1734  076F  00BC               	movwf	_xvprintf$166+1
  1735  0770  083B               	movf	_xvprintf$166,w
  1736  0771  00A3               	movwf	??_xvprintf
  1737  0772  0823               	movf	??_xvprintf,w
  1738  0773  07CE               	addwf	xvprintf@d,f
  1739  0774                     l1650:	
  1740                           
  1741                           ;xprintf.c: 154: s[i++] = d + '0';
  1742  0774  084E               	movf	xvprintf@d,w
  1743  0775  3E30               	addlw	48
  1744  0776  00A3               	movwf	??_xvprintf
  1745  0777  084C               	movf	xvprintf@i,w
  1746  0778  3E27               	addlw	(low (xvprintf@s| 0))& (0+255)
  1747  0779  0086               	movwf	6
  1748  077A  0187               	clrf	7
  1749  077B  0823               	movf	??_xvprintf,w
  1750  077C  0081               	movwf	1
  1751  077D  3001               	movlw	1
  1752  077E  07CC               	addwf	xvprintf@i,f
  1753  077F  3000               	movlw	0
  1754  0780  3DCD               	addwfc	xvprintf@i+1,f
  1755                           
  1756                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  1757  0781  0849               	movf	xvprintf@v+3,w
  1758  0782  0448               	iorwf	xvprintf@v+2,w
  1759  0783  0447               	iorwf	xvprintf@v+1,w
  1760  0784  0446               	iorwf	xvprintf@v,w
  1761  0785  1903               	skipnz
  1762  0786  2F8E               	goto	l170
  1763  0787  3000               	movlw	0
  1764  0788  024D               	subwf	xvprintf@i+1,w
  1765  0789  3010               	movlw	16
  1766  078A  1903               	skipnz
  1767  078B  024C               	subwf	xvprintf@i,w
  1768  078C  1C03               	skipc
  1769  078D  2F32               	goto	l1636
  1770  078E                     l170:	
  1771                           
  1772                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  1773  078E  1DCA               	btfss	xvprintf@f,3
  1774  078F  2F9C               	goto	l1662
  1775  0790  302D               	movlw	45
  1776  0791  00A3               	movwf	??_xvprintf
  1777  0792  084C               	movf	xvprintf@i,w
  1778  0793  3E27               	addlw	(low (xvprintf@s| 0))& (0+255)
  1779  0794  0086               	movwf	6
  1780  0795  0187               	clrf	7
  1781  0796  0823               	movf	??_xvprintf,w
  1782  0797  0081               	movwf	1
  1783  0798  3001               	movlw	1
  1784  0799  07CC               	addwf	xvprintf@i,f
  1785  079A  3000               	movlw	0
  1786  079B  3DCD               	addwfc	xvprintf@i+1,f
  1787  079C                     l1662:	
  1788                           
  1789                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  1790  079C  084D               	movf	xvprintf@i+1,w
  1791  079D  00C5               	movwf	xvprintf@j+1
  1792  079E  084C               	movf	xvprintf@i,w
  1793  079F  00C4               	movwf	xvprintf@j
  1794  07A0  184A               	btfsc	xvprintf@f,0
  1795  07A1  2FA4               	goto	l1668
  1796  07A2  3020               	movlw	32
  1797  07A3  2FA5               	goto	L6
  1798  07A4                     l1668:	
  1799  07A4  3030               	movlw	48
  1800  07A5                     L6:	
  1801  07A5  00BD               	movwf	_xvprintf$167
  1802  07A6  3000               	movlw	0
  1803  07A7  00BE               	movwf	_xvprintf$167+1
  1804  07A8  083D               	movf	_xvprintf$167,w
  1805  07A9  00A3               	movwf	??_xvprintf
  1806  07AA  0823               	movf	??_xvprintf,w
  1807  07AB  00CE               	movwf	xvprintf@d
  1808                           
  1809                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  1810  07AC  2FB1               	goto	l1672
  1811  07AD                     l1670:	
  1812  07AD  084E               	movf	xvprintf@d,w
  1813  07AE  3184  2415  3185   	fcall	_xputc
  1814  07B1                     l1672:	
  1815  07B1  0020               	movlb	0	; select bank0
  1816  07B2  18CA               	btfsc	xvprintf@f,1
  1817  07B3  2FC3               	goto	l1676
  1818  07B4  0845               	movf	xvprintf@j+1,w
  1819  07B5  00A4               	movwf	??_xvprintf+1
  1820  07B6  0844               	movf	xvprintf@j,w
  1821  07B7  00A3               	movwf	??_xvprintf
  1822  07B8  0AC4               	incf	xvprintf@j,f
  1823  07B9  1903               	skipnz
  1824  07BA  0AC5               	incf	xvprintf@j+1,f
  1825  07BB  0843               	movf	xvprintf@w+1,w
  1826  07BC  0224               	subwf	??_xvprintf+1,w
  1827  07BD  1D03               	skipz
  1828  07BE  2FC1               	goto	u1395
  1829  07BF  0842               	movf	xvprintf@w,w
  1830  07C0  0223               	subwf	??_xvprintf,w
  1831  07C1                     u1395:	
  1832  07C1  1C03               	skipc
  1833  07C2  2FAD               	goto	l1670
  1834  07C3                     l1676:	
  1835                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  1836                           
  1837  07C3  3001               	movlw	1
  1838  07C4  02CC               	subwf	xvprintf@i,f
  1839  07C5  3000               	movlw	0
  1840  07C6  3BCD               	subwfb	xvprintf@i+1,f
  1841  07C7  084C               	movf	xvprintf@i,w
  1842  07C8  3E27               	addlw	(low (xvprintf@s| 0))& (0+255)
  1843  07C9  0086               	movwf	6
  1844  07CA  0187               	clrf	7
  1845  07CB  0801               	movf	1,w
  1846  07CC  3184  2415  3185   	fcall	_xputc
  1847  07CF  0020               	movlb	0	; select bank0
  1848  07D0  084C               	movf	xvprintf@i,w
  1849  07D1  044D               	iorwf	xvprintf@i+1,w
  1850  07D2  1903               	btfsc	3,2
  1851  07D3  2FD9               	goto	l1682
  1852  07D4  2FC3               	goto	l1676
  1853  07D5                     l1680:	
  1854                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  1855                           
  1856  07D5  3020               	movlw	32
  1857  07D6  3184  2415  3185   	fcall	_xputc
  1858  07D9                     l1682:	
  1859  07D9  0020               	movlb	0	; select bank0
  1860  07DA  0845               	movf	xvprintf@j+1,w
  1861  07DB  00A4               	movwf	??_xvprintf+1
  1862  07DC  0844               	movf	xvprintf@j,w
  1863  07DD  00A3               	movwf	??_xvprintf
  1864  07DE  0AC4               	incf	xvprintf@j,f
  1865  07DF  1903               	skipnz
  1866  07E0  0AC5               	incf	xvprintf@j+1,f
  1867  07E1  0843               	movf	xvprintf@w+1,w
  1868  07E2  0224               	subwf	??_xvprintf+1,w
  1869  07E3  1D03               	skipz
  1870  07E4  2FE7               	goto	u1415
  1871  07E5  0842               	movf	xvprintf@w,w
  1872  07E6  0223               	subwf	??_xvprintf,w
  1873  07E7                     u1415:	
  1874  07E7  1803               	btfsc	3,0
  1875  07E8  2DC0               	goto	l114
  1876  07E9  2FD5               	goto	l1680
  1877  07EA                     __end_of_xvprintf:	
  1878                           ;xprintf.c: 161: }
  1879                           
  1880                           
  1881                           	psect	text3
  1882  037C                     __ptext3:	
  1883 ;; *************** function _xputs *****************
  1884 ;; Defined at:
  1885 ;;		line 44 in file "xprintf.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  str             1    wreg     PTR const unsigned char 
  1888 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  str             1    7[COMMON] PTR const unsigned char 
  1891 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1901 ;;      Params:         0       0       0       0       0       0
  1902 ;;      Locals:         1       0       0       0       0       0
  1903 ;;      Temps:          1       0       0       0       0       0
  1904 ;;      Totals:         2       0       0       0       0       0
  1905 ;;Total ram usage:        2 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    3
  1908 ;; This function calls:
  1909 ;;		_xputc
  1910 ;; This function is called by:
  1911 ;;		_xvprintf
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _xputs
  1917  037C                     _xputs:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1921                           ;xputs@str stored from wreg
  1922  037C  00F7               	movwf	xputs@str
  1923  037D                     l1454:	
  1924                           ;xprintf.c: 48: while (*str)
  1925                           
  1926  037D  0877               	movf	xputs@str,w
  1927  037E  0086               	movwf	6
  1928  037F  0187               	clrf	7
  1929  0380  0801               	movf	1,w
  1930  0381  1903               	btfsc	3,2
  1931  0382  0008               	return
  1932                           
  1933                           ;xprintf.c: 49: xputc(*str++);
  1934  0383  0877               	movf	xputs@str,w
  1935  0384  0086               	movwf	6
  1936  0385  0187               	clrf	7
  1937  0386  0801               	movf	1,w
  1938  0387  3184  2415  3183   	fcall	_xputc
  1939  038A  3001               	movlw	1
  1940  038B  00F6               	movwf	??_xputs
  1941  038C  0876               	movf	??_xputs,w
  1942  038D  07F7               	addwf	xputs@str,f
  1943  038E  2B7D               	goto	l1454
  1944  038F                     __end_of_xputs:	
  1945                           
  1946                           	psect	text4
  1947  0415                     __ptext4:	
  1948 ;; *************** function _xputc *****************
  1949 ;; Defined at:
  1950 ;;		line 26 in file "xprintf.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  c               1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  c               1    5[COMMON] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1964 ;;      Params:         0       0       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0       0
  1966 ;;      Temps:          1       0       0       0       0       0
  1967 ;;      Totals:         2       0       0       0       0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		Absolute function
  1973 ;;		_LCD_Put
  1974 ;; This function is called by:
  1975 ;;		_xputs
  1976 ;;		_xvprintf
  1977 ;;		_xfputs
  1978 ;;		_put_dump
  1979 ;;		_xgets
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _xputc
  1985  0415                     _xputc:	
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1989                           ;xputc@c stored from wreg
  1990  0415  00F5               	movwf	xputc@c
  1991  0416  300A               	movlw	10
  1992  0417  0675               	xorwf	xputc@c,w
  1993  0418  1D03               	btfss	3,2
  1994  0419  2C24               	goto	l1436
  1995  041A  301E               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1996  041B  00F4               	movwf	??_xputc
  1997  041C  0874               	movf	??_xputc,w
  1998  041D  00F3               	movwf	LCD_Put@word
  1999  041E  0020               	movlb	0	; select bank0
  2000  041F  0868               	movf	_xfunc_out+1,w
  2001  0420  008A               	movwf	10
  2002  0421  0867               	movf	_xfunc_out,w
  2003  0422  000A               	callw
  2004  0423  3184               	pagesel	$
  2005  0424                     l1436:	
  2006                           
  2007                           ;xprintf.c: 30: if (outptr) {
  2008  0424  0020               	movlb	0	; select bank0
  2009  0425  0869               	movf	_outptr,w
  2010  0426  1903               	btfsc	3,2
  2011  0427  2C34               	goto	l1444
  2012                           
  2013                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  2014  0428  0875               	movf	xputc@c,w
  2015  0429  00F4               	movwf	??_xputc
  2016  042A  0869               	movf	_outptr,w
  2017  042B  0086               	movwf	6
  2018  042C  0187               	clrf	7
  2019  042D  0874               	movf	??_xputc,w
  2020  042E  0081               	movwf	1
  2021  042F  3001               	movlw	1
  2022  0430  00F4               	movwf	??_xputc
  2023  0431  0874               	movf	??_xputc,w
  2024  0432  07E9               	addwf	_outptr,f
  2025                           
  2026                           ;xprintf.c: 32: return;
  2027  0433  0008               	return
  2028  0434                     l1444:	
  2029                           
  2030                           ;xprintf.c: 33: }
  2031                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  2032  0434  0867               	movf	_xfunc_out,w
  2033  0435  0468               	iorwf	_xfunc_out+1,w
  2034  0436  1903               	btfsc	3,2
  2035  0437  0008               	return
  2036  0438  0875               	movf	xputc@c,w
  2037  0439  00F4               	movwf	??_xputc
  2038  043A  0874               	movf	??_xputc,w
  2039  043B  00F3               	movwf	LCD_Put@word
  2040  043C  0868               	movf	_xfunc_out+1,w
  2041  043D  008A               	movwf	10
  2042  043E  0867               	movf	_xfunc_out,w
  2043  043F  000A               	callw
  2044  0440  3184               	pagesel	$
  2045  0441  0008               	return
  2046  0442                     __end_of_xputc:	
  2047                           
  2048                           	psect	text5
  2049  0357                     __ptext5:	
  2050 ;; *************** function _LCD_Put *****************
  2051 ;; Defined at:
  2052 ;;		line 54 in file "LCD.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  word            1    3[COMMON] char 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2066 ;;      Params:         1       0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0
  2069 ;;      Totals:         1       0       0       0       0       0
  2070 ;;Total ram usage:        1 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    1
  2073 ;; This function calls:
  2074 ;;		_LCD_WriteData
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;;		_xputc
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _LCD_Put
  2083  0357                     _LCD_Put:	
  2084                           
  2085                           ;LCD.c: 56: RA4 = 1;
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2089  0357  0020               	movlb	0	; select bank0
  2090  0358  160C               	bsf	12,4	;volatile
  2091                           
  2092                           ;LCD.c: 57: LCD_WriteData(word);
  2093  0359  0873               	movf	LCD_Put@word,w
  2094  035A  3184  2442         	fcall	_LCD_WriteData
  2095  035C  0008               	return
  2096  035D                     __end_of_LCD_Put:	
  2097                           
  2098                           	psect	text6
  2099  03D1                     __ptext6:	
  2100 ;; *************** function ___wmul *****************
  2101 ;; Defined at:
  2102 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  multiplier      2    0[COMMON] unsigned int 
  2105 ;;  multiplicand    2    2[COMMON] unsigned int 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  product         2    4[COMMON] unsigned int 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2    0[COMMON] unsigned int 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2117 ;;      Params:         4       0       0       0       0       0
  2118 ;;      Locals:         2       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0
  2120 ;;      Totals:         6       0       0       0       0       0
  2121 ;;Total ram usage:        6 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_xvprintf
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function ___wmul
  2132  03D1                     ___wmul:	
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2136  03D1  01F4               	clrf	___wmul@product
  2137  03D2  01F5               	clrf	___wmul@product+1
  2138  03D3                     l1458:	
  2139  03D3  1C70               	btfss	___wmul@multiplier,0
  2140  03D4  2BD9               	goto	l410
  2141  03D5  0872               	movf	___wmul@multiplicand,w
  2142  03D6  07F4               	addwf	___wmul@product,f
  2143  03D7  0873               	movf	___wmul@multiplicand+1,w
  2144  03D8  3DF5               	addwfc	___wmul@product+1,f
  2145  03D9                     l410:	
  2146  03D9  3001               	movlw	1
  2147  03DA                     u985:	
  2148  03DA  35F2               	lslf	___wmul@multiplicand,f
  2149  03DB  0DF3               	rlf	___wmul@multiplicand+1,f
  2150  03DC  0B89               	decfsz	9,f
  2151  03DD  2BDA               	goto	u985
  2152  03DE  3001               	movlw	1
  2153  03DF                     u995:	
  2154  03DF  36F1               	lsrf	___wmul@multiplier+1,f
  2155  03E0  0CF0               	rrf	___wmul@multiplier,f
  2156  03E1  0B89               	decfsz	9,f
  2157  03E2  2BDF               	goto	u995
  2158  03E3  0870               	movf	___wmul@multiplier,w
  2159  03E4  0471               	iorwf	___wmul@multiplier+1,w
  2160  03E5  1D03               	btfss	3,2
  2161  03E6  2BD3               	goto	l1458
  2162  03E7  0875               	movf	___wmul@product+1,w
  2163  03E8  00F1               	movwf	?___wmul+1
  2164  03E9  0874               	movf	___wmul@product,w
  2165  03EA  00F0               	movwf	?___wmul
  2166  03EB  0008               	return
  2167  03EC                     __end_of___wmul:	
  2168                           
  2169                           	psect	text7
  2170  047C                     __ptext7:	
  2171 ;; *************** function ___llmod *****************
  2172 ;; Defined at:
  2173 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  divisor         4    0[COMMON] unsigned long 
  2176 ;;  dividend        4    4[COMMON] unsigned long 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  counter         1    9[COMMON] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  4    0[COMMON] unsigned long 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2188 ;;      Params:         8       0       0       0       0       0
  2189 ;;      Locals:         1       0       0       0       0       0
  2190 ;;      Temps:          1       0       0       0       0       0
  2191 ;;      Totals:        10       0       0       0       0       0
  2192 ;;Total ram usage:       10 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_xvprintf
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function ___llmod
  2203  047C                     ___llmod:	
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2207  047C  0873               	movf	___llmod@divisor+3,w
  2208  047D  0472               	iorwf	___llmod@divisor+2,w
  2209  047E  0471               	iorwf	___llmod@divisor+1,w
  2210  047F  0470               	iorwf	___llmod@divisor,w
  2211  0480  1903               	skipnz
  2212  0481  2CB5               	goto	l1510
  2213  0482  01F9               	clrf	___llmod@counter
  2214  0483  0AF9               	incf	___llmod@counter,f
  2215  0484                     l1500:	
  2216  0484  1BF3               	btfsc	___llmod@divisor+3,7
  2217  0485  2C92               	goto	l1502
  2218  0486  3001               	movlw	1
  2219  0487                     u1095:	
  2220  0487  35F0               	lslf	___llmod@divisor,f
  2221  0488  0DF1               	rlf	___llmod@divisor+1,f
  2222  0489  0DF2               	rlf	___llmod@divisor+2,f
  2223  048A  0DF3               	rlf	___llmod@divisor+3,f
  2224  048B  0B89               	decfsz	9,f
  2225  048C  2C87               	goto	u1095
  2226  048D  3001               	movlw	1
  2227  048E  00F8               	movwf	??___llmod
  2228  048F  0878               	movf	??___llmod,w
  2229  0490  07F9               	addwf	___llmod@counter,f
  2230  0491  2C84               	goto	l1500
  2231  0492                     l1502:	
  2232  0492  0873               	movf	___llmod@divisor+3,w
  2233  0493  0277               	subwf	___llmod@dividend+3,w
  2234  0494  1D03               	skipz
  2235  0495  2CA0               	goto	u1115
  2236  0496  0872               	movf	___llmod@divisor+2,w
  2237  0497  0276               	subwf	___llmod@dividend+2,w
  2238  0498  1D03               	skipz
  2239  0499  2CA0               	goto	u1115
  2240  049A  0871               	movf	___llmod@divisor+1,w
  2241  049B  0275               	subwf	___llmod@dividend+1,w
  2242  049C  1D03               	skipz
  2243  049D  2CA0               	goto	u1115
  2244  049E  0870               	movf	___llmod@divisor,w
  2245  049F  0274               	subwf	___llmod@dividend,w
  2246  04A0                     u1115:	
  2247  04A0  1C03               	skipc
  2248  04A1  2CAA               	goto	l1506
  2249  04A2  0870               	movf	___llmod@divisor,w
  2250  04A3  02F4               	subwf	___llmod@dividend,f
  2251  04A4  0871               	movf	___llmod@divisor+1,w
  2252  04A5  3BF5               	subwfb	___llmod@dividend+1,f
  2253  04A6  0872               	movf	___llmod@divisor+2,w
  2254  04A7  3BF6               	subwfb	___llmod@dividend+2,f
  2255  04A8  0873               	movf	___llmod@divisor+3,w
  2256  04A9  3BF7               	subwfb	___llmod@dividend+3,f
  2257  04AA                     l1506:	
  2258  04AA  3001               	movlw	1
  2259  04AB                     u1125:	
  2260  04AB  36F3               	lsrf	___llmod@divisor+3,f
  2261  04AC  0CF2               	rrf	___llmod@divisor+2,f
  2262  04AD  0CF1               	rrf	___llmod@divisor+1,f
  2263  04AE  0CF0               	rrf	___llmod@divisor,f
  2264  04AF  0B89               	decfsz	9,f
  2265  04B0  2CAB               	goto	u1125
  2266  04B1  3001               	movlw	1
  2267  04B2  02F9               	subwf	___llmod@counter,f
  2268  04B3  1D03               	btfss	3,2
  2269  04B4  2C92               	goto	l1502
  2270  04B5                     l1510:	
  2271  04B5  0877               	movf	___llmod@dividend+3,w
  2272  04B6  00F3               	movwf	?___llmod+3
  2273  04B7  0876               	movf	___llmod@dividend+2,w
  2274  04B8  00F2               	movwf	?___llmod+2
  2275  04B9  0875               	movf	___llmod@dividend+1,w
  2276  04BA  00F1               	movwf	?___llmod+1
  2277  04BB  0874               	movf	___llmod@dividend,w
  2278  04BC  00F0               	movwf	?___llmod
  2279  04BD  0008               	return
  2280  04BE                     __end_of___llmod:	
  2281                           
  2282                           	psect	text8
  2283  0505                     __ptext8:	
  2284 ;; *************** function ___lldiv *****************
  2285 ;; Defined at:
  2286 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  divisor         4    0[COMMON] unsigned long 
  2289 ;;  dividend        4    4[COMMON] unsigned long 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  quotient        4    9[COMMON] unsigned long 
  2292 ;;  counter         1   13[COMMON] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  4    0[COMMON] unsigned long 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2302 ;;      Params:         8       0       0       0       0       0
  2303 ;;      Locals:         5       0       0       0       0       0
  2304 ;;      Temps:          1       0       0       0       0       0
  2305 ;;      Totals:        14       0       0       0       0       0
  2306 ;;Total ram usage:       14 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_xvprintf
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function ___lldiv
  2317  0505                     ___lldiv:	
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2321  0505  3000               	movlw	0
  2322  0506  00FC               	movwf	___lldiv@quotient+3
  2323  0507  3000               	movlw	0
  2324  0508  00FB               	movwf	___lldiv@quotient+2
  2325  0509  3000               	movlw	0
  2326  050A  00FA               	movwf	___lldiv@quotient+1
  2327  050B  3000               	movlw	0
  2328  050C  00F9               	movwf	___lldiv@quotient
  2329  050D  0873               	movf	___lldiv@divisor+3,w
  2330  050E  0472               	iorwf	___lldiv@divisor+2,w
  2331  050F  0471               	iorwf	___lldiv@divisor+1,w
  2332  0510  0470               	iorwf	___lldiv@divisor,w
  2333  0511  1903               	skipnz
  2334  0512  2D4E               	goto	l1490
  2335  0513  01FD               	clrf	___lldiv@counter
  2336  0514  0AFD               	incf	___lldiv@counter,f
  2337  0515                     l1476:	
  2338  0515  1BF3               	btfsc	___lldiv@divisor+3,7
  2339  0516  2D23               	goto	l1478
  2340  0517  3001               	movlw	1
  2341  0518                     u1025:	
  2342  0518  35F0               	lslf	___lldiv@divisor,f
  2343  0519  0DF1               	rlf	___lldiv@divisor+1,f
  2344  051A  0DF2               	rlf	___lldiv@divisor+2,f
  2345  051B  0DF3               	rlf	___lldiv@divisor+3,f
  2346  051C  0B89               	decfsz	9,f
  2347  051D  2D18               	goto	u1025
  2348  051E  3001               	movlw	1
  2349  051F  00F8               	movwf	??___lldiv
  2350  0520  0878               	movf	??___lldiv,w
  2351  0521  07FD               	addwf	___lldiv@counter,f
  2352  0522  2D15               	goto	l1476
  2353  0523                     l1478:	
  2354  0523  3001               	movlw	1
  2355  0524                     u1045:	
  2356  0524  35F9               	lslf	___lldiv@quotient,f
  2357  0525  0DFA               	rlf	___lldiv@quotient+1,f
  2358  0526  0DFB               	rlf	___lldiv@quotient+2,f
  2359  0527  0DFC               	rlf	___lldiv@quotient+3,f
  2360  0528  0B89               	decfsz	9,f
  2361  0529  2D24               	goto	u1045
  2362  052A  0873               	movf	___lldiv@divisor+3,w
  2363  052B  0277               	subwf	___lldiv@dividend+3,w
  2364  052C  1D03               	skipz
  2365  052D  2D38               	goto	u1055
  2366  052E  0872               	movf	___lldiv@divisor+2,w
  2367  052F  0276               	subwf	___lldiv@dividend+2,w
  2368  0530  1D03               	skipz
  2369  0531  2D38               	goto	u1055
  2370  0532  0871               	movf	___lldiv@divisor+1,w
  2371  0533  0275               	subwf	___lldiv@dividend+1,w
  2372  0534  1D03               	skipz
  2373  0535  2D38               	goto	u1055
  2374  0536  0870               	movf	___lldiv@divisor,w
  2375  0537  0274               	subwf	___lldiv@dividend,w
  2376  0538                     u1055:	
  2377  0538  1C03               	skipc
  2378  0539  2D43               	goto	l1486
  2379  053A  0870               	movf	___lldiv@divisor,w
  2380  053B  02F4               	subwf	___lldiv@dividend,f
  2381  053C  0871               	movf	___lldiv@divisor+1,w
  2382  053D  3BF5               	subwfb	___lldiv@dividend+1,f
  2383  053E  0872               	movf	___lldiv@divisor+2,w
  2384  053F  3BF6               	subwfb	___lldiv@dividend+2,f
  2385  0540  0873               	movf	___lldiv@divisor+3,w
  2386  0541  3BF7               	subwfb	___lldiv@dividend+3,f
  2387  0542  1479               	bsf	___lldiv@quotient,0
  2388  0543                     l1486:	
  2389  0543  3001               	movlw	1
  2390  0544                     u1065:	
  2391  0544  36F3               	lsrf	___lldiv@divisor+3,f
  2392  0545  0CF2               	rrf	___lldiv@divisor+2,f
  2393  0546  0CF1               	rrf	___lldiv@divisor+1,f
  2394  0547  0CF0               	rrf	___lldiv@divisor,f
  2395  0548  0B89               	decfsz	9,f
  2396  0549  2D44               	goto	u1065
  2397  054A  3001               	movlw	1
  2398  054B  02FD               	subwf	___lldiv@counter,f
  2399  054C  1D03               	btfss	3,2
  2400  054D  2D23               	goto	l1478
  2401  054E                     l1490:	
  2402  054E  087C               	movf	___lldiv@quotient+3,w
  2403  054F  00F3               	movwf	?___lldiv+3
  2404  0550  087B               	movf	___lldiv@quotient+2,w
  2405  0551  00F2               	movwf	?___lldiv+2
  2406  0552  087A               	movf	___lldiv@quotient+1,w
  2407  0553  00F1               	movwf	?___lldiv+1
  2408  0554  0879               	movf	___lldiv@quotient,w
  2409  0555  00F0               	movwf	?___lldiv
  2410  0556  0008               	return
  2411  0557                     __end_of___lldiv:	
  2412                           
  2413                           	psect	text9
  2414  0557                     __ptext9:	
  2415 ;; *************** function _LCD_Init *****************
  2416 ;; Defined at:
  2417 ;;		line 28 in file "LCD.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2431 ;;      Params:         0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0
  2433 ;;      Temps:          2       0       0       0       0       0
  2434 ;;      Totals:         2       0       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    2
  2438 ;; This function calls:
  2439 ;;		_LCD_DisplayClear
  2440 ;;		_LCD_WriteData
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _LCD_Init
  2448  0557                     _LCD_Init:	
  2449                           
  2450                           ;LCD.c: 30: RA4 = 0;
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2454  0557  0020               	movlb	0	; select bank0
  2455  0558  120C               	bcf	12,4	;volatile
  2456                           
  2457                           ;LCD.c: 31: RA3 = 0;
  2458  0559  118C               	bcf	12,3	;volatile
  2459                           
  2460                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2461  055A  3002               	movlw	2
  2462  055B  00F5               	movwf	??_LCD_Init+1
  2463  055C  3038               	movlw	56
  2464  055D  00F4               	movwf	??_LCD_Init
  2465  055E  30AD               	movlw	173
  2466  055F                     u1677:	
  2467  055F  0B89               	decfsz	9,f
  2468  0560  2D5F               	goto	u1677
  2469  0561  0BF4               	decfsz	??_LCD_Init,f
  2470  0562  2D5F               	goto	u1677
  2471  0563  0BF5               	decfsz	??_LCD_Init+1,f
  2472  0564  2D5F               	goto	u1677
  2473  0565  0000               	nop
  2474                           
  2475                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2476  0566  3003               	movlw	3
  2477  0567  0020               	movlb	0	; select bank0
  2478  0568  008D               	movwf	13	;volatile
  2479                           
  2480                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2481  0569  158C               	bsf	12,3	;volatile
  2482  056A  3200               	nop2	;2 cycle nop
  2483  056B  3200               	nop2	;2 cycle nop
  2484  056C  3200               	nop2	;2 cycle nop
  2485  056D  3200               	nop2	;2 cycle nop
  2486  056E  0020               	movlb	0	; select bank0
  2487  056F  118C               	bcf	12,3	;volatile
  2488  0570  3200               	nop2	;2 cycle nop
  2489  0571  3200               	nop2	;2 cycle nop
  2490  0572  3200               	nop2	;2 cycle nop
  2491  0573  3200               	nop2	;2 cycle nop
  2492                           
  2493                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2494  0574  3034               	movlw	52
  2495  0575  00F4               	movwf	??_LCD_Init
  2496  0576  30F2               	movlw	242
  2497  0577                     u1687:	
  2498  0577  0B89               	decfsz	9,f
  2499  0578  2D77               	goto	u1687
  2500  0579  0BF4               	decfsz	??_LCD_Init,f
  2501  057A  2D77               	goto	u1687
  2502                           
  2503                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2504  057B  0020               	movlb	0	; select bank0
  2505  057C  158C               	bsf	12,3	;volatile
  2506  057D  3200               	nop2	;2 cycle nop
  2507  057E  3200               	nop2	;2 cycle nop
  2508  057F  3200               	nop2	;2 cycle nop
  2509  0580  3200               	nop2	;2 cycle nop
  2510  0581  0020               	movlb	0	; select bank0
  2511  0582  118C               	bcf	12,3	;volatile
  2512  0583  3200               	nop2	;2 cycle nop
  2513  0584  3200               	nop2	;2 cycle nop
  2514  0585  3200               	nop2	;2 cycle nop
  2515  0586  3200               	nop2	;2 cycle nop
  2516                           
  2517                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2518  0587  3005               	movlw	5
  2519  0588  00F4               	movwf	??_LCD_Init
  2520  0589  3026               	movlw	38
  2521  058A                     u1697:	
  2522  058A  0B89               	decfsz	9,f
  2523  058B  2D8A               	goto	u1697
  2524  058C  0BF4               	decfsz	??_LCD_Init,f
  2525  058D  2D8A               	goto	u1697
  2526  058E  3200               	nop2
  2527                           
  2528                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2529  058F  0020               	movlb	0	; select bank0
  2530  0590  158C               	bsf	12,3	;volatile
  2531  0591  3200               	nop2	;2 cycle nop
  2532  0592  3200               	nop2	;2 cycle nop
  2533  0593  3200               	nop2	;2 cycle nop
  2534  0594  3200               	nop2	;2 cycle nop
  2535  0595  0020               	movlb	0	; select bank0
  2536  0596  118C               	bcf	12,3	;volatile
  2537  0597  3200               	nop2	;2 cycle nop
  2538  0598  3200               	nop2	;2 cycle nop
  2539  0599  3200               	nop2	;2 cycle nop
  2540  059A  3200               	nop2	;2 cycle nop
  2541                           
  2542                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2543  059B  3005               	movlw	5
  2544  059C  00F4               	movwf	??_LCD_Init
  2545  059D  3026               	movlw	38
  2546  059E                     u1707:	
  2547  059E  0B89               	decfsz	9,f
  2548  059F  2D9E               	goto	u1707
  2549  05A0  0BF4               	decfsz	??_LCD_Init,f
  2550  05A1  2D9E               	goto	u1707
  2551  05A2  3200               	nop2
  2552                           
  2553                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2554  05A3  3002               	movlw	2
  2555  05A4  0020               	movlb	0	; select bank0
  2556  05A5  008D               	movwf	13	;volatile
  2557                           
  2558                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2559  05A6  158C               	bsf	12,3	;volatile
  2560  05A7  3200               	nop2	;2 cycle nop
  2561  05A8  3200               	nop2	;2 cycle nop
  2562  05A9  3200               	nop2	;2 cycle nop
  2563  05AA  3200               	nop2	;2 cycle nop
  2564  05AB  0020               	movlb	0	; select bank0
  2565  05AC  118C               	bcf	12,3	;volatile
  2566  05AD  3200               	nop2	;2 cycle nop
  2567  05AE  3200               	nop2	;2 cycle nop
  2568  05AF  3200               	nop2	;2 cycle nop
  2569  05B0  3200               	nop2	;2 cycle nop
  2570                           
  2571                           ;LCD.c: 44: LCD_WriteData(0x28);
  2572  05B1  3028               	movlw	40
  2573  05B2  3184  2442  3185   	fcall	_LCD_WriteData
  2574                           
  2575                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2576  05B5  300C               	movlw	12
  2577  05B6  3184  2442  3185   	fcall	_LCD_WriteData
  2578                           
  2579                           ;LCD.c: 46: LCD_DisplayClear();
  2580  05B9  3183  235D  3185   	fcall	_LCD_DisplayClear
  2581                           
  2582                           ;LCD.c: 47: LCD_WriteData(0x06);
  2583  05BC  3006               	movlw	6
  2584  05BD  3184  2442         	fcall	_LCD_WriteData
  2585  05BF  0008               	return
  2586  05C0                     __end_of_LCD_Init:	
  2587                           
  2588                           	psect	text10
  2589  035D                     __ptext10:	
  2590 ;; *************** function _LCD_DisplayClear *****************
  2591 ;; Defined at:
  2592 ;;		line 64 in file "LCD.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2606 ;;      Params:         0       0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0
  2608 ;;      Temps:          1       0       0       0       0       0
  2609 ;;      Totals:         1       0       0       0       0       0
  2610 ;;Total ram usage:        1 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		_LCD_WriteData
  2615 ;; This function is called by:
  2616 ;;		_LCD_Init
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _LCD_DisplayClear
  2622  035D                     _LCD_DisplayClear:	
  2623                           
  2624                           ;LCD.c: 66: RA4 = 0;
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2628  035D  0020               	movlb	0	; select bank0
  2629  035E  120C               	bcf	12,4	;volatile
  2630                           
  2631                           ;LCD.c: 67: LCD_WriteData(0x01);
  2632  035F  3001               	movlw	1
  2633  0360  3184  2442  3183   	fcall	_LCD_WriteData
  2634                           
  2635                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  2636  0363  3015               	movlw	21
  2637  0364  00F3               	movwf	??_LCD_DisplayClear
  2638  0365  30C6               	movlw	198
  2639  0366                     u1717:	
  2640  0366  0B89               	decfsz	9,f
  2641  0367  2B66               	goto	u1717
  2642  0368  0BF3               	decfsz	??_LCD_DisplayClear,f
  2643  0369  2B66               	goto	u1717
  2644  036A  3200               	nop2
  2645  036B  0008               	return
  2646  036C                     __end_of_LCD_DisplayClear:	
  2647                           
  2648                           	psect	text11
  2649  03A4                     __ptext11:	
  2650 ;; *************** function _LCD_CursorPosition *****************
  2651 ;; Defined at:
  2652 ;;		line 86 in file "LCD.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  tx              1    wreg     unsigned char 
  2655 ;;  ty              1    3[COMMON] unsigned char 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  tx              1    5[COMMON] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2667 ;;      Params:         1       0       0       0       0       0
  2668 ;;      Locals:         1       0       0       0       0       0
  2669 ;;      Temps:          1       0       0       0       0       0
  2670 ;;      Totals:         3       0       0       0       0       0
  2671 ;;Total ram usage:        3 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		_LCD_WriteData
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _LCD_CursorPosition
  2683  03A4                     _LCD_CursorPosition:	
  2684                           
  2685                           ;incstack = 0
  2686                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  2687                           ;LCD_CursorPosition@tx stored from wreg
  2688  03A4  00F5               	movwf	LCD_CursorPosition@tx
  2689                           
  2690                           ;LCD.c: 88: RA4 = 0;
  2691  03A5  0020               	movlb	0	; select bank0
  2692  03A6  120C               	bcf	12,4	;volatile
  2693                           
  2694                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  2695  03A7  0873               	movf	LCD_CursorPosition@ty,w
  2696  03A8  00F4               	movwf	??_LCD_CursorPosition
  2697  03A9  3005               	movlw	5
  2698  03AA                     u1435:	
  2699  03AA  35F4               	lslf	??_LCD_CursorPosition,f
  2700  03AB  3EFF               	addlw	-1
  2701  03AC  1D03               	skipz
  2702  03AD  2BAA               	goto	u1435
  2703  03AE  3574               	lslf	??_LCD_CursorPosition,w
  2704  03AF  0475               	iorwf	LCD_CursorPosition@tx,w
  2705  03B0  3880               	iorlw	-128
  2706  03B1  3184  2442  3183   	fcall	_LCD_WriteData
  2707                           
  2708                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2709  03B4  306A               	movlw	106
  2710  03B5                     u1727:	
  2711  03B5  0B89               	decfsz	9,f
  2712  03B6  2BB5               	goto	u1727
  2713  03B7  3200               	nop2
  2714  03B8  0008               	return
  2715  03B9                     __end_of_LCD_CursorPosition:	
  2716                           
  2717                           	psect	text12
  2718  0442                     __ptext12:	
  2719 ;; *************** function _LCD_WriteData *****************
  2720 ;; Defined at:
  2721 ;;		line 15 in file "LCD.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  point           1    wreg     char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  point           1    2[COMMON] char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2735 ;;      Params:         0       0       0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0       0
  2737 ;;      Temps:          2       0       0       0       0       0
  2738 ;;      Totals:         3       0       0       0       0       0
  2739 ;;Total ram usage:        3 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_LCD_Init
  2745 ;;		_LCD_Put
  2746 ;;		_LCD_DisplayClear
  2747 ;;		_LCD_CursorPosition
  2748 ;;		_LCD_CursorHome
  2749 ;;		_LCD_CursorShift
  2750 ;;		_LCD_DispShift
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _LCD_WriteData
  2756  0442                     _LCD_WriteData:	
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2760                           ;LCD_WriteData@point stored from wreg
  2761  0442  00F2               	movwf	LCD_WriteData@point
  2762                           
  2763                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2764  0443  30D5               	movlw	213
  2765  0444                     u1737:	
  2766  0444  0B89               	decfsz	9,f
  2767  0445  2C44               	goto	u1737
  2768  0446  0000               	nop
  2769                           
  2770                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2771  0447  0872               	movf	LCD_WriteData@point,w
  2772  0448  00F0               	movwf	??_LCD_WriteData
  2773  0449  3004               	movlw	4
  2774  044A                     u925:	
  2775  044A  1003               	clrc
  2776  044B  1BF0               	btfsc	??_LCD_WriteData,7
  2777  044C  1403               	setc
  2778  044D  0CF0               	rrf	??_LCD_WriteData,f
  2779  044E  0B89               	decfsz	9,f
  2780  044F  2C4A               	goto	u925
  2781  0450  3003               	movlw	3
  2782  0451  0570               	andwf	??_LCD_WriteData,w
  2783  0452  00F1               	movwf	??_LCD_WriteData+1
  2784  0453  0E72               	swapf	LCD_WriteData@point,w
  2785  0454  390F               	andlw	15
  2786  0455  1989               	btfsc	9,3
  2787  0456  38F0               	iorlw	240
  2788  0457  390C               	andlw	12
  2789  0458  0709               	addwf	9,w
  2790  0459  0471               	iorwf	??_LCD_WriteData+1,w
  2791  045A  0020               	movlb	0	; select bank0
  2792  045B  008D               	movwf	13	;volatile
  2793                           
  2794                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2795  045C  158C               	bsf	12,3	;volatile
  2796  045D  3200               	nop2	;2 cycle nop
  2797  045E  3200               	nop2	;2 cycle nop
  2798  045F  3200               	nop2	;2 cycle nop
  2799  0460  3200               	nop2	;2 cycle nop
  2800  0461  0020               	movlb	0	; select bank0
  2801  0462  118C               	bcf	12,3	;volatile
  2802  0463  3200               	nop2	;2 cycle nop
  2803  0464  3200               	nop2	;2 cycle nop
  2804  0465  3200               	nop2	;2 cycle nop
  2805  0466  3200               	nop2	;2 cycle nop
  2806                           
  2807                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2808  0467  3003               	movlw	3
  2809  0468  0572               	andwf	LCD_WriteData@point,w
  2810  0469  00F0               	movwf	??_LCD_WriteData
  2811  046A  0872               	movf	LCD_WriteData@point,w
  2812  046B  390C               	andlw	12
  2813  046C  0709               	addwf	9,w
  2814  046D  0470               	iorwf	??_LCD_WriteData,w
  2815  046E  0020               	movlb	0	; select bank0
  2816  046F  008D               	movwf	13	;volatile
  2817                           
  2818                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2819  0470  158C               	bsf	12,3	;volatile
  2820  0471  3200               	nop2	;2 cycle nop
  2821  0472  3200               	nop2	;2 cycle nop
  2822  0473  3200               	nop2	;2 cycle nop
  2823  0474  3200               	nop2	;2 cycle nop
  2824  0475  0020               	movlb	0	; select bank0
  2825  0476  118C               	bcf	12,3	;volatile
  2826  0477  3200               	nop2	;2 cycle nop
  2827  0478  3200               	nop2	;2 cycle nop
  2828  0479  3200               	nop2	;2 cycle nop
  2829  047A  3200               	nop2	;2 cycle nop
  2830  047B  0008               	return
  2831  047C                     __end_of_LCD_WriteData:	
  2832                           
  2833                           	psect	text13
  2834  03EC                     __ptext13:	
  2835 ;; *************** function _EEPROM_MultiRead *****************
  2836 ;; Defined at:
  2837 ;;		line 30 in file "eeprom.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  pData           1    wreg     PTR unsigned char 
  2840 ;;		 -> main@readdat(5), 
  2841 ;;  size            1    4[COMMON] unsigned char 
  2842 ;;  addr            1    5[COMMON] unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  pData           1    9[COMMON] PTR unsigned char 
  2845 ;;		 -> main@readdat(5), 
  2846 ;;  i               1   10[COMMON] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      char 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2856 ;;      Params:         2       0       0       0       0       0
  2857 ;;      Locals:         2       0       0       0       0       0
  2858 ;;      Temps:          3       0       0       0       0       0
  2859 ;;      Totals:         7       0       0       0       0       0
  2860 ;;Total ram usage:        7 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    1
  2863 ;; This function calls:
  2864 ;;		_eeprom_read
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _EEPROM_MultiRead
  2872  03EC                     _EEPROM_MultiRead:	
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _EEPROM_MultiRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2876                           ;EEPROM_MultiRead@pData stored from wreg
  2877  03EC  00F9               	movwf	EEPROM_MultiRead@pData
  2878                           
  2879                           ;eeprom.c: 32: uint8_t i = 0;
  2880  03ED  01FA               	clrf	EEPROM_MultiRead@i
  2881  03EE                     l1756:	
  2882                           ;eeprom.c: 34: for(;i<size;i++)
  2883                           
  2884  03EE  0874               	movf	EEPROM_MultiRead@size,w
  2885  03EF  027A               	subwf	EEPROM_MultiRead@i,w
  2886  03F0  1803               	btfsc	3,0
  2887  03F1  0008               	return
  2888                           
  2889                           ;eeprom.c: 35: {
  2890                           ;eeprom.c: 36: if((addr+i)>256-1)
  2891  03F2  0875               	movf	EEPROM_MultiRead@addr,w
  2892  03F3  077A               	addwf	EEPROM_MultiRead@i,w
  2893  03F4  00F6               	movwf	??_EEPROM_MultiRead
  2894  03F5  01F7               	clrf	??_EEPROM_MultiRead+1
  2895  03F6  0DF7               	rlf	??_EEPROM_MultiRead+1,f
  2896  03F7  0877               	movf	??_EEPROM_MultiRead+1,w
  2897  03F8  3A80               	xorlw	128
  2898  03F9  00F8               	movwf	??_EEPROM_MultiRead+2
  2899  03FA  3081               	movlw	129
  2900  03FB  0278               	subwf	??_EEPROM_MultiRead+2,w
  2901  03FC  1D03               	skipz
  2902  03FD  2C00               	goto	u1445
  2903  03FE  3000               	movlw	0
  2904  03FF  0276               	subwf	??_EEPROM_MultiRead,w
  2905  0400                     u1445:	
  2906  0400  1803               	btfsc	3,0
  2907  0401  0008               	return
  2908                           
  2909                           ;eeprom.c: 38: pData[i] = eeprom_read(addr+i);
  2910                           
  2911                           ;eeprom.c: 37: return 1;
  2912                           ;	Return value of _EEPROM_MultiRead is never used
  2913  0402  0875               	movf	EEPROM_MultiRead@addr,w
  2914  0403  077A               	addwf	EEPROM_MultiRead@i,w
  2915  0404  3183  23B9  3183   	fcall	_eeprom_read
  2916  0407  00F6               	movwf	??_EEPROM_MultiRead
  2917  0408  087A               	movf	EEPROM_MultiRead@i,w
  2918  0409  0779               	addwf	EEPROM_MultiRead@pData,w
  2919  040A  00F7               	movwf	??_EEPROM_MultiRead+1
  2920  040B  0877               	movf	??_EEPROM_MultiRead+1,w
  2921  040C  0086               	movwf	6
  2922  040D  0187               	clrf	7
  2923  040E  0876               	movf	??_EEPROM_MultiRead,w
  2924  040F  0081               	movwf	1
  2925  0410  3001               	movlw	1
  2926  0411  00F6               	movwf	??_EEPROM_MultiRead
  2927  0412  0876               	movf	??_EEPROM_MultiRead,w
  2928  0413  07FA               	addwf	EEPROM_MultiRead@i,f
  2929  0414  2BEE               	goto	l1756
  2930  0415                     __end_of_EEPROM_MultiRead:	
  2931                           ;eeprom.c: 39: }
  2932                           ;eeprom.c: 41: return 0;
  2933                           ;	Return value of _EEPROM_MultiRead is never used
  2934                           
  2935                           
  2936                           	psect	text14
  2937  03B9                     __ptext14:	
  2938 ;; *************** function _eeprom_read *****************
  2939 ;; Defined at:
  2940 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/pic/eeread.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  addr            1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  addr            1    3[COMMON] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      unsigned char 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2954 ;;      Params:         0       0       0       0       0       0
  2955 ;;      Locals:         1       0       0       0       0       0
  2956 ;;      Temps:          3       0       0       0       0       0
  2957 ;;      Totals:         4       0       0       0       0       0
  2958 ;;Total ram usage:        4 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_EEPROM_MultiRead
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _eeprom_read
  2969  03B9                     _eeprom_read:	
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2973                           ;eeprom_read@addr stored from wreg
  2974  03B9  00F3               	movwf	eeprom_read@addr
  2975  03BA                     l298:	
  2976  03BA  0064               	clrwdt	;# 
  2977  03BB  0023               	movlb	3	; select bank3
  2978  03BC  1895               	btfsc	21,1	;volsfr
  2979  03BD  2BBA               	goto	l298
  2980  03BE  0873               	movf	eeprom_read@addr,w
  2981  03BF  00F0               	movwf	??_eeprom_read
  2982  03C0  01F1               	clrf	??_eeprom_read+1
  2983  03C1  0870               	movf	??_eeprom_read,w
  2984  03C2  0091               	movwf	17	;volatile
  2985  03C3  0871               	movf	??_eeprom_read+1,w
  2986  03C4  0092               	movwf	18	;volatile
  2987  03C5  303F               	movlw	63
  2988  03C6  00F2               	movwf	??_eeprom_read+2
  2989  03C7  0872               	movf	??_eeprom_read+2,w
  2990  03C8  0595               	andwf	21,f	;volsfr
  2991  03C9  1415               	bsf	21,0	;volsfr
  2992  03CA  1003               	clrc
  2993  03CB  1815               	btfsc	21,0	;volsfr
  2994  03CC  1403               	setc
  2995  03CD  3000               	movlw	0
  2996  03CE  3D09               	addwfc	9,w
  2997  03CF  0813               	movf	19,w	;volatile
  2998  03D0  0008               	return
  2999  03D1                     __end_of_eeprom_read:	
  3000                           
  3001                           	psect	text15
  3002  038F                     __ptext15:	
  3003 ;; *************** function _Basic_Init *****************
  3004 ;; Defined at:
  3005 ;;		line 34 in file "main.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      char 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3019 ;;      Params:         0       0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0
  3022 ;;      Totals:         0       0       0       0       0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _Basic_Init
  3034  038F                     _Basic_Init:	
  3035                           
  3036                           ;main.c: 36: OSCCON = 0xF0;
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _Basic_Init: [wreg+status,2]
  3040  038F  30F0               	movlw	240
  3041  0390  0021               	movlb	1	; select bank1
  3042  0391  0099               	movwf	25	;volatile
  3043                           
  3044                           ;main.c: 40: TRISA = 0x07;
  3045  0392  3007               	movlw	7
  3046  0393  008C               	movwf	12	;volatile
  3047                           
  3048                           ;main.c: 41: ANSELA = 0x07;
  3049  0394  3007               	movlw	7
  3050  0395  0023               	movlb	3	; select bank3
  3051  0396  008C               	movwf	12	;volatile
  3052                           
  3053                           ;main.c: 43: TRISB = 0x40;
  3054  0397  3040               	movlw	64
  3055  0398  0021               	movlb	1	; select bank1
  3056  0399  008D               	movwf	13	;volatile
  3057                           
  3058                           ;main.c: 44: ANSELB = 0x00;
  3059  039A  0023               	movlb	3	; select bank3
  3060  039B  018D               	clrf	13	;volatile
  3061                           
  3062                           ;main.c: 46: APFCON0 = 0x08;
  3063  039C  3008               	movlw	8
  3064  039D  0022               	movlb	2	; select bank2
  3065  039E  009D               	movwf	29	;volatile
  3066                           
  3067                           ;main.c: 47: APFCON1 = 0x00;
  3068  039F  019E               	clrf	30	;volatile
  3069                           
  3070                           ;main.c: 49: PORTA = 0x00;
  3071  03A0  0020               	movlb	0	; select bank0
  3072  03A1  018C               	clrf	12	;volatile
  3073                           
  3074                           ;main.c: 50: PORTB = 0x00;
  3075  03A2  018D               	clrf	13	;volatile
  3076  03A3  0008               	return
  3077  03A4                     __end_of_Basic_Init:	
  3078                           ;main.c: 52: return 0;
  3079                           ;	Return value of _Basic_Init is never used
  3080                           
  3081  007E                     btemp	set	126	;btemp
  3082  007E                     wtemp0	set	126
>>>>>>> eeprom


Data Sizes:
    Strings     32
=======
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1827 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029E                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  0211                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0217                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021B                     	;# 
   312  021C                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029E                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  039A                     	;# 
   346  039C                     	;# 
   347  039D                     	;# 
   348  039E                     	;# 
   349  039F                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0097                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009A                     	;# 
   408  009B                     	;# 
   409  009B                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  0111                     	;# 
   416  0112                     	;# 
   417  0113                     	;# 
   418  0114                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0117                     	;# 
   422  0118                     	;# 
   423  0119                     	;# 
   424  011A                     	;# 
   425  011B                     	;# 
   426  011D                     	;# 
   427  011E                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0219                     	;# 
   468  021A                     	;# 
   469  021B                     	;# 
   470  021C                     	;# 
   471  021D                     	;# 
   472  021E                     	;# 
   473  021F                     	;# 
   474  0291                     	;# 
   475  0291                     	;# 
   476  0292                     	;# 
   477  0293                     	;# 
   478  0294                     	;# 
   479  0295                     	;# 
   480  0295                     	;# 
   481  0296                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  029B                     	;# 
   487  029C                     	;# 
   488  029C                     	;# 
   489  029D                     	;# 
   490  029E                     	;# 
   491  029E                     	;# 
   492  0311                     	;# 
   493  0311                     	;# 
   494  0312                     	;# 
   495  0313                     	;# 
   496  0318                     	;# 
   497  0318                     	;# 
   498  0319                     	;# 
   499  031A                     	;# 
   500  0394                     	;# 
   501  0395                     	;# 
   502  0396                     	;# 
   503  039A                     	;# 
   504  039C                     	;# 
   505  039D                     	;# 
   506  039E                     	;# 
   507  039F                     	;# 
   508  0415                     	;# 
   509  0416                     	;# 
   510  0417                     	;# 
   511  041C                     	;# 
   512  041D                     	;# 
   513  041E                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525                           
   526 ;; Function _LCD_Put is unused but had its address taken
   527  001B                     _PR2	set	27
   528  001A                     _TMR2	set	26
   529  001C                     _T2CON	set	28
   530  000D                     _PORTB	set	13
   531  000C                     _PORTA	set	12
   532  0064                     _RA4	set	100
   533  0063                     _RA3	set	99
   534  008D                     _TRISB	set	141
   535  008C                     _TRISA	set	140
   536  0099                     _OSCCON	set	153
   537  011E                     _APFCON1	set	286
   538  011D                     _APFCON0	set	285
   539  018D                     _ANSELB	set	397
   540  018C                     _ANSELA	set	396
   541  0298                     _CCPR2L	set	664
   542  029E                     _CCPTMRS	set	670
   543  029A                     _CCP2CON	set	666
   544                           
   545                           	psect	stringtext
   546  0800                     __pstringtext:	
   547  0800                     STR_2:	
   548  0800  3425               	retlw	37	;'%'
   549  0801  3430               	retlw	48	;'0'
   550  0802  3438               	retlw	56	;'8'
   551  0803  346C               	retlw	108	;'l'
   552  0804  3458               	retlw	88	;'X'
   553  0805  3420               	retlw	32	;' '
   554  0806  3400               	retlw	0
   555  0807                     STR_5:	
   556  0807  3420               	retlw	32	;' '
   557  0808  3425               	retlw	37	;'%'
   558  0809  3430               	retlw	48	;'0'
   559  080A  3438               	retlw	56	;'8'
   560  080B  344C               	retlw	76	;'L'
   561  080C  3458               	retlw	88	;'X'
   562  080D  3400               	retlw	0
   563  080E                     STR_3:	
   564  080E  3420               	retlw	32	;' '
   565  080F  3425               	retlw	37	;'%'
   566  0810  3430               	retlw	48	;'0'
   567  0811  3432               	retlw	50	;'2'
   568  0812  3458               	retlw	88	;'X'
   569  0813  3400               	retlw	0
   570  0814                     STR_4:	
   571  0814  3420               	retlw	32	;' '
   572  0815  3425               	retlw	37	;'%'
   573  0816  3430               	retlw	48	;'0'
   574  0817  3434               	retlw	52	;'4'
   575  0818  3458               	retlw	88	;'X'
   576  0819  3400               	retlw	0
   577  081A                     STR_1:	
   578  081A  340D               	retlw	13
   579  081B  3400               	retlw	0
   580                           
   581                           ; #config settings
   582  0000                     
   583                           	psect	cinit
   584  07F8                     start_initialization:	
   585  07F8                     __initialization:	
   586                           
   587                           ; Clear objects allocated to COMMON
   588  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   589  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   590  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   591  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   592  07FC  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   593  07FD                     end_of_initialization:	
   594                           ;End of C runtime variable initialization code
   595                           
   596  07FD                     __end_of__initialization:	
   597  07FD  0020               	movlb	0
   598  07FE  3187  2F03         	ljmp	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMMON
   601  0076                     __pbssCOMMON:	
   602  0076                     _xfunc_in:	
   603  0076                     	ds	2
   604  0078                     _xfunc_out:	
   605  0078                     	ds	2
   606  007A                     _outptr:	
   607  007A                     	ds	1
   608                           
   609                           	psect	cstackCOMMON
   610  0070                     __pcstackCOMMON:	
   611  0070                     ?_Basic_Init:	
   612  0070                     ??_Basic_Init:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Buzer_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_Buzer_Init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Buzer_SetDuty:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_LCD_Init:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LCD_DisplayClear:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_main:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCD_WriteData:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_LCD_WriteData:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     Buzer_SetDuty@duty:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 2 bytes @ 0x0
   644  0070                     	ds	2
   645  0072                     ??_Buzer_SetDuty:	
   646  0072                     LCD_WriteData@point:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 1 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ??_LCD_DisplayClear:	
   653                           
   654                           ; 1 bytes @ 0x3
   655  0073                     	ds	1
   656  0074                     ??_LCD_Init:	
   657  0074                     Buzer_SetDuty@CCP2CON_Pre:	
   658                           ; 1 bytes @ 0x4
   659                           
   660                           
   661                           ; 1 bytes @ 0x4
   662  0074                     	ds	2
   663  0076                     ??_main:	
   664                           
   665                           	psect	maintext
   666  0703                     __pmaintext:	
   667                           ; 1 bytes @ 0x6
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 10 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      char 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B1F/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   687 ;;      Params:         0       0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels required when called:    3
   693 ;; This function calls:
   694 ;;		_Basic_Init
   695 ;;		_Buzer_Init
   696 ;;		_Buzer_SetDuty
   697 ;;		_LCD_Init
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _main
   705  0703                     _main:	
   706                           
   707                           ;main.c: 12: Basic_Init();
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   711  0703  3186  26EE  3187   	fcall	_Basic_Init
   712                           
   713                           ;main.c: 13: Buzer_Init();
   714  0706  3187  2733  3187   	fcall	_Buzer_Init
   715                           
   716                           ;main.c: 14: Buzer_SetDuty(0x01FF);
   717  0709  30FF               	movlw	255
   718  070A  00F0               	movwf	Buzer_SetDuty@duty
   719  070B  3001               	movlw	1
   720  070C  00F1               	movwf	Buzer_SetDuty@duty+1
   721  070D  3187  2718  3187   	fcall	_Buzer_SetDuty
   722                           
   723                           ;main.c: 16: LCD_Init();
   724  0710  3187  278F  3187   	fcall	_LCD_Init
   725                           
   726                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   727  0713  3000               	movlw	0
   728  0714  00F8               	movwf	_xfunc_out
   729  0715  3000               	movlw	0
   730  0716  00F9               	movwf	_xfunc_out+1
   731  0717                     l33:	
   732                           ;main.c: 18: while(1)
   733                           
   734                           
   735                           ;main.c: 19: {
   736  0717  2F17               	goto	l33
   737  0718                     __end_of_main:	
   738                           ;main.c: 21: }
   739                           ;main.c: 22: return 0;
   740                           ;	Return value of _main is never used
   741                           
   742                           
   743                           	psect	text1
   744  078F                     __ptext1:	
   745 ;; *************** function _LCD_Init *****************
   746 ;; Defined at:
   747 ;;		line 28 in file "LCD.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   761 ;;      Params:         0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0
   763 ;;      Temps:          2       0       0       0       0       0
   764 ;;      Totals:         2       0       0       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_LCD_DisplayClear
   770 ;;		_LCD_WriteData
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _LCD_Init
   778  078F                     _LCD_Init:	
   779                           
   780                           ;LCD.c: 30: RA4 = 0;
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   784  078F  0020               	movlb	0	; select bank0
   785  0790  120C               	bcf	12,4	;volatile
   786                           
   787                           ;LCD.c: 31: RA3 = 0;
   788  0791  118C               	bcf	12,3	;volatile
   789                           
   790                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
   791  0792  3002               	movlw	2
   792  0793  00F5               	movwf	??_LCD_Init+1
   793  0794  3038               	movlw	56
   794  0795  00F4               	movwf	??_LCD_Init
   795  0796  30AD               	movlw	173
   796  0797                     u697:	
   797  0797  0B89               	decfsz	9,f
   798  0798  2F97               	goto	u697
   799  0799  0BF4               	decfsz	??_LCD_Init,f
   800  079A  2F97               	goto	u697
   801  079B  0BF5               	decfsz	??_LCD_Init+1,f
   802  079C  2F97               	goto	u697
   803  079D  0000               	nop
   804                           
   805                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
   806  079E  3003               	movlw	3
   807  079F  0020               	movlb	0	; select bank0
   808  07A0  008D               	movwf	13	;volatile
   809                           
   810                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   811  07A1  158C               	bsf	12,3	;volatile
   812  07A2  3200               	nop2	;2 cycle nop
   813  07A3  3200               	nop2	;2 cycle nop
   814  07A4  3200               	nop2	;2 cycle nop
   815  07A5  3200               	nop2	;2 cycle nop
   816  07A6  0020               	movlb	0	; select bank0
   817  07A7  118C               	bcf	12,3	;volatile
   818  07A8  3200               	nop2	;2 cycle nop
   819  07A9  3200               	nop2	;2 cycle nop
   820  07AA  3200               	nop2	;2 cycle nop
   821  07AB  3200               	nop2	;2 cycle nop
   822                           
   823                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
   824  07AC  3034               	movlw	52
   825  07AD  00F4               	movwf	??_LCD_Init
   826  07AE  30F2               	movlw	242
   827  07AF                     u707:	
   828  07AF  0B89               	decfsz	9,f
   829  07B0  2FAF               	goto	u707
   830  07B1  0BF4               	decfsz	??_LCD_Init,f
   831  07B2  2FAF               	goto	u707
   832                           
   833                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   834  07B3  0020               	movlb	0	; select bank0
   835  07B4  158C               	bsf	12,3	;volatile
   836  07B5  3200               	nop2	;2 cycle nop
   837  07B6  3200               	nop2	;2 cycle nop
   838  07B7  3200               	nop2	;2 cycle nop
   839  07B8  3200               	nop2	;2 cycle nop
   840  07B9  0020               	movlb	0	; select bank0
   841  07BA  118C               	bcf	12,3	;volatile
   842  07BB  3200               	nop2	;2 cycle nop
   843  07BC  3200               	nop2	;2 cycle nop
   844  07BD  3200               	nop2	;2 cycle nop
   845  07BE  3200               	nop2	;2 cycle nop
   846                           
   847                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
   848  07BF  3005               	movlw	5
   849  07C0  00F4               	movwf	??_LCD_Init
   850  07C1  3026               	movlw	38
   851  07C2                     u717:	
   852  07C2  0B89               	decfsz	9,f
   853  07C3  2FC2               	goto	u717
   854  07C4  0BF4               	decfsz	??_LCD_Init,f
   855  07C5  2FC2               	goto	u717
   856  07C6  3200               	nop2
   857                           
   858                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   859  07C7  0020               	movlb	0	; select bank0
   860  07C8  158C               	bsf	12,3	;volatile
   861  07C9  3200               	nop2	;2 cycle nop
   862  07CA  3200               	nop2	;2 cycle nop
   863  07CB  3200               	nop2	;2 cycle nop
   864  07CC  3200               	nop2	;2 cycle nop
   865  07CD  0020               	movlb	0	; select bank0
   866  07CE  118C               	bcf	12,3	;volatile
   867  07CF  3200               	nop2	;2 cycle nop
   868  07D0  3200               	nop2	;2 cycle nop
   869  07D1  3200               	nop2	;2 cycle nop
   870  07D2  3200               	nop2	;2 cycle nop
   871                           
   872                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
   873  07D3  3005               	movlw	5
   874  07D4  00F4               	movwf	??_LCD_Init
   875  07D5  3026               	movlw	38
   876  07D6                     u727:	
   877  07D6  0B89               	decfsz	9,f
   878  07D7  2FD6               	goto	u727
   879  07D8  0BF4               	decfsz	??_LCD_Init,f
   880  07D9  2FD6               	goto	u727
   881  07DA  3200               	nop2
   882                           
   883                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
   884  07DB  3002               	movlw	2
   885  07DC  0020               	movlb	0	; select bank0
   886  07DD  008D               	movwf	13	;volatile
   887                           
   888                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   889  07DE  158C               	bsf	12,3	;volatile
   890  07DF  3200               	nop2	;2 cycle nop
   891  07E0  3200               	nop2	;2 cycle nop
   892  07E1  3200               	nop2	;2 cycle nop
   893  07E2  3200               	nop2	;2 cycle nop
   894  07E3  0020               	movlb	0	; select bank0
   895  07E4  118C               	bcf	12,3	;volatile
   896  07E5  3200               	nop2	;2 cycle nop
   897  07E6  3200               	nop2	;2 cycle nop
   898  07E7  3200               	nop2	;2 cycle nop
   899  07E8  3200               	nop2	;2 cycle nop
   900                           
   901                           ;LCD.c: 44: LCD_WriteData(0x28);
   902  07E9  3028               	movlw	40
   903  07EA  3187  2755  3187   	fcall	_LCD_WriteData
   904                           
   905                           ;LCD.c: 45: LCD_WriteData(0x0c);
   906  07ED  300C               	movlw	12
   907  07EE  3187  2755  3187   	fcall	_LCD_WriteData
   908                           
   909                           ;LCD.c: 46: LCD_DisplayClear();
   910  07F1  3186  26DF  3187   	fcall	_LCD_DisplayClear
   911                           
   912                           ;LCD.c: 47: LCD_WriteData(0x06);
   913  07F4  3006               	movlw	6
   914  07F5  3187  2755         	fcall	_LCD_WriteData
   915  07F7  0008               	return
   916  07F8                     __end_of_LCD_Init:	
   917                           
   918                           	psect	text2
   919  06DF                     __ptext2:	
   920 ;; *************** function _LCD_DisplayClear *****************
   921 ;; Defined at:
   922 ;;		line 64 in file "LCD.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   936 ;;      Params:         0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0
   938 ;;      Temps:          1       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		_LCD_WriteData
   945 ;; This function is called by:
   946 ;;		_LCD_Init
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _LCD_DisplayClear
   952  06DF                     _LCD_DisplayClear:	
   953                           
   954                           ;LCD.c: 66: RA4 = 0;
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
   958  06DF  0020               	movlb	0	; select bank0
   959  06E0  120C               	bcf	12,4	;volatile
   960                           
   961                           ;LCD.c: 67: LCD_WriteData(0x01);
   962  06E1  3001               	movlw	1
   963  06E2  3187  2755  3186   	fcall	_LCD_WriteData
   964                           
   965                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
   966  06E5  3015               	movlw	21
   967  06E6  00F3               	movwf	??_LCD_DisplayClear
   968  06E7  30C6               	movlw	198
   969  06E8                     u737:	
   970  06E8  0B89               	decfsz	9,f
   971  06E9  2EE8               	goto	u737
   972  06EA  0BF3               	decfsz	??_LCD_DisplayClear,f
   973  06EB  2EE8               	goto	u737
   974  06EC  3200               	nop2
   975  06ED  0008               	return
   976  06EE                     __end_of_LCD_DisplayClear:	
   977                           
   978                           	psect	text3
   979  0755                     __ptext3:	
   980 ;; *************** function _LCD_WriteData *****************
   981 ;; Defined at:
   982 ;;		line 15 in file "LCD.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  point           1    wreg     char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  point           1    2[COMMON] char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   996 ;;      Params:         0       0       0       0       0       0
   997 ;;      Locals:         1       0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0       0
   999 ;;      Totals:         3       0       0       0       0       0
  1000 ;;Total ram usage:        3 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_LCD_Init
  1006 ;;		_LCD_Put
  1007 ;;		_LCD_DisplayClear
  1008 ;;		_LCD_CursorHome
  1009 ;;		_LCD_CursorPosition
  1010 ;;		_LCD_CursorShift
  1011 ;;		_LCD_DispShift
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _LCD_WriteData
  1017  0755                     _LCD_WriteData:	
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1021                           ;LCD_WriteData@point stored from wreg
  1022  0755  00F2               	movwf	LCD_WriteData@point
  1023                           
  1024                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1025  0756  30D5               	movlw	213
  1026  0757                     u747:	
  1027  0757  0B89               	decfsz	9,f
  1028  0758  2F57               	goto	u747
  1029  0759  0000               	nop
  1030                           
  1031                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1032  075A  0872               	movf	LCD_WriteData@point,w
  1033  075B  00F0               	movwf	??_LCD_WriteData
  1034  075C  3004               	movlw	4
  1035  075D                     u15:	
  1036  075D  1003               	clrc
  1037  075E  1BF0               	btfsc	??_LCD_WriteData,7
  1038  075F  1403               	setc
  1039  0760  0CF0               	rrf	??_LCD_WriteData,f
  1040  0761  0B89               	decfsz	9,f
  1041  0762  2F5D               	goto	u15
  1042  0763  3003               	movlw	3
  1043  0764  0570               	andwf	??_LCD_WriteData,w
  1044  0765  00F1               	movwf	??_LCD_WriteData+1
  1045  0766  0E72               	swapf	LCD_WriteData@point,w
  1046  0767  390F               	andlw	15
  1047  0768  1989               	btfsc	9,3
  1048  0769  38F0               	iorlw	240
  1049  076A  390C               	andlw	12
  1050  076B  0709               	addwf	9,w
  1051  076C  0471               	iorwf	??_LCD_WriteData+1,w
  1052  076D  0020               	movlb	0	; select bank0
  1053  076E  008D               	movwf	13	;volatile
  1054                           
  1055                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1056  076F  158C               	bsf	12,3	;volatile
  1057  0770  3200               	nop2	;2 cycle nop
  1058  0771  3200               	nop2	;2 cycle nop
  1059  0772  3200               	nop2	;2 cycle nop
  1060  0773  3200               	nop2	;2 cycle nop
  1061  0774  0020               	movlb	0	; select bank0
  1062  0775  118C               	bcf	12,3	;volatile
  1063  0776  3200               	nop2	;2 cycle nop
  1064  0777  3200               	nop2	;2 cycle nop
  1065  0778  3200               	nop2	;2 cycle nop
  1066  0779  3200               	nop2	;2 cycle nop
  1067                           
  1068                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1069  077A  3003               	movlw	3
  1070  077B  0572               	andwf	LCD_WriteData@point,w
  1071  077C  00F0               	movwf	??_LCD_WriteData
  1072  077D  0872               	movf	LCD_WriteData@point,w
  1073  077E  390C               	andlw	12
  1074  077F  0709               	addwf	9,w
  1075  0780  0470               	iorwf	??_LCD_WriteData,w
  1076  0781  0020               	movlb	0	; select bank0
  1077  0782  008D               	movwf	13	;volatile
  1078                           
  1079                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1080  0783  158C               	bsf	12,3	;volatile
  1081  0784  3200               	nop2	;2 cycle nop
  1082  0785  3200               	nop2	;2 cycle nop
  1083  0786  3200               	nop2	;2 cycle nop
  1084  0787  3200               	nop2	;2 cycle nop
  1085  0788  0020               	movlb	0	; select bank0
  1086  0789  118C               	bcf	12,3	;volatile
  1087  078A  3200               	nop2	;2 cycle nop
  1088  078B  3200               	nop2	;2 cycle nop
  1089  078C  3200               	nop2	;2 cycle nop
  1090  078D  3200               	nop2	;2 cycle nop
  1091  078E  0008               	return
  1092  078F                     __end_of_LCD_WriteData:	
  1093                           
  1094                           	psect	text4
  1095  0718                     __ptext4:	
  1096 ;; *************** function _Buzer_SetDuty *****************
  1097 ;; Defined at:
  1098 ;;		line 29 in file "Buzer.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  duty            2    0[COMMON] unsigned int 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1112 ;;      Params:         2       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0
  1114 ;;      Temps:          2       0       0       0       0       0
  1115 ;;      Totals:         5       0       0       0       0       0
  1116 ;;Total ram usage:        5 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _Buzer_SetDuty
  1127  0718                     _Buzer_SetDuty:	
  1128                           
  1129                           ;Buzer.c: 31: uint8_t CCP2CON_Pre = CCP2CON;
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _Buzer_SetDuty: [wreg+status,2+status,0]
  1133  0718  0025               	movlb	5	; select bank5
  1134  0719  081A               	movf	26,w	;volatile
  1135  071A  00F2               	movwf	??_Buzer_SetDuty
  1136  071B  0872               	movf	??_Buzer_SetDuty,w
  1137  071C  00F4               	movwf	Buzer_SetDuty@CCP2CON_Pre
  1138                           
  1139                           ;Buzer.c: 32: CCPR2L = (duty>>2);
  1140  071D  0871               	movf	Buzer_SetDuty@duty+1,w
  1141  071E  00F3               	movwf	??_Buzer_SetDuty+1
  1142  071F  0870               	movf	Buzer_SetDuty@duty,w
  1143  0720  00F2               	movwf	??_Buzer_SetDuty
  1144  0721  36F3               	lsrf	??_Buzer_SetDuty+1,f
  1145  0722  0CF2               	rrf	??_Buzer_SetDuty,f
  1146  0723  36F3               	lsrf	??_Buzer_SetDuty+1,f
  1147  0724  0CF2               	rrf	??_Buzer_SetDuty,f
  1148  0725  0872               	movf	??_Buzer_SetDuty,w
  1149  0726  0098               	movwf	24	;volatile
  1150                           
  1151                           ;Buzer.c: 33: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  1152  0727  0870               	movf	Buzer_SetDuty@duty,w
  1153  0728  3903               	andlw	3
  1154  0729  00F2               	movwf	??_Buzer_SetDuty
  1155  072A  3003               	movlw	3
  1156  072B                     u685:	
  1157  072B  35F2               	lslf	??_Buzer_SetDuty,f
  1158  072C  3EFF               	addlw	-1
  1159  072D  1D03               	skipz
  1160  072E  2F2B               	goto	u685
  1161  072F  3572               	lslf	??_Buzer_SetDuty,w
  1162  0730  0474               	iorwf	Buzer_SetDuty@CCP2CON_Pre,w
  1163  0731  009A               	movwf	26	;volatile
  1164  0732  0008               	return
  1165  0733                     __end_of_Buzer_SetDuty:	
  1166                           
  1167                           	psect	text5
  1168  0733                     __ptext5:	
  1169 ;; *************** function _Buzer_Init *****************
  1170 ;; Defined at:
  1171 ;;		line 9 in file "Buzer.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1185 ;;      Params:         0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0
  1188 ;;      Totals:         1       0       0       0       0       0
  1189 ;;Total ram usage:        1 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _Buzer_Init
  1200  0733                     _Buzer_Init:	
  1201                           
  1202                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  1206  0733  307F               	movlw	127
  1207  0734  00F0               	movwf	??_Buzer_Init
  1208  0735  0870               	movf	??_Buzer_Init,w
  1209  0736  0021               	movlb	1	; select bank1
  1210  0737  058C               	andwf	12,f	;volatile
  1211                           
  1212                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  1213  0738  307F               	movlw	127
  1214  0739  00F0               	movwf	??_Buzer_Init
  1215  073A  0870               	movf	??_Buzer_Init,w
  1216  073B  0023               	movlb	3	; select bank3
  1217  073C  058C               	andwf	12,f	;volatile
  1218                           
  1219                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  1220  073D  0022               	movlb	2	; select bank2
  1221  073E  159D               	bsf	29,3	;volatile
  1222                           
  1223                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  1224  073F  0020               	movlb	0	; select bank0
  1225  0740  081C               	movf	28,w	;volatile
  1226                           
  1227                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  1228  0741  149C               	bsf	28,1	;volatile
  1229                           
  1230                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  1231  0742  151C               	bsf	28,2	;volatile
  1232                           
  1233                           ;Buzer.c: 19: TMR2 = 0x00;
  1234  0743  019A               	clrf	26	;volatile
  1235                           
  1236                           ;Buzer.c: 20: PR2 = 0xFF;
  1237  0744  30FF               	movlw	255
  1238  0745  009B               	movwf	27	;volatile
  1239                           
  1240                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  1241  0746  303F               	movlw	63
  1242  0747  00F0               	movwf	??_Buzer_Init
  1243  0748  0870               	movf	??_Buzer_Init,w
  1244  0749  0025               	movlb	5	; select bank5
  1245  074A  059A               	andwf	26,f	;volatile
  1246                           
  1247                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  1248  074B  300C               	movlw	12
  1249  074C  00F0               	movwf	??_Buzer_Init
  1250  074D  0870               	movf	??_Buzer_Init,w
  1251  074E  049A               	iorwf	26,f	;volatile
  1252                           
  1253                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  1254  074F  30F3               	movlw	243
  1255  0750  00F0               	movwf	??_Buzer_Init
  1256  0751  0870               	movf	??_Buzer_Init,w
  1257  0752  059E               	andwf	30,f	;volatile
  1258                           
  1259                           ;Buzer.c: 26: CCPR2L = 0x00;
  1260  0753  0198               	clrf	24	;volatile
  1261  0754  0008               	return
  1262  0755                     __end_of_Buzer_Init:	
  1263                           
  1264                           	psect	text6
  1265  06EE                     __ptext6:	
  1266 ;; *************** function _Basic_Init *****************
  1267 ;; Defined at:
  1268 ;;		line 25 in file "main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      char 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1282 ;;      Params:         0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _Basic_Init
  1297  06EE                     _Basic_Init:	
  1298                           
  1299                           ;main.c: 27: OSCCON = 0xF0;
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _Basic_Init: [wreg+status,2]
  1303  06EE  30F0               	movlw	240
  1304  06EF  0021               	movlb	1	; select bank1
  1305  06F0  0099               	movwf	25	;volatile
  1306                           
  1307                           ;main.c: 31: TRISA = 0x07;
  1308  06F1  3007               	movlw	7
  1309  06F2  008C               	movwf	12	;volatile
  1310                           
  1311                           ;main.c: 32: ANSELA = 0x07;
  1312  06F3  3007               	movlw	7
  1313  06F4  0023               	movlb	3	; select bank3
  1314  06F5  008C               	movwf	12	;volatile
  1315                           
  1316                           ;main.c: 34: TRISB = 0x40;
  1317  06F6  3040               	movlw	64
  1318  06F7  0021               	movlb	1	; select bank1
  1319  06F8  008D               	movwf	13	;volatile
  1320                           
  1321                           ;main.c: 35: ANSELB = 0x00;
  1322  06F9  0023               	movlb	3	; select bank3
  1323  06FA  018D               	clrf	13	;volatile
  1324                           
  1325                           ;main.c: 37: APFCON0 = 0x08;
  1326  06FB  3008               	movlw	8
  1327  06FC  0022               	movlb	2	; select bank2
  1328  06FD  009D               	movwf	29	;volatile
  1329                           
  1330                           ;main.c: 38: APFCON1 = 0x00;
  1331  06FE  019E               	clrf	30	;volatile
  1332                           
  1333                           ;main.c: 40: PORTA = 0x00;
  1334  06FF  0020               	movlb	0	; select bank0
  1335  0700  018C               	clrf	12	;volatile
  1336                           
  1337                           ;main.c: 41: PORTB = 0x00;
  1338  0701  018D               	clrf	13	;volatile
  1339  0702  0008               	return
  1340  0703                     __end_of_Basic_Init:	
  1341                           ;main.c: 43: return 0;
  1342                           ;	Return value of _Basic_Init is never used
  1343                           
  1344  007E                     btemp	set	126	;btemp
  1345  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
>>>>>>> buzer
    Constant    0
    Data        5
    BSS         5
=======
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1827 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0219                     	;# 
   167  021A                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021E                     	;# 
   172  021F                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  029E                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0318                     	;# 
   196  0318                     	;# 
   197  0319                     	;# 
   198  031A                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0217                     	;# 
   324  0219                     	;# 
   325  021A                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021D                     	;# 
   329  021E                     	;# 
   330  021F                     	;# 
   331  0291                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0294                     	;# 
   336  0295                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029B                     	;# 
   344  029C                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  029E                     	;# 
   349  0311                     	;# 
   350  0311                     	;# 
   351  0312                     	;# 
   352  0313                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  039A                     	;# 
   361  039C                     	;# 
   362  039D                     	;# 
   363  039E                     	;# 
   364  039F                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011D                     	;# 
   442  011E                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019F                     	;# 
   465  020C                     	;# 
   466  020D                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  0219                     	;# 
   483  021A                     	;# 
   484  021B                     	;# 
   485  021C                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0298                     	;# 
   498  0298                     	;# 
   499  0299                     	;# 
   500  029A                     	;# 
   501  029B                     	;# 
   502  029C                     	;# 
   503  029C                     	;# 
   504  029D                     	;# 
   505  029E                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018D                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0216                     	;# 
   638  0217                     	;# 
   639  0217                     	;# 
   640  0219                     	;# 
   641  021A                     	;# 
   642  021B                     	;# 
   643  021C                     	;# 
   644  021D                     	;# 
   645  021E                     	;# 
   646  021F                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0298                     	;# 
   656  0298                     	;# 
   657  0299                     	;# 
   658  029A                     	;# 
   659  029B                     	;# 
   660  029C                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  029E                     	;# 
   665  0311                     	;# 
   666  0311                     	;# 
   667  0312                     	;# 
   668  0313                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  039A                     	;# 
   677  039C                     	;# 
   678  039D                     	;# 
   679  039E                     	;# 
   680  039F                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0014                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001E                     	;# 
   726  001F                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0094                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0219                     	;# 
   799  021A                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021D                     	;# 
   803  021E                     	;# 
   804  021F                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0294                     	;# 
   810  0295                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029B                     	;# 
   818  029C                     	;# 
   819  029C                     	;# 
   820  029D                     	;# 
   821  029E                     	;# 
   822  029E                     	;# 
   823  0311                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  039A                     	;# 
   835  039C                     	;# 
   836  039D                     	;# 
   837  039E                     	;# 
   838  039F                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0015                     	;# 
   875  0016                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  001E                     	;# 
   884  001F                     	;# 
   885  008C                     	;# 
   886  008D                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0095                     	;# 
   892  0096                     	;# 
   893  0097                     	;# 
   894  0098                     	;# 
   895  0099                     	;# 
   896  009A                     	;# 
   897  009B                     	;# 
   898  009B                     	;# 
   899  009C                     	;# 
   900  009D                     	;# 
   901  009E                     	;# 
   902  010C                     	;# 
   903  010D                     	;# 
   904  0111                     	;# 
   905  0112                     	;# 
   906  0113                     	;# 
   907  0114                     	;# 
   908  0115                     	;# 
   909  0116                     	;# 
   910  0117                     	;# 
   911  0118                     	;# 
   912  0119                     	;# 
   913  011A                     	;# 
   914  011B                     	;# 
   915  011D                     	;# 
   916  011E                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919  0191                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  0193                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0194                     	;# 
   926  0195                     	;# 
   927  0196                     	;# 
   928  0199                     	;# 
   929  019A                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020D                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021E                     	;# 
   962  021F                     	;# 
   963  0291                     	;# 
   964  0291                     	;# 
   965  0292                     	;# 
   966  0293                     	;# 
   967  0294                     	;# 
   968  0295                     	;# 
   969  0295                     	;# 
   970  0296                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  029B                     	;# 
   976  029C                     	;# 
   977  029C                     	;# 
   978  029D                     	;# 
   979  029E                     	;# 
   980  029E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0318                     	;# 
   986  0318                     	;# 
   987  0319                     	;# 
   988  031A                     	;# 
   989  0394                     	;# 
   990  0395                     	;# 
   991  0396                     	;# 
   992  039A                     	;# 
   993  039C                     	;# 
   994  039D                     	;# 
   995  039E                     	;# 
   996  039F                     	;# 
   997  0415                     	;# 
   998  0416                     	;# 
   999  0417                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014                           
  1015 ;; Function _LCD_Put is unused but had its address taken
  1016  000D                     _PORTB	set	13
  1017  000C                     _PORTA	set	12
  1018  005F                     _GIE	set	95
  1019  005E                     _PEIE	set	94
  1020  00A1                     _BCL2IF	set	161
  1021  00A0                     _SSP2IF	set	160
  1022  0093                     _BCL1IF	set	147
  1023  008B                     _SSP1IF	set	139
  1024  0064                     _RA4	set	100
  1025  0063                     _RA3	set	99
  1026  008D                     _TRISB	set	141
  1027  008C                     _TRISA	set	140
  1028  0099                     _OSCCON	set	153
  1029  04A1                     _BCL2IE	set	1185
  1030  04A0                     _SSP2IE	set	1184
  1031  0493                     _BCL1IE	set	1171
  1032  048B                     _SSP1IE	set	1163
  1033  011E                     _APFCON1	set	286
  1034  011D                     _APFCON0	set	285
  1035  0867                     _LATA7	set	2151
  1036  018D                     _ANSELB	set	397
  1037  018C                     _ANSELA	set	396
  1038  021C                     _SSP2STATbits	set	540
  1039  0219                     _SSP2BUF	set	537
  1040  021E                     _SSP2CON2	set	542
  1041  021B                     _SSP2MSK	set	539
  1042  021E                     _SSP2CON2bits	set	542
  1043  021D                     _SSP2CON1bits	set	541
  1044  021A                     _SSP2ADD	set	538
  1045  021C                     _SSP2STAT	set	540
  1046  021D                     _SSP2CON1	set	541
  1047  0214                     _SSP1STATbits	set	532
  1048  0211                     _SSP1BUF	set	529
  1049  0216                     _SSP1CON2	set	534
  1050  0213                     _SSP1MSK	set	531
  1051  0216                     _SSP1CON2bits	set	534
  1052  0215                     _SSP1CON1bits	set	533
  1053  0212                     _SSP1ADD	set	530
  1054  0214                     _SSP1STAT	set	532
  1055  0215                     _SSP1CON1	set	533
  1056                           
  1057                           	psect	stringtext
  1058  03D0                     __pstringtext:	
  1059  03D0                     STR_2:	
  1060  03D0  3425               	retlw	37	;'%'
  1061  03D1  3430               	retlw	48	;'0'
  1062  03D2  3438               	retlw	56	;'8'
  1063  03D3  346C               	retlw	108	;'l'
  1064  03D4  3458               	retlw	88	;'X'
  1065  03D5  3420               	retlw	32	;' '
  1066  03D6  3400               	retlw	0
  1067  03D7                     STR_5:	
  1068  03D7  3420               	retlw	32	;' '
  1069  03D8  3425               	retlw	37	;'%'
  1070  03D9  3430               	retlw	48	;'0'
  1071  03DA  3438               	retlw	56	;'8'
  1072  03DB  344C               	retlw	76	;'L'
  1073  03DC  3458               	retlw	88	;'X'
  1074  03DD  3400               	retlw	0
  1075  03DE                     STR_3:	
  1076  03DE  3420               	retlw	32	;' '
  1077  03DF  3425               	retlw	37	;'%'
  1078  03E0  3430               	retlw	48	;'0'
  1079  03E1  3432               	retlw	50	;'2'
  1080  03E2  3458               	retlw	88	;'X'
  1081  03E3  3400               	retlw	0
  1082  03E4                     STR_4:	
  1083  03E4  3420               	retlw	32	;' '
  1084  03E5  3425               	retlw	37	;'%'
  1085  03E6  3430               	retlw	48	;'0'
  1086  03E7  3434               	retlw	52	;'4'
  1087  03E8  3458               	retlw	88	;'X'
  1088  03E9  3400               	retlw	0
  1089  03EA                     STR_1:	
  1090  03EA  340D               	retlw	13
  1091  03EB  3400               	retlw	0
  1092                           
  1093                           ; #config settings
  1094  0000                     
  1095                           	psect	cinit
  1096  0012                     start_initialization:	
  1097  0012                     __initialization:	
  1098                           
  1099                           ; Clear objects allocated to COMMON
  1100  0012  01FB               	clrf	__pbssCOMMON& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK0
  1103  0013  3020               	movlw	low __pbssBANK0
  1104  0014  0084               	movwf	4
  1105  0015  3000               	movlw	high __pbssBANK0
  1106  0016  0085               	movwf	5
  1107  0017  3030               	movlw	48
  1108  0018  3184  2426         	fcall	clear_ram0
  1109  001A                     end_of_initialization:	
  1110                           ;End of C runtime variable initialization code
  1111                           
  1112  001A                     __end_of__initialization:	
  1113  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1114  001B  0020               	movlb	0
  1115  001C  3181  2984         	ljmp	_main	;jump to C main() function
  1116                           
  1117                           	psect	bssCOMMON
  1118  007B                     __pbssCOMMON:	
  1119  007B                     _outptr:	
  1120  007B                     	ds	1
  1121                           
  1122                           	psect	bssBANK0
  1123  0020                     __pbssBANK0:	
  1124  0020                     _MemoryReg:	
  1125  0020                     	ds	3
  1126  0023                     _xfunc_in:	
  1127  0023                     	ds	2
  1128  0025                     _xfunc_out:	
  1129  0025                     	ds	2
  1130  0027                     _I2C2_Config:	
  1131  0027                     	ds	19
  1132  003A                     _I2C1_Config:	
  1133  003A                     	ds	19
  1134  004D                     _VoltageReg:	
  1135  004D                     	ds	2
  1136  004F                     _ConfigReg:	
  1137  004F                     	ds	1
  1138                           
  1139                           	psect	clrtext
  1140  0426                     clear_ram0:	
  1141                           ;	Called with FSR0 containing the base address, and
  1142                           ;	WREG with the size to clear
  1143                           
  1144  0426  0064               	clrwdt	;clear the watchdog before getting into this loop
  1145  0427                     clrloop0:	
  1146  0427  0180               	clrf	0	;clear RAM location pointed to by FSR
  1147  0428  3101               	addfsr 0,1
  1148  0429  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1149  042A  2C27               	goto	clrloop0	;have we reached the end yet?
  1150  042B  3400               	retlw	0	;all done for this memory range, return
  1151                           
  1152                           	psect	cstackCOMMON
  1153  0070                     __pcstackCOMMON:	
  1154  0070                     ?_Basic_Init:	
  1155  0070                     ?_LCD_Init:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_DAC_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_I2C_CommonInterrupt:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_LCD_DisplayClear:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_main:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_hand:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_WriteData:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_I2C1_PinInit:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_I2C1_Interrupt:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_I2C1_Interrupt:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C2_PinInit:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_I2C2_Interrupt:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ??_I2C2_Interrupt:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x0
  1196  0070                     	ds	1
  1197  0071                     ??_I2C_CommonInterrupt:	
  1198  0071                     ??_hand:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x1
  1203  0071                     	ds	1
  1204  0072                     ??_Basic_Init:	
  1205  0072                     ??_LCD_WriteData:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     ??_I2C1_PinInit:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ?_I2C1_Transmit:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0072                     ??_I2C2_PinInit:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0072                     ?_I2C2_Transmit:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0072                     I2C1_Transmit@pData:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223  0072                     I2C2_Transmit@pData:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x2
  1228  0072                     	ds	1
  1229  0073                     ?_I2C1_Setting:	
  1230  0073                     ?_I2C2_Setting:	
  1231                           ; 1 bytes @ 0x3
  1232                           
  1233  0073                     I2C1_Setting@mode:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     I2C1_Transmit@size:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     I2C2_Setting@mode:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0073                     I2C2_Transmit@size:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247  0073                     	ds	1
  1248  0074                     ??_I2C1_Transmit:	
  1249  0074                     ??_I2C2_Transmit:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0074                     LCD_WriteData@point:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0074                     I2C1_Setting@Speed:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     I2C2_Setting@Speed:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x4
  1263  0074                     	ds	1
  1264  0075                     ??_LCD_DisplayClear:	
  1265  0075                     ??_I2C1_Setting:	
  1266                           ; 1 bytes @ 0x5
  1267                           
  1268  0075                     ??_I2C2_Setting:	
  1269                           ; 1 bytes @ 0x5
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x5
  1273  0075                     	ds	1
  1274  0076                     ??_LCD_Init:	
  1275  0076                     I2C1_Setting@address:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0076                     I2C1_Transmit@address:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281  0076                     I2C2_Setting@address:	
  1282                           ; 1 bytes @ 0x6
  1283                           
  1284  0076                     I2C2_Transmit@address:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x6
  1289  0076                     	ds	1
  1290  0077                     ?_I2C_Init:	
  1291  0077                     I2C1_Transmit@i:	
  1292                           ; 1 bytes @ 0x7
  1293                           
  1294  0077                     I2C2_Transmit@i:	
  1295                           ; 1 bytes @ 0x7
  1296                           
  1297  0077                     I2C_Init@address:	
  1298                           ; 1 bytes @ 0x7
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x7
  1302  0077                     	ds	1
  1303  0078                     I2C1_Transmit@i_369:	
  1304  0078                     I2C2_Transmit@i_513:	
  1305                           ; 1 bytes @ 0x8
  1306                           
  1307  0078                     I2C_Init@mode:	
  1308                           ; 1 bytes @ 0x8
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312  0078                     	ds	1
  1313  0079                     I2C1_Transmit@result:	
  1314  0079                     I2C2_Transmit@result:	
  1315                           ; 1 bytes @ 0x9
  1316                           
  1317  0079                     I2C_Init@Speed:	
  1318                           ; 1 bytes @ 0x9
  1319                           
  1320                           
  1321                           ; 1 bytes @ 0x9
  1322  0079                     	ds	1
  1323  007A                     I2C_Init@I2Cx:	
  1324  007A                     DAC_WriteVoltage@result:	
  1325                           ; 1 bytes @ 0xA
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0xA
  1329  007A                     	ds	1
  1330                           
  1331                           	psect	cstackBANK0
  1332  0050                     __pcstackBANK0:	
  1333  0050                     ??_I2C_Init:	
  1334  0050                     ?_I2C_Transmit:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0050                     I2C_Transmit@address:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0x0
  1342  0050                     	ds	1
  1343  0051                     I2C_Transmit@pData:	
  1344                           
  1345                           ; 1 bytes @ 0x1
  1346  0051                     	ds	1
  1347  0052                     I2C_Transmit@size:	
  1348                           
  1349                           ; 1 bytes @ 0x2
  1350  0052                     	ds	1
  1351  0053                     ??_I2C_Transmit:	
  1352                           
  1353                           ; 1 bytes @ 0x3
  1354  0053                     	ds	3
  1355  0056                     I2C_Transmit@I2Cx:	
  1356                           
  1357                           ; 1 bytes @ 0x6
  1358  0056                     	ds	1
  1359  0057                     I2C_Transmit@result:	
  1360                           
  1361                           ; 1 bytes @ 0x7
  1362  0057                     	ds	1
  1363  0058                     ??_DAC_Initialize:	
  1364  0058                     ?_DAC_WriteVoltage:	
  1365                           ; 1 bytes @ 0x8
  1366                           
  1367  0058                     DAC_WriteVoltage@volue:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x8
  1372  0058                     	ds	2
  1373  005A                     ??_DAC_WriteVoltage:	
  1374                           
  1375                           ; 1 bytes @ 0xA
  1376  005A                     	ds	4
  1377  005E                     ??_main:	
  1378                           
  1379                           ; 1 bytes @ 0xE
  1380  005E                     	ds	2
  1381  0060                     main@voltage:	
  1382                           
  1383                           ; 2 bytes @ 0x10
  1384  0060                     	ds	2
  1385  0062                     main@voltage_70:	
  1386                           
  1387                           ; 2 bytes @ 0x12
  1388  0062                     	ds	2
  1389                           
  1390                           	psect	maintext
  1391  0184                     __pmaintext:	
  1392 ;;
  1393 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 12 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  voltage         2   18[BANK0 ] unsigned int 
  1402 ;;  voltage         2   16[BANK0 ] unsigned int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      char 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : B1F/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1412 ;;      Params:         0       0       0       0       0       0
  1413 ;;      Locals:         0       4       0       0       0       0
  1414 ;;      Temps:          0       2       0       0       0       0
  1415 ;;      Totals:         0       6       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels required when called:    7
  1418 ;; This function calls:
  1419 ;;		_Basic_Init
  1420 ;;		_DAC_Initialize
  1421 ;;		_DAC_WriteVoltage
  1422 ;;		_LCD_Init
  1423 ;; This function is called by:
  1424 ;;		Startup code after reset
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _main
  1430  0184                     _main:	
  1431                           
  1432                           ;main.c: 14: Basic_Init();
  1433                           
  1434                           ;incstack = 0
  1435                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1436  0184  3183  23EC  3181   	fcall	_Basic_Init
  1437                           
  1438                           ;main.c: 15: LCD_Init();
  1439  0187  3181  211B  3181   	fcall	_LCD_Init
  1440                           
  1441                           ;main.c: 16: DAC_Initialize();
  1442  018A  3183  23B1  3181   	fcall	_DAC_Initialize
  1443                           
  1444                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1445  018D  3000               	movlw	0
  1446  018E  0020               	movlb	0	; select bank0
  1447  018F  00A5               	movwf	_xfunc_out
  1448  0190  3000               	movlw	0
  1449  0191  00A6               	movwf	_xfunc_out+1
  1450                           
  1451                           ;main.c: 18: LATA7 = 1;
  1452  0192  0022               	movlb	2	; select bank2
  1453  0193  178C               	bsf	12,7	;volatile
  1454  0194                     l3030:	
  1455                           ;main.c: 20: while(1)
  1456                           
  1457                           
  1458                           ;main.c: 21: {
  1459                           ;main.c: 22: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1460  0194  0020               	movlb	0	; select bank0
  1461  0195  01E0               	clrf	main@voltage
  1462  0196  01E1               	clrf	main@voltage+1
  1463  0197  300F               	movlw	15
  1464  0198  0261               	subwf	main@voltage+1,w
  1465  0199  30FF               	movlw	255
  1466  019A  1903               	skipnz
  1467  019B  0260               	subwf	main@voltage,w
  1468  019C  1803               	btfsc	3,0
  1469  019D  29B5               	goto	l3044
  1470  019E                     l3036:	
  1471                           
  1472                           ;main.c: 23: {
  1473                           ;main.c: 24: DAC_WriteVoltage(voltage);
  1474  019E  0861               	movf	main@voltage+1,w
  1475  019F  00D9               	movwf	DAC_WriteVoltage@volue+1
  1476  01A0  0860               	movf	main@voltage,w
  1477  01A1  00D8               	movwf	DAC_WriteVoltage@volue
  1478  01A2  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1479                           
  1480                           ;main.c: 25: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1481  01A5  30A0               	movlw	160
  1482  01A6                     u2807:	
  1483  01A6  3200               	nop2
  1484  01A7  0B89               	decfsz	9,f
  1485  01A8  29A6               	goto	u2807
  1486  01A9  3001               	movlw	1
  1487  01AA  0020               	movlb	0	; select bank0
  1488  01AB  07E0               	addwf	main@voltage,f
  1489  01AC  3000               	movlw	0
  1490  01AD  3DE1               	addwfc	main@voltage+1,f
  1491  01AE  300F               	movlw	15
  1492  01AF  0261               	subwf	main@voltage+1,w
  1493  01B0  30FF               	movlw	255
  1494  01B1  1903               	skipnz
  1495  01B2  0260               	subwf	main@voltage,w
  1496  01B3  1C03               	skipc
  1497  01B4  299E               	goto	l3036
  1498  01B5                     l3044:	
  1499                           
  1500                           ;main.c: 26: }
  1501                           ;main.c: 27: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1502  01B5  01E2               	clrf	main@voltage_70
  1503  01B6  01E3               	clrf	main@voltage_70+1
  1504  01B7                     L1:	
  1505  01B7  300F               	movlw	15
  1506  01B8  0263               	subwf	main@voltage_70+1,w
  1507  01B9  30FF               	movlw	255
  1508  01BA  1903               	skipnz
  1509  01BB  0262               	subwf	main@voltage_70,w
  1510  01BC  1803               	btfsc	3,0
  1511  01BD  2994               	goto	l3030
  1512                           
  1513                           ;main.c: 28: {
  1514                           ;main.c: 29: DAC_WriteVoltage(0x0FFF-voltage);
  1515  01BE  0962               	comf	main@voltage_70,w
  1516  01BF  00DE               	movwf	??_main
  1517  01C0  0963               	comf	main@voltage_70+1,w
  1518  01C1  00DF               	movwf	??_main+1
  1519  01C2  0ADE               	incf	??_main,f
  1520  01C3  1903               	skipnz
  1521  01C4  0ADF               	incf	??_main+1,f
  1522  01C5  085E               	movf	??_main,w
  1523  01C6  3EFF               	addlw	255
  1524  01C7  00D8               	movwf	DAC_WriteVoltage@volue
  1525  01C8  300F               	movlw	15
  1526  01C9  3D5F               	addwfc	??_main+1,w
  1527  01CA  00D9               	movwf	DAC_WriteVoltage@volue+1
  1528  01CB  3183  232A  3181   	fcall	_DAC_WriteVoltage
  1529                           
  1530                           ;main.c: 30: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1531  01CE  30A0               	movlw	160
  1532  01CF                     u2817:	
  1533  01CF  3200               	nop2
  1534  01D0  0B89               	decfsz	9,f
  1535  01D1  29CF               	goto	u2817
  1536  01D2  3001               	movlw	1
  1537  01D3  0020               	movlb	0	; select bank0
  1538  01D4  07E2               	addwf	main@voltage_70,f
  1539  01D5  3000               	movlw	0
  1540  01D6  3DE3               	addwfc	main@voltage_70+1,f
  1541  01D7  29B7               	goto	L1
  1542  01D8                     __end_of_main:	
  1543                           ;main.c: 31: }
  1544                           ;main.c: 32: }
  1545                           ;main.c: 33: return 0;
  1546                           ;	Return value of _main is never used
  1547                           
  1548                           
  1549                           	psect	text1
  1550  011B                     __ptext1:	
  1551 ;; *************** function _LCD_Init *****************
  1552 ;; Defined at:
  1553 ;;		line 28 in file "LCD.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1567 ;;      Params:         0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0       0
  1570 ;;      Totals:         2       0       0       0       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    5
  1574 ;; This function calls:
  1575 ;;		_LCD_DisplayClear
  1576 ;;		_LCD_WriteData
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _LCD_Init
  1584  011B                     _LCD_Init:	
  1585                           
  1586                           ;LCD.c: 30: RA4 = 0;
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1590  011B  0020               	movlb	0	; select bank0
  1591  011C  120C               	bcf	12,4	;volatile
  1592                           
  1593                           ;LCD.c: 31: RA3 = 0;
  1594  011D  118C               	bcf	12,3	;volatile
  1595                           
  1596                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  1597  011E  3002               	movlw	2
  1598  011F  00F7               	movwf	??_LCD_Init+1
  1599  0120  3038               	movlw	56
  1600  0121  00F6               	movwf	??_LCD_Init
  1601  0122  30AD               	movlw	173
  1602  0123                     u2827:	
  1603  0123  0B89               	decfsz	9,f
  1604  0124  2923               	goto	u2827
  1605  0125  0BF6               	decfsz	??_LCD_Init,f
  1606  0126  2923               	goto	u2827
  1607  0127  0BF7               	decfsz	??_LCD_Init+1,f
  1608  0128  2923               	goto	u2827
  1609  0129  0000               	nop
  1610                           
  1611                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  1612  012A  3003               	movlw	3
  1613  012B  0020               	movlb	0	; select bank0
  1614  012C  008D               	movwf	13	;volatile
  1615                           
  1616                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1617  012D  158C               	bsf	12,3	;volatile
  1618  012E  3200               	nop2	;2 cycle nop
  1619  012F  3200               	nop2	;2 cycle nop
  1620  0130  3200               	nop2	;2 cycle nop
  1621  0131  3200               	nop2	;2 cycle nop
  1622  0132  0020               	movlb	0	; select bank0
  1623  0133  118C               	bcf	12,3	;volatile
  1624  0134  3200               	nop2	;2 cycle nop
  1625  0135  3200               	nop2	;2 cycle nop
  1626  0136  3200               	nop2	;2 cycle nop
  1627  0137  3200               	nop2	;2 cycle nop
  1628                           
  1629                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  1630  0138  3034               	movlw	52
  1631  0139  00F6               	movwf	??_LCD_Init
  1632  013A  30F2               	movlw	242
  1633  013B                     u2837:	
  1634  013B  0B89               	decfsz	9,f
  1635  013C  293B               	goto	u2837
  1636  013D  0BF6               	decfsz	??_LCD_Init,f
  1637  013E  293B               	goto	u2837
  1638                           
  1639                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1640  013F  0020               	movlb	0	; select bank0
  1641  0140  158C               	bsf	12,3	;volatile
  1642  0141  3200               	nop2	;2 cycle nop
  1643  0142  3200               	nop2	;2 cycle nop
  1644  0143  3200               	nop2	;2 cycle nop
  1645  0144  3200               	nop2	;2 cycle nop
  1646  0145  0020               	movlb	0	; select bank0
  1647  0146  118C               	bcf	12,3	;volatile
  1648  0147  3200               	nop2	;2 cycle nop
  1649  0148  3200               	nop2	;2 cycle nop
  1650  0149  3200               	nop2	;2 cycle nop
  1651  014A  3200               	nop2	;2 cycle nop
  1652                           
  1653                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1654  014B  3005               	movlw	5
  1655  014C  00F6               	movwf	??_LCD_Init
  1656  014D  3026               	movlw	38
  1657  014E                     u2847:	
  1658  014E  0B89               	decfsz	9,f
  1659  014F  294E               	goto	u2847
  1660  0150  0BF6               	decfsz	??_LCD_Init,f
  1661  0151  294E               	goto	u2847
  1662  0152  3200               	nop2
  1663                           
  1664                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1665  0153  0020               	movlb	0	; select bank0
  1666  0154  158C               	bsf	12,3	;volatile
  1667  0155  3200               	nop2	;2 cycle nop
  1668  0156  3200               	nop2	;2 cycle nop
  1669  0157  3200               	nop2	;2 cycle nop
  1670  0158  3200               	nop2	;2 cycle nop
  1671  0159  0020               	movlb	0	; select bank0
  1672  015A  118C               	bcf	12,3	;volatile
  1673  015B  3200               	nop2	;2 cycle nop
  1674  015C  3200               	nop2	;2 cycle nop
  1675  015D  3200               	nop2	;2 cycle nop
  1676  015E  3200               	nop2	;2 cycle nop
  1677                           
  1678                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1679  015F  3005               	movlw	5
  1680  0160  00F6               	movwf	??_LCD_Init
  1681  0161  3026               	movlw	38
  1682  0162                     u2857:	
  1683  0162  0B89               	decfsz	9,f
  1684  0163  2962               	goto	u2857
  1685  0164  0BF6               	decfsz	??_LCD_Init,f
  1686  0165  2962               	goto	u2857
  1687  0166  3200               	nop2
  1688                           
  1689                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  1690  0167  3002               	movlw	2
  1691  0168  0020               	movlb	0	; select bank0
  1692  0169  008D               	movwf	13	;volatile
  1693                           
  1694                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1695  016A  158C               	bsf	12,3	;volatile
  1696  016B  3200               	nop2	;2 cycle nop
  1697  016C  3200               	nop2	;2 cycle nop
  1698  016D  3200               	nop2	;2 cycle nop
  1699  016E  3200               	nop2	;2 cycle nop
  1700  016F  0020               	movlb	0	; select bank0
  1701  0170  118C               	bcf	12,3	;volatile
  1702  0171  3200               	nop2	;2 cycle nop
  1703  0172  3200               	nop2	;2 cycle nop
  1704  0173  3200               	nop2	;2 cycle nop
  1705  0174  3200               	nop2	;2 cycle nop
  1706                           
  1707                           ;LCD.c: 44: LCD_WriteData(0x28);
  1708  0175  3028               	movlw	40
  1709  0176  3182  2280  3181   	fcall	_LCD_WriteData
  1710                           
  1711                           ;LCD.c: 45: LCD_WriteData(0x0c);
  1712  0179  300C               	movlw	12
  1713  017A  3182  2280  3181   	fcall	_LCD_WriteData
  1714                           
  1715                           ;LCD.c: 46: LCD_DisplayClear();
  1716  017D  3184  2401  3181   	fcall	_LCD_DisplayClear
  1717                           
  1718                           ;LCD.c: 47: LCD_WriteData(0x06);
  1719  0180  3006               	movlw	6
  1720  0181  3182  2280         	fcall	_LCD_WriteData
  1721  0183  0008               	return
  1722  0184                     __end_of_LCD_Init:	
  1723                           
  1724                           	psect	text2
  1725  0401                     __ptext2:	
  1726 ;; *************** function _LCD_DisplayClear *****************
  1727 ;; Defined at:
  1728 ;;		line 64 in file "LCD.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1742 ;;      Params:         0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0
  1744 ;;      Temps:          1       0       0       0       0       0
  1745 ;;      Totals:         1       0       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    4
  1749 ;; This function calls:
  1750 ;;		_LCD_WriteData
  1751 ;; This function is called by:
  1752 ;;		_LCD_Init
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _LCD_DisplayClear
  1758  0401                     _LCD_DisplayClear:	
  1759                           
  1760                           ;LCD.c: 66: RA4 = 0;
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1764  0401  0020               	movlb	0	; select bank0
  1765  0402  120C               	bcf	12,4	;volatile
  1766                           
  1767                           ;LCD.c: 67: LCD_WriteData(0x01);
  1768  0403  3001               	movlw	1
  1769  0404  3182  2280  3184   	fcall	_LCD_WriteData
  1770                           
  1771                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  1772  0407  3015               	movlw	21
  1773  0408  00F5               	movwf	??_LCD_DisplayClear
  1774  0409  30C6               	movlw	198
  1775  040A                     u2867:	
  1776  040A  0B89               	decfsz	9,f
  1777  040B  2C0A               	goto	u2867
  1778  040C  0BF5               	decfsz	??_LCD_DisplayClear,f
  1779  040D  2C0A               	goto	u2867
  1780  040E  3200               	nop2
  1781  040F  0008               	return
  1782  0410                     __end_of_LCD_DisplayClear:	
  1783                           
  1784                           	psect	text3
  1785  0280                     __ptext3:	
  1786 ;; *************** function _LCD_WriteData *****************
  1787 ;; Defined at:
  1788 ;;		line 15 in file "LCD.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  point           1    wreg     char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  point           1    4[COMMON] char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1802 ;;      Params:         0       0       0       0       0       0
  1803 ;;      Locals:         1       0       0       0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0
  1805 ;;      Totals:         3       0       0       0       0       0
  1806 ;;Total ram usage:        3 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_LCD_Init
  1813 ;;		_LCD_Put
  1814 ;;		_LCD_DisplayClear
  1815 ;;		_LCD_CursorHome
  1816 ;;		_LCD_CursorPosition
  1817 ;;		_LCD_CursorShift
  1818 ;;		_LCD_DispShift
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _LCD_WriteData
  1824  0280                     _LCD_WriteData:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1828                           ;LCD_WriteData@point stored from wreg
  1829  0280  00F4               	movwf	LCD_WriteData@point
  1830                           
  1831                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1832  0281  30D5               	movlw	213
  1833  0282                     u2877:	
  1834  0282  0B89               	decfsz	9,f
  1835  0283  2A82               	goto	u2877
  1836  0284  0000               	nop
  1837                           
  1838                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1839  0285  0874               	movf	LCD_WriteData@point,w
  1840  0286  00F2               	movwf	??_LCD_WriteData
  1841  0287  3004               	movlw	4
  1842  0288                     u1475:	
  1843  0288  1003               	clrc
  1844  0289  1BF2               	btfsc	??_LCD_WriteData,7
  1845  028A  1403               	setc
  1846  028B  0CF2               	rrf	??_LCD_WriteData,f
  1847  028C  0B89               	decfsz	9,f
  1848  028D  2A88               	goto	u1475
  1849  028E  3003               	movlw	3
  1850  028F  0572               	andwf	??_LCD_WriteData,w
  1851  0290  00F3               	movwf	??_LCD_WriteData+1
  1852  0291  0E74               	swapf	LCD_WriteData@point,w
  1853  0292  390F               	andlw	15
  1854  0293  1989               	btfsc	9,3
  1855  0294  38F0               	iorlw	240
  1856  0295  390C               	andlw	12
  1857  0296  0709               	addwf	9,w
  1858  0297  0473               	iorwf	??_LCD_WriteData+1,w
  1859  0298  0020               	movlb	0	; select bank0
  1860  0299  008D               	movwf	13	;volatile
  1861                           
  1862                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1863  029A  158C               	bsf	12,3	;volatile
  1864  029B  3200               	nop2	;2 cycle nop
  1865  029C  3200               	nop2	;2 cycle nop
  1866  029D  3200               	nop2	;2 cycle nop
  1867  029E  3200               	nop2	;2 cycle nop
  1868  029F  0020               	movlb	0	; select bank0
  1869  02A0  118C               	bcf	12,3	;volatile
  1870  02A1  3200               	nop2	;2 cycle nop
  1871  02A2  3200               	nop2	;2 cycle nop
  1872  02A3  3200               	nop2	;2 cycle nop
  1873  02A4  3200               	nop2	;2 cycle nop
  1874                           
  1875                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1876  02A5  3003               	movlw	3
  1877  02A6  0574               	andwf	LCD_WriteData@point,w
  1878  02A7  00F2               	movwf	??_LCD_WriteData
  1879  02A8  0874               	movf	LCD_WriteData@point,w
  1880  02A9  390C               	andlw	12
  1881  02AA  0709               	addwf	9,w
  1882  02AB  0472               	iorwf	??_LCD_WriteData,w
  1883  02AC  0020               	movlb	0	; select bank0
  1884  02AD  008D               	movwf	13	;volatile
  1885                           
  1886                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1887  02AE  158C               	bsf	12,3	;volatile
  1888  02AF  3200               	nop2	;2 cycle nop
  1889  02B0  3200               	nop2	;2 cycle nop
  1890  02B1  3200               	nop2	;2 cycle nop
  1891  02B2  3200               	nop2	;2 cycle nop
  1892  02B3  0020               	movlb	0	; select bank0
  1893  02B4  118C               	bcf	12,3	;volatile
  1894  02B5  3200               	nop2	;2 cycle nop
  1895  02B6  3200               	nop2	;2 cycle nop
  1896  02B7  3200               	nop2	;2 cycle nop
  1897  02B8  3200               	nop2	;2 cycle nop
  1898  02B9  0008               	return
  1899  02BA                     __end_of_LCD_WriteData:	
  1900                           
  1901                           	psect	text4
  1902  032A                     __ptext4:	
  1903 ;; *************** function _DAC_WriteVoltage *****************
  1904 ;; Defined at:
  1905 ;;		line 27 in file "MCP4726.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  volue           2    8[BANK0 ] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  result          1   10[COMMON] char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      char 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1919 ;;      Params:         0       2       0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0       0
  1921 ;;      Temps:          0       4       0       0       0       0
  1922 ;;      Totals:         1       6       0       0       0       0
  1923 ;;Total ram usage:        7 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    5
  1926 ;; This function calls:
  1927 ;;		_I2C_Transmit
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _DAC_WriteVoltage
  1935  032A                     _DAC_WriteVoltage:	
  1936                           
  1937                           ;MCP4726.c: 29: int8_t result;
  1938                           ;MCP4726.c: 31: VoltageReg.Command = (uint8_t)(0x0);
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1942  032A  303F               	movlw	-193
  1943  032B  0020               	movlb	0	; select bank0
  1944  032C  05CD               	andwf	_VoltageReg,f
  1945                           
  1946                           ;MCP4726.c: 32: VoltageReg.PowerDown = ConfigReg.PowerDown;
  1947  032D  0C4F               	rrf	_ConfigReg,w
  1948  032E  3903               	andlw	3
  1949  032F  00DA               	movwf	??_DAC_WriteVoltage
  1950  0330  0EDA               	swapf	??_DAC_WriteVoltage,f
  1951  0331  084D               	movf	_VoltageReg,w
  1952  0332  065A               	xorwf	??_DAC_WriteVoltage,w
  1953  0333  39CF               	andlw	-49
  1954  0334  065A               	xorwf	??_DAC_WriteVoltage,w
  1955  0335  00CD               	movwf	_VoltageReg
  1956                           
  1957                           ;MCP4726.c: 33: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  1958  0336  0859               	movf	DAC_WriteVoltage@volue+1,w
  1959  0337  00DB               	movwf	??_DAC_WriteVoltage+1
  1960  0338  0858               	movf	DAC_WriteVoltage@volue,w
  1961  0339  00DA               	movwf	??_DAC_WriteVoltage
  1962  033A  085B               	movf	??_DAC_WriteVoltage+1,w
  1963  033B  00DA               	movwf	??_DAC_WriteVoltage
  1964  033C  01DB               	clrf	??_DAC_WriteVoltage+1
  1965  033D  300F               	movlw	15
  1966  033E  055A               	andwf	??_DAC_WriteVoltage,w
  1967  033F  00DC               	movwf	??_DAC_WriteVoltage+2
  1968  0340  084D               	movf	_VoltageReg,w
  1969  0341  065C               	xorwf	??_DAC_WriteVoltage+2,w
  1970  0342  39F0               	andlw	-16
  1971  0343  065C               	xorwf	??_DAC_WriteVoltage+2,w
  1972  0344  00CD               	movwf	_VoltageReg
  1973                           
  1974                           ;MCP4726.c: 34: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  1975  0345  0858               	movf	DAC_WriteVoltage@volue,w
  1976  0346  00DA               	movwf	??_DAC_WriteVoltage
  1977  0347  085A               	movf	??_DAC_WriteVoltage,w
  1978  0348  00CE               	movwf	_VoltageReg+1
  1979                           
  1980                           ;MCP4726.c: 36: result = I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  1981  0349  3060               	movlw	96
  1982  034A  00DA               	movwf	??_DAC_WriteVoltage
  1983  034B  085A               	movf	??_DAC_WriteVoltage,w
  1984  034C  00D0               	movwf	I2C_Transmit@address
  1985  034D  304D               	movlw	(low (_VoltageReg| 0))& (0+255)
  1986  034E  00DB               	movwf	??_DAC_WriteVoltage+1
  1987  034F  085B               	movf	??_DAC_WriteVoltage+1,w
  1988  0350  00D1               	movwf	I2C_Transmit@pData
  1989  0351  3002               	movlw	2
  1990  0352  00DC               	movwf	??_DAC_WriteVoltage+2
  1991  0353  085C               	movf	??_DAC_WriteVoltage+2,w
  1992  0354  00D2               	movwf	I2C_Transmit@size
  1993  0355  3001               	movlw	1
  1994  0356  3183  235D         	fcall	_I2C_Transmit
  1995  0358  0020               	movlb	0	; select bank0
  1996  0359  00DD               	movwf	??_DAC_WriteVoltage+3
  1997  035A  085D               	movf	??_DAC_WriteVoltage+3,w
  1998  035B  00FA               	movwf	DAC_WriteVoltage@result
  1999  035C  0008               	return
  2000  035D                     __end_of_DAC_WriteVoltage:	
  2001                           ;MCP4726.c: 38: return result;
  2002                           ;	Return value of _DAC_WriteVoltage is never used
  2003                           
  2004                           
  2005                           	psect	text5
  2006  03B1                     __ptext5:	
  2007 ;; *************** function _DAC_Initialize *****************
  2008 ;; Defined at:
  2009 ;;		line 14 in file "MCP4726.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2023 ;;      Params:         0       0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0
  2025 ;;      Temps:          0       2       0       0       0       0
  2026 ;;      Totals:         0       2       0       0       0       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    6
  2030 ;; This function calls:
  2031 ;;		_I2C_Init
  2032 ;;		_I2C_Transmit
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _DAC_Initialize
  2040  03B1                     _DAC_Initialize:	
  2041                           
  2042                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2046  03B1  01F7               	clrf	I2C_Init@address
  2047  03B2  01F8               	clrf	I2C_Init@mode
  2048  03B3  01F9               	clrf	I2C_Init@Speed
  2049  03B4  3001               	movlw	1
  2050  03B5  3183  2388  3183   	fcall	_I2C_Init
  2051                           
  2052                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  2053  03B8  0020               	movlb	0	; select bank0
  2054  03B9  084F               	movf	_ConfigReg,w
  2055  03BA  391F               	andlw	-225
  2056  03BB  3880               	iorlw	128
  2057  03BC  00CF               	movwf	_ConfigReg
  2058                           
  2059                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  2060  03BD  104F               	bcf	_ConfigReg,0
  2061                           
  2062                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  2063  03BE  30F9               	movlw	-7
  2064  03BF  05CF               	andwf	_ConfigReg,f
  2065                           
  2066                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  2067  03C0  30E7               	movlw	-25
  2068  03C1  05CF               	andwf	_ConfigReg,f
  2069                           
  2070                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  2071  03C2  3060               	movlw	96
  2072  03C3  00D8               	movwf	??_DAC_Initialize
  2073  03C4  0858               	movf	??_DAC_Initialize,w
  2074  03C5  00D0               	movwf	I2C_Transmit@address
  2075  03C6  304F               	movlw	(low (_ConfigReg| 0))& (0+255)
  2076  03C7  00D9               	movwf	??_DAC_Initialize+1
  2077  03C8  0859               	movf	??_DAC_Initialize+1,w
  2078  03C9  00D1               	movwf	I2C_Transmit@pData
  2079  03CA  01D2               	clrf	I2C_Transmit@size
  2080  03CB  0AD2               	incf	I2C_Transmit@size,f
  2081  03CC  3001               	movlw	1
  2082  03CD  3183  235D         	fcall	_I2C_Transmit
  2083  03CF  0008               	return
  2084  03D0                     __end_of_DAC_Initialize:	
  2085                           
  2086                           	psect	text6
  2087  035D                     __ptext6:	
  2088 ;; *************** function _I2C_Transmit *****************
  2089 ;; Defined at:
  2090 ;;		line 23 in file "I2C_Common.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  I2Cx            1    wreg     enum E3036
  2093 ;;  address         1    0[BANK0 ] unsigned char 
  2094 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  2095 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2096 ;;  size            1    2[BANK0 ] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  I2Cx            1    6[BANK0 ] enum E3036
  2099 ;;  result          1    7[BANK0 ] char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      char 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2109 ;;      Params:         0       3       0       0       0       0
  2110 ;;      Locals:         0       2       0       0       0       0
  2111 ;;      Temps:          0       3       0       0       0       0
  2112 ;;      Totals:         0       8       0       0       0       0
  2113 ;;Total ram usage:        8 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    4
  2116 ;; This function calls:
  2117 ;;		_I2C1_Transmit
  2118 ;;		_I2C2_Transmit
  2119 ;; This function is called by:
  2120 ;;		_DAC_Initialize
  2121 ;;		_DAC_WriteVoltage
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _I2C_Transmit
  2127  035D                     _I2C_Transmit:	
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2131                           ;I2C_Transmit@I2Cx stored from wreg
  2132  035D  0020               	movlb	0	; select bank0
  2133  035E  00D6               	movwf	I2C_Transmit@I2Cx
  2134                           
  2135                           ;I2C_Common.c: 25: int8_t result;
  2136                           ;I2C_Common.c: 27: switch(I2Cx)
  2137  035F  2B7E               	goto	l2996
  2138  0360                     l2990:	
  2139                           ;I2C_Common.c: 28: {
  2140                           ;I2C_Common.c: 29: case I2C1_MODULE:
  2141                           
  2142                           
  2143                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  2144  0360  0851               	movf	I2C_Transmit@pData,w
  2145  0361  00D3               	movwf	??_I2C_Transmit
  2146  0362  0853               	movf	??_I2C_Transmit,w
  2147  0363  00F2               	movwf	I2C1_Transmit@pData
  2148  0364  0852               	movf	I2C_Transmit@size,w
  2149  0365  00D4               	movwf	??_I2C_Transmit+1
  2150  0366  0854               	movf	??_I2C_Transmit+1,w
  2151  0367  00F3               	movwf	I2C1_Transmit@size
  2152  0368  0850               	movf	I2C_Transmit@address,w
  2153  0369  3180  209D  3183   	fcall	_I2C1_Transmit
  2154  036C  2B79               	goto	L2
  2155  036D                     l2992:	
  2156                           ;I2C_Common.c: 33: case I2C2_MODULE:
  2157                           
  2158                           ;I2C_Common.c: 31: break;
  2159                           
  2160                           
  2161                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  2162  036D  0851               	movf	I2C_Transmit@pData,w
  2163  036E  00D3               	movwf	??_I2C_Transmit
  2164  036F  0853               	movf	??_I2C_Transmit,w
  2165  0370  00F2               	movwf	I2C2_Transmit@pData
  2166  0371  0852               	movf	I2C_Transmit@size,w
  2167  0372  00D4               	movwf	??_I2C_Transmit+1
  2168  0373  0854               	movf	??_I2C_Transmit+1,w
  2169  0374  00F3               	movwf	I2C2_Transmit@size
  2170  0375  0850               	movf	I2C_Transmit@address,w
  2171  0376  3180  201E  3183   	fcall	_I2C2_Transmit
  2172  0379                     L2:	
  2173  0379  0020               	movlb	0	; select bank0
  2174  037A  00D5               	movwf	??_I2C_Transmit+2
  2175  037B  0855               	movf	??_I2C_Transmit+2,w
  2176  037C  00D7               	movwf	I2C_Transmit@result
  2177                           
  2178                           ;I2C_Common.c: 36: }
  2179                           
  2180                           ;I2C_Common.c: 35: break;
  2181  037D  2B86               	goto	l2998
  2182  037E                     l2996:	
  2183  037E  0856               	movf	I2C_Transmit@I2Cx,w
  2184                           
  2185                           ; Switch size 1, requested type "space"
  2186                           ; Number of cases is 2, Range of values is 0 to 1
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            7     4 (average)
  2190                           ; direct_byte           10     6 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193  037F  3A00               	xorlw	0	; case 0
  2194  0380  1903               	skipnz
  2195  0381  2B60               	goto	l2990
  2196  0382  3A01               	xorlw	1	; case 1
  2197  0383  1903               	skipnz
  2198  0384  2B6D               	goto	l2992
  2199  0385  2B86               	goto	l2998
  2200  0386                     l2998:	
  2201                           
  2202                           ;I2C_Common.c: 37: return result;
  2203  0386  0857               	movf	I2C_Transmit@result,w
  2204  0387  0008               	return
  2205  0388                     __end_of_I2C_Transmit:	
  2206                           
  2207                           	psect	text7
  2208  001E                     __ptext7:	
  2209 ;; *************** function _I2C2_Transmit *****************
  2210 ;; Defined at:
  2211 ;;		line 52 in file "I2C2.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  address         1    wreg     unsigned char 
  2214 ;;  pData           1    2[COMMON] PTR unsigned char 
  2215 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2216 ;;  size            1    3[COMMON] unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  address         1    6[COMMON] unsigned char 
  2219 ;;  i               1    8[COMMON] unsigned char 
  2220 ;;  i               1    7[COMMON] unsigned char 
  2221 ;;  result          1    9[COMMON] char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      char 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2231 ;;      Params:         2       0       0       0       0       0
  2232 ;;      Locals:         4       0       0       0       0       0
  2233 ;;      Temps:          2       0       0       0       0       0
  2234 ;;      Totals:         8       0       0       0       0       0
  2235 ;;Total ram usage:        8 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_I2C_Transmit
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _I2C2_Transmit
  2247  001E                     _I2C2_Transmit:	
  2248                           
  2249                           ;incstack = 0
  2250                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  2251                           ;I2C2_Transmit@address stored from wreg
  2252  001E  00F6               	movwf	I2C2_Transmit@address
  2253                           
  2254                           ;I2C2.c: 54: int8_t result = 0;
  2255  001F  01F9               	clrf	I2C2_Transmit@result
  2256                           
  2257                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  2258  0020  2892               	goto	l2972
  2259  0021                     l2928:	
  2260                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2261                           
  2262                           ;I2C2.c: 57: {
  2263                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  2264                           
  2265  0021  3005               	movlw	5
  2266  0022  0024               	movlb	4	; select bank4
  2267  0023  051C               	andwf	28,w	;volatile
  2268  0024  00F4               	movwf	??_I2C2_Transmit
  2269  0025  081E               	movf	30,w	;volatile
  2270  0026  391F               	andlw	31
  2271  0027  0474               	iorwf	??_I2C2_Transmit,w
  2272  0028  1D03               	btfss	3,2
  2273  0029  2821               	goto	l2928
  2274                           
  2275                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  2276  002A  141E               	bsf	30,0	;volatile
  2277  002B                     l2930:	
  2278                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2279                           
  2280  002B  3005               	movlw	5
  2281  002C  051C               	andwf	28,w	;volatile
  2282  002D  00F4               	movwf	??_I2C2_Transmit
  2283  002E  081E               	movf	30,w	;volatile
  2284  002F  391F               	andlw	31
  2285  0030  0474               	iorwf	??_I2C2_Transmit,w
  2286  0031  1D03               	btfss	3,2
  2287  0032  282B               	goto	l2930
  2288                           
  2289                           ;I2C2.c: 63: SSP2BUF = address << 1;
  2290  0033  3576               	lslf	I2C2_Transmit@address,w
  2291  0034  0099               	movwf	25	;volatile
  2292  0035                     l467:	
  2293                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  2294                           
  2295  0035  191C               	btfsc	28,2	;volatile
  2296  0036  2835               	goto	l467
  2297                           
  2298                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  2299  0037  3000               	movlw	0
  2300  0038  1B1E               	btfsc	30,6	;volatile
  2301  0039  3001               	movlw	1
  2302  003A  00F9               	movwf	I2C2_Transmit@result
  2303                           
  2304                           ;I2C2.c: 67: if (!result)
  2305  003B  0879               	movf	I2C2_Transmit@result,w
  2306  003C  1D03               	btfss	3,2
  2307  003D  2865               	goto	l2954
  2308                           
  2309                           ;I2C2.c: 68: {
  2310                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  2311  003E  01F7               	clrf	I2C2_Transmit@i
  2312  003F  2844               	goto	l2952
  2313  0040                     l2950:	
  2314                           ;I2C2.c: 79: break;
  2315                           
  2316  0040  3001               	movlw	1
  2317  0041  00F4               	movwf	??_I2C2_Transmit
  2318  0042  0874               	movf	??_I2C2_Transmit,w
  2319  0043  07F7               	addwf	I2C2_Transmit@i,f
  2320  0044                     l2952:	
  2321  0044  0873               	movf	I2C2_Transmit@size,w
  2322  0045  0277               	subwf	I2C2_Transmit@i,w
  2323  0046  1803               	btfsc	3,0
  2324  0047  2865               	goto	l2954
  2325  0048                     l2940:	
  2326                           ;I2C2.c: 70: {
  2327                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2328                           
  2329  0048  3005               	movlw	5
  2330  0049  051C               	andwf	28,w	;volatile
  2331  004A  00F4               	movwf	??_I2C2_Transmit
  2332  004B  081E               	movf	30,w	;volatile
  2333  004C  391F               	andlw	31
  2334  004D  0474               	iorwf	??_I2C2_Transmit,w
  2335  004E  1D03               	btfss	3,2
  2336  004F  2848               	goto	l2940
  2337                           
  2338                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  2339  0050  0877               	movf	I2C2_Transmit@i,w
  2340  0051  0772               	addwf	I2C2_Transmit@pData,w
  2341  0052  00F4               	movwf	??_I2C2_Transmit
  2342  0053  0874               	movf	??_I2C2_Transmit,w
  2343  0054  0086               	movwf	6
  2344  0055  0187               	clrf	7
  2345  0056  0801               	movf	1,w
  2346  0057  0099               	movwf	25	;volatile
  2347  0058                     l476:	
  2348                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  2349                           
  2350  0058  191C               	btfsc	28,2	;volatile
  2351  0059  2858               	goto	l476
  2352                           
  2353                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  2354  005A  3000               	movlw	0
  2355  005B  1B1E               	btfsc	30,6	;volatile
  2356  005C  3001               	movlw	1
  2357  005D  00F9               	movwf	I2C2_Transmit@result
  2358                           
  2359                           ;I2C2.c: 76: if (result)
  2360  005E  0879               	movf	I2C2_Transmit@result,w
  2361  005F  1903               	btfsc	3,2
  2362  0060  2840               	goto	l2950
  2363                           
  2364                           ;I2C2.c: 77: {
  2365                           ;I2C2.c: 78: result = 2;
  2366  0061  3002               	movlw	2
  2367  0062  00F4               	movwf	??_I2C2_Transmit
  2368  0063  0874               	movf	??_I2C2_Transmit,w
  2369  0064  00F9               	movwf	I2C2_Transmit@result
  2370  0065                     l2954:	
  2371                           ;I2C2.c: 80: }
  2372                           ;I2C2.c: 81: }
  2373                           ;I2C2.c: 82: }
  2374                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2375                           
  2376  0065  3005               	movlw	5
  2377  0066  051C               	andwf	28,w	;volatile
  2378  0067  00F4               	movwf	??_I2C2_Transmit
  2379  0068  081E               	movf	30,w	;volatile
  2380  0069  391F               	andlw	31
  2381  006A  0474               	iorwf	??_I2C2_Transmit,w
  2382  006B  1D03               	btfss	3,2
  2383  006C  2865               	goto	l2954
  2384                           
  2385                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  2386  006D  151E               	bsf	30,2	;volatile
  2387                           
  2388                           ;I2C2.c: 86: break;
  2389  006E  289B               	goto	l2974
  2390  006F                     l485:	
  2391                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  2392                           
  2393                           
  2394                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  2395  006F  0024               	movlb	4	; select bank4
  2396  0070  1D9C               	btfss	28,3	;volatile
  2397  0071  1E1C               	btfss	28,4	;volatile
  2398  0072  2890               	goto	l2968
  2399                           
  2400                           ;I2C2.c: 90: {
  2401                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  2402  0073  01F8               	clrf	I2C2_Transmit@i_513
  2403  0074                     l2964:	
  2404  0074  0873               	movf	I2C2_Transmit@size,w
  2405  0075  0278               	subwf	I2C2_Transmit@i_513,w
  2406  0076  1803               	btfsc	3,0
  2407  0077  288B               	goto	l2966
  2408                           
  2409                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  2410  0078  0878               	movf	I2C2_Transmit@i_513,w
  2411  0079  0772               	addwf	I2C2_Transmit@pData,w
  2412  007A  00F4               	movwf	??_I2C2_Transmit
  2413  007B  0874               	movf	??_I2C2_Transmit,w
  2414  007C  0086               	movwf	6
  2415  007D  0187               	clrf	7
  2416  007E  0801               	movf	1,w
  2417  007F  00F5               	movwf	??_I2C2_Transmit+1
  2418  0080  0878               	movf	I2C2_Transmit@i_513,w
  2419  0081  3E27               	addlw	(low (_I2C2_Config| 0))& (0+255)
  2420  0082  0086               	movwf	6
  2421  0083  0187               	clrf	7
  2422  0084  0875               	movf	??_I2C2_Transmit+1,w
  2423  0085  0081               	movwf	1
  2424  0086  3001               	movlw	1
  2425  0087  00F4               	movwf	??_I2C2_Transmit
  2426  0088  0874               	movf	??_I2C2_Transmit,w
  2427  0089  07F8               	addwf	I2C2_Transmit@i_513,f
  2428  008A  2874               	goto	l2964
  2429  008B                     l2966:	
  2430                           
  2431                           ;I2C2.c: 93: result = size;
  2432  008B  0873               	movf	I2C2_Transmit@size,w
  2433  008C  00F4               	movwf	??_I2C2_Transmit
  2434  008D  0874               	movf	??_I2C2_Transmit,w
  2435  008E  00F9               	movwf	I2C2_Transmit@result
  2436                           
  2437                           ;I2C2.c: 94: }
  2438  008F  289B               	goto	l2974
  2439  0090                     l2968:	
  2440                           
  2441                           ;I2C2.c: 95: else
  2442                           ;I2C2.c: 96: result = 0;
  2443  0090  01F9               	clrf	I2C2_Transmit@result
  2444                           
  2445                           ;I2C2.c: 98: }
  2446                           
  2447                           ;I2C2.c: 97: break;
  2448  0091  289B               	goto	l2974
  2449  0092                     l2972:	
  2450  0092  0020               	movlb	0	; select bank0
  2451  0093  0839               	movf	_I2C2_Config+18,w
  2452                           
  2453                           ; Switch size 1, requested type "space"
  2454                           ; Number of cases is 2, Range of values is 0 to 1
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte            7     4 (average)
  2458                           ; direct_byte           10     6 (fixed)
  2459                           ; jumptable            260     6 (fixed)
  2460                           ;	Chosen strategy is simple_byte
  2461  0094  3A00               	xorlw	0	; case 0
  2462  0095  1903               	skipnz
  2463  0096  2821               	goto	l2928
  2464  0097  3A01               	xorlw	1	; case 1
  2465  0098  1903               	skipnz
  2466  0099  286F               	goto	l485
  2467  009A  289B               	goto	l2974
  2468  009B                     l2974:	
  2469                           
  2470                           ;I2C2.c: 100: return result;
  2471  009B  0879               	movf	I2C2_Transmit@result,w
  2472  009C  0008               	return
  2473  009D                     __end_of_I2C2_Transmit:	
  2474                           
  2475                           	psect	text8
  2476  009D                     __ptext8:	
  2477 ;; *************** function _I2C1_Transmit *****************
  2478 ;; Defined at:
  2479 ;;		line 52 in file "I2C1.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  address         1    wreg     unsigned char 
  2482 ;;  pData           1    2[COMMON] PTR unsigned char 
  2483 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2484 ;;  size            1    3[COMMON] unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  address         1    6[COMMON] unsigned char 
  2487 ;;  i               1    8[COMMON] unsigned char 
  2488 ;;  i               1    7[COMMON] unsigned char 
  2489 ;;  result          1    9[COMMON] char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      char 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         2       0       0       0       0       0
  2500 ;;      Locals:         4       0       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0       0
  2502 ;;      Totals:         8       0       0       0       0       0
  2503 ;;Total ram usage:        8 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_I2C_Transmit
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _I2C1_Transmit
  2515  009D                     _I2C1_Transmit:	
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2519                           ;I2C1_Transmit@address stored from wreg
  2520  009D  00F6               	movwf	I2C1_Transmit@address
  2521                           
  2522                           ;I2C1.c: 54: int8_t result;
  2523                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  2524  009E  2910               	goto	l2886
  2525  009F                     l2842:	
  2526                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2527                           
  2528                           ;I2C1.c: 57: {
  2529                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  2530                           
  2531  009F  3005               	movlw	5
  2532  00A0  0024               	movlb	4	; select bank4
  2533  00A1  0514               	andwf	20,w	;volatile
  2534  00A2  00F4               	movwf	??_I2C1_Transmit
  2535  00A3  0816               	movf	22,w	;volatile
  2536  00A4  391F               	andlw	31
  2537  00A5  0474               	iorwf	??_I2C1_Transmit,w
  2538  00A6  1D03               	btfss	3,2
  2539  00A7  289F               	goto	l2842
  2540                           
  2541                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  2542  00A8  1416               	bsf	22,0	;volatile
  2543  00A9                     l2844:	
  2544                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2545                           
  2546  00A9  3005               	movlw	5
  2547  00AA  0514               	andwf	20,w	;volatile
  2548  00AB  00F4               	movwf	??_I2C1_Transmit
  2549  00AC  0816               	movf	22,w	;volatile
  2550  00AD  391F               	andlw	31
  2551  00AE  0474               	iorwf	??_I2C1_Transmit,w
  2552  00AF  1D03               	btfss	3,2
  2553  00B0  28A9               	goto	l2844
  2554                           
  2555                           ;I2C1.c: 63: SSP1BUF = address << 1;
  2556  00B1  3576               	lslf	I2C1_Transmit@address,w
  2557  00B2  0091               	movwf	17	;volatile
  2558  00B3                     l330:	
  2559                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  2560                           
  2561  00B3  1914               	btfsc	20,2	;volatile
  2562  00B4  28B3               	goto	l330
  2563                           
  2564                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  2565  00B5  3000               	movlw	0
  2566  00B6  1B16               	btfsc	22,6	;volatile
  2567  00B7  3001               	movlw	1
  2568  00B8  00F9               	movwf	I2C1_Transmit@result
  2569                           
  2570                           ;I2C1.c: 67: if (!result)
  2571  00B9  0879               	movf	I2C1_Transmit@result,w
  2572  00BA  1D03               	btfss	3,2
  2573  00BB  28E3               	goto	l2868
  2574                           
  2575                           ;I2C1.c: 68: {
  2576                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  2577  00BC  01F7               	clrf	I2C1_Transmit@i
  2578  00BD  28C2               	goto	l2866
  2579  00BE                     l2864:	
  2580                           ;I2C1.c: 79: break;
  2581                           
  2582  00BE  3001               	movlw	1
  2583  00BF  00F4               	movwf	??_I2C1_Transmit
  2584  00C0  0874               	movf	??_I2C1_Transmit,w
  2585  00C1  07F7               	addwf	I2C1_Transmit@i,f
  2586  00C2                     l2866:	
  2587  00C2  0873               	movf	I2C1_Transmit@size,w
  2588  00C3  0277               	subwf	I2C1_Transmit@i,w
  2589  00C4  1803               	btfsc	3,0
  2590  00C5  28E3               	goto	l2868
  2591  00C6                     l2854:	
  2592                           ;I2C1.c: 70: {
  2593                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2594                           
  2595  00C6  3005               	movlw	5
  2596  00C7  0514               	andwf	20,w	;volatile
  2597  00C8  00F4               	movwf	??_I2C1_Transmit
  2598  00C9  0816               	movf	22,w	;volatile
  2599  00CA  391F               	andlw	31
  2600  00CB  0474               	iorwf	??_I2C1_Transmit,w
  2601  00CC  1D03               	btfss	3,2
  2602  00CD  28C6               	goto	l2854
  2603                           
  2604                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  2605  00CE  0877               	movf	I2C1_Transmit@i,w
  2606  00CF  0772               	addwf	I2C1_Transmit@pData,w
  2607  00D0  00F4               	movwf	??_I2C1_Transmit
  2608  00D1  0874               	movf	??_I2C1_Transmit,w
  2609  00D2  0086               	movwf	6
  2610  00D3  0187               	clrf	7
  2611  00D4  0801               	movf	1,w
  2612  00D5  0091               	movwf	17	;volatile
  2613  00D6                     l339:	
  2614                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  2615                           
  2616  00D6  1914               	btfsc	20,2	;volatile
  2617  00D7  28D6               	goto	l339
  2618                           
  2619                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  2620  00D8  3000               	movlw	0
  2621  00D9  1B16               	btfsc	22,6	;volatile
  2622  00DA  3001               	movlw	1
  2623  00DB  00F9               	movwf	I2C1_Transmit@result
  2624                           
  2625                           ;I2C1.c: 76: if (result)
  2626  00DC  0879               	movf	I2C1_Transmit@result,w
  2627  00DD  1903               	btfsc	3,2
  2628  00DE  28BE               	goto	l2864
  2629                           
  2630                           ;I2C1.c: 77: {
  2631                           ;I2C1.c: 78: result = 2;
  2632  00DF  3002               	movlw	2
  2633  00E0  00F4               	movwf	??_I2C1_Transmit
  2634  00E1  0874               	movf	??_I2C1_Transmit,w
  2635  00E2  00F9               	movwf	I2C1_Transmit@result
  2636  00E3                     l2868:	
  2637                           ;I2C1.c: 80: }
  2638                           ;I2C1.c: 81: }
  2639                           ;I2C1.c: 82: }
  2640                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2641                           
  2642  00E3  3005               	movlw	5
  2643  00E4  0514               	andwf	20,w	;volatile
  2644  00E5  00F4               	movwf	??_I2C1_Transmit
  2645  00E6  0816               	movf	22,w	;volatile
  2646  00E7  391F               	andlw	31
  2647  00E8  0474               	iorwf	??_I2C1_Transmit,w
  2648  00E9  1D03               	btfss	3,2
  2649  00EA  28E3               	goto	l2868
  2650                           
  2651                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  2652  00EB  1516               	bsf	22,2	;volatile
  2653                           
  2654                           ;I2C1.c: 86: break;
  2655  00EC  2919               	goto	l2888
  2656  00ED                     l348:	
  2657                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  2658                           
  2659                           
  2660                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  2661  00ED  0024               	movlb	4	; select bank4
  2662  00EE  1D94               	btfss	20,3	;volatile
  2663  00EF  1E14               	btfss	20,4	;volatile
  2664  00F0  290E               	goto	l2882
  2665                           
  2666                           ;I2C1.c: 90: {
  2667                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  2668  00F1  01F8               	clrf	I2C1_Transmit@i_369
  2669  00F2                     l2878:	
  2670  00F2  0873               	movf	I2C1_Transmit@size,w
  2671  00F3  0278               	subwf	I2C1_Transmit@i_369,w
  2672  00F4  1803               	btfsc	3,0
  2673  00F5  2909               	goto	l2880
  2674                           
  2675                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2676  00F6  0878               	movf	I2C1_Transmit@i_369,w
  2677  00F7  0772               	addwf	I2C1_Transmit@pData,w
  2678  00F8  00F4               	movwf	??_I2C1_Transmit
  2679  00F9  0874               	movf	??_I2C1_Transmit,w
  2680  00FA  0086               	movwf	6
  2681  00FB  0187               	clrf	7
  2682  00FC  0801               	movf	1,w
  2683  00FD  00F5               	movwf	??_I2C1_Transmit+1
  2684  00FE  0878               	movf	I2C1_Transmit@i_369,w
  2685  00FF  3E3A               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2686  0100  0086               	movwf	6
  2687  0101  0187               	clrf	7
  2688  0102  0875               	movf	??_I2C1_Transmit+1,w
  2689  0103  0081               	movwf	1
  2690  0104  3001               	movlw	1
  2691  0105  00F4               	movwf	??_I2C1_Transmit
  2692  0106  0874               	movf	??_I2C1_Transmit,w
  2693  0107  07F8               	addwf	I2C1_Transmit@i_369,f
  2694  0108  28F2               	goto	l2878
  2695  0109                     l2880:	
  2696                           
  2697                           ;I2C1.c: 93: result = size;
  2698  0109  0873               	movf	I2C1_Transmit@size,w
  2699  010A  00F4               	movwf	??_I2C1_Transmit
  2700  010B  0874               	movf	??_I2C1_Transmit,w
  2701  010C  00F9               	movwf	I2C1_Transmit@result
  2702                           
  2703                           ;I2C1.c: 94: }
  2704  010D  2919               	goto	l2888
  2705  010E                     l2882:	
  2706                           
  2707                           ;I2C1.c: 95: else
  2708                           ;I2C1.c: 96: result = 0;
  2709  010E  01F9               	clrf	I2C1_Transmit@result
  2710                           
  2711                           ;I2C1.c: 98: }
  2712                           
  2713                           ;I2C1.c: 97: break;
  2714  010F  2919               	goto	l2888
  2715  0110                     l2886:	
  2716  0110  0020               	movlb	0	; select bank0
  2717  0111  084C               	movf	_I2C1_Config+18,w
  2718                           
  2719                           ; Switch size 1, requested type "space"
  2720                           ; Number of cases is 2, Range of values is 0 to 1
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            7     4 (average)
  2724                           ; direct_byte           10     6 (fixed)
  2725                           ; jumptable            260     6 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  0112  3A00               	xorlw	0	; case 0
  2728  0113  1903               	skipnz
  2729  0114  289F               	goto	l2842
  2730  0115  3A01               	xorlw	1	; case 1
  2731  0116  1903               	skipnz
  2732  0117  28ED               	goto	l348
  2733  0118  2919               	goto	l2888
  2734  0119                     l2888:	
  2735                           
  2736                           ;I2C1.c: 100: return result;
  2737  0119  0879               	movf	I2C1_Transmit@result,w
  2738  011A  0008               	return
  2739  011B                     __end_of_I2C1_Transmit:	
  2740                           
  2741                           	psect	text9
  2742  0388                     __ptext9:	
  2743 ;; *************** function _I2C_Init *****************
  2744 ;; Defined at:
  2745 ;;		line 6 in file "I2C_Common.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  I2Cx            1    wreg     enum E3036
  2748 ;;  address         1    7[COMMON] unsigned char 
  2749 ;;  mode            1    8[COMMON] enum E3027
  2750 ;;  Speed           1    9[COMMON] enum E3031
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  I2Cx            1   10[COMMON] enum E3036
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2762 ;;      Params:         3       0       0       0       0       0
  2763 ;;      Locals:         1       0       0       0       0       0
  2764 ;;      Temps:          0       2       0       0       0       0
  2765 ;;      Totals:         4       2       0       0       0       0
  2766 ;;Total ram usage:        6 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    5
  2769 ;; This function calls:
  2770 ;;		_I2C1_Setting
  2771 ;;		_I2C2_Setting
  2772 ;; This function is called by:
  2773 ;;		_DAC_Initialize
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _I2C_Init
  2779  0388                     _I2C_Init:	
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2783                           ;I2C_Init@I2Cx stored from wreg
  2784  0388  00FA               	movwf	I2C_Init@I2Cx
  2785                           
  2786                           ;I2C_Common.c: 8: switch(I2Cx)
  2787  0389  2BA6               	goto	l2986
  2788  038A                     l2980:	
  2789                           ;I2C_Common.c: 9: {
  2790                           ;I2C_Common.c: 10: case I2C1_MODULE:
  2791                           
  2792                           
  2793                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  2794  038A  0878               	movf	I2C_Init@mode,w
  2795  038B  0020               	movlb	0	; select bank0
  2796  038C  00D0               	movwf	??_I2C_Init
  2797  038D  0850               	movf	??_I2C_Init,w
  2798  038E  00F3               	movwf	I2C1_Setting@mode
  2799  038F  0879               	movf	I2C_Init@Speed,w
  2800  0390  00D1               	movwf	??_I2C_Init+1
  2801  0391  0851               	movf	??_I2C_Init+1,w
  2802  0392  00F4               	movwf	I2C1_Setting@Speed
  2803  0393  0877               	movf	I2C_Init@address,w
  2804  0394  3182  22F2  3183   	fcall	_I2C1_Setting
  2805                           
  2806                           ;I2C_Common.c: 12: break;
  2807  0397  2BAE               	goto	l577
  2808  0398                     l2982:	
  2809                           ;I2C_Common.c: 14: case I2C2_MODULE:
  2810                           
  2811                           
  2812                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  2813  0398  0878               	movf	I2C_Init@mode,w
  2814  0399  0020               	movlb	0	; select bank0
  2815  039A  00D0               	movwf	??_I2C_Init
  2816  039B  0850               	movf	??_I2C_Init,w
  2817  039C  00F3               	movwf	I2C2_Setting@mode
  2818  039D  0879               	movf	I2C_Init@Speed,w
  2819  039E  00D1               	movwf	??_I2C_Init+1
  2820  039F  0851               	movf	??_I2C_Init+1,w
  2821  03A0  00F4               	movwf	I2C2_Setting@Speed
  2822  03A1  0877               	movf	I2C_Init@address,w
  2823  03A2  3182  22BA  3183   	fcall	_I2C2_Setting
  2824                           
  2825                           ;I2C_Common.c: 17: }
  2826                           
  2827                           ;I2C_Common.c: 16: break;
  2828  03A5  2BAE               	goto	l577
  2829  03A6                     l2986:	
  2830  03A6  087A               	movf	I2C_Init@I2Cx,w
  2831                           
  2832                           ; Switch size 1, requested type "space"
  2833                           ; Number of cases is 2, Range of values is 0 to 1
  2834                           ; switch strategies available:
  2835                           ; Name         Instructions Cycles
  2836                           ; simple_byte            7     4 (average)
  2837                           ; direct_byte           10     6 (fixed)
  2838                           ; jumptable            260     6 (fixed)
  2839                           ;	Chosen strategy is simple_byte
  2840  03A7  3A00               	xorlw	0	; case 0
  2841  03A8  1903               	skipnz
  2842  03A9  2B8A               	goto	l2980
  2843  03AA  3A01               	xorlw	1	; case 1
  2844  03AB  1903               	skipnz
  2845  03AC  2B98               	goto	l2982
  2846  03AD  2BAE               	goto	l577
  2847  03AE                     l577:	
  2848                           
  2849                           ;I2C_Common.c: 19: PEIE = 1;
  2850  03AE  170B               	bsf	11,6	;volatile
  2851                           
  2852                           ;I2C_Common.c: 20: GIE = 1;
  2853  03AF  178B               	bsf	11,7	;volatile
  2854  03B0  0008               	return
  2855  03B1                     __end_of_I2C_Init:	
  2856                           
  2857                           	psect	text10
  2858  02BA                     __ptext10:	
  2859 ;; *************** function _I2C2_Setting *****************
  2860 ;; Defined at:
  2861 ;;		line 15 in file "I2C2.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  address         1    wreg     unsigned char 
  2864 ;;  mode            1    3[COMMON] enum E3027
  2865 ;;  Speed           1    4[COMMON] enum E3031
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  address         1    6[COMMON] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2877 ;;      Params:         2       0       0       0       0       0
  2878 ;;      Locals:         1       0       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0       0
  2880 ;;      Totals:         4       0       0       0       0       0
  2881 ;;Total ram usage:        4 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_I2C2_PinInit
  2886 ;; This function is called by:
  2887 ;;		_I2C_Init
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _I2C2_Setting
  2893  02BA                     _I2C2_Setting:	
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2897                           ;I2C2_Setting@address stored from wreg
  2898  02BA  00F6               	movwf	I2C2_Setting@address
  2899                           
  2900                           ;I2C2.c: 17: I2C2_PinInit();
  2901  02BB  3184  2410  3182   	fcall	_I2C2_PinInit
  2902                           
  2903                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  2904  02BE  0873               	movf	I2C2_Setting@mode,w
  2905  02BF  00F5               	movwf	??_I2C2_Setting
  2906  02C0  0875               	movf	??_I2C2_Setting,w
  2907  02C1  0020               	movlb	0	; select bank0
  2908  02C2  00B9               	movwf	_I2C2_Config+18
  2909                           
  2910                           ;I2C2.c: 20: switch(mode)
  2911  02C3  2AE3               	goto	l2924
  2912  02C4                     l450:	
  2913                           ;I2C2.c: 21: {
  2914                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  2915                           
  2916                           
  2917                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  2918  02C4  0024               	movlb	4	; select bank4
  2919  02C5  159D               	bsf	29,3	;volatile
  2920                           
  2921                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  2922  02C6  0874               	movf	I2C2_Setting@Speed,w
  2923  02C7  1D03               	btfss	3,2
  2924  02C8  2ACC               	goto	l2902
  2925                           
  2926                           ;I2C2.c: 25: {
  2927                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  2928  02C9  179C               	bsf	28,7	;volatile
  2929                           
  2930                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  2931  02CA  304F               	movlw	79
  2932  02CB  2AD4               	goto	L3
  2933  02CC                     l2902:	
  2934                           ;I2C2.c: 28: }
  2935                           
  2936                           
  2937                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  2938  02CC  0374               	decf	I2C2_Setting@Speed,w
  2939  02CD  1D03               	btfss	3,2
  2940  02CE  2AE1               	goto	l2920
  2941                           
  2942                           ;I2C2.c: 30: {
  2943                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  2944  02CF  307F               	movlw	127
  2945  02D0  00F5               	movwf	??_I2C2_Setting
  2946  02D1  0875               	movf	??_I2C2_Setting,w
  2947  02D2  059C               	andwf	28,f	;volatile
  2948                           
  2949                           ;I2C2.c: 32: SSP2ADD = 0x13;
  2950  02D3  3013               	movlw	19
  2951  02D4                     L3:	
  2952  02D4  009A               	movwf	26	;volatile
  2953  02D5  2AE1               	goto	l2920
  2954  02D6                     l2910:	
  2955                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  2956                           
  2957                           ;I2C2.c: 35: break;
  2958                           
  2959                           ;I2C2.c: 33: }
  2960                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  2961                           
  2962                           
  2963                           ;I2C2.c: 38: SSP2STAT = 0x00;
  2964  02D6  0024               	movlb	4	; select bank4
  2965  02D7  019C               	clrf	28	;volatile
  2966                           
  2967                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  2968  02D8  3006               	movlw	6
  2969  02D9  00F5               	movwf	??_I2C2_Setting
  2970  02DA  0875               	movf	??_I2C2_Setting,w
  2971  02DB  049D               	iorwf	29,f	;volatile
  2972                           
  2973                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  2974  02DC  141E               	bsf	30,0	;volatile
  2975                           
  2976                           ;I2C2.c: 41: SSP2ADD = address << 1;
  2977  02DD  3576               	lslf	I2C2_Setting@address,w
  2978  02DE  009A               	movwf	26	;volatile
  2979                           
  2980                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  2981  02DF  30FE               	movlw	254
  2982  02E0  009B               	movwf	27	;volatile
  2983  02E1                     l2920:	
  2984                           
  2985                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  2986  02E1  169D               	bsf	29,5	;volatile
  2987                           
  2988                           ;I2C2.c: 45: }
  2989                           
  2990                           ;I2C2.c: 44: break;
  2991  02E2  2AEB               	goto	l454
  2992  02E3                     l2924:	
  2993  02E3  0873               	movf	I2C2_Setting@mode,w
  2994                           
  2995                           ; Switch size 1, requested type "space"
  2996                           ; Number of cases is 2, Range of values is 0 to 1
  2997                           ; switch strategies available:
  2998                           ; Name         Instructions Cycles
  2999                           ; simple_byte            7     4 (average)
  3000                           ; direct_byte           10     6 (fixed)
  3001                           ; jumptable            260     6 (fixed)
  3002                           ;	Chosen strategy is simple_byte
  3003  02E4  3A00               	xorlw	0	; case 0
  3004  02E5  1903               	skipnz
  3005  02E6  2AC4               	goto	l450
  3006  02E7  3A01               	xorlw	1	; case 1
  3007  02E8  1903               	skipnz
  3008  02E9  2AD6               	goto	l2910
  3009  02EA  2AEB               	goto	l454
  3010  02EB                     l454:	
  3011                           
  3012                           ;I2C2.c: 46: SSP2IE = 1;
  3013  02EB  0021               	movlb	1	; select bank1
  3014  02EC  1414               	bsf	20,0	;volatile
  3015                           
  3016                           ;I2C2.c: 47: BCL2IE = 1;
  3017  02ED  1494               	bsf	20,1	;volatile
  3018                           
  3019                           ;I2C2.c: 48: SSP2IF = 0;
  3020  02EE  0020               	movlb	0	; select bank0
  3021  02EF  1014               	bcf	20,0	;volatile
  3022                           
  3023                           ;I2C2.c: 49: BCL2IF = 0;
  3024  02F0  1094               	bcf	20,1	;volatile
  3025  02F1  0008               	return
  3026  02F2                     __end_of_I2C2_Setting:	
  3027                           
  3028                           	psect	text11
  3029  0410                     __ptext11:	
  3030 ;; *************** function _I2C2_PinInit *****************
  3031 ;; Defined at:
  3032 ;;		line 9 in file "I2C2.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3046 ;;      Params:         0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0       0
  3049 ;;      Totals:         1       0       0       0       0       0
  3050 ;;Total ram usage:        1 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    3
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_I2C2_Setting
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _I2C2_PinInit
  3062  0410                     _I2C2_PinInit:	
  3063                           
  3064                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  3068  0410  3024               	movlw	36
  3069  0411  00F2               	movwf	??_I2C2_PinInit
  3070  0412  0872               	movf	??_I2C2_PinInit,w
  3071  0413  0021               	movlb	1	; select bank1
  3072  0414  048D               	iorwf	13,f	;volatile
  3073                           
  3074                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  3075  0415  30DB               	movlw	219
  3076  0416  00F2               	movwf	??_I2C2_PinInit
  3077  0417  0872               	movf	??_I2C2_PinInit,w
  3078  0418  0023               	movlb	3	; select bank3
  3079  0419  058D               	andwf	13,f	;volatile
  3080  041A  0008               	return
  3081  041B                     __end_of_I2C2_PinInit:	
  3082                           
  3083                           	psect	text12
  3084  02F2                     __ptext12:	
  3085 ;; *************** function _I2C1_Setting *****************
  3086 ;; Defined at:
  3087 ;;		line 15 in file "I2C1.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  address         1    wreg     unsigned char 
  3090 ;;  mode            1    3[COMMON] enum E3027
  3091 ;;  Speed           1    4[COMMON] enum E3031
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  address         1    6[COMMON] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3103 ;;      Params:         2       0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0
  3106 ;;      Totals:         4       0       0       0       0       0
  3107 ;;Total ram usage:        4 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    4
  3110 ;; This function calls:
  3111 ;;		_I2C1_PinInit
  3112 ;; This function is called by:
  3113 ;;		_I2C_Init
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _I2C1_Setting
  3119  02F2                     _I2C1_Setting:	
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3123                           ;I2C1_Setting@address stored from wreg
  3124  02F2  00F6               	movwf	I2C1_Setting@address
  3125                           
  3126                           ;I2C1.c: 17: I2C1_PinInit();
  3127  02F3  3184  241B  3182   	fcall	_I2C1_PinInit
  3128                           
  3129                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  3130  02F6  0873               	movf	I2C1_Setting@mode,w
  3131  02F7  00F5               	movwf	??_I2C1_Setting
  3132  02F8  0875               	movf	??_I2C1_Setting,w
  3133  02F9  0020               	movlb	0	; select bank0
  3134  02FA  00CC               	movwf	_I2C1_Config+18
  3135                           
  3136                           ;I2C1.c: 20: switch(mode)
  3137  02FB  2B1B               	goto	l2838
  3138  02FC                     l313:	
  3139                           ;I2C1.c: 21: {
  3140                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  3141                           
  3142                           
  3143                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  3144  02FC  0024               	movlb	4	; select bank4
  3145  02FD  1595               	bsf	21,3	;volatile
  3146                           
  3147                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  3148  02FE  0874               	movf	I2C1_Setting@Speed,w
  3149  02FF  1D03               	btfss	3,2
  3150  0300  2B04               	goto	l2816
  3151                           
  3152                           ;I2C1.c: 25: {
  3153                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  3154  0301  1794               	bsf	20,7	;volatile
  3155                           
  3156                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  3157  0302  304F               	movlw	79
  3158  0303  2B0C               	goto	L4
  3159  0304                     l2816:	
  3160                           ;I2C1.c: 28: }
  3161                           
  3162                           
  3163                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  3164  0304  0374               	decf	I2C1_Setting@Speed,w
  3165  0305  1D03               	btfss	3,2
  3166  0306  2B19               	goto	l2834
  3167                           
  3168                           ;I2C1.c: 30: {
  3169                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  3170  0307  307F               	movlw	127
  3171  0308  00F5               	movwf	??_I2C1_Setting
  3172  0309  0875               	movf	??_I2C1_Setting,w
  3173  030A  0594               	andwf	20,f	;volatile
  3174                           
  3175                           ;I2C1.c: 32: SSP1ADD = 0x13;
  3176  030B  3013               	movlw	19
  3177  030C                     L4:	
  3178  030C  0092               	movwf	18	;volatile
  3179  030D  2B19               	goto	l2834
  3180  030E                     l2824:	
  3181                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  3182                           
  3183                           ;I2C1.c: 35: break;
  3184                           
  3185                           ;I2C1.c: 33: }
  3186                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  3187                           
  3188                           
  3189                           ;I2C1.c: 38: SSP1STAT = 0x00;
  3190  030E  0024               	movlb	4	; select bank4
  3191  030F  0194               	clrf	20	;volatile
  3192                           
  3193                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  3194  0310  3006               	movlw	6
  3195  0311  00F5               	movwf	??_I2C1_Setting
  3196  0312  0875               	movf	??_I2C1_Setting,w
  3197  0313  0495               	iorwf	21,f	;volatile
  3198                           
  3199                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  3200  0314  1416               	bsf	22,0	;volatile
  3201                           
  3202                           ;I2C1.c: 41: SSP1ADD = address << 1;
  3203  0315  3576               	lslf	I2C1_Setting@address,w
  3204  0316  0092               	movwf	18	;volatile
  3205                           
  3206                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  3207  0317  30FE               	movlw	254
  3208  0318  0093               	movwf	19	;volatile
  3209  0319                     l2834:	
  3210                           
  3211                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  3212  0319  1695               	bsf	21,5	;volatile
  3213                           
  3214                           ;I2C1.c: 45: }
  3215                           
  3216                           ;I2C1.c: 44: break;
  3217  031A  2B23               	goto	l317
  3218  031B                     l2838:	
  3219  031B  0873               	movf	I2C1_Setting@mode,w
  3220                           
  3221                           ; Switch size 1, requested type "space"
  3222                           ; Number of cases is 2, Range of values is 0 to 1
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; simple_byte            7     4 (average)
  3226                           ; direct_byte           10     6 (fixed)
  3227                           ; jumptable            260     6 (fixed)
  3228                           ;	Chosen strategy is simple_byte
  3229  031C  3A00               	xorlw	0	; case 0
  3230  031D  1903               	skipnz
  3231  031E  2AFC               	goto	l313
  3232  031F  3A01               	xorlw	1	; case 1
  3233  0320  1903               	skipnz
  3234  0321  2B0E               	goto	l2824
  3235  0322  2B23               	goto	l317
  3236  0323                     l317:	
  3237                           
  3238                           ;I2C1.c: 46: SSP1IE = 1;
  3239  0323  0021               	movlb	1	; select bank1
  3240  0324  1591               	bsf	17,3	;volatile
  3241                           
  3242                           ;I2C1.c: 47: BCL1IE = 1;
  3243  0325  1592               	bsf	18,3	;volatile
  3244                           
  3245                           ;I2C1.c: 48: SSP1IF = 0;
  3246  0326  0020               	movlb	0	; select bank0
  3247  0327  1191               	bcf	17,3	;volatile
  3248                           
  3249                           ;I2C1.c: 49: BCL1IF = 0;
  3250  0328  1192               	bcf	18,3	;volatile
  3251  0329  0008               	return
  3252  032A                     __end_of_I2C1_Setting:	
  3253                           
  3254                           	psect	text13
  3255  041B                     __ptext13:	
  3256 ;; *************** function _I2C1_PinInit *****************
  3257 ;; Defined at:
  3258 ;;		line 9 in file "I2C1.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3272 ;;      Params:         0       0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0
  3274 ;;      Temps:          1       0       0       0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    3
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_I2C1_Setting
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _I2C1_PinInit
  3288  041B                     _I2C1_PinInit:	
  3289                           
  3290                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  3294  041B  3012               	movlw	18
  3295  041C  00F2               	movwf	??_I2C1_PinInit
  3296  041D  0872               	movf	??_I2C1_PinInit,w
  3297  041E  0021               	movlb	1	; select bank1
  3298  041F  048D               	iorwf	13,f	;volatile
  3299                           
  3300                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  3301  0420  30ED               	movlw	237
  3302  0421  00F2               	movwf	??_I2C1_PinInit
  3303  0422  0872               	movf	??_I2C1_PinInit,w
  3304  0423  0023               	movlb	3	; select bank3
  3305  0424  058D               	andwf	13,f	;volatile
  3306  0425  0008               	return
  3307  0426                     __end_of_I2C1_PinInit:	
  3308                           
  3309                           	psect	text14
  3310  03EC                     __ptext14:	
  3311 ;; *************** function _Basic_Init *****************
  3312 ;; Defined at:
  3313 ;;		line 36 in file "main.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3327 ;;      Params:         0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _Basic_Init
  3343  03EC                     _Basic_Init:	
  3344                           
  3345                           ;main.c: 38: OSCCON = 0xF0;
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Basic_Init: [wreg+status,2]
  3349  03EC  30F0               	movlw	240
  3350  03ED  0021               	movlb	1	; select bank1
  3351  03EE  0099               	movwf	25	;volatile
  3352                           
  3353                           ;main.c: 42: TRISA = 0x07;
  3354  03EF  3007               	movlw	7
  3355  03F0  008C               	movwf	12	;volatile
  3356                           
  3357                           ;main.c: 43: ANSELA = 0x07;
  3358  03F1  3007               	movlw	7
  3359  03F2  0023               	movlb	3	; select bank3
  3360  03F3  008C               	movwf	12	;volatile
  3361                           
  3362                           ;main.c: 45: TRISB = 0x40;
  3363  03F4  3040               	movlw	64
  3364  03F5  0021               	movlb	1	; select bank1
  3365  03F6  008D               	movwf	13	;volatile
  3366                           
  3367                           ;main.c: 46: ANSELB = 0x00;
  3368  03F7  0023               	movlb	3	; select bank3
  3369  03F8  018D               	clrf	13	;volatile
  3370                           
  3371                           ;main.c: 48: APFCON0 = 0x08;
  3372  03F9  3008               	movlw	8
  3373  03FA  0022               	movlb	2	; select bank2
  3374  03FB  009D               	movwf	29	;volatile
  3375                           
  3376                           ;main.c: 49: APFCON1 = 0x00;
  3377  03FC  019E               	clrf	30	;volatile
  3378                           
  3379                           ;main.c: 51: PORTA = 0x00;
  3380  03FD  0020               	movlb	0	; select bank0
  3381  03FE  018C               	clrf	12	;volatile
  3382                           
  3383                           ;main.c: 52: PORTB = 0x00;
  3384  03FF  018D               	clrf	13	;volatile
  3385  0400  0008               	return
  3386  0401                     __end_of_Basic_Init:	
  3387                           ;main.c: 54: return 0;
  3388                           ;	Return value of _Basic_Init is never used
  3389                           
  3390                           
  3391                           	psect	intentry
  3392  0004                     __pintentry:	
  3393 ;; *************** function _hand *****************
  3394 ;; Defined at:
  3395 ;;		line 58 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3409 ;;      Params:         0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0       0
  3412 ;;      Totals:         1       0       0       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    2
  3416 ;; This function calls:
  3417 ;;		_I2C_CommonInterrupt
  3418 ;; This function is called by:
  3419 ;;		Interrupt level 1
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423  0004                     _hand:	
  3424                           
  3425                           ;incstack = 0
  3426  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3427                           
  3428                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3429  0005  3180               	pagesel	$
  3430  0006  0020               	movlb	0	; select bank0
  3431  0007  087F               	movf	127,w
  3432  0008  00F1               	movwf	??_hand
  3433                           
  3434                           ;main.c: 60: I2C_CommonInterrupt();
  3435  0009  3184  242C         	fcall	_I2C_CommonInterrupt
  3436  000B  0871               	movf	??_hand,w
  3437  000C  0020               	movlb	0	; select bank0
  3438  000D  00FF               	movwf	127
  3439  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3440  000F  0009               	retfie
  3441  0010                     __end_of_hand:	
  3442                           
  3443                           	psect	text16
  3444  042C                     __ptext16:	
  3445 ;; *************** function _I2C_CommonInterrupt *****************
  3446 ;; Defined at:
  3447 ;;		line 58 in file "I2C_Common.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3461 ;;      Params:         0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    1
  3468 ;; This function calls:
  3469 ;;		_I2C1_Interrupt
  3470 ;;		_I2C2_Interrupt
  3471 ;; This function is called by:
  3472 ;;		_hand
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _I2C_CommonInterrupt
  3478  042C                     _I2C_CommonInterrupt:	
  3479                           
  3480                           ;I2C_Common.c: 60: I2C1_Interrupt();
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3484  042C  3182  222C  3184   	fcall	_I2C1_Interrupt
  3485                           
  3486                           ;I2C_Common.c: 61: I2C2_Interrupt();
  3487  042F  3181  21D8         	fcall	_I2C2_Interrupt
  3488  0431  0008               	return
  3489  0432                     __end_of_I2C_CommonInterrupt:	
  3490                           
  3491                           	psect	text17
  3492  01D8                     __ptext17:	
  3493 ;; *************** function _I2C2_Interrupt *****************
  3494 ;; Defined at:
  3495 ;;		line 152 in file "I2C2.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3509 ;;      Params:         0       0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0
  3511 ;;      Temps:          1       0       0       0       0       0
  3512 ;;      Totals:         1       0       0       0       0       0
  3513 ;;Total ram usage:        1 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_I2C_CommonInterrupt
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _I2C2_Interrupt
  3524  01D8                     _I2C2_Interrupt:	
  3525                           
  3526                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3530  01D8  0020               	movlb	0	; select bank0
  3531  01D9  1C14               	btfss	20,0	;volatile
  3532  01DA  2A24               	goto	i1l1566
  3533  01DB  0021               	movlb	1	; select bank1
  3534  01DC  1C14               	btfss	20,0	;volatile
  3535  01DD  2A24               	goto	i1l1566
  3536                           
  3537                           ;I2C2.c: 155: {
  3538                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  3539  01DE  0024               	movlb	4	; select bank4
  3540  01DF  1E9C               	btfss	28,5	;volatile
  3541  01E0  29FB               	goto	i1l533
  3542                           
  3543                           ;I2C2.c: 157: {
  3544                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  3545  01E1  1D1C               	btfss	28,2	;volatile
  3546  01E2  29EE               	goto	i1l1542
  3547                           
  3548                           ;I2C2.c: 159: {
  3549                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  3550  01E3  1B1E               	btfsc	30,6	;volatile
  3551  01E4  2A22               	goto	i1l1564
  3552  01E5                     i1l1534:	
  3553                           ;I2C2.c: 161: {
  3554                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3555                           
  3556  01E5  081C               	movf	28,w	;volatile
  3557  01E6  3901               	andlw	1
  3558  01E7  00F0               	movwf	??_I2C2_Interrupt
  3559  01E8  0E1D               	swapf	29,w	;volatile
  3560  01E9  3901               	andlw	1
  3561  01EA  0470               	iorwf	??_I2C2_Interrupt,w
  3562  01EB  1D03               	btfss	3,2
  3563  01EC  29E5               	goto	i1l1534
  3564  01ED  2A0E               	goto	L5
  3565  01EE                     i1l1542:	
  3566                           ;I2C2.c: 166: }
  3567                           ;I2C2.c: 167: }
  3568                           
  3569                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  3570                           
  3571                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  3572                           
  3573                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  3574                           
  3575                           
  3576                           ;I2C2.c: 168: else
  3577                           ;I2C2.c: 169: {
  3578                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  3579  01EE  0819               	movf	25,w	;volatile
  3580  01EF  00F0               	movwf	??_I2C2_Interrupt
  3581  01F0  0020               	movlb	0	; select bank0
  3582  01F1  0838               	movf	low ((_I2C2_Config| 0+17)),w
  3583  01F2  0086               	movwf	6
  3584  01F3  0187               	clrf	7
  3585  01F4  0870               	movf	??_I2C2_Interrupt,w
  3586  01F5  0081               	movwf	1
  3587                           
  3588                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  3589  01F6  3001               	movlw	1
  3590  01F7  00F0               	movwf	??_I2C2_Interrupt
  3591  01F8  0870               	movf	??_I2C2_Interrupt,w
  3592  01F9  07B8               	addwf	low ((_I2C2_Config| 0+17)),f
  3593  01FA  2A20               	goto	i1l1562
  3594  01FB                     i1l533:	
  3595                           ;I2C2.c: 173: }
  3596                           ;I2C2.c: 174: }
  3597                           
  3598                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  3599                           
  3600                           
  3601                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  3602  01FB  1A9C               	btfsc	28,5	;volatile
  3603  01FC  2A22               	goto	i1l1564
  3604                           
  3605                           ;I2C2.c: 176: {
  3606                           ;I2C2.c: 177: SSP2BUF;
  3607  01FD  0819               	movf	25,w	;volatile
  3608                           
  3609                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  3610  01FE  1D1C               	btfss	28,2	;volatile
  3611  01FF  2A1B               	goto	i1l1560
  3612                           
  3613                           ;I2C2.c: 180: {
  3614                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  3615  0200  3027               	movlw	(low (_I2C2_Config| 0))& (0+255)
  3616  0201  00F0               	movwf	??_I2C2_Interrupt
  3617  0202  0870               	movf	??_I2C2_Interrupt,w
  3618  0203  0020               	movlb	0	; select bank0
  3619  0204  00B7               	movwf	low ((_I2C2_Config| 0+16))
  3620  0205                     i1l1554:	
  3621                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3622                           
  3623  0205  0024               	movlb	4	; select bank4
  3624  0206  081C               	movf	28,w	;volatile
  3625  0207  3901               	andlw	1
  3626  0208  00F0               	movwf	??_I2C2_Interrupt
  3627  0209  0E1D               	swapf	29,w	;volatile
  3628  020A  3901               	andlw	1
  3629  020B  0470               	iorwf	??_I2C2_Interrupt,w
  3630  020C  1D03               	btfss	3,2
  3631  020D  2A05               	goto	i1l1554
  3632  020E                     L5:	
  3633                           
  3634                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  3635  020E  0020               	movlb	0	; select bank0
  3636  020F  0837               	movf	low ((_I2C2_Config| 0+16)),w
  3637  0210  0086               	movwf	6
  3638  0211  0187               	clrf	7
  3639  0212  0801               	movf	1,w
  3640  0213  0024               	movlb	4	; select bank4
  3641  0214  0099               	movwf	25	;volatile
  3642                           
  3643                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  3644  0215  3001               	movlw	1
  3645  0216  00F0               	movwf	??_I2C2_Interrupt
  3646  0217  0870               	movf	??_I2C2_Interrupt,w
  3647  0218  0020               	movlb	0	; select bank0
  3648  0219  07B7               	addwf	low ((_I2C2_Config| 0+16)),f
  3649                           
  3650                           ;I2C2.c: 186: }
  3651  021A  2A20               	goto	i1l1562
  3652  021B                     i1l1560:	
  3653                           
  3654                           ;I2C2.c: 187: else
  3655                           ;I2C2.c: 188: {
  3656                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  3657  021B  302F               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  3658  021C  00F0               	movwf	??_I2C2_Interrupt
  3659  021D  0870               	movf	??_I2C2_Interrupt,w
  3660  021E  0020               	movlb	0	; select bank0
  3661  021F  00B8               	movwf	low ((_I2C2_Config| 0+17))
  3662  0220                     i1l1562:	
  3663                           
  3664                           ;I2C2.c: 190: }
  3665                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  3666  0220  0024               	movlb	4	; select bank4
  3667  0221  161D               	bsf	29,4	;volatile
  3668  0222                     i1l1564:	
  3669                           
  3670                           ;I2C2.c: 192: }
  3671                           ;I2C2.c: 193: SSP2IF = 0;
  3672  0222  0020               	movlb	0	; select bank0
  3673  0223  1014               	bcf	20,0	;volatile
  3674  0224                     i1l1566:	
  3675                           
  3676                           ;I2C2.c: 194: }
  3677                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  3678  0224  0021               	movlb	1	; select bank1
  3679  0225  1C94               	btfss	20,1	;volatile
  3680  0226  0008               	return
  3681  0227  0020               	movlb	0	; select bank0
  3682  0228  1C94               	btfss	20,1	;volatile
  3683  0229  0008               	return
  3684                           
  3685                           ;I2C2.c: 197: BCL2IF = 0;
  3686  022A  1094               	bcf	20,1	;volatile
  3687  022B  0008               	return
  3688  022C                     __end_of_I2C2_Interrupt:	
  3689                           
  3690                           	psect	text18
  3691  022C                     __ptext18:	
  3692 ;; *************** function _I2C1_Interrupt *****************
  3693 ;; Defined at:
  3694 ;;		line 152 in file "I2C1.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3708 ;;      Params:         0       0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0
  3710 ;;      Temps:          1       0       0       0       0       0
  3711 ;;      Totals:         1       0       0       0       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_I2C_CommonInterrupt
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function _I2C1_Interrupt
  3723  022C                     _I2C1_Interrupt:	
  3724                           
  3725                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3729  022C  0020               	movlb	0	; select bank0
  3730  022D  1D91               	btfss	17,3	;volatile
  3731  022E  2A78               	goto	i1l1516
  3732  022F  0021               	movlb	1	; select bank1
  3733  0230  1D91               	btfss	17,3	;volatile
  3734  0231  2A78               	goto	i1l1516
  3735                           
  3736                           ;I2C1.c: 155: {
  3737                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  3738  0232  0024               	movlb	4	; select bank4
  3739  0233  1E94               	btfss	20,5	;volatile
  3740  0234  2A4F               	goto	i1l396
  3741                           
  3742                           ;I2C1.c: 157: {
  3743                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  3744  0235  1D14               	btfss	20,2	;volatile
  3745  0236  2A42               	goto	i1l1492
  3746                           
  3747                           ;I2C1.c: 159: {
  3748                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  3749  0237  1B16               	btfsc	22,6	;volatile
  3750  0238  2A76               	goto	i1l1514
  3751  0239                     i1l1484:	
  3752                           ;I2C1.c: 161: {
  3753                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3754                           
  3755  0239  0814               	movf	20,w	;volatile
  3756  023A  3901               	andlw	1
  3757  023B  00F0               	movwf	??_I2C1_Interrupt
  3758  023C  0E15               	swapf	21,w	;volatile
  3759  023D  3901               	andlw	1
  3760  023E  0470               	iorwf	??_I2C1_Interrupt,w
  3761  023F  1D03               	btfss	3,2
  3762  0240  2A39               	goto	i1l1484
  3763  0241  2A62               	goto	L6
  3764  0242                     i1l1492:	
  3765                           ;I2C1.c: 166: }
  3766                           ;I2C1.c: 167: }
  3767                           
  3768                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  3769                           
  3770                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  3771                           
  3772                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  3773                           
  3774                           
  3775                           ;I2C1.c: 168: else
  3776                           ;I2C1.c: 169: {
  3777                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  3778  0242  0811               	movf	17,w	;volatile
  3779  0243  00F0               	movwf	??_I2C1_Interrupt
  3780  0244  0020               	movlb	0	; select bank0
  3781  0245  084B               	movf	low ((_I2C1_Config| 0+17)),w
  3782  0246  0086               	movwf	6
  3783  0247  0187               	clrf	7
  3784  0248  0870               	movf	??_I2C1_Interrupt,w
  3785  0249  0081               	movwf	1
  3786                           
  3787                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  3788  024A  3001               	movlw	1
  3789  024B  00F0               	movwf	??_I2C1_Interrupt
  3790  024C  0870               	movf	??_I2C1_Interrupt,w
  3791  024D  07CB               	addwf	low ((_I2C1_Config| 0+17)),f
  3792  024E  2A74               	goto	i1l1512
  3793  024F                     i1l396:	
  3794                           ;I2C1.c: 173: }
  3795                           ;I2C1.c: 174: }
  3796                           
  3797                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  3798                           
  3799                           
  3800                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  3801  024F  1A94               	btfsc	20,5	;volatile
  3802  0250  2A76               	goto	i1l1514
  3803                           
  3804                           ;I2C1.c: 176: {
  3805                           ;I2C1.c: 177: SSP1BUF;
  3806  0251  0811               	movf	17,w	;volatile
  3807                           
  3808                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  3809  0252  1D14               	btfss	20,2	;volatile
  3810  0253  2A6F               	goto	i1l1510
  3811                           
  3812                           ;I2C1.c: 180: {
  3813                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3814  0254  303A               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3815  0255  00F0               	movwf	??_I2C1_Interrupt
  3816  0256  0870               	movf	??_I2C1_Interrupt,w
  3817  0257  0020               	movlb	0	; select bank0
  3818  0258  00CA               	movwf	low ((_I2C1_Config| 0+16))
  3819  0259                     i1l1504:	
  3820                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3821                           
  3822  0259  0024               	movlb	4	; select bank4
  3823  025A  0814               	movf	20,w	;volatile
  3824  025B  3901               	andlw	1
  3825  025C  00F0               	movwf	??_I2C1_Interrupt
  3826  025D  0E15               	swapf	21,w	;volatile
  3827  025E  3901               	andlw	1
  3828  025F  0470               	iorwf	??_I2C1_Interrupt,w
  3829  0260  1D03               	btfss	3,2
  3830  0261  2A59               	goto	i1l1504
  3831  0262                     L6:	
  3832                           
  3833                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  3834  0262  0020               	movlb	0	; select bank0
  3835  0263  084A               	movf	low ((_I2C1_Config| 0+16)),w
  3836  0264  0086               	movwf	6
  3837  0265  0187               	clrf	7
  3838  0266  0801               	movf	1,w
  3839  0267  0024               	movlb	4	; select bank4
  3840  0268  0091               	movwf	17	;volatile
  3841                           
  3842                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  3843  0269  3001               	movlw	1
  3844  026A  00F0               	movwf	??_I2C1_Interrupt
  3845  026B  0870               	movf	??_I2C1_Interrupt,w
  3846  026C  0020               	movlb	0	; select bank0
  3847  026D  07CA               	addwf	low ((_I2C1_Config| 0+16)),f
  3848                           
  3849                           ;I2C1.c: 186: }
  3850  026E  2A74               	goto	i1l1512
  3851  026F                     i1l1510:	
  3852                           
  3853                           ;I2C1.c: 187: else
  3854                           ;I2C1.c: 188: {
  3855                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3856  026F  3042               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3857  0270  00F0               	movwf	??_I2C1_Interrupt
  3858  0271  0870               	movf	??_I2C1_Interrupt,w
  3859  0272  0020               	movlb	0	; select bank0
  3860  0273  00CB               	movwf	low ((_I2C1_Config| 0+17))
  3861  0274                     i1l1512:	
  3862                           
  3863                           ;I2C1.c: 190: }
  3864                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  3865  0274  0024               	movlb	4	; select bank4
  3866  0275  1615               	bsf	21,4	;volatile
  3867  0276                     i1l1514:	
  3868                           
  3869                           ;I2C1.c: 192: }
  3870                           ;I2C1.c: 193: SSP1IF = 0;
  3871  0276  0020               	movlb	0	; select bank0
  3872  0277  1191               	bcf	17,3	;volatile
  3873  0278                     i1l1516:	
  3874                           
  3875                           ;I2C1.c: 194: }
  3876                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  3877  0278  0021               	movlb	1	; select bank1
  3878  0279  1D92               	btfss	18,3	;volatile
  3879  027A  0008               	return
  3880  027B  0020               	movlb	0	; select bank0
  3881  027C  1D92               	btfss	18,3	;volatile
  3882  027D  0008               	return
  3883                           
  3884                           ;I2C1.c: 197: BCL1IF = 0;
  3885  027E  1192               	bcf	18,3	;volatile
  3886  027F  0008               	return
  3887  0280                     __end_of_I2C1_Interrupt:	
  3888  007E                     btemp	set	126	;btemp
  3889  007E                     int$flags	set	126
  3890  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         49
>>>>>>> ExternalDAC
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    COMMON           14     12      13
    BANK0            80     60      64
=======
    COMMON           14     14      14
    BANK0            80     69      79
>>>>>>> eeprom
=======
    COMMON           14      6      11
    BANK0            80      0       0
>>>>>>> buzer
=======
    COMMON           14     11      12
    BANK0            80     20      68
>>>>>>> ExternalDAC
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

<<<<<<< HEAD
    EEPROM_MultiRead@pData	PTR unsigned char  size(1) Largest target is 5
		 -> main@readdat(BANK0[5]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

<<<<<<< HEAD
    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 
=======
    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 
>>>>>>> ExternalDAC

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S243$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

<<<<<<< HEAD
    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 
=======
    S243$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 
>>>>>>> ExternalDAC

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

=======
>>>>>>> buzer
    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

<<<<<<< HEAD
<<<<<<< HEAD
    _main->_xprintf
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _EEPROM_MultiRead->_eeprom_read

Critical Paths under _Handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _Handler in BANK0

=======
    _main->_LCD_Init
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData

Critical Paths under _main in BANK0

>>>>>>> buzer
=======
    _main->_DAC_WriteVoltage
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_DAC_WriteVoltage
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _hand in BANK0

>>>>>>> ExternalDAC
    None.

Critical Paths under _main in BANK1

    None.

<<<<<<< HEAD
Critical Paths under _Handler in BANK1
=======
Critical Paths under _hand in BANK1
>>>>>>> ExternalDAC

    None.

Critical Paths under _main in BANK2

    None.

<<<<<<< HEAD
Critical Paths under _Handler in BANK2
=======
Critical Paths under _hand in BANK2
>>>>>>> ExternalDAC

    None.

Critical Paths under _main in BANK3

    None.

<<<<<<< HEAD
Critical Paths under _Handler in BANK3
=======
Critical Paths under _hand in BANK3
>>>>>>> ExternalDAC

    None.

Critical Paths under _main in BANK4

    None.

<<<<<<< HEAD
Critical Paths under _Handler in BANK4
=======
Critical Paths under _hand in BANK4
>>>>>>> ExternalDAC

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
 (0) _main                                                 0     0      0    5592
=======
 (0) _main                                                13    13      0    4547
                                             56 BANK0     13    13      0
>>>>>>> eeprom
                         _Basic_Init
                   _EEPROM_MultiRead
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    5081
                                             11 COMMON     1     1      0
                                             53 BANK0      7     1      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4601
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     454
                                              7 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     356
                                              5 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              4 COMMON     1     0      1
                      _LCD_WriteData
=======
 (0) _main                                                 6     6      0    5564
                                             14 BANK0      6     6      0
                         _Basic_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     7     5      2    2175
                                             10 COMMON     1     1      0
                                              8 BANK0      6     4      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
>>>>>>> ExternalDAC
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) ___wmul                                               6     2      4     290
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              1 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              5 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              4 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              4 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_MultiRead                                     7     5      2     358
                                              4 COMMON     7     5      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      22
                                              0 COMMON     4     4      0
=======
 (0) _main                                                 0     0      0     251
                         _Basic_Init
                         _Buzer_Init
                      _Buzer_SetDuty
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              4 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      60
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      60
                                              0 COMMON     3     3      0
>>>>>>> buzer
 ---------------------------------------------------------------------------------
 (1) _Buzer_SetDuty                                        5     3      2     131
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              0 COMMON     1     1      0
                     _Timer1_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
=======
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
>>>>>>> ExternalDAC
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
<<<<<<< HEAD
<<<<<<< HEAD
   _EEPROM_MultiRead
     _eeprom_read
   _LCD_CursorPosition
     _LCD_WriteData
=======
   _Buzer_Init
   _Buzer_SetDuty
>>>>>>> buzer
=======
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
>>>>>>> ExternalDAC
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
<<<<<<< HEAD
<<<<<<< HEAD
   _Timer1_Init
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData
=======
>>>>>>> buzer

 _Handler (ROOT)
   _Timer1_Handler
=======

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
>>>>>>> ExternalDAC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
<<<<<<< HEAD
<<<<<<< HEAD
COMMON               E      C       D       2       92.9%
=======
COMMON               E      6       B       2       78.6%
>>>>>>> buzer
=======
COMMON               E      B       C       2       85.7%
>>>>>>> ExternalDAC
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      40       6       80.0%
=======
ABS                  0      0      5D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      4F       6       98.8%
>>>>>>> eeprom
=======
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
>>>>>>> buzer
=======
ABS                  0      0      50       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     14      44       6       85.0%
>>>>>>> ExternalDAC
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
DATA                 0      0      4D      15        0.0%
=======
DATA                 0      0      5D      15        0.0%
>>>>>>> eeprom
=======
DATA                 0      0       B      15        0.0%
>>>>>>> buzer
=======
DATA                 0      0      50      15        0.0%
>>>>>>> ExternalDAC
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
Symbol Table                                                                                   Fri Mar 24 12:42:43 2017
=======
Symbol Table                                                                                   Tue Mar  7 12:55:14 2017
>>>>>>> LCD

                __CFG_CP$OFF 0000          ___wmul@multiplicand 0073                          l134 0098  
                        l119 001C                          l152 0133                          l175 01EA  
                        l386 03F5                          _GIE 005F                          _RA3 0063  
                        _RA4 0064                 __CFG_CPD$OFF 0000                 __CFG_BORV$LO 0000  
                        wreg 0009                   _Basic_Init 0436                 __CFG_LVP$OFF 0000  
            __end_of_LCD_Put 048C                         l2010 0330                         l2004 030A  
                       l2100 00E4                         l2006 0318                         l2014 033B  
                       l2110 010D                         l2112 010F                         l2104 00E8  
                       l2120 011B                         l2130 016B                         l2114 0111  
                       l2106 00FD                         l2050 004A                         l2140 018E  
                       l2132 017B                         l2116 0116                         l2108 010A  
                       l2060 0061                         l2036 0035                         l2150 01C8  
                       l2126 014D                         l2070 0090                         l2128 0162  
                       l2154 01D0                         l2138 018C                         l2066 0088  
                       l2058 005E                         l2180 021F                         l2172 0200  
                       l2092 00C0                         l2174 0209                         l2166 01F8  
                       l2094 00CE                         l2086 00B3                         l2078 00A5  
                       l2184 0231                         l2176 020D                         l2096 00D2  
                       l2186 0235                         l2288 03BB                         l1940 038D  
                       l1962 03EF                         l1980 02C0                         l1948 039C  
                       l1990 02EE                         l1982 02CE                         l1958 044C  
                       l1994 02F9                         STR_1 03E7                         STR_2 03EB  
                       STR_3 03CD                         STR_4 03DB                         STR_5 03E1  
                       STR_6 03D4                         u2025 021D                         u2045 0243  
                       u2055 0427                         u2307 0346                         u2247 024E  
                       u1615 03F6                         u2257 0266                         u1625 03FB  
                       u1555 034C                         u2267 0279                         u2277 028D  
                       u1725 030D                         u2287 0477                         u1655 02C3  
                       u2297 0432                         u1745 0326                         u1905 00F6  
                       u1675 02CF                         u1755 0331                         u1685 02E3  
                       u1695 02EF                         _PEIE 005E                         u1895 00E2  
                       _TMR1 0016                 __CFG_WRT$OFF 0000                         _main 03AB  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 0010  
              __CFG_IESO$OFF 0000              __end_of_Handler 0010                _LCD_WriteData 0344  
              __CFG_MCLRE$ON 0000     __end_of_LCD_DisplayClear 047D             __end_of_LCD_Init 02AF  
              __CFG_PLLEN$ON 0000                  LCD_Put@word 0074                        ?_main 0070  
              __CFG_WDTE$OFF 0000              __end_of___lldiv 0302                        _T1CON 0018  
            __end_of___llmod 0344                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                __CFG_PWRTE$ON 0000  
             __CFG_FCMEN$OFF 0000                        _xputc 037E                        _xputs 044B  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_xprintf 046E           _LCD_CursorPosition 0421               ?_LCD_WriteData 0070  
            __initialization 0012                 __end_of_main 03CD          ?_LCD_CursorPosition 0074  
                     ??_main 007C                    ??_LCD_Put 0075                  ?_Basic_Init 0070  
             _Timer1_Handler 047D             ___llmod@dividend 0075         ??_LCD_CursorPosition 0075  
                     _ANSELA 018C                       _ANSELB 018D                       _T1GCON 0019  
                     ?_xputc 0070                       ?_xputs 0070                       _OSCCON 0099  
                     _TMR1IE 0488                       _TMR1IF 0088                    ??_Handler 0070  
                     _TMR1ON 00C0                ??_Timer1_Init 0071                       ___wmul 03ED  
                  ??___lldiv 0079                    ??___llmod 0079                       _outptr 007C  
     __end_of_Timer1_Handler 0486                       xputc@c 0076                    ??_xprintf 007B  
    __end_of__initialization 0018                    ?_LCD_Init 0070              ??_LCD_WriteData 0071  
           __end_of_xvprintf 0246               __pcstackCOMMON 0070          __size_of_Basic_Init 0015  
        __end_of_Timer1_Init 0421                __end_of_xputc 03AB                __end_of_xputs 045E  
            ?_Timer1_Handler 0070                      ??_xputc 0075                      ??_xputs 0077  
                 __pbssBANK0 005C                   ??_LCD_Init 0075                   __pmaintext 03AB  
                    ?___wmul 0071                   __pintentry 0004            ?_LCD_DisplayClear 0070  
                    _APFCON0 011D                      _APFCON1 011E           ??_LCD_DisplayClear 0074  
                    _LCD_Put 0486                 _xvprintf$166 003C                 _xvprintf$167 0040  
               _xvprintf$168 0042                      _Handler 0004                  _Timer1_Init 0408  
                    ___lldiv 02AF              __size_of___wmul 001B                      ___llmod 0302  
            __CFG_STVREN$OFF 0000                      __ptext1 045E                      __ptext2 001C  
                    __ptext3 044B                      __ptext4 037E                      __ptext5 0486  
                    __ptext6 03ED                      __ptext7 0302                      __ptext8 02AF  
                    __ptext9 0408                    ?_xvprintf 0025                 ??_Basic_Init 0071  
       end_of_initialization 0018                      _xprintf 045E              ___lldiv@divisor 0071  
            ___lldiv@counter 0024           __end_of_Basic_Init 044B                 __pstringtext 03CD  
           __CFG_FOSC$INTOSC 0000                   ??_xvprintf 0028  __size_of_LCD_CursorPosition 0015  
          __size_of_LCD_Init 0069               __end_of___wmul 0408             ??_Timer1_Handler 0070  
        start_initialization 0012              ___llmod@divisor 0071              ___llmod@counter 007A  
       LCD_CursorPosition@tx 0076         LCD_CursorPosition@ty 0074        __end_of_LCD_WriteData 037E  
                   ??___wmul 0075                     ?_LCD_Put 0074                  __pbssCOMMON 007C  
                  ___latbits 0001                __pcstackBANK0 0020    __size_of_LCD_DisplayClear 000F  
                   ?_Handler 0070                 ?_Timer1_Init 0070                     ?___lldiv 0071  
                   ?___llmod 0071            __size_of_xvprintf 022A                     ?_xprintf 0055  
             __size_of_xputc 002D               __size_of_xputs 0013                     _LCD_Init 0246  
             ___wmul@product 0075            ___wmul@multiplier 0071                    _xfunc_out 005E  
           __size_of_LCD_Put 0006             __size_of_Handler 000C             __size_of___lldiv 0053  
           __size_of___llmod 0042           LCD_WriteData@point 0073   __end_of_LCD_CursorPosition 0436  
                   __ptext10 0246                     __ptext11 046E                     __ptext12 0421  
                   __ptext13 0344                     __ptext14 0436                     __ptext16 047D  
           _LCD_DisplayClear 046E             __size_of_xprintf 0010                __size_of_main 0022  
       __size_of_Timer1_Init 0019                     int$flags 007E                     _xfunc_in 005C  
                   _xvprintf 001C                   xprintf@arp 005B                   xprintf@fmt 0055  
                   intlevel1 0000             ___lldiv@dividend 0075            __CFG_CLKOUTEN$OFF 0000  
                xvprintf@arp 0027                  xvprintf@fmt 0025             ___lldiv@quotient 0020  
     __size_of_LCD_WriteData 003A      __size_of_Timer1_Handler 0009                     xputs@str 0078  
                  xvprintf@c 0054                    xvprintf@d 0053                    xvprintf@f 004F  
                  xvprintf@i 0051                    xvprintf@j 0049                    xvprintf@p 0044  
                  xvprintf@r 0045                    xvprintf@s 002C                    xvprintf@v 004B  
                  xvprintf@w 0047  
=======
Symbol Table                                                                                   Tue Mar  7 12:40:51 2017

                __CFG_CP$OFF 0000                           _RD 0CA8                           _WR 0CA9  
        ___wmul@multiplicand 0072                          l114 05C0                          l129 063C  
                        l410 03D9                          l170 078E                          l147 06D7  
                        l298 03BA                          _RA3 0063                          _RA4 0064  
               __CFG_CPD$OFF 0000                          u925 044A                          u985 03DA  
                        u995 03DF                 __CFG_BORV$LO 0000                          wreg 0009  
                 _Basic_Init 038F                 __CFG_LVP$OFF 0000              __end_of_LCD_Put 035D  
                       l1500 0484                         l1502 0492                         l1510 04B5  
                       l1600 068C                         l1506 04AA                         l1610 06B5  
                       l1602 06A1                         l1444 0434                         l1436 0424  
                       l1612 06BA                         l1604 06AE                         l1532 05D9  
                       l1454 037D                         l1622 06F1                         l1606 06B1  
                       l1624 0706                         l1608 06B3                         l1616 06BF  
                       l1490 054E                         l1458 03D3                         l1650 0774  
                       l1634 0730                         l1626 070F                         l1562 062C  
                       l1554 0602                         l1546 05EE                         l1810 04D8  
                       l1476 0515                         l1636 0732                         l1628 071F  
                       l1556 0605                         l1486 0543                         l1478 0523  
                       l1670 07AD                         l1662 079C                         l1646 076C  
                       l1590 0672                         l1582 0657                         l1574 0649  
                       l1566 0634                         l1680 07D5                         l1672 07B1  
                       l1592 0676                         l1682 07D9                         l1756 03EE  
                       l1676 07C3                         l1668 07A4                         l1596 0688  
                       l1588 0664         EEPROM_MultiRead@addr 0075                         STR_1 081A  
                       STR_2 081E                         STR_3 0800                         STR_4 080E  
                       STR_5 0814                         STR_6 0807                         u1025 0518  
                       u1115 04A0                         u1045 0524                         u1125 04AB  
                       u1055 0538                         u1065 0544                         u1095 0487  
                       u1415 07E7                         u1265 0686                         u1530 04CC  
                       u1435 03AA                         u1275 069A                         u1445 0400  
                       u1707 059E                         u1395 07C1                         u1717 0366  
                       u1727 03B5                         u1737 0444                         u1677 055F  
                       u1687 0577                         u1697 058A         EEPROM_MultiRead@size 0074  
                main@readdat 005F                 __CFG_WRT$OFF 0000                         _main 04BE  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 0002  
              __CFG_IESO$OFF 0000                _LCD_WriteData 0442                __CFG_MCLRE$ON 0000  
   __end_of_LCD_DisplayClear 036C             __end_of_LCD_Init 05C0                __CFG_PLLEN$ON 0000  
                LCD_Put@word 0073                        ?_main 0070                        _EEADR 0191  
              __CFG_WDTE$OFF 0000        EEPROM_MultiRead@pData 0079              __end_of___lldiv 0557  
            __end_of___llmod 04BE                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                __CFG_PWRTE$ON 0000  
             __CFG_FCMEN$OFF 0000                        main@i 0064                        _xputc 0415  
                      _xputs 037C                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_xprintf 037C           _LCD_CursorPosition 03A4  
             ?_LCD_WriteData 0070            EEPROM_MultiRead@i 007A              __initialization 07EA  
               __end_of_main 0505          ?_LCD_CursorPosition 0073                       ??_main 0058  
                  ??_LCD_Put 0074                  ?_Basic_Init 0070             ___llmod@dividend 0074  
                     _EEDATA 0193                       _EECON1 0195         ??_LCD_CursorPosition 0074  
                     _ANSELA 018C                       _ANSELB 018D                       ?_xputc 0070  
                     ?_xputs 0070                       _OSCCON 0099     __end_of_EEPROM_MultiRead 0415  
       __size_of_eeprom_read 0018                       ___wmul 03D1                    ??___lldiv 0078  
                  ??___llmod 0078                       _outptr 0069                       xputc@c 0075  
                  ??_xprintf 0056      __end_of__initialization 07FD                    ?_LCD_Init 0070  
            eeprom_read@addr 0073              ??_LCD_WriteData 0070             __end_of_xvprintf 07EA  
             __pcstackCOMMON 0070          __size_of_Basic_Init 0015                 __pidataBANK0 0352  
              __end_of_xputc 0442                __end_of_xputs 038F                      ??_xputc 0074  
                    ??_xputs 0076                   __pbssBANK0 0065                   ??_LCD_Init 0074  
                 __pmaintext 04BE                      ?___wmul 0070            ?_LCD_DisplayClear 0070  
                    _APFCON0 011D                      _APFCON1 011E           ??_LCD_DisplayClear 0073  
                    _LCD_Put 0357                 _xvprintf$165 0037                 _xvprintf$166 003B  
               _xvprintf$167 003D                      ___lldiv 0505              __size_of___wmul 001B  
                    ___llmod 047C              __CFG_STVREN$OFF 0000                      __ptext1 036C  
                    __ptext2 05C0                      __ptext3 037C                      __ptext4 0415  
                    __ptext5 0357                      __ptext6 03D1                      __ptext7 047C  
                    __ptext8 0505                      __ptext9 0557                    ?_xvprintf 0020  
               ??_Basic_Init 0070         end_of_initialization 07FD                      _xprintf 036C  
          ?_EEPROM_MultiRead 0074              ___lldiv@divisor 0070              ___lldiv@counter 007D  
         ??_EEPROM_MultiRead 0076           __end_of_Basic_Init 03A4                 __pstringtext 0800  
           __CFG_FOSC$INTOSC 0000                   ??_xvprintf 0023  __size_of_LCD_CursorPosition 0015  
              ??_eeprom_read 0070                   main@sample 005A            __size_of_LCD_Init 0069  
             __end_of___wmul 03EC          start_initialization 07EA              ___llmod@divisor 0070  
            ___llmod@counter 0079         LCD_CursorPosition@tx 0075         LCD_CursorPosition@ty 0073  
      __end_of_LCD_WriteData 047C                     ??___wmul 0074          __end_of_eeprom_read 03D1  
                __pdataBANK0 006A                     ?_LCD_Put 0073                    ___latbits 0001  
              __pcstackBANK0 0020    __size_of_LCD_DisplayClear 000F                     ?___lldiv 0070  
                   ?___llmod 0070            __size_of_xvprintf 022A                     ?_xprintf 0050  
             __size_of_xputc 002D               __size_of_xputs 0013                     _LCD_Init 0557  
             ___wmul@product 0074                  _eeprom_read 03B9                    main@F2994 006A  
  __size_of_EEPROM_MultiRead 0029            ___wmul@multiplier 0070                    _xfunc_out 0067  
           __size_of_LCD_Put 0006             __size_of___lldiv 0052             __size_of___llmod 0042  
         LCD_WriteData@point 0072   __end_of_LCD_CursorPosition 03B9                     __ptext10 035D  
                   __ptext11 03A4                     __ptext12 0442                     __ptext13 03EC  
                   __ptext14 03B9                     __ptext15 038F             _LCD_DisplayClear 035D  
           __size_of_xprintf 0010                __size_of_main 0047                     _xfunc_in 0065  
                   _xvprintf 05C0                   xprintf@arp 0057                   xprintf@fmt 0050  
           ___lldiv@dividend 0074            __CFG_CLKOUTEN$OFF 0000                  xvprintf@arp 0022  
                xvprintf@fmt 0020             _EEPROM_MultiRead 03EC             ___lldiv@quotient 0079  
     __size_of_LCD_WriteData 003A                     xputs@str 0077                    xvprintf@c 004F  
                  xvprintf@d 004E                    xvprintf@f 004A                    xvprintf@i 004C  
                  xvprintf@j 0044                    xvprintf@p 003F                    xvprintf@r 0040  
                  xvprintf@s 0027                    xvprintf@v 0046                    xvprintf@w 0042  
               ?_eeprom_read 0070  
>>>>>>> eeprom
=======
Symbol Table                                                                                   Sat Mar 25 02:26:50 2017

              __CFG_CP$OFF 0000                         l33 0717                         u15 075D  
                      _RA3 0063                        _RA4 0064                        _PR2 001B  
             __CFG_CPD$OFF 0000                        u707 07AF                        u717 07C2  
                      u727 07D6                        u737 06E8                        u747 0757  
                      u685 072B                        u697 0797               __CFG_BORV$LO 0000  
                      wreg 0009                 _Basic_Init 06EE               __CFG_LVP$OFF 0000  
                     STR_1 081A                       STR_2 0800                       STR_3 080E  
                     STR_4 0814                       STR_5 0807                       _TMR2 001A  
             __CFG_WRT$OFF 0000                       _main 0703                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0002              __CFG_IESO$OFF 0000  
            _LCD_WriteData 0755              __CFG_MCLRE$ON 0000   __end_of_LCD_DisplayClear 06EE  
         __end_of_LCD_Init 07F8              __CFG_PLLEN$ON 0000                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _T2CON 001C                      _PORTA 000C  
                    _PORTB 000D                      _TRISA 008C                      _TRISB 008D  
            _Buzer_SetDuty 0718              __CFG_PWRTE$ON 0000             __CFG_FCMEN$OFF 0000  
                    wtemp0 007E             ?_LCD_WriteData 0070            __initialization 07F8  
               _Buzer_Init 0733               __end_of_main 0718                     ??_main 0076  
           ?_Buzer_SetDuty 0070                ?_Basic_Init 0070                     _CCPR2L 0298  
                   _ANSELA 018C                     _ANSELB 018D                     _OSCCON 0099  
                   _outptr 007A    __end_of__initialization 07FD                  ?_LCD_Init 0070  
          ??_LCD_WriteData 0070             __pcstackCOMMON 0070                ?_Buzer_Init 0070  
      __size_of_Basic_Init 0015            ??_Buzer_SetDuty 0072                 ??_LCD_Init 0074  
               __pmaintext 0703          Buzer_SetDuty@duty 0070                    _CCP2CON 029A  
        ?_LCD_DisplayClear 0070                    _APFCON0 011D                    _APFCON1 011E  
                  _CCPTMRS 029E         ??_LCD_DisplayClear 0073                    _LCD_Put 0000  
      __size_of_Buzer_Init 0022            __CFG_STVREN$OFF 0000                    __ptext1 078F  
                  __ptext2 06DF                    __ptext3 0755                    __ptext4 0718  
                  __ptext5 0733                    __ptext6 06EE               ??_Basic_Init 0070  
     end_of_initialization 07FD         __end_of_Basic_Init 0703               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000          __size_of_LCD_Init 0069               ??_Buzer_Init 0070  
      start_initialization 07F8         __end_of_Buzer_Init 0755      __end_of_LCD_WriteData 078F  
    __end_of_Buzer_SetDuty 0733                __pbssCOMMON 0076                  ___latbits 0001  
__size_of_LCD_DisplayClear 000F                   _LCD_Init 078F                  _xfunc_out 0078  
       LCD_WriteData@point 0072           _LCD_DisplayClear 06DF              __size_of_main 0015  
 Buzer_SetDuty@CCP2CON_Pre 0074                   _xfunc_in 0076          __CFG_CLKOUTEN$OFF 0000  
   __size_of_LCD_WriteData 003A     __size_of_Buzer_SetDuty 001B  
>>>>>>> buzer
=======
Symbol Table                                                                                   Sat Mar 25 02:13:58 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
                         l313 02FC                           l330 00B3                           l317 0323  
                         l450 02C4                           l339 00D6                           l348 00ED  
                         l454 02EB                           l467 0035                           l476 0058  
                         l485 006F                           l577 03AE                           _GIE 005F  
                         _RA3 0063                           _RA4 0064                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 03EC  
                __CFG_LVP$OFF 0000                          l3030 0194                          l3044 01B5  
                        l3036 019E                          l2910 02D6                          l2902 02CC  
                        l2824 030E                          l2816 0304                          l2920 02E1  
                        l2834 0319                          l2842 009F                          l2930 002B  
                        l2924 02E3                          l2844 00A9                          l2940 0048  
                        l2838 031B                          l2854 00C6                          l2950 0040  
                        l2880 0109                          l2864 00BE                          l2952 0044  
                        l2928 0021                          l2882 010E                          l2866 00C2  
                        l2954 0065                          l2980 038A                          l2868 00E3  
                        l2964 0074                          l2972 0092                          l2982 0398  
                        l2878 00F2                          l2886 0110                          l2966 008B  
                        l2974 009B                          l2990 0360                          l2888 0119  
                        l2968 0090                          l2992 036D                          l2986 03A6  
                        l2996 037E                          l2998 0386             ?_DAC_WriteVoltage 0058  
                        STR_1 03EA                          STR_2 03D0                          STR_3 03DE  
                        STR_4 03E4                          STR_5 03D7                          u1475 0288  
                        u2807 01A6                          u2817 01CF                          u2827 0123  
                        _PEIE 005E                          u2837 013B                          u2847 014E  
                        u2857 0162                          u2867 040A                          u2877 0282  
             ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000            ??_DAC_WriteVoltage 005A  
                        _hand 0004                          _main 0184              __end_of_I2C_Init 03B1  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0010                 __CFG_IESO$OFF 0000  
                 main@voltage 0060                 _LCD_WriteData 0280                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 0410         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 0184                 __CFG_PLLEN$ON 0000                         ?_hand 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                         _LATA7 0867  
                       i1l533 01FB                         i1l396 024F                         _PORTA 000C  
                       _PORTB 000D                         _TRISA 008C                         _TRISB 008D  
           I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000  
                       status 0003                         wtemp0 007E                  _I2C_Transmit 035D  
              ?_LCD_WriteData 0070              ??_DAC_Initialize 0058               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 01D8                        ??_hand 0071  
                      ??_main 005E                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
                      _ANSELA 018C                        _ANSELB 018D                        i1l1510 026F  
                      i1l1512 0274                        i1l1504 0259                        i1l1514 0276  
                      i1l1516 0278                        i1l1534 01E5                        i1l1542 01EE  
                      i1l1560 021B                        i1l1562 0220                        i1l1554 0205  
                      i1l1484 0239                        i1l1492 0242                        i1l1564 0222  
                      i1l1566 0224            I2C2_Transmit@i_513 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0                        _outptr 007B  
            I2C_Transmit@I2Cx 0056                     ?_I2C_Init 0077              I2C_Transmit@size 0052  
     __end_of__initialization 001A                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
                  _VoltageReg 004D                __pcstackCOMMON 0070           __size_of_Basic_Init 0015  
                  ??_I2C_Init 0050           I2C1_Transmit@result 0079                    __pbssBANK0 0020  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A        DAC_WriteVoltage@result 007A  
 __end_of_I2C_CommonInterrupt 0432                  I2C_Init@mode 0078                    __pmaintext 0184  
   __size_of_DAC_WriteVoltage 0033                    __pintentry 0004             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E            ??_LCD_DisplayClear 0075  
                     _LCD_Put 0000                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           I2C2_Transmit@result 0079         __end_of_I2C1_Transmit 011B  
       __end_of_I2C2_Transmit 009D               __CFG_STVREN$OFF 0000                       __ptext1 011B  
                     __ptext2 0401                       __ptext3 0280                       __ptext4 032A  
                     __ptext5 03B1                       __ptext6 035D                       __ptext7 001E  
                     __ptext8 009D                       __ptext9 0388                  ??_Basic_Init 0072  
                     clrloop0 0427          end_of_initialization 001A                 ?_I2C1_PinInit 0070  
               ?_I2C2_PinInit 0070                   _I2C1_Config 003A                   _I2C2_Config 0027  
               ?_I2C1_Setting 0073                 ?_I2C2_Setting 0073             I2C_Transmit@pData 0051  
          __end_of_Basic_Init 0401                  __pstringtext 03D0       __size_of_I2C1_Interrupt 0054  
            __CFG_FOSC$INTOSC 0000                main@voltage_70 0062       __size_of_I2C2_Interrupt 0054  
           __size_of_I2C_Init 0029           I2C1_Setting@address 0076                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                ??_I2C2_Setting 0075  
           __size_of_LCD_Init 0069              _DAC_WriteVoltage 032A                     _ConfigReg 004F  
     __size_of_DAC_Initialize 001F           start_initialization 0012          I2C1_Transmit@address 0076  
                   _MemoryReg 0020           I2C2_Setting@address 0076         __end_of_LCD_WriteData 02BA  
           I2C1_Setting@Speed 0074                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0050            I2C1_Transmit@i_369 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                 ?_I2C_Transmit 0050  
               I2C_Init@Speed 0079         DAC_WriteVoltage@volue 0058                _I2C1_Interrupt 022C  
        __end_of_I2C1_PinInit 0426  __size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 041B  
        __end_of_I2C1_Setting 032A                      _I2C_Init 0388          __end_of_I2C2_Setting 02F2  
              _I2C2_Interrupt 01D8                      _LCD_Init 011B                ??_I2C_Transmit 0053  
                   clear_ram0 0426        __end_of_I2C1_Interrupt 0280                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
              _DAC_Initialize 03B1        __end_of_I2C2_Interrupt 022C        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0025        __size_of_I2C2_Transmit 007F      __end_of_DAC_WriteVoltage 035D  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 03D0              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
                    __ptext10 02BA                      __ptext11 0410                      __ptext12 02F2  
                    __ptext13 041B                      __ptext14 03EC                      __ptext16 042C  
                    __ptext17 01D8                      __ptext18 022C                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0401                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E                 __size_of_hand 000C                 __size_of_main 0054  
               _I2C1_Transmit 009D                 _I2C2_Transmit 001E         __size_of_I2C1_PinInit 000B  
                    int$flags 007E         __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0050  
       __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0023         __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C  
        __end_of_I2C_Transmit 0388             I2C2_Setting@Speed 0074                      intlevel1 0000  
         _I2C_CommonInterrupt 042C                  _I2C1_PinInit 041B                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0410                  _I2C1_Setting 02F2  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 02BA            I2C_Transmit@result 0057  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070        __size_of_LCD_WriteData 003A  
              I2C1_Transmit@i 0077  
>>>>>>> ExternalDAC
